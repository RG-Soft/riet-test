Перем мУдалятьДвижения;

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	КонецЕсли;
	
	// регистр СтоимостьАмортизацияОС Приход
	Движения.СтоимостьАмортизацияОС.Очистить();
	Для Каждого ТекСтрокаОС Из ОС Цикл
		Движение = Движения.СтоимостьАмортизацияОС.Добавить();
		Если ТекСтрокаОС.ВидДвижения = Перечисления.ВидДвижения.Расход Тогда
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Иначе
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли; 
		Движение.Период = ДатаПроведения;
		Движение.ОсновноеСредство = ТекСтрокаОС.ОсновноеСредство;
		Движение.Подразделение = Подразделение;
		Движение.СтоимостьБУ = ТекСтрокаОС.СтоимостьБУ;
		Движение.СуммаКВ = ТекСтрокаОС.СуммаКВ;
		Движение.СтоимостьНУ = ТекСтрокаОС.СтоимостьНУ;
		Движение.АмортизацияБУ = ТекСтрокаОС.АмортизацияБУ;
		Движение.АмортизацияНУ = ТекСтрокаОС.АмортизацияНУ;
		Движение.НалоговыйПериод = НалоговыйПериод;
	КонецЦикла;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	мУдалятьДвижения = НЕ ЭтоНовый();
КонецПроцедуры
