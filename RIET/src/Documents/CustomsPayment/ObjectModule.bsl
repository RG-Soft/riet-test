
////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
			
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизиты();
	
	ПоместитьВДополнительныеСвойстваДополнительныеДанныеПередЗаписью(РежимЗаписи);
	
	ПроверитьВозможностьИзменения(Отказ, РежимЗаписи);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьЗаполнениеРеквизитов(Отказ, РежимЗаписи, ДополнительныеСвойства.ВыборкаДублей);
		
КонецПроцедуры

Процедура ДозаполнитьРеквизиты()
	
	CCDReference = СокрЛП(CCDReference);
	Если ЗначениеЗаполнено(CCDReference) Тогда
		CCDReferenceБезНулей = СтрЗаменить(CCDReference, "0", "");
	КонецЕсли;
	
	CheckNo = СокрЛП(CheckNo);
	
	PaymentKind = СокрЛП(PaymentKind);
	
	Description = СокрЛП(Description);			
			
	Если НЕ ЗначениеЗаполнено(CreationDate) Тогда
		CreationDate = ТекущаяДата();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(LastModified) Тогда
		LastModified = ТекущаяДата();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Responsible) Тогда
		Responsible = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПоместитьВДополнительныеСвойстваДополнительныеДанныеПередЗаписью(РежимЗаписи)
	
	СтруктураТекстов = Новый Структура;
	СтруктураПараметров = Новый Структура;
							
	СтруктураПараметров.Вставить("Ссылка", Ссылка);
	
	Если НЕ ЭтоНовый() Тогда
		
		СтруктураТекстов.Вставить("СтарыеРеквизиты",
			"ВЫБРАТЬ
			|	CustomsPayment.Проведен,
			|	CustomsPayment.PaymentKind,
			|	CustomsPayment.Customs,
			|	CustomsPayment.BankAccount.SoldTo КАК SoldTo
			|ИЗ
			|	Документ.CustomsPayment КАК CustomsPayment
			|ГДЕ
			|	CustomsPayment.Ссылка = &Ссылка");
		
	КонецЕсли;
			
	Если НЕ ПометкаУдаления Тогда
	
		Если ЗначениеЗаполнено(СокрЛП(Номер)) Тогда
				
			СтруктураПараметров.Вставить("Номер", Номер);
			СтруктураПараметров.Вставить("PaymentKind", PaymentKind);
			СтруктураПараметров.Вставить("BankAccount", BankAccount);
			СтруктураПараметров.Вставить("Customs", Customs);
			СтруктураПараметров.Вставить("CheckNo", CheckNo);
			СтруктураПараметров.Вставить("Дата", Дата);

			СтруктураТекстов.Вставить("Дубли",
				"ВЫБРАТЬ
				|	CustomsPayment.Представление
				|ИЗ
				|	Документ.CustomsPayment КАК CustomsPayment
				|ГДЕ
				|	CustomsPayment.Ссылка <> &Ссылка
				|	И НЕ CustomsPayment.ПометкаУдаления
				|	И CustomsPayment.Номер = &Номер
				|	И CustomsPayment.PaymentKind = &PaymentKind
				|	И CustomsPayment.BankAccount = &BankAccount
				|	И CustomsPayment.Customs = &Customs
				|	И CustomsPayment.CheckNo = &CheckNo
				|	И CustomsPayment.Дата = &Дата");

		КонецЕсли;  
		
	КонецЕсли;
				
	УстановитьПривилегированныйРежим(Истина);
	СтруктураРезультатов = РГСофт.ПолучитьСтруктуруРезультатовТекстовЗапросов(СтруктураТекстов, СтруктураПараметров);
	
	ДополнительныеСвойства.Вставить("ВыборкаСтарыхРеквизитов", Неопределено);
	Если СтруктураРезультатов.Свойство("СтарыеРеквизиты") Тогда
		ДополнительныеСвойства.ВыборкаСтарыхРеквизитов = СтруктураРезультатов.СтарыеРеквизиты.Выбрать();
		ДополнительныеСвойства.ВыборкаСтарыхРеквизитов.Следующий();
	КонецЕсли;
			
	ДополнительныеСвойства.Вставить("ВыборкаДублей", Неопределено);
	Если СтруктураРезультатов.Свойство("Дубли") Тогда
		ДополнительныеСвойства.ВыборкаДублей = СтруктураРезультатов.Дубли.Выбрать();
	КонецЕсли;
	
КонецФункции

Процедура ПроверитьВозможностьИзменения(Отказ, РежимЗаписи)
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаСтарыхРеквизитов = ДополнительныеСвойства.ВыборкаСтарыхРеквизитов;
	
	Если ЗначениеЗаполнено(BankAccount) Тогда
		SoldTo = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(BankAccount, "SoldTo");
	Иначе
		SoldTo = Неопределено;
	КонецЕсли;
	
	Если PaymentKind <> ВыборкаСтарыхРеквизитов.PaymentKind
		ИЛИ Customs <> ВыборкаСтарыхРеквизитов.Customs
		ИЛИ SoldTo <> ВыборкаСтарыхРеквизитов.SoldTo
		ИЛИ Проведен И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("CustomsPayment", Ссылка);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	CustomsPaymentAllocation.Представление
			|ИЗ
			|	Документ.CustomsPaymentAllocation КАК CustomsPaymentAllocation
			|ГДЕ
			|	CustomsPaymentAllocation.CustomsPayment = &CustomsPayment
			|	И CustomsPaymentAllocation.Проведен";
		МассивAllocations = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Представление");
		
		Если МассивAllocations.Количество() Тогда
			
			СтрокаAllocations = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивAllocations, ", ");
			
			Если SoldTo <> ВыборкаСтарыхРеквизитов.SoldTo Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Нельзя изменить значение Sold-to of bank account, так как текущий платеж уже указан в " + СтрокаAllocations + "!",
					ЭтотОбъект, "BankAccount", , Отказ);
			КонецЕсли;
			
			Если Customs <> ВыборкаСтарыхРеквизитов.Customs Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Нельзя изменить значение Customs post, так как текущий платеж уже указан в " + СтрокаAllocations + "!",
					ЭтотОбъект, "CustomsPost", , Отказ);
			КонецЕсли;
			
			Если PaymentKind <> ВыборкаСтарыхРеквизитов.PaymentKind Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Нельзя изменить значение Payment kind, так как текущий платеж уже указан в " + СтрокаAllocations + "!",
					ЭтотОбъект, "PaymentKind", , Отказ);
			КонецЕсли;	
			
			Если Проведен И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Нельзя отменить проведение документа, так как он уже указан в " + СтрокаAllocations + "!",
					ЭтотОбъект, "Проведен", , Отказ);
			КонецЕсли;
	
		КонецЕсли;
					
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ, РежимЗаписи, ВыборкаДублей)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Номер)) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'No.' is empty!",
			ЭтотОбъект, "Номер", , Отказ);
			
	Иначе                                                                                                       
		
		Пока ВыборкаДублей.Следующий() Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"There is already '" + ВыборкаДублей.Представление + "' with No. '" + СокрЛП(Номер) + "' and Date '" + СокрЛП(Дата) + "' and Bank account '" + СокрЛП(BankAccount) + "' and Payment kind '" + PaymentKind + "' and Customs '" + СокрЛП(Customs) + "' and Check no. '" + СокрЛП(CheckNo) + "'!",
				ЭтотОбъект, "Номер", , Отказ);
		КонецЦикла; 
	
	КонецЕсли;
			
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Date' is empty!",
			ЭтотОбъект, "Дата", , Отказ);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(TypeOfPayment) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Type of payment' is empty!",
			ЭтотОбъект, "TypeOfPayment", , Отказ);
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Customs) Тогда
				
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Customs' is empty!",
			ЭтотОбъект, "Customs", , Отказ);
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(BankAccount) Тогда
		
		BankAccountTypeOfPayment = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(BankAccount, "TypeOfPayment");
				
		Если ЗначениеЗаполнено(TypeOfPayment)
			И TypeOfPayment <> BankAccountTypeOfPayment Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Type of payment '" + СокрЛП(TypeOfPayment) + "' in bank account differs from type of payment in the payment!",
				ЭтотОбъект, "BankAccount", , Отказ);

		КонецЕсли; 
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Bank account' is empty!",
			ЭтотОбъект, "BankAccount", , Отказ);
	КонецЕсли;
	
    Если НЕ ЗначениеЗаполнено(Sum) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Sum' is empty!",
			ЭтотОбъект, "Sum", , Отказ);
	КонецЕсли;
	
	Если TypeOfPayment = Перечисления.CustomsPaymentsTypes.Check
		И НЕ ЗначениеЗаполнено(CustomsCard) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Customs card' is empty!",
			ЭтотОбъект, "CustomsCard", , Отказ);
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА ПРОВЕДЕНИЯ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДвиженияПоUnallocatedCustomsPayments = Движения.UnallocatedCustomsPayments;
	ДвиженияПоUnallocatedCustomsPayments.Очистить();
	ДвиженияПоUnallocatedCustomsPayments.Записывать = Истина;
	
	Движение = ДвиженияПоUnallocatedCustomsPayments.ДобавитьПриход();
	Движение.Период = Дата;
	Движение.CustomsPayment = Ссылка;
	Движение.Sum = Sum;
		
КонецПроцедуры
