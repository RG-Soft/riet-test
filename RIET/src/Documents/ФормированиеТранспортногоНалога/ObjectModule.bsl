Перем Период Экспорт;
Перем мТаблицаСоответствияСтавок;
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета Экспорт;
Перем мАвтоВыборКодов;
Перем мКодыОКЕИ;
Перем мДелитель;
Перем ТочностьЕдиницыИзмерения;
Перем мОписаниеТиповБулево;

Процедура ЗаполнитьАвто() Экспорт

	Перем ТаблицаСтраницРаздела;

	мТаблицаСоответствияСтавок = Новый ТаблицаЗначений;
	мТаблицаСоответствияСтавок.Колонки.Добавить("Ставка");
	мТаблицаСоответствияСтавок.Колонки.Добавить("КодВида");
	Область = ПолучитьМакет("СоответствиеСтавок").ПолучитьОбласть("Ставки");
	Для ф=1 по 83 Цикл
		СтрокаТаблицы = мТаблицаСоответствияСтавок.Добавить();
		СтрокаТаблицы.Ставка = СокрЛП(Область.Область(ф, 1).Текст);
		СтрокаТаблицы.КодВида = СокрЛП(Область.Область(ф, 2).Текст);
	КонецЦикла; 	
	
	ЗаполнитьДанныеПоАвтотранспорту();

КонецПроцедуры // ЗаполнитьАвто()

Процедура ЗаполнитьДанныеПоАвтотранспорту()

	Запрос = Новый Запрос();
	ЧислоМесяцев = Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1;
	Текст = "";
	For i = 0 To ЧислоМесяцев-1 Do
		Текст = Текст + "
				   |		ВЫБРАТЬ
	               |			РегистрацияВГАИСрезПоследних.ОС КАК ОС,
	               |			РегистрацияВГАИСрезПоследних.Локация КАК Локация,
	               |			РегистрацияВГАИСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
	               |			&Дата"+ i +"Кон КАК Период
	               |		ИЗ
	               |			РегистрСведений.РегистрацияВГАИ.СрезПоследних(&Дата"+ i +"Нач, ) КАК РегистрацияВГАИСрезПоследних
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			РегистрацияВГАИСрезПоследних.ОС,
	               |			РегистрацияВГАИСрезПоследних.Локация,
	               |			РегистрацияВГАИСрезПоследних.РегистрационныйЗнак КАК РегистрационныйЗнак,
	               |			&Дата"+ i +"Кон КАК Период
	               |		ИЗ
	               |			РегистрСведений.РегистрацияВГАИ.СрезПоследних(&Дата"+ i +"Кон, ) КАК РегистрацияВГАИСрезПоследних
	               |";
		Период = ДобавитьМесяц(мДатаНачалаПериодаОтчета,i);
		//Запрос.УстановитьПараметр("Дата"+ i +"Нач",Новый Граница(НачалоМесяца(Период),ВидГраницы.Включая));
		//изменила Федотова Л., РГ-Софт, 23.03.10, так как не учитывались в месяце выбытия ОС, 
		//снятые с учета первого числа месяца
		Запрос.УстановитьПараметр("Дата"+ i +"Нач",Новый Граница(НачалоМесяца(Период),ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("Дата"+ i +"Кон", КонецМесяца(Период));
		Если i<> ЧислоМесяцев-1 Тогда
			Текст = Текст + "
	               |		ОБЪЕДИНИТЬ ВСЕ";
		КонецЕсли;
	Enddo;
	                                                          
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОсновныеСредства.Ссылка КАК ОС,
	               |	ОсновныеСредства.Мощность,
	               |	ОсновныеСредства.РегистрационныйНомер,
	               |	ОсновныеСредства.Марка,
	               |	ОсновныеСредства.НомерПаспорта,
	               |	ОсновныеСредства.ДатаВыпуска,
	               |	ВложенныйЗапрос.Период КАК КоличествоМесяцев,
	               |	ВложенныйЗапрос.РегистрационныйЗнак КАК РегистрационныйЗнак,
	               |	ОсновныеСредства.ВидТранспортногоСредства.Код КАК Код
	               |ИЗ
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		ВложенныйЗапрос.ОС КАК ОС,
	               |		ВложенныйЗапрос.Локация КАК Локация,
	               |		МАКСИМУМ(ВложенныйЗапрос.РегистрационныйЗнак) КАК РегистрационныйЗнак,
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.Период) КАК Период
	               |	ИЗ
	               |		("+Текст+") КАК ВложенныйЗапрос
				   |	СГРУППИРОВАТЬ ПО
				   |	ВложенныйЗапрос.ОС,
				   |	ВложенныйЗапрос.Локация) КАК ВложенныйЗапрос
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |		ПО ВложенныйЗапрос.ОС = ОсновныеСредства.Ссылка
	               |ГДЕ
	               |	ОсновныеСредства.Автотранспорт = ИСТИНА
	               |	И ОсновныеСредства.Мощность > 0
	               |	И ВложенныйЗапрос.Локация В ИЕРАРХИИ(&Подразделение)
				   |	И НЕ ОсновныеСредства.ПометкаУдаления";
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
	
	СписокОС = Запрос.Выполнить().Выгрузить(); 
	
	//10.04.2014 добавлено Пахоменков для колонок костцентр и сегмент
	СписокОС.Колонки.Добавить("Костцентр",Новый ОписаниеТипов("СправочникСсылка.Костцентры"));
	СписокОС.Колонки.Добавить("Сегмент",Новый ОписаниеТипов("СправочникСсылка.Сегменты"));    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.КостЦентр,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.КостЦентр.Segment КАК Segment
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ТекущаяДата, ОсновноеСредство В (&ОС)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних"; 
	Запрос.УстановитьПараметр("ОС", СписокОС.ВыгрузитьКолонку("ОС"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	КостЦентрыИСегменты = Запрос.Выполнить().Выгрузить();	
	
	Для каждого СтрокаОС Из СписокОС Цикл
		
		СтрКостЦентры = КостЦентрыИСегменты.НайтиСтроки(Новый Структура("ОсновноеСредство",СтрокаОС.ОС));
		Если СтрКостЦентры.Количество() Тогда 
			СтрокаОС.Костцентр 	= СтрКостЦентры[0].КостЦентр;	
			СтрокаОС.Сегмент 	= СтрКостЦентры[0].Segment;
		КонецЕсли;
		
		ЗаполнитьСтрокуРаздела2(СтрокаОС);
		
	КонецЦикла;
	//<-
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуРаздела2(ОС)

	мРаздел2 = Раздел2.Добавить();	
	
	мРаздел2.ОС = ОС.ОС;
	мРаздел2.Код = ОС.Код;
	
	//заполняем ВИН
	мРаздел2.НомерПаспорта = ОС.НомерПаспорта; 
	
	//заполняем регистрационный знак
	мРаздел2.РегистрационныйЗнак = ОС.РегистрационныйЗнак; 
	
	//заполняем марку
	мРаздел2.Марка = ОС.Марка; 

	//заполняем налоговую базу
	мРаздел2.Мощность = ОС.Мощность; 
	
	//устанавливаем л.с.
	Результат = мКодыОКЕИ.Найти("251", "Код");
	Если Результат <> Неопределено Тогда
		мРаздел2.ЛС = ?(мАвтоВыборКодов, Результат, Результат.Получить(0));
	Конецесли;
	
	ЧислоМесяцев = Месяц(мДатаКонцаПериодаОтчета) - Месяц(мДатаНачалаПериодаОтчета) + 1;
	мКолМес = ОС.КоличествоМесяцев;
	
	мРаздел2.Коэффициент = мКолМес/ЧислоМесяцев; 
	
	//ставка налога
	//Добавил - РГ-Софт - Пронин Иван - 2009-10-15
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		
		НайтиПодразделение = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("Москва общ");
		Если Не ЗначениеЗаполнено(НайтиПодразделение) Тогда
			Сообщить("Не найдено подразделение ""Москва общая""!", СтатусСообщения.Внимание);
			СрокПолезногоИспользования = Неопределено;
			
		Иначе
			//опрелеление главного элемента в иерархии
			Родитель = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Если ЗначениеЗаполнено(ПодразделениеОрганизации.Родитель) Тогда
				пРодитель = ПодразделениеОрганизации.Родитель;
				Пока ЗначениеЗаполнено(пРодитель) Цикл
					Родитель = пРодитель;
					пРодитель = Родитель.Родитель;
				КонецЦикла;
			Иначе
				Родитель = ПодразделениеОрганизации;
			КонецЕсли;
			
			Если НайтиПодразделение = Родитель Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	НачислениеАмортизацииСрезПоследних.СрокПолезногоИспользованияБУ
				|ИЗ
				|	РегистрСведений.НачислениеАмортизации.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК НачислениеАмортизацииСрезПоследних";
				Запрос.УстановитьПараметр("Дата", Дата);
				Запрос.УстановитьПараметр("ОсновноеСредство", ОС.ОС);
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Следующий() Тогда
					СрокПолезногоИспользования = Выборка.СрокПолезногоИспользованияБУ;	
				Иначе
					Сообщить("Для данного ОС """ + Строка(ОС) + """ срок полезного использования не найден.", СтатусСообщения.Информация);
				    СрокПолезногоИспользования = Неопределено;
				КонецЕсли;
				
			Иначе
				
				СрокПолезногоИспользования = Неопределено;
				
			КонецЕсли;			
			
		КонецЕсли;
		
		
	Иначе
		
		Сообщить("Подразделение не заполнено!", СтатусСообщения.Внимание);
		СрокПолезногоИспользования = Неопределено;
		
	КонецЕсли;
    мРаздел2.СрокПолезногоИспользования = СрокПолезногоИспользования;
	
	//Добавила Федотова Л., РГ-Софт, 17.06.13, вопрос SLI-0003640 
	СрокСДатыИзготовления = Год(Дата) - Год(ОС.ДатаВыпуска);
	
	//Добавила параметр СрокСДатыИзготовления Федотова Л., РГ-Софт, 17.06.13, вопрос SLI-0003640 
	мСтавкаНал = ПолучитьСтавкуНалога(Дата, ПодразделениеОрганизации, ОС.Код, ОС.Мощность, СрокПолезногоИспользования, СрокСДатыИзготовления);
	
	мРаздел2.СтавкаНалога = мСтавкаНал; 
	
	мРаздел2.Налог = ОкруглитьЧислоПоФормату((мРаздел2.Мощность * мРаздел2.Коэффициент * мРаздел2.СтавкаНалога) / ?(КонецГода(НалоговыйПериод) = КонецКвартала(НалоговыйПериод),1, 4));                                 
	//мРаздел2.Налог = ОкруглитьЧислоПоФормату(мРаздел2.Мощность * мРаздел2.Коэффициент * мРаздел2.СтавкаНалога);                                 
	
	НалогВБюджет = ОкруглитьЧислоПоФормату(мРаздел2.Налог - мРаздел2.Льгота);
	мРаздел2.НалогВБюджет = Макс(НалогВБюджет, 0);
	
	//10.04.2014 добавлено Пахоменков для колонок костцентр и сегмент
	мРаздел2.Костцентр = ОС.Костцентр;
	мРаздел2.Сегмент   = ОС.Сегмент;
	//<-
	
КонецПроцедуры

// Функция округляет число согласно установленной размерности чисел.
//
// Параметры:
//  ИсходноеЧисло - заданное число;
//
// Возвращаемое значение:
//  число, округленное с заданной точностью с учетом установленной единицы измерения.
//
Функция ОкруглитьЧислоПоФормату(ИсходноеЧисло)

	ОкругленноеЧисло = Окр(ИсходноеЧисло / мДелитель, ТочностьЕдиницыИзмерения) * мДелитель; 

	Возврат ОкругленноеЧисло;

КонецФункции // ОкруглитьЧислоПоФормату()

Функция ПолучитьСтавкуНалога(Дата, Подразделение, Код, Мощность, СрокПолезногоИспользования, СрокСДатыИзготовления)

	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо70,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо70Более3лет,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо85,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо85Более3лет,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо100Более3лет,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо125,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо150,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо175,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо200,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо225,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеДо250,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЛегковыеСвыше250,
	               |	СтавкиТранспортногоНалогаСрезПоследних.МотоциклыДо20,
	               |	СтавкиТранспортногоНалогаСрезПоследних.МотоциклыДо35,
	               |	СтавкиТранспортногоНалогаСрезПоследних.МотоциклыСвыше35,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо150,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо200,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо250,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеСвыше250,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо110,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо130,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо200,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыСвыше200,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ДругиеСамоходные,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ДругиеСамоходныеСвыше100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.СнегоходыДо50,
	               |	СтавкиТранспортногоНалогаСрезПоследних.СнегоходыСвыше50,
	               |	СтавкиТранспортногоНалогаСрезПоследних.КатераДо100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.КатераСвыше100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЯхтыДо100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ЯхтыСвыше100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГидроциклыДо100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГидроциклыСвыше100,
	               |	СтавкиТранспортногоНалогаСрезПоследних.Несамоходные,
	               |	СтавкиТранспортногоНалогаСрезПоследних.СамолетыРеактивные,
	               |	СтавкиТранспортногоНалогаСрезПоследних.Самолеты,
	               |	СтавкиТранспортногоНалогаСрезПоследних.Другие,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо110После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо130После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыДо200После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.АвтобусыСвыше200После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо100После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо150После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо200После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеДо250После5,
	               |	СтавкиТранспортногоНалогаСрезПоследних.ГрузовыеСвыше250После5
	               |ИЗ
	               |	РегистрСведений.СтавкиТранспортногоНалога.СрезПоследних(&Дата, ПодразделениеОрганизации = &Подразделение) КАК СтавкиТранспортногоНалогаСрезПоследних";
	//Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Дата", мДатаКонцаПериодаОтчета); //исправила Федотова Л., РГ-СОфт, 13.06.12
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Ставки = Запрос.Выполнить().Выбрать();
	Если ЗначениеЗаполнено(СрокПолезногоИспользования) Тогда
		
		Если Ставки.Следующий() Тогда
			//определяем ставку по коду вида т.с. и мощности
			СтрокаТЗ = мТаблицаСоответствияСтавок.Найти(Код, "КодВида");
			ИмяСтавки = СтрокаТЗ.Ставка;
			Если      ИмяСтавки = "Самолеты, вертолеты и иные воздушные суда, имеющие двигатели" Тогда
				Возврат Ставки.Самолеты; 
			ИначеЕсли ИмяСтавки = "Яхты и другие парусно-моторные суда" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.ЯхтыДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.ЯхтыСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Катера, моторные лодки и другие водные транспортные средства" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.КатераДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.КатераСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Гидроциклы" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.ГидроциклыДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.ГидроциклыСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Несамоходные (буксируемые) суда, для которых определяется валовая вместимость" Тогда
				Возврат Ставки.Несамоходные; 
			ИначеЕсли ИмяСтавки = "Другие водные и воздушные транспортные средства, не имеющие двигателей" Тогда
				Возврат Ставки.Другие; 
			ИначеЕсли ИмяСтавки = "Автомобили легковые" Тогда
				//Добавила Федотова Л., РГ-Софт, 16.06.13, вопрос SLI-0003630
				Если      Мощность <= 70 Тогда
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо70Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо70; 
					КонецЕсли;	
				ИначеЕсли Мощность > 70 И Мощность <= 85 Тогда
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо85Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо85; 
					КонецЕсли;	
				ИначеЕсли Мощность > 85 И Мощность <= 100 Тогда
					//Добавила Федотова Л., РГ-Софт, 13.06.13, вопрос SLI-0003630
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо100Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо100; 
					КонецЕсли;	
				ИначеЕсли Мощность > 100 И Мощность <= 125 Тогда
					Возврат Ставки.ЛегковыеДо125; 
				ИначеЕсли Мощность > 125 И Мощность <= 150 Тогда
					Возврат Ставки.ЛегковыеДо150; 
				ИначеЕсли Мощность > 150 И Мощность <= 175 Тогда
					Возврат Ставки.ЛегковыеДо175; 
				ИначеЕсли Мощность > 175 И Мощность <= 200 Тогда
					Возврат Ставки.ЛегковыеДо200; 
				ИначеЕсли Мощность > 200 И Мощность <= 225 Тогда
					Возврат Ставки.ЛегковыеДо225; 
				ИначеЕсли Мощность > 225 И Мощность <= 250 Тогда
					Возврат Ставки.ЛегковыеДо250; 
				ИначеЕсли Мощность > 250 Тогда
					Возврат Ставки.ЛегковыеСвыше250; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Другие самоходные транспортные средства, машины и механизмы на пневматическом и гусеничном ходу" Тогда
				//Добавила условия Федотова Л., РГ-Софт, 17.06.13, вопрос SLI-0003640
				Если Мощность <= 100 Тогда
					Возврат Ставки.ДругиеСамоходные; 
				ИначеЕсли  Мощность > 100 Тогда
					Возврат Ставки.ДругиеСамоходныеСвыше100; 
				КонецЕсли;                            
			ИначеЕсли ИмяСтавки = "Автобусы" Тогда
				
				Если СрокПолезногоИспользования/12 > 5 Тогда
					Если      Мощность <= 110 Тогда
						Возврат Ставки.АвтобусыДо110После5; 
					//Добавила Федотова Л., РГ-Софт, 16.06.13, вопрос SLI-0003630
					ИначеЕсли Мощность > 110 И Мощность <= 130 Тогда
						Возврат Ставки.АвтобусыДо130После5; 
					ИначеЕсли Мощность > 130 И Мощность <= 200 Тогда
						Возврат Ставки.АвтобусыДо200После5; 
					ИначеЕсли Мощность > 200 Тогда
						Возврат Ставки.АвтобусыСвыше200После5; 
					КонецЕсли;	
				Иначе
					
					Если      Мощность <= 110 Тогда
						Возврат Ставки.АвтобусыДо110; 
					//Добавила Федотова Л., РГ-Софт, 16.06.13, вопрос SLI-0003630
					ИначеЕсли Мощность > 110 И Мощность <= 130 Тогда
						Возврат Ставки.АвтобусыДо130; 
					ИначеЕсли Мощность > 130 И Мощность <= 200 Тогда
						Возврат Ставки.АвтобусыДо200; 
					ИначеЕсли Мощность > 200 Тогда
						Возврат Ставки.АвтобусыСвыше200; 
					КонецЕсли;	
				КонецЕсли;
				
			ИначеЕсли ИмяСтавки = "Мотоциклы и мотороллеры" Тогда
				Если      Мощность <= 20 Тогда
					Возврат Ставки.МотоциклыДо20; 
				ИначеЕсли Мощность > 20 И Мощность <= 35 Тогда
					Возврат Ставки.МотоциклыДо35; 
				ИначеЕсли Мощность > 35 Тогда
					Возврат Ставки.МотоциклыСвыше35; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Снегоходы, мотосани" Тогда
				Если      Мощность <= 50 Тогда
					Возврат Ставки.СнегоходыДо50; 
				ИначеЕсли Мощность > 50 Тогда
					Возврат Ставки.СнегоходыСвыше50; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Автомобили грузовые" Тогда
				Если СрокПолезногоИспользования/12 > 5 Тогда
					
					Если      Мощность <= 100 Тогда
						Возврат Ставки.ГрузовыеДо100После5; 
					ИначеЕсли Мощность > 100 И Мощность <= 150 Тогда
						Возврат Ставки.ГрузовыеДо150После5; 
					ИначеЕсли Мощность > 150 И Мощность <= 200 Тогда
						Возврат Ставки.ГрузовыеДо200После5; 
					ИначеЕсли Мощность > 200 И Мощность <= 250 Тогда
						Возврат Ставки.ГрузовыеДо250После5; 
					ИначеЕсли Мощность > 250 Тогда
						Возврат Ставки.ГрузовыеСвыше250После5; 
					КонецЕсли;
					
				Иначе
					
					Если      Мощность <= 100 Тогда
						Возврат Ставки.ГрузовыеДо100; 
					ИначеЕсли Мощность > 100 И Мощность <= 150 Тогда
						Возврат Ставки.ГрузовыеДо150; 
					ИначеЕсли Мощность > 150 И Мощность <= 200 Тогда
						Возврат Ставки.ГрузовыеДо200; 
					ИначеЕсли Мощность > 200 И Мощность <= 250 Тогда
						Возврат Ставки.ГрузовыеДо250; 
					ИначеЕсли Мощность > 250 Тогда
						Возврат Ставки.ГрузовыеСвыше250; 
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Сообщить("Не определена ставка для кода вида ТС: " + Код);
			КонецЕсли;	
			Возврат 13;
		Иначе
			Сообщить("Не заданы ставки налога для локации " + Подразделение);	
			Возврат 0;
		КонецЕсли;		
		
	Иначе
		
		Если Ставки.Следующий() Тогда
			//определяем ставку по коду вида т.с. и мощности
			СтрокаТЗ = мТаблицаСоответствияСтавок.Найти(Код, "КодВида");
			ИмяСтавки = СтрокаТЗ.Ставка;
			Если      ИмяСтавки = "Самолеты, вертолеты и иные воздушные суда, имеющие двигатели" Тогда
				Возврат Ставки.Самолеты; 
			ИначеЕсли ИмяСтавки = "Яхты и другие парусно-моторные суда" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.ЯхтыДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.ЯхтыСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Катера, моторные лодки и другие водные транспортные средства" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.КатераДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.КатераСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Гидроциклы" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.ГидроциклыДо100; 
				ИначеЕсли Мощность > 100 Тогда
					Возврат Ставки.ГидроциклыСвыше100; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Несамоходные (буксируемые) суда, для которых определяется валовая вместимость" Тогда
				Возврат Ставки.Несамоходные; 
			ИначеЕсли ИмяСтавки = "Другие водные и воздушные транспортные средства, не имеющие двигателей" Тогда
				Возврат Ставки.Другие; 
			ИначеЕсли ИмяСтавки = "Автомобили легковые" Тогда
				//Добавила Федотова Л., РГ-Софт, 16.06.13, вопрос SLI-0003630
				Если      Мощность <= 70 Тогда
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо70Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо70; 
					КонецЕсли;	
				ИначеЕсли Мощность > 70 И Мощность <= 85 Тогда
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо85Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо85; 
					КонецЕсли;	
				ИначеЕсли Мощность > 85 И Мощность <= 100 Тогда
					//Добавила Федотова Л., РГ-Софт, 13.06.13, вопрос SLI-0003630
					Если СрокСДатыИзготовления >= 3 Тогда
						Возврат Ставки.ЛегковыеДо100Более3лет; 
					Иначе
						Возврат Ставки.ЛегковыеДо100; 
					КонецЕсли;	
				ИначеЕсли Мощность > 100 И Мощность <= 125 Тогда
					Возврат Ставки.ЛегковыеДо125; 
				ИначеЕсли Мощность > 125 И Мощность <= 150 Тогда
					Возврат Ставки.ЛегковыеДо150; 
				ИначеЕсли Мощность > 150 И Мощность <= 175 Тогда
					Возврат Ставки.ЛегковыеДо175; 
				ИначеЕсли Мощность > 175 И Мощность <= 200 Тогда
					Возврат Ставки.ЛегковыеДо200; 
				ИначеЕсли Мощность > 200 И Мощность <= 225 Тогда
					Возврат Ставки.ЛегковыеДо225; 
				ИначеЕсли Мощность > 225 И Мощность <= 250 Тогда
					Возврат Ставки.ЛегковыеДо250; 
				ИначеЕсли Мощность > 250 Тогда
					Возврат Ставки.ЛегковыеСвыше250; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Другие самоходные транспортные средства, машины и механизмы на пневматическом и гусеничном ходу" Тогда
				//Добавила условия Федотова Л., РГ-Софт, 17.06.13, вопрос SLI-0003640
				Если Мощность <= 100 Тогда
					Возврат Ставки.ДругиеСамоходные; 
				ИначеЕсли  Мощность > 100 Тогда
					Возврат Ставки.ДругиеСамоходныеСвыше100; 
				КонецЕсли;                            
			ИначеЕсли ИмяСтавки = "Автобусы" Тогда
				Если      Мощность <= 110 Тогда
					Возврат Ставки.АвтобусыДо110; 
					//Добавила Федотова Л., РГ-Софт, 16.06.13, вопрос SLI-0003630
				ИначеЕсли Мощность > 110 И Мощность <= 130 Тогда
					Возврат Ставки.АвтобусыДо130; 
				ИначеЕсли Мощность > 130 И Мощность <= 200 Тогда
					Возврат Ставки.АвтобусыДо200; 
				ИначеЕсли Мощность > 200 Тогда
					Возврат Ставки.АвтобусыСвыше200; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Мотоциклы и мотороллеры" Тогда
				Если      Мощность <= 20 Тогда
					Возврат Ставки.МотоциклыДо20; 
				ИначеЕсли Мощность > 20 И Мощность <= 35 Тогда
					Возврат Ставки.МотоциклыДо35; 
				ИначеЕсли Мощность > 35 Тогда
					Возврат Ставки.МотоциклыСвыше35; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Снегоходы, мотосани" Тогда
				Если      Мощность <= 50 Тогда
					Возврат Ставки.СнегоходыДо50; 
				ИначеЕсли Мощность > 50 Тогда
					Возврат Ставки.СнегоходыСвыше50; 
				КонецЕсли;	
			ИначеЕсли ИмяСтавки = "Автомобили грузовые" Тогда
				Если      Мощность <= 100 Тогда
					Возврат Ставки.ГрузовыеДо100; 
				ИначеЕсли Мощность > 100 И Мощность <= 150 Тогда
					Возврат Ставки.ГрузовыеДо150; 
				ИначеЕсли Мощность > 150 И Мощность <= 200 Тогда
					Возврат Ставки.ГрузовыеДо200; 
				ИначеЕсли Мощность > 200 И Мощность <= 250 Тогда
					Возврат Ставки.ГрузовыеДо250; 
				ИначеЕсли Мощность > 250 Тогда
					Возврат Ставки.ГрузовыеСвыше250; 
				КонецЕсли;	
			Иначе
				Сообщить("Не определена ставка для кода вида ТС: " + Код);
			КонецЕсли;	
			Возврат 13;
		Иначе
			Сообщить("Не заданы ставки налога для локации " + Подразделение);	
			Возврат 0;
		КонецЕсли;
	КонецЕсли;

КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Проверим, были ли движения по данному подразделения с тем же номером корректировки по данному налоговому периоду
	//Если были, то проводить не дадим
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФормированиеТранспортногоНалогаОбороты.ПодразделениеОрганизации
	|ИЗ
	|	РегистрНакопления.ФормированиеТранспортногоНалога.Обороты(
	|			,
	|			,
	|			,
	|			ПодразделениеОрганизации = &ПодразделениеОрганизации
	|				И НалоговыйПериод = &НалоговыйПериод
	|				И НомерКорректировки = &НомерКорректировки) КАК ФормированиеТранспортногоНалогаОбороты";

	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
 	Запрос.УстановитьПараметр("НалоговыйПериод", НалоговыйПериод);
 	Запрос.УстановитьПараметр("НомерКорректировки", НомерКорректировки);

	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Сообщить("Документ формирования транспортного налога не может быть проведен, 
		|так как по подразделению " + ПодразделениеОрганизации + " в налоговом периоде " 
		+ Формат(НалоговыйПериод, "ДФ='к""й квартал"" гггг'") + " 
		|документ формирования транспортного налога с номером корректировки " + НомерКорректировки + " уже заведен. 
		|Сделайте заведенный ранее документ непроведенным или измените номер корректировки.");
		Отказ = Истина;
		Возврат;
		
	КонецЕсли; 
	
	// Отражение по регистру "Формирование транспортного налога"
	ТаблицаДвижений_ФормированиеТранспортногоНалога = Движения.ФормированиеТранспортногоНалога.Выгрузить();
	ТаблицаДвижений_ФормированиеТранспортногоНалога.Очистить();
	ТаблицаРаздела2 = Раздел2.Выгрузить();
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаРаздела2,ТаблицаДвижений_ФормированиеТранспортногоНалога);
	
	Движения.ФормированиеТранспортногоНалога.мПериод = ДатаПроведения;
	Движения.ФормированиеТранспортногоНалога.мНалоговыйПериод = НалоговыйПериод;
	Движения.ФормированиеТранспортногоНалога.мНомерКорректировки = НомерКорректировки;
	Движения.ФормированиеТранспортногоНалога.мПодразделениеОрганизации = ПодразделениеОрганизации;
	Движения.ФормированиеТранспортногоНалога.мТаблицаДвижений = ТаблицаДвижений_ФормированиеТранспортногоНалога;
	Движения.ФормированиеТранспортногоНалога.ВыполнитьДвижения();
	
КонецПроцедуры

Процедура ОткрытьОтчет(Отчет, Подразделение, ОрганизацияОтчета = Неопределено, ДатаНачалаПериодаОтчета = Неопределено, ДатаОкончанияПериодаОтчета = Неопределено, ПериодичностьОтчета = Неопределено, Вид = Неопределено, ТекФорма = Неопределено) Экспорт

	
	ОрганизацияСписок = Новый СписокЗначений;
	ВыборкаОрганизаций = Справочники.Организации.Выбрать();
	
	Пока ВыборкаОрганизаций.Следующий() Цикл
		
		ОрганизацияСписок.Добавить(ВыборкаОрганизаций.Ссылка);
		
	КонецЦикла; 
	
	Если ТипЗнч(Отчет) <> Тип("Строка") Тогда
		ИсточникОтчета = Отчет.ИсточникОтчета;
	КонецЕсли;
	
	ПравоДоступаКОтчету = РегламентированнаяОтчетность.ПравоДоступаКРегламентированномуОтчету(ИсточникОтчета);
	Если ПравоДоступаКОтчету = Ложь Тогда
	#Если Клиент Тогда
		Предупреждение("Недостаточно прав!");
	#КонецЕсли
		Возврат;
	ИначеЕсли ПравоДоступаКОтчету = Неопределено Тогда
	#Если Клиент Тогда
		Предупреждение("Отчет не найден!");
	#КонецЕсли
		Возврат;
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ЭтоВнешнийОтчет(ИсточникОтчета) И Метаданные.Документы.Найти(ИсточникОтчета) <> Неопределено Тогда // это внутренний отчет-документ
			
		ВнутреннийОтчет = Документы[ИсточникОтчета];
		ВыбФормаОтчета  = ВнутреннийОтчет.ПолучитьФорму("ОсновнаяФорма");
		ВыбФормаОтчета.РежимВыбора = Ложь;
		ВыбФормаОтчета.Открыть();
		Возврат;
			
	КонецЕсли;
	
	ТекОтчет = РегламентированнаяОтчетность.РеглОтчеты(ИсточникОтчета);
	Если ТекОтчет = Неопределено Тогда
		Сообщить("Не удалось открыть отчет!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ТекФорма = РегламентированнаяОтчетность.ФормаРеглОтчета(ИсточникОтчета);
	Если ТекФорма = Неопределено Тогда
		Сообщить("Не удалось открыть отчет!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если ОрганизацияОтчета = Неопределено Тогда
		Если ОрганизацияСписок.Количество() = 1 Тогда
			Попытка
				ТекФорма.Организация = ОрганизацияСписок.Получить(0).Значение;
			Исключение
			КонецПопытки;
		КонецЕсли;
	Иначе
		Попытка
			ТекФорма.Организация = ОрганизацияОтчета;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ТекФорма.ОбработкаОбъект.Подразделение = Подразделение;
	
	Если ДатаНачалаПериодаОтчета <> Неопределено ИЛИ ДатаОкончанияПериодаОтчета <> Неопределено Тогда
		
		Попытка
			ТекФорма.мДатаНачалаПериодаОтчета = НачалоДня(ДатаНачалаПериодаОтчета);
			ТекФорма.мДатаКонцаПериодаОтчета = КонецДня(ДатаОкончанияПериодаОтчета);
		Исключение
		КонецПопытки;
		Если ПериодичностьОтчета <> Неопределено Тогда
			Попытка
				ТекФорма.мПериодичность = ПериодичностьОтчета;
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если КонецКвартала(НалоговыйПериод) = КонецГода(НалоговыйПериод) Тогда
		ТекФорма.ЭтотОбъект.мДатаНачалаПериодаОтчета = НачалоГода(НалоговыйПериод);
		ТекФорма.ЭтотОбъект.мПериодичность = Перечисления.Периодичность.Год;
	иначе
		ТекФорма.ЭтотОбъект.мДатаНачалаПериодаОтчета = НачалоКвартала(НалоговыйПериод);
		ТекФорма.ЭтотОбъект.мПериодичность = Перечисления.Периодичность.Квартал;
	КонецЕсли;
	//ТекФорма.ЭтотОбъект.мДатаКонцаПериодаОтчета = КонецГода(НалоговыйПериод);

	ТекФорма.РежимВыбора = Ложь;

	////////////	
   	КоличествоФорм = РегламентированнаяОтчетность.КоличествоФормСоответствующихВыбранномуПериоду(ТекФорма);
	ТаблицаФормОтчета = РегламентированнаяОтчетность.ПолучитьТаблицуОтчетовДействующихВВыбранныйПериод(ТекФорма);
	Для Каждого Стр Из ТаблицаФормОтчета Цикл
		Если Стр.ДатаКонецДействия = ОбщегоНазначения.ПустоеЗначениеТипа(Тип("Дата")) Тогда
			Стр.ДатаКонецДействия = '20291231';
		КонецЕсли;
	КонецЦикла;

	ТаблицаФормОтчета.Сортировать("ДатаКонецДействия Убыв");

	Для Каждого Строка Из ТаблицаФормОтчета Цикл
		Если (Строка.ДатаНачалоДействия > КонецДня(ТекФорма.мДатаКонцаПериодаОтчета)) ИЛИ
			((Строка.ДатаКонецДействия > '00010101000000') И (Строка.ДатаКонецДействия < НачалоДня(ТекФорма.мДатаКонцаПериодаОтчета))) Тогда
			Продолжить;
		КонецЕсли;

		ТекФорма.мВыбраннаяФорма = Строка.ФормаОтчета;
	КонецЦикла;

	// Если не удалось найти форму, соответствующую выбранному периоду,
	// то по умолчанию выдаем текущую (действующую) форму.
	Если ТекФорма.мВыбраннаяФорма = Неопределено Тогда
		Если ТаблицаФормОтчета.Количество() >= 1 Тогда
			ТекФорма.мВыбраннаяФорма = ТекФорма.мТаблицаФормОтчета[0].ФормаОтчета;
		КонецЕсли;
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Организация) Тогда
	Если НЕ ЗначениеЗаполнено(ТекФорма.Организация) Тогда
		Сообщить("Не выбрана организация.");
		Возврат;
	КонецЕсли;

	// устанавливаем дату представления отчета как рабочая дата
	#Если Клиент Тогда
		ДатаПодписи                = РабочаяДата;
	#Иначе 	
		ДатаПодписи                = ТекущаяДата();
	#КонецЕсли
	ВыбФормаОтчета             = ТекФорма.ОбработкаОбъект.ПолучитьФорму(ТекФорма.мВыбраннаяФорма);
	РегламентированнаяОтчетность.ДобавитьНадписьВнешнийОтчет(ВыбФормаОтчета);
	ВыбФормаОтчета.РежимВыбора = Ложь;
	ВыбФормаОтчета.Организация = ТекФорма.Организация;
	ВыбФормаОтчета.НомерКорректировки = НомерКорректировки;
	ВыбФормаОтчета.ДатаПодписи = ТекущаяДата();

	//КнопкаЗаполнить = ВыбФормаОтчета.ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Найти("Заполнить");
	ВыбФормаОтчета.Открыть();
	ВыбФормаОтчета.ЗаполнитьАвто();
	ВыбФормаОтчета.Сохранить();
	//ВыбФормаОтчета.Модифицированность = Истина;
	Если НЕ ВыбФормаОтчета.мСохраненныйДок = Неопределено Тогда
	
	    РегламентированныйОтчет = ВыбФормаОтчета.мСохраненныйДок.Ссылка;
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	КонецЕсли; 
	
/////////////////
КонецПроцедуры

#Если Клиент Тогда
Функция ВопросОбОчистке()
	
	ТекстВопроса = "Сохраненный регламентированный отчет не может быть использован из-за несоответствия данных. Будет заведен новый. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат Истина;
	Иначе	
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
#КонецЕсли

Процедура ОткрепитьСохраненнуюДекларацию() Экспорт
	
	Если НЕ РегламентированныйОтчет.Пустая() Тогда
		РегламентированныйОтчет = Документы.РегламентированныйОтчет.ПустаяСсылка();	
		#Если Клиент Тогда
		Сообщить("Регламентированный отчет откреплен!");
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

#Если Клиент Тогда
Процедура ОбработкаУдаленияПроведения(Отказ)
	ТекстВопроса = "Будет очищен список основных средств и потребуется заполнить документ заново. Продолжить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Отказ = Истина;
		Возврат;
	Иначе
		Раздел2.Очистить();
		Если НЕ РегламентированныйОтчет.Пустая() Тогда
			РегламентированныйОтчетОбъект = РегламентированныйОтчет.ПолучитьОбъект();
			Попытка
				РегламентированныйОтчетОбъект.УстановитьПометкуУдаления(Истина);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			РегламентированныйОтчет = Документы.РегламентированныйОтчет.ПустаяСсылка();
			Попытка
				Записать();                                 
			Исключение
				Сообщить(ОписаниеОшибки());
				Возврат;
			КонецПопытки;                             
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры
#КонецЕсли

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ РегламентированныйОтчет.Пустая() Тогда
		РеглОтчетОбъект = РегламентированныйОтчет.ПолучитьОбъект();
		Если ЭтотОбъект.ПометкаУдаления Тогда
		    РеглОтчетОбъект.ПометкаУдаления = Истина;
		Иначе	
		    РеглОтчетОбъект.ПометкаУдаления = Ложь;
		КонецЕсли; 
		РеглОтчетОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьДанныеПоАвтотранспортуИзОтчета(мСохраненныйДок) Экспорт   
	Перем ДанныеМногострочныхРазделов;
	Перем ДанныеВариановАвтоЗаполнения;
	
	ВыбФормаОтчета = Отчеты.РегламентированныйОтчетТранспортныйНалог.ПолучитьФорму(мСохраненныйДок.ВыбраннаяФорма);
	
	// восстанавливаем сохраненные данные отчета
	СписокСохранения = мСохраненныйДок.ДанныеОтчета.Получить();

	// восстанавливаем сохраненные данные многострочных разделов
	Если СписокСохранения.Свойство( "ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов) Тогда
		мСтруктураМногострочныхРазделов = ДанныеМногострочныхРазделов;

		//Если мСтруктураМногострочныхРазделов.П0000200020.Колонки.Найти("П000020002015") = Неопределено Тогда
		//	мСтруктураМногострочныхРазделов.П0000200020.Колонки.Добавить("П000020002015");
		//КонецЕсли;

		Для Каждого ЭлементСтруктуры Из мСтруктураМногострочныхРазделов Цикл
			ИмяГруппы       = ЭлементСтруктуры.Ключ;
			СтруктураГруппы = ЭлементСтруктуры.Значение;
			
			Для каждого Строка Из СтруктураГруппы Цикл
				
				Если НЕ ЗначениеЗаполнено(Строка.П000020002014) Тогда
					Прервать;	
				КонецЕсли; 
			
				НоваяСтрока = Раздел2.Добавить();
   				НоваяСтрока.Код = Строка.П000020002002;
				НоваяСтрока.НомерПаспорта = Строка.П000020002003;
				Марка = Справочники.МаркиТранспортныхСредств.НайтиПоНаименованию(Строка.П000020002004,Истина);
                Если Марка.Наименование = "" Тогда
					Марка = Справочники.МаркиТранспортныхСредств.ПустаяСсылка();
				КонецЕсли; 
				НоваяСтрока.Марка = Марка;				
				НоваяСтрока.РегистрационныйЗнак = Строка.П000020002005;
 				НоваяСтрока.Мощность = Строка.П000020002006;
 				НоваяСтрока.Коэффициент = Строка.П000020002009;
 				НоваяСтрока.СтавкаНалога = Строка.П000020002010;
				НоваяСтрока.Налог = Строка.П000020002011;
 				НоваяСтрока.Льгота = Строка.П000020002013;
  				НоваяСтрока.НалогВБюджет = Строка.П000020002014;
				
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры //ЗаполнитьДанныеПоАвтотранспортуИзОтчета()

мАвтоВыборКодов = Ложь;

мКодыОКЕИ = Новый ТаблицаЗначений;
мКодыОКЕИ.Колонки.Добавить("Код",,,5);
мКодыОКЕИ.Колонки.Добавить("Название",,,70);

мДелитель = 1;
ТочностьЕдиницыИзмерения = 0;