
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполним таблицу значений и настроим видимость некоторых колонок
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("CurrentItems", Параметры.CurrentItems);
	
	Если Параметры.TypeOfTransaction = Перечисления.TypesOfCustomsFileLightTransaction.CustomsFileLight
		ИЛИ Параметры.TypeOfTransaction = Перечисления.TypesOfCustomsFileLightTransaction.CustomsBond Тогда
		
		ДоступныеItems = Документы.CustomsFilesLight.ПолучитьДоступныеItemsДляCustomsFileИCustomsBond(
			Параметры.TypeOfTransaction,
			Параметры.Shipment,
			Параметры.ParentCompany,
			Параметры.PermanentTemporary,
			Параметры.PSAContract,
			Параметры.CurrentCustomsFileLight);
									
	ИначеЕсли Параметры.TypeOfTransaction = Перечисления.TypesOfCustomsFileLightTransaction.CustomsBondClosing Тогда

		Если ЗначениеЗаполнено(Параметры.CurrentCustomsFileLight) Тогда
			Граница = Новый Граница(Параметры.CurrentCustomsFileLight.МоментВремени(), ВидГраницы.Исключая);
		Иначе
			Граница = Неопределено;                                 
		КонецЕсли;
		
		ТаблицаОстатков = РегистрыНакопления.ItemsWithoutCVCDecision.ПолучитьОстаткиПоCustomsBond(Граница, Параметры.CustomsBond);
		ДоступныеItems = ТаблицаОстатков.ВыгрузитьКолонку("Item");
					
	Иначе
		ВызватьИсключение "Type of transaction '" + Параметры.TypeOfTransaction + "' is not supported!";
			
	КонецЕсли;
	
	// удалим те items, которые уже есть в документе
	ДоступныеItems = РГСофтКлиентСервер.ВычестьМассивы(ДоступныеItems, Параметры.CurrentItems);
	
	Если ДоступныеItems.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"No free items found!",
			, , , Отказ);
	КонецЕсли;
	
	ТаблицаItems.Загрузить(Документы.CustomsFilesLight.ПолучитьРеквизитыItems(ДоступныеItems, Параметры.ImportExport));
		
КонецПроцедуры

&НаКлиенте
Процедура SelectChosen(Команда)
	
	СтрокаВозвращаемыхКолонок = ПолучитьСтрокуВозвращаемыхКолонок();
	МассивСтруктур = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ТаблицаItems.ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = ТаблицаItems.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Структура = Новый Структура(СтрокаВозвращаемыхКолонок);
		ЗаполнитьЗначенияСвойств(Структура, СтрокаТаблицы, СтрокаВозвращаемыхКолонок);
		МассивСтруктур.Добавить(Структура);
		
	КонецЦикла;
	
	Если МассивСтруктур.Количество() Тогда
		ОповеститьОВыборе(МассивСтруктур);
	Иначе
		Сообщить("No item chosen!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура SelectAll(Команда)
	
	СтрокаВозвращаемыхКолонок = ПолучитьСтрокуВозвращаемыхКолонок();
	МассивСтруктур = Новый Массив;
	Для Каждого СтрокаТаблицы Из ТаблицаItems Цикл
		
		Структура = Новый Структура(СтрокаВозвращаемыхКолонок);
		ЗаполнитьЗначенияСвойств(Структура, СтрокаТаблицы, СтрокаВозвращаемыхКолонок);
		МассивСтруктур.Добавить(Структура);
		
	КонецЦикла;
	
	Если МассивСтруктур.Количество() Тогда
		ОповеститьОВыборе(МассивСтруктур);
	Иначе
		Сообщить("No item chosen!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуВозвращаемыхКолонок()
	
	Возврат "Item, InvoiceHTC, ParcelsNetWeight, WeightUOMCode, POno, PartNo, SerialNo, Description, Qty, QtyUOMCOde, Price, CurrencyNameEng, TotalPrice";
	
КонецФункции

&НаКлиенте
Процедура ТаблицаItemsВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	SelectChosen(Неопределено);
	
КонецПроцедуры
