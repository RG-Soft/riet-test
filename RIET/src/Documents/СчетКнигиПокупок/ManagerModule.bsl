
Процедура СформироватьДвиженияПоРегиструМатериальныеАктивы(Ссылка, ДатаПроведения) Экспорт
	
	Запрос = Новый Запрос;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("AP##FAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("APD3PFAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("APDIRFAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("FA cost"));
	
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("APD3IFAFM"));
	   		
	Запрос.УстановитьПараметр("FiscalType", МассивТипов);
	Запрос.УстановитьПараметр("Документ", Ссылка);
	Запрос.УстановитьПараметр("ВалютаРуб", Справочники.Валюты.НайтиПоКоду("643"));
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоКоду("840"));
	Запрос.УстановитьПараметр("AccountLawsonRNI", ПланыСчетов.Lawson.НайтиПоКоду("201900"));
	Запрос.УстановитьПараметр("AccountLawsonINR", ПланыСчетов.Lawson.НайтиПоКоду("130508"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КурсыВалют.Курс,
	               |	КурсыВалют.Период КАК Период
	               |ПОМЕСТИТЬ КурсUSD
	               |ИЗ
	               |	РегистрСведений.КурсыВалют КАК КурсыВалют
	               |ГДЕ
	               |	КурсыВалют.Валюта = &Валюта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
				   //Пахоменков
	        	   |ВЫБРАТЬ
	               |	ПроводкаDSS.Ссылка КАК ПроводкаСКП
	               |ПОМЕСТИТЬ ВТПроводки
	               |ИЗ
	               |	Документ.ПроводкаDSS КАК ПроводкаDSS
	               |ГДЕ
	               |	ПроводкаDSS.Документ = &Документ
	               |	И ПроводкаDSS.FiscalType В(&FiscalType)
	               |	И (НЕ ПроводкаDSS.ПометкаУдаления)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТПроводки.ПроводкаСКП КАК ПроводкаДеталейСКП,
	               |	ВТПроводки.ПроводкаСКП.BaseAmount КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА ВТПроводки.ПроводкаСКП.Currency = &ВалютаРуб
	               |			ТОГДА ВТПроводки.ПроводкаСКП.TranAmount
	               |		ИНАЧЕ ВТПроводки.ПроводкаСКП.TranAmount * ВТПроводки.ПроводкаСКП.Документ.КурсДокумента
	               |	КОНЕЦ КАК СуммаРуб,
				   //Пахоменков
	   				//  ВТПроводки.ПроводкаСКП.Период КАК Период
	               |	ВТПроводки.ПроводкаСКП.Дата КАК Период, 
	               |	ВЫБОР
	               |		КОГДА ВТПроводки.ПроводкаСКП.AccountLawson = &AccountLawsonRNI
	               |			ТОГДА ""RNI""
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТПроводки.ПроводкаСКП.AccountLawson = &AccountLawsonINR
	               |					ТОГДА ""INR""
	               |				ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(15))
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Тип,
	               |	ВТПроводки.ПроводкаСКП.PoNumber КАК PoNumber,
	               |	ВТПроводки.ПроводкаСКП.POLine.Ссылка КАК POLine,
	               |	ВТПроводки.ПроводкаСКП.POLine.Количество КАК Количество
	               |ИЗ
	               |	ВТПроводки КАК ВТПроводки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КурсUSD КАК КурсUSD
				   // Пахоменков
   				   // ТУТ  ПО ВТПроводки.ПроводкаСКП.PostingDate = КурсUSD.Период
	               |		ПО ВТПроводки.ПроводкаСКП.PeriodLawson = КурсUSD.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка КАК ДокРаспределениеМА,
	               |	ВТПроводки.ПроводкаСКП
	               |ИЗ
	               |	ВТПроводки КАК ВТПроводки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.INVENTORY КАК РаспределениеМатериаловИзКнигиПокупокINVENTORY
	               |		ПО ВТПроводки.ПроводкаСКП = РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП
	               |			И (НЕ РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка.ПометкаУдаления)
	               |ГДЕ
	               |	ВТПроводки.ПроводкаСКП.Модуль = ЗНАЧЕНИЕ(Перечисление.МодулиРазработки.InventoryCosts)
	               |	И РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка ЕСТЬ NULL ";
                      	              
	Результат = Запрос.ВыполнитьПакет();
	РезультатДляМА = Результат[2].Выгрузить();
		
	ДвиженияМА = РегистрыНакопления.МатериальныеАктивы.СоздатьНаборЗаписей();
    ДвиженияМА.Отбор.Регистратор.Установить(Ссылка);
	ДвиженияМА.Записывать = Истина;
	
	Для Каждого СтрокаТЗПроводок Из РезультатДляМА цикл
		Движение = ДвиженияМА.ДобавитьПриход();
		Движение.ПроводкаДеталейСКП = СтрокаТЗПроводок.ПроводкаДеталейСКП;
		Движение.Период = СтрокаТЗПроводок.Период;
		Движение.Сумма = СтрокаТЗПроводок.Сумма;
		Движение.СуммаРуб = СтрокаТЗПроводок.СуммаРуб;
	КонецЦикла;
	ДвиженияМА.Записать();
	//Документ  Распределение МА
	Выборка = Результат[3].Выбрать();
	// проверяем наличие документа для проводки AP, если нет - создаем
	Если Выборка.Следующий() Тогда 
		ДокРаспределениеМА = Документы.РаспределениеМатериаловИзКнигиПокупок.СоздатьДокумент();
		ДокРаспределениеМА.Дата = ДатаПроведения;
		Выборка.Сбросить();
		Пока Выборка.Следующий() цикл 
			ДанныеНовойСтроки = РезультатДляМА.Найти(Выборка.ПроводкаСКП, "ПроводкаДеталейСКП");
			НоваяСтрока = ДокРаспределениеМА.INVENTORY.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеНовойСтроки);
		КонецЦикла;
		InventoryСервер.ЗаписатьДокументВВыбранномРежиме(ДокРаспределениеМА, РежимЗаписиДокумента.Проведение);
	КонецЕсли;
             	
КонецПроцедуры


Процедура СформироватьДвиженияПоРегиструМатериальныеАктивыДляУказаннойСуммыРуб(Ссылка, ДатаПроведения, СуммаРубСНДС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ", Ссылка);
	//пахоменков изменил на дсс
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроводкаDSS.Ссылка КАК ПроводкаСКП,
	               |	ПроводкаDSS.Дата КАК Период,
	               |	ПроводкаDSS.Currency,
	               |	ПроводкаDSS.TranAmount,
	               |	ПроводкаDSS.BaseAmount,
	               |	ПроводкаDSS.AccountLawson,
	               |	ПроводкаDSS.PoNumber,
	               |	ПроводкаDSS.POLine.Ссылка КАК POLine,
	               |	ПроводкаDSS.POLine.Количество КАК Количество,
	               |	ПроводкаDSS.TranAmount КАК СуммаРуб,
	               |	ПроводкаDSS.FiscalType,
	               |	ПроводкаDSS.Модуль,
	               |	ПроводкаDSS.PeriodLawson КАК PostingDate
	               |ИЗ
	               |	Документ.ПроводкаDSS КАК ПроводкаDSS
	               |ГДЕ
	               |	ПроводкаDSS.Документ = &Документ
	               |	И (НЕ ПроводкаDSS.ПометкаУдаления)";
				   
	ТаблицаПроводок = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПроводок.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	//проверяем, что во всех проводках совпадает валюта
	ТЗВалютПроводок = ТаблицаПроводок.Скопировать(,"Currency");
	ТЗВалютПроводок.Свернуть("Currency");
	Если ТЗВалютПроводок.Количество() > 1 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В проводках DSS документа "+ Ссылка +" не совпадает валюта!");
	КонецЕсли;
		
	// распределяем ручную сумму руб пропорционально Tran Amount
	УчетНДС.РаспределитьСуммуПоСтолбцу(ТаблицаПроводок.ВыгрузитьКолонку("TranAmount"), СуммаРубСНДС, ТаблицаПроводок, "СуммаРуб");
	                     		
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("AP##FAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("APD3PFAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("APDIRFAFM"));
	МассивТипов.Добавить(Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("FA cost"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗПроводок", ТаблицаПроводок);
	Запрос.УстановитьПараметр("МассивТипов", МассивТипов);
	Запрос.УстановитьПараметр("AccountLawsonRNI", ПланыСчетов.Lawson.НайтиПоКоду("201900"));
	Запрос.УстановитьПараметр("AccountLawsonINR", ПланыСчетов.Lawson.НайтиПоКоду("130508"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаПроводок.ПроводкаСКП,
	               |	ТаблицаПроводок.Период,
	               |	ТаблицаПроводок.FiscalType,
	               |	ТаблицаПроводок.BaseAmount,
	               |	ТаблицаПроводок.СуммаРуб,
	               |	ТаблицаПроводок.AccountLawson,
	               |	ТаблицаПроводок.PoNumber,
	               |	ТаблицаПроводок.POLine,
	               |	ТаблицаПроводок.Количество,
	               |	ТаблицаПроводок.Модуль,
	               |	ТаблицаПроводок.PostingDate
	               |ПОМЕСТИТЬ ВТПроводки
	               |ИЗ
	               |	&ТЗПроводок КАК ТаблицаПроводок
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТПроводки.ПроводкаСКП КАК ПроводкаДеталейСКП,
	               |	ВТПроводки.BaseAmount КАК Сумма,
	               |	ВТПроводки.СуммаРуб,
	               |	ВТПроводки.Период,
	               |	ВЫБОР
	               |		КОГДА ВТПроводки.AccountLawson = &AccountLawsonRNI
	               |			ТОГДА ""RNI""
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТПроводки.AccountLawson = &AccountLawsonINR
	               |					ТОГДА ""INR""
	               |				ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(15))
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Тип,
	               |	ВТПроводки.PoNumber,
	               |	ВТПроводки.POLine,
	               |	ВТПроводки.Количество,
	               |	ВТПроводки.Модуль,
	               |	ВТПроводки.PostingDate
	               |ИЗ
	               |	ВТПроводки КАК ВТПроводки
	               |ГДЕ
	               |	ВТПроводки.FiscalType В(&МассивТипов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка КАК ДокРаспределениеМА,
	               |	ВТПроводки.ПроводкаСКП
	               |ИЗ
	               |	ВТПроводки КАК ВТПроводки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.INVENTORY КАК РаспределениеМатериаловИзКнигиПокупокINVENTORY
	               |		ПО ВТПроводки.ПроводкаСКП = РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП
	               |			И ((НЕ РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка.ПометкаУдаления))
	               |ГДЕ
	               |	ВТПроводки.Модуль = ЗНАЧЕНИЕ(Перечисление.МодулиРазработки.InventoryCosts)
	               |	И РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка ЕСТЬ NULL ";
                      	              
	Результат = Запрос.ВыполнитьПакет();
	РезультатДляМА = Результат[1].Выгрузить();
	
	Если РезультатДляМА.Количество() > 0 Тогда 
		          				
		ДвиженияМА = РегистрыНакопления.МатериальныеАктивы.СоздатьНаборЗаписей();
		ДвиженияМА.Отбор.Регистратор.Установить(Ссылка);
		ДвиженияМА.Записывать = Истина;
		    		 		
		Для Каждого СтрокаТЗПроводок Из РезультатДляМА цикл
			Движение = ДвиженияМА.ДобавитьПриход();
			Движение.ПроводкаДеталейСКП = СтрокаТЗПроводок.ПроводкаДеталейСКП;
			Движение.Период = СтрокаТЗПроводок.Период;
			Движение.Сумма = СтрокаТЗПроводок.Сумма;
			Движение.СуммаРуб = СтрокаТЗПроводок.СуммаРуб;
		КонецЦикла;
		ДвиженияМА.Записать();
	КонецЕсли;

	//Документ  Распределение МА
	Выборка = Результат[2].Выбрать();
	// проверяем наличие документа для проводки AP, если нет - создаем
	Если Выборка.Следующий() Тогда 
		ДокРаспределениеМА = Документы.РаспределениеМатериаловИзКнигиПокупок.СоздатьДокумент();
		ДокРаспределениеМА.Дата = ДатаПроведения;
		Выборка.Сбросить();
		Пока Выборка.Следующий() цикл 
			ДанныеНовойСтроки = РезультатДляМА.Найти(Выборка.ПроводкаСКП, "ПроводкаДеталейСКП");
			Если ДанныеНовойСтроки = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			НоваяСтрока = ДокРаспределениеМА.INVENTORY.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеНовойСтроки);
		КонецЦикла;
		InventoryСервер.ЗаписатьДокументВВыбранномРежиме(ДокРаспределениеМА, РежимЗаписиДокумента.Проведение);
	КонецЕсли;
             	
КонецПроцедуры

