
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Реквизиты = Новый Структура;
	
	Для каждого Реквизит Из Метаданные.Документы.ПроводкаDSS.Реквизиты  Цикл  
		
		Реквизиты.Вставить(Реквизит.Имя, Ссылка[Реквизит.Имя]); 
		
	КонецЦикла;   
	
	Реквизиты.Вставить("Период", Дата);
	Реквизиты.Вставить("GltObjId", Номер); 
	Реквизиты.Вставить("Регистратор", Ссылка); 
	
	Если НЕ System = "MN" Тогда  
		
		Попытка 	
			
			Документы.ПроводкаDSS.ВыполнитьДвижениеПоРегиструПроводкиDSSОбщие(Реквизиты);	
			
			Если System = "BL" И СтрНайти(Description, "ACCRUAL") = 0
				// начало добавления, RG-Soft, Карасев В.В., 26.10.2016  вопрос ММВ-0000802
				ИЛИ (System = "AR" И SourceCode = "RM") Тогда
				// конец добавления, RG-Soft, Карасев В.В., 26.10.2016  вопрос ММВ-0000802
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ArInvoice", ArInvoice);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	LawsonInvoice.Ссылка
				|ИЗ
				|	Документ.LawsonInvoice КАК LawsonInvoice
				|ГДЕ
				|	LawsonInvoice.ArInvoice = &ArInvoice"; 				  
				Результат = Запрос.Выполнить();   
				Выборка = Результат.Выбрать(); 
				Если Выборка.Следующий() Тогда
					LawsonInvoice = Выборка.Ссылка;
				Иначе
					LawsonInvoice = Документы.LawsonInvoice.ПустаяСсылка();
				КонецЕсли; 
				
				Документы.ПроводкаDSS.ВыполнитьДвижениеПоРегиструПроводкиDSSSB(Реквизиты,LawsonInvoice);	
				
			КонецЕсли;	
			
			Если System = "AM" Тогда
				
				Документы.ПроводкаDSS.ВыполнитьДвижениеПоРегиструПроводкиDSSFA(Реквизиты);
				
			КонецЕсли;   	
			
			//Временно закомментировано
			//Документы.ПроводкаDSS.ВыполнитьДвижениеПоРегиструПоРегиструМатериальныеАктивы(Реквизиты);
			
		Исключение
			
			Отказ = Истина;
			СтрокаОшибки = "Не удалось провести документ по регистрам: " + ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("Ошибка при проведении DSS", УровеньЖурналаРегистрации.Ошибка, , , СтрокаОшибки);    
			
		КонецПопытки;   
		
	КонецЕсли; 
	// { RGS MYurkevich 19.02.2015 13:10:40 - 
	Если System = "BL" И AccountLawson = ПланыСчетов.Lawson.НайтиПоКоду("208601") 
		И Currency = Справочники.Валюты.НайтиПоНаименованию("USD") Тогда
		ЗаписьНДС = Движения.НДСНачисленныйLawson.ДобавитьПриход();
		ЗаписьНДС.Период = Дата;
		ЗаписьНДС.ПроводкаDSS = Ссылка;
		ЗаписьНДС.AU = AU;
		ЗаписьНДС.СуммаUSD = BaseAmount;
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
			И НЕ Документ = Документы.РеализацияТоваровУслуг.ПустаяСсылка() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(ПродажиВыручка_SBОбороты.СуммаНДСRURОборот, 0) КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПродажиВыручка_SB.Обороты(, , , ДокументРеализации = &Документ) КАК ПродажиВыручка_SBОбороты";
			
			Запрос.УстановитьПараметр("Документ", Документ);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				Сумма = Выборка.Сумма;	
				Если Сумма <> 0 Тогда
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПроводкаDSS.Ссылка,
					|	ПроводкаDSS.BaseAmount КАК СуммаДокумента
					|ИЗ
					|	Документ.ПроводкаDSS КАК ПроводкаDSS
					|ГДЕ
					|	ПроводкаDSS.System = &System
					|	И ПроводкаDSS.AccountLawson = &AccountLawson
					|	И ПроводкаDSS.Currency = &Currency
					|	И ПроводкаDSS.Документ = &Документ
					|	И ПроводкаDSS.Ссылка <> &Ссылка";
					
					Запрос.УстановитьПараметр("AccountLawson", AccountLawson);
					Запрос.УстановитьПараметр("Currency", Currency);
					Запрос.УстановитьПараметр("System", System);
					Запрос.УстановитьПараметр("Документ", Документ);
					Запрос.УстановитьПараметр("Ссылка", Ссылка);
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					ТаблицаДокументов = Новый ТаблицаЗначений;
					ТаблицаДокументов.Колонки.Добавить("Ссылка");
					ТаблицаДокументов.Колонки.Добавить("СуммаДокумента");
					Пока Выборка.Следующий() Цикл
						НоваяСтрока = ТаблицаДокументов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					КонецЦикла;
					Если ТаблицаДокументов.Количество() <> 0 Тогда
						НоваяСтрока = ТаблицаДокументов.Добавить();
						НоваяСтрока.Ссылка = Ссылка;
						НоваяСтрока.СуммаДокумента = BaseAmount;
						СуммыПроводок = ТаблицаДокументов.ВыгрузитьКолонку("СуммаДокумента");
						МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Сумма, СуммыПроводок);
						Если МассивСумм <> Неопределено Тогда
							Инд = 0;
							Для Каждого Строка Из ТаблицаДокументов Цикл
								Если Строка.Ссылка = Ссылка Тогда
									ЗаписьНДС.СуммаРуб = МассивСумм[Инд];
								Иначе
									НаборЗаписей = РегистрыНакопления.НДСНачисленныйLawson.СоздатьНаборЗаписей();
									НаборЗаписей.Отбор.Регистратор.Установить(Строка.Ссылка);
									НаборЗаписей.Прочитать();
									Если НаборЗаписей.Количество() <> 0 Тогда
										НаборЗаписей[0].СуммаРуб = МассивСумм[Инд];
										НаборЗаписей.Записать();
									КонецЕсли; 
								КонецЕсли;
								Инд = Инд + 1;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;	
				Иначе 
					ЗаписьНДС.СуммаРуб = Сумма;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		Движения.НДСНачисленныйLawson.Записать();
	КонецЕсли;	
	// } RGS MYurkevich 19.02.2015 13:11:29 - 
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;	
	
	// ++ КДС 02.02.2016 
	// для проводок системы RJ дозаполняем рублевую сумму по 500 счетам
	Если СокрЛП(System) = "RJ" И RubAmount = 0 и TranAmount <> 0 
		И Лев(AccountLawson.Код, 1) = "5"  Тогда
		Если Currency = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			RubAmount = TranAmount;
		Иначе
			RubAmount = BaseAmount * РаботаСКурсамиВалют.ПолучитьКурсВалюты(Справочники.Валюты.НайтиПоКоду("999"), Дата).Курс;
		КонецЕсли;	
	КонецЕсли;
	// -- КДС 02.02.2016
	
	Если ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)    	
	
	//Движения по регистру сопоставлений номеров в проводках
	Если СокрЛП(System) = "BL" ИЛИ СокрЛП(System) = "AP" ИЛИ СокрЛП(System) = "AM" ИЛИ СокрЛП(System) = "IC" Тогда  
		
		Если ДополнительныеСвойства.Свойство("ЭтоНовый") И ДополнительныеСвойства.ЭтоНовый Тогда
			
			тPoNumber 	=  СокрЛП(PoNumber);
			тApInvoice 	=  СокрЛП(ApInvoice);
			тArInvoice 	=  СокрЛП(ArInvoice); 
			
			// т.к. проиндексировано только поле "Номер", а отбор нам нужен вплоть до "объект" (непроиндексировано), нам нужно накладывать полный отбор, иначе
			// будут конфликты тразакций
			
			Если СтрДлина(тPoNumber) > 7 Тогда
				ЗаписьPO = РегистрыСведений.НомераДокументовВПроводкахDSSИГТД.СоздатьМенеджерЗаписи();
				ЗаписьPO.Период 		= Дата;
				ЗаписьPO.Номер 			= тPoNumber;
				ЗаписьPO.ТипДокумента 	= "PO";
				ЗаписьPO.Объект 		= Ссылка;
				ЗаписьPO.Записать();    			
			КонецЕсли;
			
			Если СтрДлина(тApInvoice) > 7 Тогда
				ЗаписьAP = РегистрыСведений.НомераДокументовВПроводкахDSSИГТД.СоздатьМенеджерЗаписи();
				ЗаписьAP.Период 		= Дата;
				ЗаписьAP.Номер 			= тApInvoice;
				ЗаписьAP.ТипДокумента 	= "ApInv";
				ЗаписьAP.Объект 		= Ссылка;
				ЗаписьAP.Записать();
			ИначеЕсли СтрДлина(тArInvoice) > 7 Тогда
				ЗаписьAR = РегистрыСведений.НомераДокументовВПроводкахDSSИГТД.СоздатьМенеджерЗаписи();
				ЗаписьAR.Период 		= Дата;
				ЗаписьAR.Номер 			= тArInvoice;
				ЗаписьAR.ТипДокумента 	= "ArInv";
				ЗаписьAR.Объект 		= Ссылка;
				ЗаписьAR.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	//<-
	
КонецПроцедуры
