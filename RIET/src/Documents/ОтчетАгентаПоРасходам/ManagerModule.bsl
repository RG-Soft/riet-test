Функция ПечатьОтчетАгентаПоРасходам(Ссылка)
	
    // ПОДГОТОВКА ДАННЫХ  
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетАгентаПоРасходам.Номер КАК НомерДокумента,
	|	ОтчетАгентаПоРасходам.Дата КАК ДатаДокумента,
	|	ОтчетАгентаПоРасходам.ДоговорКонтрагента,
	|	""Компания «Шлюмберже Лоджелко, Инк.»"" КАК Организация,
	|	ОтчетАгентаПоРасходам.АгентскийПроцент,
	|	ОтчетАгентаПоРасходам.АгентскаяСумма,
	|	ОтчетАгентаПоРасходам.АгентскаяСтавкаНДС,
	|	ОтчетАгентаПоРасходам.АгентскийНДС,
	|	ОтчетАгентаПоРасходам.АгентскаяСумма + ОтчетАгентаПоРасходам.АгентскийНДС КАК АгентскаяСуммаИтого,
	|	ОтчетАгентаПоРасходам.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК АгентскаяВалюта,
	|	ОтчетАгентаПоРасходам.Контрагент.НаименованиеПолное КАК Контрагент,
	|	ОтчетАгентаПоРасходам.КурсВзаиморасчетов,
	|	ОтчетАгентаПоРасходам.КратностьВзаиморасчетов,
	|	ОтчетАгентаПоРасходам.ВалютаДокумента
	|ИЗ
	|	Документ.ОтчетАгентаПоРасходам КАК ОтчетАгентаПоРасходам
	|ГДЕ
	|	ОтчетАгентаПоРасходам.Ссылка = &ТекущийДокумент";
	ВыборкаДокумента = Запрос.Выполнить().Выбрать();
	ВыборкаДокумента.Следующий(); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетАгентаПоРасходамУслугиАгента.Ссылка КАК Документ,
		|	ОтчетАгентаПоРасходамУслугиАгента.Содержание,
		|	ОтчетАгентаПоРасходамУслугиАгента.ВалютаДоговораКонтрагента КАК Валюта,
		|	ВЫБОР
		|		КОГДА НЕ ОтчетАгентаПоРасходамУслугиАгента.Номенклатура ЕСТЬ NULL 
		|				И НЕ ОтчетАгентаПоРасходамУслугиАгента.Номенклатура.Услуга
		|			ТОГДА ОтчетАгентаПоРасходамУслугиАгента.Количество
		|		ИНАЧЕ ""-""
		|	КОНЕЦ КАК Количество,
		|	""-"" КАК Цена,
		|	ОтчетАгентаПоРасходамУслугиАгента.Сумма КАК Стоимость,
		|	ОтчетАгентаПоРасходамУслугиАгента.СтавкаНДС,
		|	ОтчетАгентаПоРасходамУслугиАгента.СуммаНДС,
		|	ОтчетАгентаПоРасходамУслугиАгента.Сумма + ОтчетАгентаПоРасходамУслугиАгента.СуммаНДС КАК ИтогоСНДС,
		|	ОтчетАгентаПоРасходамУслугиАгента.Контрагент.НаименованиеПолное КАК Поставщик,
		|	ОтчетАгентаПоРасходамУслугиАгента.Документ.НомерВходящегоДокумента КАК СКПНомерВходящегоДокумента,
		|	ОтчетАгентаПоРасходамУслугиАгента.Документ.ДатаВходящегоДокумента КАК СКПДатаВходящегоДокумента,
		|	ОтчетАгентаПоРасходамУслугиАгента.СчетФактура.Дата КАК СФДатаВходящегоДокумента,
		|	ОтчетАгентаПоРасходамУслугиАгента.СчетФактура.Номер КАК СФНомерВходящегоДокумента,
		|	ЕСТЬNULL(ОтчетАгентаПоРасходамУслугиАгента.СчетФактура, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК СчетФактураПеревыставление
		|ИЗ
		|	Документ.ОтчетАгентаПоРасходам.УслугиАгента КАК ОтчетАгентаПоРасходамУслугиАгента
		|ГДЕ
		|	ОтчетАгентаПоРасходамУслугиАгента.Ссылка = &ТекущийДокумент"; 
	ВыборкаРасходы = Запрос.Выполнить().Выгрузить();
	
	//ПОДГОТОВКА МАКЕТА, ОБЛАСТЕЙ И ТАБЛИЧНОГО ДОКУМЕНТА
	
	Макет = ПолучитьОбщийМакет("ОтчетАгентаПоРасходам");
	Лого			 = Макет.ПолучитьОбласть("Лого");  
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	РасходыЗаголовок = Макет.ПолучитьОбласть("РасходыЗаголовок");
	РасходыСтрока    = Макет.ПолучитьОбласть("РасходыСтрока");
	Подвал           = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;  	
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОТЧЕТАГЕНТАПОРАСХОДАМ";
	
	// ЗАПОЛНЕНИЕ И ВЫВОД ОБЛАСТЕЙ
	
	Шапка.Параметры.Заполнить(ВыборкаДокумента);
	Шапка.Параметры.ДатаДокумента	         = Формат(ВыборкаДокумента.ДатаДокумента,"ДФ='дд ММММ гггг'"); 
	
	ТабДокумент.Вывести(Лого); 
	ТабДокумент.Вывести(Шапка);  	
       	
	ТабДокумент.Вывести(РасходыЗаголовок);
	
	НомерСтраницы 	= 1; 
	НомерСтроки 	= 1; 
	
	//Добавила Федотова Л., РГ-Софт, 21.04.15, вопрос SLI-0005369
	ВсегоСуммаНДС   = 0;
	ВсегоСНДС       = 0;
	
	Для Каждого СтрокаВыборки Из ВыборкаРасходы Цикл
		
		РасходыСтрока.Параметры.Заполнить(СтрокаВыборки);
		РасходыСтрока.Параметры.НомерПП = НомерСтроки;                                                                                                                                                   
		РасходыСтрока.Параметры.ДокументПоставщика = "№" + СокрЛП(СтрокаВыборки.СКПНомерВходящегоДокумента) + " от " + Символы.ПС + Формат(СтрокаВыборки.СКПДатаВходящегоДокумента, "ДФ=дд.ММ.гггг") + " г.";
		Если НЕ СтрокаВыборки.СчетФактураПеревыставление.Пустая() Тогда
			РасходыСтрока.Параметры.ДокументАгента	   = "№" + СокрЛП(СтрокаВыборки.СФНомерВходящегоДокумента) + " от " + Символы.ПС + Формат(СтрокаВыборки.СФДатаВходящегоДокумента, "ДФ=дд.ММ.гггг") + " г.";
		Иначе
			РасходыСтрока.Параметры.ДокументАгента	   = "-";
		КонецЕсли;
		
		//ПЕРЕСЧИТАЕМ В РУБЛИ, ЕСЛИ ВАЛЮТА НЕ РУБЛИ 	
		ВалютаРуб 				= Константы.ВалютаРегламентированногоУчета.Получить();
		РасходыСтрока.Параметры.Валюта = ВалютаРуб;
		Если ВыборкаДокумента.ВалютаДокумента <> ВалютаРуб Тогда  
			Дата                	= ВыборкаДокумента.ДатаДокумента;
			СтруктураКурсаРуб   	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);
			КурсВзаиморасчетов  	= ВыборкаДокумента.КурсВзаиморасчетов;
			КратностьВзаиморасчетов = ВыборкаДокумента.КратностьВзаиморасчетов;
			
			РасходыСтрока.Параметры.ИтогоСНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			СтрокаВыборки.ИтогоСНДС,
			ВыборкаДокумента.ВалютаДокумента, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность); 	
			
			РасходыСтрока.Параметры.Стоимость = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			СтрокаВыборки.Стоимость,
			ВыборкаДокумента.ВалютаДокумента, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность); 
			
			РасходыСтрока.Параметры.СуммаНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			СтрокаВыборки.СуммаНДС,
			ВыборкаДокумента.ВалютаДокумента, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность); 
		КонецЕсли;
			
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(РасходыСтрока);
		
		// Если обрабатываемая строка - последняя, будем проверять, помещается ли подвал документа
		Если ВыборкаРасходы.Индекс(СтрокаВыборки) = ВыборкаРасходы.Количество() - 1 Тогда 
			СтрокаСПодвалом.Добавить(Подвал);
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			НомерСтраницы = НомерСтраницы + 1;
			//ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(РасходыЗаголовок);
		КонецЕсли;
		
		//Добавила Федотова Л., РГ-Софт, 21.04.15, вопрос SLI-0005369
		ВсегоСуммаНДС = ВсегоСуммаНДС + РасходыСтрока.Параметры.СуммаНДС;
		ВсегоСНДС = ВсегоСНДС + РасходыСтрока.Параметры.ИтогоСНДС;
		
		ТабДокумент.Вывести(РасходыСтрока);
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Подвал.Параметры.Заполнить(ВыборкаДокумента);
	//Добавила Федотова Л., РГ-Софт, 21.04.15, вопрос SLI-0005369
	Подвал.Параметры.ВсегоСуммаНДС = ВсегоСуммаНДС;
	Подвал.Параметры.ВсегоСНДС = ВсегоСНДС;
	
	АгентскаяСуммаИтого = ВыборкаДокумента.АгентскаяСуммаИтого;

	//ПЕРЕСЧИТАЕМ В РУБЛИ, ЕСЛИ ВАЛЮТА НЕ РУБЛИ
	ВалютаРуб 				= Константы.ВалютаРегламентированногоУчета.Получить();
	Подвал.Параметры.АгентскаяВалюта = ВалютаРуб;    
	Если ВыборкаДокумента.ВалютаДокумента <> ВалютаРуб Тогда 

		Дата                	= ВыборкаДокумента.ДатаДокумента;
		СтруктураКурсаРуб   	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);
		КурсВзаиморасчетов  	= ВыборкаДокумента.КурсВзаиморасчетов;
		КратностьВзаиморасчетов = ВыборкаДокумента.КратностьВзаиморасчетов;
		
		Подвал.Параметры.АгентскийНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
		ВыборкаДокумента.АгентскийНДС,
		ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
		
		АгентскаяСуммаИтого = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
		ВыборкаДокумента.АгентскаяСуммаИтого,
		ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
		Подвал.Параметры.АгентскаяСуммаИтого = АгентскаяСуммаИтого;
		
		Подвал.Параметры.АгентскаяСумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
		ВыборкаДокумента.АгентскаяСумма,
		ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);    		
		
	КонецЕсли;
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2";
	Подвал.Параметры.АгентскаяСуммаИтогоПрописью = ЧислоПрописью(АгентскаяСуммаИтого, ФормСтрока, ПарПредмета);
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
		
КонецФункции // ОтчетАгентаПоРасходам()

Функция ПечатьОтчетАгентаПоРасходамАктНаВознаграждение(Ссылка)
	
    // ПОДГОТОВКА ДАННЫХ  
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетАгентаПоРасходам.Номер КАК НомерДокумента,
	|	ОтчетАгентаПоРасходам.Дата КАК ДатаДокумента,
	|	ОтчетАгентаПоРасходам.ДоговорКонтрагента,
	|	""Компания «Шлюмберже Лоджелко, Инк.»"" КАК Организация,
	|	ОтчетАгентаПоРасходам.АгентскийПроцент,
	|	ОтчетАгентаПоРасходам.АгентскаяСумма,
	|	ОтчетАгентаПоРасходам.АгентскаяСтавкаНДС,
	|	ОтчетАгентаПоРасходам.АгентскийНДС,
	|	ОтчетАгентаПоРасходам.АгентскаяСумма + ОтчетАгентаПоРасходам.АгентскийНДС КАК АгентскаяСуммаИтого,
	|	ОтчетАгентаПоРасходам.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК АгентскаяВалюта,
	|	ОтчетАгентаПоРасходам.Контрагент.НаименованиеПолное КАК Контрагент,
	|	ОтчетАгентаПоРасходам.КурсВзаиморасчетов,
	|	ОтчетАгентаПоРасходам.КратностьВзаиморасчетов
	|ИЗ
	|	Документ.ОтчетАгентаПоРасходам КАК ОтчетАгентаПоРасходам
	|ГДЕ
	|	ОтчетАгентаПоРасходам.Ссылка = &ТекущийДокумент";
	ВыборкаДокумента = Запрос.Выполнить().Выбрать();
	ВыборкаДокумента.Следующий(); 
	
	//ПЕРЕСЧИТАЕМ В РУБЛИ, ЕСЛИ ВАЛЮТА НЕ РУБЛИ
	
	ВалютаРуб 				= Константы.ВалютаРегламентированногоУчета.Получить();
	Дата                	= ВыборкаДокумента.ДатаДокумента;
	СтруктураКурсаРуб   	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);
	КурсВзаиморасчетов  	= ВыборкаДокумента.КурсВзаиморасчетов;
	КратностьВзаиморасчетов = ВыборкаДокумента.КратностьВзаиморасчетов;

	АгентскийНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			ВыборкаДокумента.АгентскийНДС,
			ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
			
	АгентскаяСуммаИтого = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			ВыборкаДокумента.АгентскаяСуммаИтого,
			ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
			
	АгентскаяСумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			ВыборкаДокумента.АгентскаяСумма,
			ВыборкаДокумента.АгентскаяВалюта, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);   
	
	//ПОДГОТОВКА МАКЕТА, ОБЛАСТЕЙ И ТАБЛИЧНОГО ДОКУМЕНТА
	
	Макет = ПолучитьОбщийМакет("ОтчетАгентаПоРасходамАктНаВознаграждение");
	Лого			 = Макет.ПолучитьОбласть("Лого");  
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	ТаблицаШапка 	 = Макет.ПолучитьОбласть("ТаблицаШапка");
	ТаблицаСтрока    = Макет.ПолучитьОбласть("ТаблицаСтрока");
	Подвал           = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;  	
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОТЧЕТАГЕНТАПОРАСХОДАМАКТНАВОЗНАГРАЖДЕНИЕ";
	
	// ЗАПОЛНЕНИЕ И ВЫВОД ОБЛАСТЕЙ
	
	Шапка.Параметры.Номер	         = ВыборкаДокумента.НомерДокумента;
	Шапка.Параметры.Дата	         = Формат(ВыборкаДокумента.ДатаДокумента,"ДФ='дд ММММ гггг'"); 
	Шапка.Параметры.НомерДоговора	 = "№" + ВыборкаДокумента.ДоговорКонтрагента; 
	Шапка.Параметры.Исполнитель    	 = ВыборкаДокумента.Организация;
	Шапка.Параметры.Заказчик    	 = ВыборкаДокумента.Контрагент;

	
	ТабДокумент.Вывести(Лого); 
	ТабДокумент.Вывести(Шапка);  	
       	
	ТабДокумент.Вывести(ТаблицаШапка);
	
	ТаблицаСтрока.Параметры.Номер 		= 1;
	ТаблицаСтрока.Параметры.Наименование= "Агентское вознаграждение, связанное с оказанием услуг (поставкой товаров) по договору """ + ВыборкаДокумента.ДоговорКонтрагента + """ по отчету агента №" + ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка) + " от " + Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy'г.");
    ТаблицаСтрока.Параметры.Количество 	= 1;
	ТаблицаСтрока.Параметры.Цена 		= АгентскаяСумма;
	ТаблицаСтрока.Параметры.Сумма 		= АгентскаяСумма;
	
	ТабДокумент.Вывести(ТаблицаСтрока);  
	
	Подвал.Параметры.ИтогоСумма 		= АгентскаяСуммаИтого;
	Подвал.Параметры.ИтогоСуммаНДС		= АгентскийНДС;	
	Подвал.Параметры.КолУслуг 			= 1;
	Подвал.Параметры.Сумма 	  			= АгентскаяСуммаИтого;   
	Подвал.Параметры.Валюта   			= ВалютаРуб;  
	
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарПредмета="рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2";
	АгентскаяСуммаИтогоПрописью = ЧислоПрописью(АгентскаяСуммаИтого, ФормСтрока, ПарПредмета); 
	
	Подвал.Параметры.СуммаУслугПрописью = АгентскаяСуммаИтогоПрописью;
	
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
		
КонецФункции // ОтчетАгентаПоРасходамАктВознаграждения()


Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетАгентаПоРасходам") Тогда
		
		ТабДокумент = ПечатьОтчетАгентаПоРасходам(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетАгентаПоРасходам",
				"Отчет агента по расходам", ТабДокумент);    
				
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетАгентаПоРасходамАктНаВознаграждение") Тогда
		
		ТабДокумент = ПечатьОтчетАгентаПоРасходамАктНаВознаграждение(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетАгентаПоРасходамАктНаВознаграждение",
				"Акт на вознаграждение", ТабДокумент); 			
				
	КонецЕсли;

КонецПроцедуры
