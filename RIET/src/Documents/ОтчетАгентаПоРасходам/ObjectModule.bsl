
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр НДСПредъявленный Расход 	
	Если НЕ БезПодбораВаучера Тогда    	

		Движения.НДСПредъявленный.Записывать = Истина;  
		
		Для каждого СтрокаРасходы из УслугиАгента Цикл 		
			
			СчетКнигиПокупок = СтрокаРасходы.Документ; 
			ЗаписиНДСПредъявленный = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
	        ЗаписиНДСПредъявленный.Отбор.Регистратор.Значение = СчетКнигиПокупок;
			ЗаписиНДСПредъявленный.Прочитать();
			
			Для Каждого Запись из ЗаписиНДСПредъявленный Цикл
				Движение = Движения.НДСПредъявленный.Добавить();
		        ЗаполнитьЗначенияСвойств(Движение,Запись);
				Движение.ВидДвижения 		= ВидДвиженияНакопления.Расход;
				Движение.Период 			= ДатаПроведения;
				Движение.СуммаБезНДС		= ?(СуммаВключаетНДС,СтрокаРасходы.Сумма - СтрокаРасходы.СуммаНДС, СтрокаРасходы.Сумма);
				Движение.НДС 		 		= СтрокаРасходы.СуммаНДС;  
				
				НДСВВалюте = ОбщегоНазначения.РассчитатьСуммуНДС(СтрокаРасходы.СуммаВал, Истина, Истина,УчетНДС.ПолучитьСтавкуНДС(СтрокаРасходы.СтавкаНДС)); 
				Движение.СуммаБезНДСВВалюте = СтрокаРасходы.СуммаВал - НДСВВалюте; 			
				Движение.НДСВВалюте 		= НДСВВалюте; 		
				
				Движение.НалоговыйПериод    = НалоговыйПериод;
			КонецЦикла;   	
			
		КонецЦикла;
		
	КонецЕсли;
	
   	//<<
	
	//// регистр Выручка_SB Расход 	
	//Движения.Выручка_SB.Записывать = Истина;  	
	//	
	//Движение = Движения.Выручка_SB.Добавить();
	//Движение.Период 		 = ДатаПроведения;
	//Движение.Организация 	 = Организация;
	//Движение.Подразделение	 = ПодразделениеОрганизации; 
	//Движение.Контрагент    	 = Контрагент;
	//Движение.Договор    	 = ДоговорКонтрагента;
	//Движение.НалоговыйПериод = НалоговыйПериод;   		
	//
	//Движение.СуммаБезНДС     = АгентскаяСумма;
	//Движение.СуммаНДС 		 = АгентскийНДС; 
	//
	//
	//ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	//СтруктураКурсаРуб   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);

	//Движение.СуммаБезНДСРуб = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		Движение.СуммаБезНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
	//		
	//Движение.СуммаНДСРуб 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		Движение.СуммаНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
	//
	//Движение.ВалютаДокумента = ВалютаДокумента;
	//Движение.ВалютаДоговора  = ДоговорКонтрагента.ВалютаВзаиморасчетов;
	//Движение.Номенклатура	 = НоменклатураАгентская;
	//Движение.AU				 = АгентскийAU;   
	////<<

	//// регистр Продажи Расход 	
	//Движения.Продажи.Записывать = Истина;  	
	//
	//Движение 						  = Движения.Продажи.Добавить();  
	//Движение.Период 		 		  = ДатаПроведения;
	//Движение.ИнвойсинговыйЦентр 	  = ИнвойсинговыйЦентр;
	//Движение.ПодразделениеОрганизации = ПодразделениеОрганизации; 
	//Движение.ДоговорКонтрагента 	  = ДоговорКонтрагента; 
	//Движение.AU						  = АгентскийAU;
	//Движение.СтавкаНДС				  = АгентскаяСтавкаНДС;
	//Движение.Валюта					  = ВалютаДокумента;
	////Движение.WO не надо заполнять
	//Движение.Номенклатура			  = НоменклатураАгентская;
	//Движение.Тип					  = "АГЕ";
	//Движение.ДокументРеализации		  = Ссылка;
	//
	//Движение.НалоговыйПериод = НалоговыйПериод;   		
	
	
	//Суммы в рублях и долларах принудительно переводим
	//ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	//СтруктураКурсаРуб   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата); 
	//
	//СуммаRUR		= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскаяСумма + АгентскийНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);  			
	//СуммаНДСRUR 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскийНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
	//		

	//ВалютаUSD = Справочники.Валюты.НайтиПоНаименованию("USD");;
	//СтруктураКурсаUSD   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаUSD, Дата); 
	//
	//СуммаUSD		= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскаяСумма + АгентскийНДС,
	//		ВалютаДокумента, ВалютаUSD, 
	//		КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность);  			
	//СуммаНДСUSD 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскийНДС,
	//		ВалютаДокумента, ВалютаUSD, 
	//		КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность);
	//
	//Движение.СуммаRUR     = СуммаRUR;
	//Движение.СуммаUSD     = СуммаUSD;
	//Движение.СуммаНДСRUR  = СуммаНДСRUR;
	//Движение.СуммаНДСUSD  = СуммаНДСUSD; 
	////<<	   	
	//
	//   //<<         
	
	// Движения по "Продажа-Выручка SB"
	СформироватьДвиженияПоРегиструПродажиВыручка_SB();
	//<-
	
	Если ЗначениеЗаполнено(ИнвойсНаВознаграждение) И ИнвойсНаВознаграждение.Документ <> Ссылка Тогда
		ОбъектИнвойсАг = ИнвойсНаВознаграждение.ПолучитьОбъект();
		ОбъектИнвойсАг.Документ = Ссылка;
		Попытка
			ОбъектИнвойсАг.Записать();
		Исключение
			Отказ = Истина;
			Сообщить("Ошибка записи агентского инвойса! "+ ИнвойсНаВознаграждение + ": " + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Для каждого Строка из УслугиАгента Цикл   
		ТекДокумент = ?(БезПодбораВаучера,Ссылка,Строка.Документ);
		Если ЗначениеЗаполнено(Строка.Инвойс) И Строка.Инвойс.Документ <> ТекДокумент Тогда
			ТекОбъектИнвойс = Строка.Инвойс.ПолучитьОбъект();
			ТекОбъектИнвойс.Документ = ТекДокумент;
			Попытка                                                                   
				ТекОбъектИнвойс.Записать();
			Исключение
				Отказ = Истина;
				Сообщить("Ошибка записи инвойса для строки расходов! "+ ТекОбъектИнвойс + ": " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	
	//Номера инвойсов лоусон.
	ВсегоСНДС = АгентскаяСумма + АгентскийНДС + УслугиАгента.Итог("Сумма") + УслугиАгента.Итог("СуммаНДС"); 
	ВсегоБезНДС = АгентскаяСумма + УслугиАгента.Итог("Сумма"); 
	//Добавила использование таблицы значений Федотова Л., вопрос SLI-0005747
	ТЗУслугиАгента = УслугиАгента.Выгрузить();
	ТЗУслугиАгента.Свернуть("Инвойс,СтавкаНДС","Сумма,СуммаНДС");
	//Для Каждого СтрокаТЧ Из УслугиАгента Цикл
	Для Каждого СтрокаТЧ Из ТЗУслугиАгента Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Инвойс) Тогда
			НомераИнвойсовЗапись 		  				= РегистрыСведений.НомераИнвойсовLawson.СоздатьМенеджерЗаписи();
			НомераИнвойсовЗапись.Документ 				= Ссылка;
			НомераИнвойсовЗапись.Номер 	  				= СтрокаТЧ.Инвойс.ArInvoice;
			НомераИнвойсовЗапись.Сумма 	  				= СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
			НомераИнвойсовЗапись.СуммаДокумента 		= ВсегоСНДС;
			НомераИнвойсовЗапись.СуммаДокументаБезНДС 	= ВсегоБезНДС;
			НомераИнвойсовЗапись.СтавкаНДС 				= СтрокаТЧ.СтавкаНДС;
			НомераИнвойсовЗапись.Записать();
		КонецЕсли;
	КонецЦикла;	
		
	Если ЗначениеЗаполнено(ИнвойсНаВознаграждение) Тогда
		НомераИнвойсовЗапись 		  				= РегистрыСведений.НомераИнвойсовLawson.СоздатьМенеджерЗаписи();
		НомераИнвойсовЗапись.Документ 				= Ссылка;
		НомераИнвойсовЗапись.Номер 	  				= ИнвойсНаВознаграждение.ArInvoice;
		НомераИнвойсовЗапись.Сумма 	  				= АгентскаяСумма + АгентскийНДС;
		НомераИнвойсовЗапись.СуммаДокумента 		= ВсегоСНДС;
		НомераИнвойсовЗапись.СуммаДокументаБезНДС 	= ВсегоБезНДС;
		НомераИнвойсовЗапись.СтавкаНДС 				= АгентскаяСтавкаНДС;
		НомераИнвойсовЗапись.Записать();
	КонецЕсли;	

	// регистр ВзаиморасчетыСПокупателями Приход 	
	USD = Справочники.Валюты.НайтиПоНаименованию("USD");
	РУБ = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Движения.ВзаиморасчетыСПокупателями.Записывать = Истина;  	
	
	Движение 						  = Движения.ВзаиморасчетыСПокупателями.Добавить();  
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период 		 		  = ДатаПроведения;
	Движение.ДоговорКонтрагента 	  = ДоговорКонтрагента; 
	Движение.ПодразделениеОрганизации = ПодразделениеОрганизации; 
	Движение.Сделка 				  = Ссылка; 
	Движение.КостЦентр				  = АгентскийAU;
	//Движение.ИнвойсинговыйЦентр 	  = ИнвойсинговыйЦентр;
	Движение.СуммаВзаиморасчетов	  = АгентскаяСумма + АгентскийНДС;
	Движение.СуммаУпр = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскаяСумма + АгентскийНДС, ДоговорКонтрагента.ВалютаВзаиморасчетов, USD, КурсВзаиморасчетов, ОбщегоНазначения.ПолучитьКурсВалюты(USD, Дата).Курс);
	Если ВалютаДокумента = РУБ Тогда
		Движение.СуммаРегл = АгентскаяСумма + АгентскийНДС;
	Иначе	
		Движение.СуммаРегл = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскаяСумма + АгентскийНДС, ДоговорКонтрагента.ВалютаВзаиморасчетов, РУБ, КурсВзаиморасчетов, 1);
		// { RGS MYurkevich 13.02.2015 17:38:00 - RCA-0000032
		//Движение.СуммаРегл = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскаяСумма + АгентскийНДС, ДоговорКонтрагента.ВалютаВзаиморасчетов, РУБ, КурсВзаиморасчетов, 1);
		Движение.СуммаРегл = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскаяСумма + АгентскийНДС, ДоговорКонтрагента.ВалютаВзаиморасчетов, РУБ, ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаДокумента, Дата).Курс, 1);
		// } RGS MYurkevich 13.02.2015 17:38:35 - RCA-0000032
	КонецЕсли; 
	Для Каждого СтрокаТЧ Из УслугиАгента Цикл
		Движение 						  = Движения.ВзаиморасчетыСПокупателями.Добавить();  
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период 		 		  = ДатаПроведения;
		Движение.ДоговорКонтрагента 	  = ДоговорКонтрагента; 
		Движение.ПодразделениеОрганизации = ПодразделениеОрганизации; 
		Движение.Сделка 				  = Ссылка; 
		Движение.КостЦентр				  = АгентскийAU;
		//Движение.ИнвойсинговыйЦентр 	  = ИнвойсинговыйЦентр;
		Движение.СуммаУпр = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС, РУБ, USD, 1, ОбщегоНазначения.ПолучитьКурсВалюты(USD, Дата).Курс);
		Движение.СуммаРегл = СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
		Если ВалютаДокумента = РУБ Тогда
			Движение.СуммаВзаиморасчетов = СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
		Иначе	
			Движение.СуммаВзаиморасчетов = Движение.СуммаУпр;
		КонецЕсли; 
	КонецЦикла;	
	
	СформироватьДвиженияПоРегиструНДСНачисленный();
	
КонецПроцедуры
                                                                                                      
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Добавила условие Федотова Л., РГ-Софт, 13.02.14, вопрос SLI-0004222
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	// ++ КДС 20.07.2015 Контроль проведения
	// контроль проведения должен быть включен как для организации, так и для контрагента
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	КонтрольПроведенияСервер.ПередЗаписью(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	// -- КДС 20.07.2015 Контроль проведения
	
КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструПродажиВыручка_SB()
	
	Движения.ПродажиВыручка_SB.Записывать = Истина;
	Движение = Движения.ПродажиВыручка_SB.Добавить();
	
	Движение.Период 		 			= ДатаПроведения;
	
	// измерения
	Движение.НалоговыйПериод			= НалоговыйПериод;
	Движение.ИнвойсинговыйЦентр			= ИнвойсинговыйЦентр;
	Движение.ДоговорКонтрагента 		= ДоговорКонтрагента;
	Движение.ПодразделениеОрганизации 	= ПодразделениеОрганизации;
	Движение.ВалютаДокумента 			= ВалютаДокумента;
	Движение.ДокументРеализации		  	= Ссылка;
	Движение.Тип					 	= "АГЕ";
	Движение.AU				 			= АгентскийAU;
	
	// реквизиты
	Движение.Номенклатура				= НоменклатураАгентская;
	Движение.НоменклатураНаименование	= НоменклатураАгентская;
	
	ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	СтруктураКурсаРуб   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);
	
	ВалютаUSD = Справочники.Валюты.НайтиПоНаименованию("USD");;
	СтруктураКурсаUSD   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаUSD, Дата); 
	
	// ресурсы
	Движение.СуммаБезНДС	= АгентскаяСумма;
	Движение.СуммаНДС	 	= АгентскийНДС;
	
	Движение.СуммаБезНДСRUR = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			Движение.СуммаБезНДС, 
			ВалютаДокумента, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность); 
	Движение.СуммаНДСRUR 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			Движение.СуммаНДС,
			ВалютаДокумента, ВалютаРуб, 
			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
	
	Движение.СуммаБезНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			Движение.СуммаБезНДС,
			ВалютаДокумента, ВалютаUSD, 
			КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность); 
	Движение.СуммаНДСUSD 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
			Движение.СуммаНДС,
			ВалютаДокумента, ВалютаUSD, 
			КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
			КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструНДСНачисленный()
	
	//ВидСчетаФактуры = "СчетФактураВыданный"; 
	//СтруктураОтбора = Новый Структура;
	//СтруктураОтбора.Вставить("ВидСчетаФактуры",	   Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	//НайденнаяСФ 	= УчетНДС.НайтиПодчиненныйСчетФактуру(Ссылка, ВидСчетаФактуры, СтруктураОтбора);
	//Если НайденнаяСФ = Неопределено Тогда         	
	//	Возврат;
	//КонецЕсли;
	               
	Движение = Движения.НДСНачисленный.ДобавитьПриход();
	
	Движение.Период 					= ДатаПроведения;
	Движение.ПодразделениеОрганизации 	= ПодразделениеОрганизации;
	Движение.СчетФактура				= Ссылка;	

	Если АгентскаяСтавкаНДС 		= Перечисления.СтавкиНДС.НДС0 Тогда
		Движение.ВидНачисления 		= Перечисления.НДСВидНачисления.Реализация0;
	ИначеЕсли АгентскаяСтавкаНДС 	= Перечисления.СтавкиНДС.БезНДС Тогда
		Движение.ВидНачисления 		= Перечисления.НДСВидНачисления.РеализацияБезНДС;
	Иначе
		Движение.ВидНачисления		= Перечисления.НДСВидНачисления.РеализацияСНДС;
	КонецЕсли; 

	Движение.ВидЦенности			= Перечисления.ВидыЦенностей.ПосредническиеУслуги;	

	Движение.СтавкаНДС 				= АгентскаяСтавкаНДС;
	Движение.Покупатель				= Контрагент;
	Движение.Валюта					= ВалютаДокумента;   	
	
	Движение.НалоговыйПериод		= НалоговыйПериод;
	
	Движение.СуммаБезНДСВВалюте		= АгентскаяСумма;
	Движение.НДСВВалюте				= АгентскийНДС;
	
	ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ВалютаДокумента = ВалютаРуб Тогда
		Движение.СуммаБезНДС		= АгентскаяСумма;
		Движение.НДС				= АгентскийНДС;
	Иначе
		СтруктураКурсаРуб   	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);
		СтруктураКурсаВал   	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаДокумента, Дата);		
		Движение.СуммаБезНДС 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскаяСумма,ВалютаДокумента,
									ВалютаРуб,СтруктураКурсаВал.Курс,СтруктураКурсаРуб.Курс,СтруктураКурсаВал.Кратность, СтруктураКурсаРуб.Кратность);
		Движение.НДС 		 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(АгентскийНДС,ВалютаДокумента,
									ВалютаРуб,СтруктураКурсаВал.Курс,СтруктураКурсаРуб.Курс,СтруктураКурсаВал.Кратность, СтруктураКурсаРуб.Кратность);
	КонецЕсли;
	
	Движения.НДСНачисленный.Записывать = Истина;
	
КонецПроцедуры