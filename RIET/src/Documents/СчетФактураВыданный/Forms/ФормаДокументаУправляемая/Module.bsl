////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбраннаяФорма = "ФормаДокументаУправляемая";
	//изменила Федотова Л., РГ-Софт, 01.11.12, вопрос №SLI-0002957
	//Документы.СчетФактураВыданный.ОбработкаПолученияФормы(Параметры, ВыбраннаяФорма, СтандартнаяОбработка);
	Документы.СчетФактураВыданный.ОбработкаПолученияФормы("ФормаДокументаУправляемая", Параметры, ВыбраннаяФорма, СтандартнаяОбработка);
	СтандартнаяОбработка = Истина;
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
		
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовОпераций.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ОткрытьДокументВида(СтрокаТаблицы.Значение);
		
	КонецЕсли; 
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
	ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	Основание           = Параметры.Основание;
	
	//Параметры.ЗначениеКопирования	= Неопределено;
	//Параметры.ЗначенияЗаполнения	= Неопределено;
	//Параметры.Основание				= Неопределено;
	
	ФормыСчетовФактур   = Новый ФиксированноеСоответствие(
		Документы.СчетФактураВыданный.ПолучитьСоответствиеВидовСчетаФактурыФормам());
		
	СписокВидовОпераций.ЗагрузитьЗначения(ПолучитьСписокВидовОпераций(Объект.Дата).ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовОпераций(Дата)

	//ИспользуетсяПостановлениеНДС1137 = УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(Дата);
	
	СписокВидовОпераций = Новый СписокЗначений;
	
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
	
	//Если ИспользуетсяПостановлениеНДС1137 Тогда
	//	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
	//КонецЕсли;	
	
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент);
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу);
	//Если Дата >= '20111001' Тогда
		СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
	//КонецЕсли;
	
	//20.05.2013 Пахоменков
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыВыставленного.Перевыставление);
	//<<
	Возврат СписокВидовОпераций;

КонецФункции

&НаКлиенте
Процедура СписокВидовОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовОпераций.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОткрытьДокументВида(СтрокаТаблицы.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументВида(ВыбранныйВидСчетаФактуры)
	
	ЗначенияЗаполнения.Вставить("ВидСчетаФактуры",		ВыбранныйВидСчетаФактуры);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
	СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("Основание",           Основание);
	
	Модифицированность = Ложь;
	Закрыть();
	//ФормаНовая = Документы.СчетФактураВыданный.ПолучитьФорму("Документ.СчетФактураВыданный.Форма." + ФормыСчетовФактур[ВыбранныйВидСчетаФактуры], СтруктураПараметров, ВладелецФормы);
	//ФормаНовая.Открыть();
	
	ОткрытьФорму("Документ.СчетФактураВыданный.Форма." + ФормыСчетовФактур[ВыбранныйВидСчетаФактуры], СтруктураПараметров, ВладелецФормы);
		
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ВыбраннаяФорма) И Не ВыбраннаяФорма = "ФормаДокументаУправляемая" Тогда
		Отказ = Истина;
		НовыеПараметры = Новый Структура;
		Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
			НовыеПараметры.Вставить("Ключ", Параметры.Ключ);
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Или ЗначениеЗаполнено(ЗначенияЗаполнения) Тогда 
			НовыеПараметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ИначеЕсли Параметры.Свойство("ЗначениеКопирования") 
			Или ЗначениеЗаполнено(ЗначениеКопирования) Тогда 
			НовыеПараметры.Вставить("ЗначениеКопирования", ЗначениеКопирования);
		ИначеЕсли Параметры.Свойство("Основание") Или ЗначениеЗаполнено(Основание) Тогда
			НовыеПараметры.Вставить("Основание", Основание);
		КонецЕсли;
		ФормаСФ = ОткрытьФорму("Документ.СчетФактураВыданный.Форма." + ВыбраннаяФорма, НовыеПараметры, ВладелецФормы);
	КонецЕсли;
		
КонецПроцедуры

