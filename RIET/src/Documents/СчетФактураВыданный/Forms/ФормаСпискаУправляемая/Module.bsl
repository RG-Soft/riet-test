////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// ДополнительныеОтчетыИОбработки
	ИмяФормыМассив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭтаФорма.ИмяФормы, ".");
	ПолноеИмяОбъектаМетаданных = ИмяФормыМассив[0] + "." + ИмяФормыМассив[1];
	
	ТипФормы = Неопределено;
	ТипОбъекта = ПолноеИмяОбъектаМетаданных;
	
	//Если Пользователи.РолиДоступны("ИспользованиеДополнительныхОтчетовИОбработок, ДобавлениеИзменениеДополнительныхОтчетовИОбработок") Тогда
		Если ЭтоФормаОбъекта(ПолноеИмяОбъектаМетаданных, ЭтаФорма.ИмяФормы) Тогда
			ТипФормы = "ФормаОбъекта";
		Иначе
			ТипФормы = "ФормаСписка";
		КонецЕсли;
	//КонецЕсли;
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ТипФормыСДополнительнымиОтчетамиИОбработками", ТипФормы));
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ТипОбъектаСДополнительнымиОтчетамиИОбработками", ТипОбъекта));
	// Конец ДополнительныеОтчетыИОбработки
	
	ОтборОрганизация = ОбщегоНазначенияПереопределяемый.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма);
	
	Если Параметры.Отбор.Свойство("ВидСчетаФактуры") Тогда
		ОтборВидСчетаФактуры = Параметры.Отбор.ВидСчетаФактуры;
	КонецЕсли;
	
	// { РГ-Софт Пахоменков А. 19.01.2015 ПроверкаКонтрагентов
	ПроверкаКонтрагентов.ФормаСпискаПриСозданииНаСервере(Список);
	// } РГ-Софт Пахоменков А. 19.01.2015
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"Организация", 
		ОтборОрганизация, 
		ЗначениеЗаполнено(ОтборОрганизация));

КонецПроцедуры

&НаКлиенте
Процедура ОтборВидСчетаФактурыПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"ВидСчетаФактуры", 
		ОтборВидСчетаФактуры, 
		ЗначениеЗаполнено(ОтборВидСчетаФактуры));

КонецПроцедуры

&НаСервере
// Проверяет, является ли переданное имя формы основной формой объекта метаданных,
// полное имя которого передается в параметре ПолноеИмяОбъектаМетаданных
// Параметры
//  ПолноеИмяОбъектаМетаданных - строка - полное имя объекта метаданных
//  ИмяФормы - полное имя формы
// Возвращаемое значение
//  Истина, если форма является основной формой объекта метаданных, иначе Ложь
//
Функция ЭтоФормаОбъекта(ПолноеИмяОбъектаМетаданных, ИмяФормы) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъектаМетаданных);
	
	Если ОбъектМетаданных.ОсновнаяФормаОбъекта = Неопределено Тогда
		Если Метаданные.Константы.Содержит(ОбъектМетаданных)
			ИЛИ Метаданные.Отчеты.Содержит(ОбъектМетаданных)
			ИЛИ Метаданные.Обработки.Содержит(ОбъектМетаданных) Тогда
			Суффикс = ".Форма";
		Иначе
			Суффикс = ".ФормаОбъекта";
		КонецЕсли;
		Если Прав(ИмяФормы, СтрДлина(Суффикс)) = Суффикс Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ОбъектМетаданных.ОсновнаяФормаОбъекта.ПолноеИмя() = ИмяФормы Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"Контрагент", 
		ОтборКонтрагент, 
		ЗначениеЗаполнено(ОтборКонтрагент));
		
КонецПроцедуры
