
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ
////////////////////////////////////////////////////////////////////////////////

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "PA" Тогда
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОригиналСчета") тогда     			
			ТабДокумент = ПечатьОригиналСчета(МассивОбъектов);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОригиналСчета",
			"Оригинал Счета", ТабДокумент);
		КонецЕсли;   		
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказ") тогда
			
			ТабДокумент = ПечатьСчетаЗаказа(МассивОбъектов);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетЗаказ",
			"Счет на оплату", ТабДокумент);    			
		КонецЕсли;
		
	Иначе
		
		// Устанавливаем признак доступности печати покомплектно.
		//ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказ") тогда
			
			ТабДокумент = ПечатьСчетаЗаказа(МассивОбъектов);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетЗаказ",
					"Счет на оплату", ТабДокумент);
					
		ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Инвойс") тогда
			
			ТабДокумент = ПечатьИнвойса(МассивОбъектов);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Инвойс",
					"Инвойс", ТабДокумент);
					
		ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвойсСНастройкой") тогда
			
			ТабДокумент = ПечатьИнвойса(МассивОбъектов, Истина, ПараметрыПечати);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИнвойсСНастройкой",
					"Инвойс с настройкой", ТабДокумент);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ПечатьСчетаЗаказа(Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДоговорКонтрагента,
	|	Организация,
	|	Контрагент КАК Получатель,
	|	Организация КАК Руководители,
	//изменила Федотова Людмила, РГ-Софт, 01.10.12, вопрос №SLI-0002853
	//|	Организация КАК Поставщик,
	|	ПодразделениеОрганизации КАК Поставщик,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	СтруктурнаяЕдиница,
	|	СтруктурнаяЕдиница.ТекстКорреспондента как ТекстКорреспондента,
	|	СтруктурнаяЕдиница.Банк как Банк,
	|	СтруктурнаяЕдиница.БанкДляРасчетов как БанкДляРасчетов
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю КАК ЗаказПокупателя
	|
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Товар,
	               |	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	               |	ВложенныйЗапрос.Количество,
	               |	ВложенныйЗапрос.ЕдиницаИзмерения,
	               |	ВложенныйЗапрос.Цена,
	               |	ВложенныйЗапрос.Сумма,
	               |	ВложенныйЗапрос.СуммаНДС,
	               |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
				   |    1 КАК ID
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказПокупателя.Номенклатура КАК Номенклатура,
	               |		ЗаказПокупателя.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	               |		ЗаказПокупателя.Цена КАК Цена,
	               |		СУММА(ЗаказПокупателя.Количество) КАК Количество,
	               |		СУММА(ЗаказПокупателя.Сумма) КАК Сумма,
	               |		СУММА(ЗаказПокупателя.СуммаНДС) КАК СуммаНДС,
	               |		МИНИМУМ(ЗаказПокупателя.НомерСтроки) КАК НомерСтроки
	               |	ИЗ
	               |		Документ.СчетНаОплатуПокупателю.Товары КАК ЗаказПокупателя
	               |	
	               |	ГДЕ
	               |		ЗаказПокупателя.Ссылка = &ТекущийДокумент
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаказПокупателя.Номенклатура,
	               |		ЗаказПокупателя.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	               |		ЗаказПокупателя.Цена) КАК ВложенныйЗапрос
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаказПокупателя.Содержание,
	               |	ЗаказПокупателя.Содержание,
	               |	NULL,
	               |	ЗаказПокупателя.Количество,
	               |	ЗаказПокупателя.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	               |	ЗаказПокупателя.Цена,
	               |	ЗаказПокупателя.Сумма,
	               |	ЗаказПокупателя.СуммаНДС,
	               |	ЗаказПокупателя.НомерСтроки,
				   |    2
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю.Услуги КАК ЗаказПокупателя
	               |
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &ТекущийДокумент
	               |
	               |УПОРЯДОЧИТЬ ПО
				   |    ID";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	Макет = ПолучитьМакет("СчетЗаказ");

	// Выводим шапку накладной

	СведенияОПоставщике = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ИНН = СведенияОПоставщике.ИНН;
	ОбластьМакета.Параметры.КПП = СведенияОПоставщике.КПП;
	Если ТипЗнч(Шапка.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Банк = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.БанкДляРасчетов), Шапка.Банк, Шапка.БанкДляРасчетов);
		Если НЕ Банк = NULL Тогда //добавила условие Федотова Л., РГ-Софт, 28.01.13, вопрос SLI-0003247
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ВернутьРасчетныйСчет(Шапка.СтруктурнаяЕдиница);
			
			ОбластьМакета.Параметры.БИКБанкаПолучателя               = БИК;
			ОбластьМакета.Параметры.БанкПолучателя                   = Банк;
			ОбластьМакета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) + " " + ГородБанка;
			ОбластьМакета.Параметры.СчетБанкаПолучателя              = КоррСчет;
			ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = КоррСчет;
			ОбластьМакета.Параметры.СчетПолучателяПредставление      = НомерСчета;
			ОбластьМакета.Параметры.СчетПолучателя                   = НомерСчета;
		КонецЕсли; 
	КонецЕсли;
	//ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = Шапка.ТекстКорреспондента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = "Счет на оплату № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка)
	                         					 + " от " + Формат(Шапка.Дата, "ДФ='дд ММММ гггг'");
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	//изменила Федотова Людмила, РГ-Софт, 01.10.12, вопрос №SLI-0002853
	//ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ФактическийАдрес,Телефоны,");
	ТабДокумент.Вывести(ОбластьМакета);

	СведенияОПолучателе = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ИНН,КПП,ПолноеНаименование,ЮридическийАдрес,Телефоны,");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	ТабДокумент.Присоединить(ОбластьДанных);
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьКолонкаТовар = Макет.Область("Товар");

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	Сумма    = 0;
	СуммаНДС = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;
	
	Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 

		Если ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		ТабДокумент.Вывести(ОбластьНомера);

		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар       = СокрЛП(ВыборкаСтрокТовары.Товар);
		ТабДокумент.Присоединить(ОбластьДанных);

		ОбластьСуммы.Параметры.Заполнить(ВыборкаСтрокТовары);
		ТабДокумент.Присоединить(ОбластьСуммы);
		Сумма          = Сумма       + ВыборкаСтрокТовары.Сумма;
		СуммаНДС       = СуммаНДС    + ВыборкаСтрокТовары.СуммаНДС;

	КонецЦикла;

	// Вывести Итого
	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");

	ТабДокумент.Вывести(ОбластьНомера);
	ТабДокумент.Присоединить(ОбластьДанных);
	ОбластьСуммы.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
	ТабДокумент.Присоединить(ОбластьСуммы);

	// Вывести ИтогоНДС
	ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если СуммаНДС <> 0 Тогда
		ОбластьДанных.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		ОбластьСуммы.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
	Иначе
		ОбластьДанных.Параметры.НДС = "Без налога (НДС)";
		ОбластьСуммы.Параметры.ВсегоНДС = "-";
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);
	
	ТабДокумент.Присоединить(ОбластьСуммы);
	
	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
	ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + ЗапросТовары.Количество()
	+ ", на сумму " + ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
	ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
	ТабДокумент.Вывести(ОбластьМакета);

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");

	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Руководители, Шапка.Дата,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ОбластьМакета.Параметры.ФИОРуководителя = Руководитель;
	ОбластьМакета.Параметры.ФИОБухгалтера   = Бухгалтер;

	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьСчетаЗаказа()

Функция ВернутьРасчетныйСчет(СчетКонтрагента)

	БанкДляРасчетов = СчетКонтрагента.БанкДляРасчетов;
	Результат       = ?(БанкДляРасчетов.Пустая(), СчетКонтрагента.НомерСчета, СчетКонтрагента.Банк.КоррСчет);

	Возврат Результат;

КонецФункции // ВернутьРасчетныйСчет()

Функция ПечатьИнвойса(Ссылка, Рус = Ложь, ПараметрыПечати = Неопределено)

	//[РКХ->] Функция заккоментирована в кипре целиком
	Если ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "PA" Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	//[<-РКХ]
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
	ЗапросШапка.Текст =
	"ВЫБРАТЬ
	|	СчетНаОплатуПокупателю.Номер КАК НомерСчетаНаОплату,
	|	СчетНаОплатуПокупателю.Дата,
	|	СчетНаОплатуПокупателю.ДоговорКонтрагента,
	|	СчетНаОплатуПокупателю.Контрагент КАК Получатель,
	|	СчетНаОплатуПокупателю.Организация КАК Поставщик,
	|	СчетНаОплатуПокупателю.Организация,
	|	СчетНаОплатуПокупателю.СуммаДокумента,
	|	СчетНаОплатуПокупателю.ВалютаДокумента,
	|	СчетНаОплатуПокупателю.УчитыватьНДС,
	|	СчетНаОплатуПокупателю.СуммаВключаетНДС,
	|	СчетНаОплатуПокупателю.ПодразделениеОрганизации,
	|	СчетНаОплатуПокупателю.СтруктурнаяЕдиница КАК БанковскийСчетОрганизации,
	|	СчетНаОплатуПокупателю.Примечание,
	|	СчетНаОплатуПокупателю.ДнейНаОплату,
	|	СчетНаОплатуПокупателю.СчетКонтрагента,
	|	СчетНаОплатуПокупателю.ВидОперации,
	|	СчетНаОплатуПокупателю.Утвердил.Наименование КАК УтвердилНаименование,
	|	СчетНаОплатуПокупателю.Утвердил.НаименованиеEng КАК УтвердилНаименованиеEng
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	|ГДЕ
	|	СчетНаОплатуПокупателю.Ссылка = &ТекущийДокумент";
	Шапка = ЗапросШапка.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетНаОплатуПокупателюТовары.Номенклатура КАК Товар,
	               |	СчетНаОплатуПокупателюТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	               |	СчетНаОплатуПокупателюТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	СчетНаОплатуПокупателюТовары.Количество КАК Количество,
	               |	СчетНаОплатуПокупателюТовары.Цена КАК Цена,
	               |	СчетНаОплатуПокупателюТовары.СтавкаНДС КАК СтавкаНДС,
	               |	СчетНаОплатуПокупателюТовары.СуммаНДС КАК СуммаНДС,
	               |	СчетНаОплатуПокупателюТовары.Сумма КАК Сумма,
	               |	СчетНаОплатуПокупателюТовары.НомерСтроки КАК НомерСтроки,
	               |	1 КАК ID,
	               |	СчетНаОплатуПокупателюТовары.Well КАК Скважина,
	               |	СчетНаОплатуПокупателюТовары.Oilfield КАК Месторождение,
	               |	СчетНаОплатуПокупателюТовары.WO КАК Отчет,
	               |	СчетНаОплатуПокупателюТовары.Номенклатура.НаименованиеENG КАК НаименованиеENG,
	               |	СчетНаОплатуПокупателюТовары.SIR
	               |ПОМЕСТИТЬ ТЧ
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
	               |ГДЕ
	               |	СчетНаОплатуПокупателюТовары.Ссылка = &ТекущийДокумент
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СчетНаОплатуПокупателюУслуги.Номенклатура,
	               |	СчетНаОплатуПокупателюУслуги.Содержание,
	               |	СчетНаОплатуПокупателюУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
	               |	СчетНаОплатуПокупателюУслуги.Количество,
	               |	СчетНаОплатуПокупателюУслуги.Цена,
	               |	СчетНаОплатуПокупателюУслуги.СтавкаНДС,
	               |	СчетНаОплатуПокупателюУслуги.СуммаНДС,
	               |	СчетНаОплатуПокупателюУслуги.Сумма,
	               |	СчетНаОплатуПокупателюУслуги.НомерСтроки,
	               |	2,
	               |	СчетНаОплатуПокупателюУслуги.Well,
	               |	СчетНаОплатуПокупателюУслуги.Oilfield,
	               |	СчетНаОплатуПокупателюУслуги.WO,
	               |	СчетНаОплатуПокупателюУслуги.СодержаниеEng,
	               |	СчетНаОплатуПокупателюУслуги.SIR
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю.Услуги КАК СчетНаОплатуПокупателюУслуги
	               |ГДЕ
	               |	СчетНаОплатуПокупателюУслуги.Ссылка = &ТекущийДокумент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЧ.Товар,
	               |	ТЧ.ТоварНаименование,
	               |	ТЧ.ЕдиницаИзмерения,
	               |	ТЧ.Количество,
	               |	ТЧ.Цена,
	               |	ТЧ.СтавкаНДС,
	               |	ТЧ.СуммаНДС,
	               |	ТЧ.Сумма,
	               |	ТЧ.НомерСтроки КАК НомерСтроки,
	               |	ТЧ.ID КАК ID,
	               |	ТЧ.Скважина,
	               |	ТЧ.Месторождение,
	               |	ТЧ.Отчет,
	               |	ТЧ.НаименованиеENG,
	               |	ТЧ.SIR
	               |ИЗ
	               |	ТЧ КАК ТЧ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ID,
	               |	НомерСтроки";
	
	
	ТЧТоварыУслуги = Запрос.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Инвойс";
	Макет = ПолучитьМакет("Инвойс");
	
	Если Шапка.ВидОперации = Перечисления.ВидыОперацийСчетНаОплатуПокупателю.ПредоплатаПоДоговору Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПредоплата");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;

 	ОбластьМакета.Параметры.Номер = СокрЛП(?(Шапка.НомерСчетаНаОплату = "",Шапка.Номер,Шапка.НомерСчетаНаОплату));
  	ОбластьМакета.Параметры.Дата = Формат(Шапка.Дата,"ДФ=dd.MM.yyyy");
	Если Не Шапка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах И Шапка.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код <> "643" Тогда
  		ОбластьМакета.Параметры.Организация = "Schlumberger Logelco Inc.";
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.ПодразделениеОрганизации) Тогда
 			ОбластьМакета.Параметры.Адрес = "No 8 Aquilino de la Guardia Panama 1 Republic of Panama";
		Иначе
			ОбластьМакета.Параметры.Адрес = "Representative office address: "+ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ПодразделениеОрганизации, Шапка.Дата), "АнглийскийАдрес,");
		КонецЕсли;
	Иначе
		//Добавила Федотова Л., РГ-Софт, 31.08.13, вопрос SLI-0003817
		АдресДляИнвойса = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ПодразделениеОрганизации, Шапка.Дата), "ДляИнвойсаАдрес,");
		Если ЗначениеЗаполнено(АдресДляИнвойса) Тогда
	 		ОбластьМакета.Параметры.Адрес = АдресДляИнвойса;
		Иначе
	  		ОбластьМакета.Параметры.Организация = "Шлюмберже Лоджелко Инк.";
	 		ОбластьМакета.Параметры.Адрес = "Адрес представительства: " + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ПодразделениеОрганизации, Шапка.Дата), "ЮридическийАдрес,");
		КонецЕсли; 
	КонецЕсли;
	
	Если Не Рус Тогда
		Если Не ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.СчетКонтрагента) Тогда
			ОбластьМакета.Параметры.Клиент = Шапка.Получатель.DescriptionFull + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "АнглийскийАдрес,НомерСчета,Банк,БИК,КоррСчет,");
		Иначе
			ОбластьМакета.Параметры.Клиент = Шапка.Получатель.DescriptionFull + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "АнглийскийАдрес,");
		КонецЕсли;
		ОбластьМакета.Параметры.Контракт = Шапка.ДоговорКонтрагента.НаименованиеEng;
  	 	ОбластьМакета.Параметры.Валюта = ?(Шапка.ВалютаДокумента.наименованиеeng="", Шапка.ВалютаДокумента, Шапка.ВалютаДокумента.наименованиеeng);
	Иначе
		Если Не ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.СчетКонтрагента) Тогда
			ОбластьМакета.Параметры.Клиент = Шапка.Получатель.НаименованиеПолное + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ЮридическийАдрес,НомерСчета,Банк,БИК,КоррСчет,");
		Иначе
			ОбластьМакета.Параметры.Клиент = Шапка.Получатель.НаименованиеПолное + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ЮридическийАдрес,");
		КонецЕсли;
 		ОбластьМакета.Параметры.Контракт = Шапка.ДоговорКонтрагента;
	 	ОбластьМакета.Параметры.Валюта = Шапка.ВалютаДокумента;
	КонецЕсли;
	
	ОбластьМакета.Параметры.Well = "";
	Выгрузка = ТЧТоварыУслуги.Скопировать();
	Выгрузка.Свернуть("Месторождение, Скважина");
	ПустыеСтроки = Выгрузка.НайтиСтроки(Новый Структура("Месторождение, Скважина", Справочники.Oilfields.ПустаяСсылка(), Справочники.Wells.ПустаяСсылка()));
	Для Каждого ПустаяСтрока Из ПустыеСтроки Цикл
		Выгрузка.Удалить(ПустаяСтрока);
	КонецЦикла;
	Выгрузка.Сортировать("Месторождение Возр");
	Месторождение = Неопределено;
	Для Каждого СтрокаТЧ Из Выгрузка Цикл
		Если Не Рус Тогда
			Если Месторождение = СтрокаТЧ.Месторождение Тогда
				ОбластьМакета.Параметры.Well = ОбластьМакета.Параметры.Well + ", " + СтрокаТЧ.Скважина.НаименованиеENG;
			Иначе
				ОбластьМакета.Параметры.Well = ОбластьМакета.Параметры.Well + ?(Выгрузка.Индекс(СтрокаТЧ) =0, "" + СтрокаТЧ.Месторождение.НаименованиеENG + " " + СтрокаТЧ.Скважина.НаименованиеENG, ", " + СтрокаТЧ.Месторождение.НаименованиеENG + " " + СтрокаТЧ.Скважина.НаименованиеENG);
			КонецЕсли;
		Иначе
			Если Месторождение = СтрокаТЧ.Месторождение Тогда
				ОбластьМакета.Параметры.Well = ОбластьМакета.Параметры.Well + ", " + СтрокаТЧ.Скважина.Наименование;
			Иначе
				ОбластьМакета.Параметры.Well = ОбластьМакета.Параметры.Well + ?(Выгрузка.Индекс(СтрокаТЧ) =0, "" + СтрокаТЧ.Месторождение.Наименование + " " + СтрокаТЧ.Скважина.Наименование, ", " + СтрокаТЧ.Месторождение.Наименование + " " + СтрокаТЧ.Скважина.Наименование);
			КонецЕсли;
		КонецЕсли;
		Месторождение = СтрокаТЧ.Месторождение;
	КонецЦикла;
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Выгрузка = ТЧТоварыУслуги.Скопировать();
	//Выгрузка.Свернуть("SIR, Отчет, ТоварНаименование, ЕдиницаИзмерения, Цена, НаименованиеENG", "Сумма, Количество");
	Выгрузка.Свернуть("SIR, Отчет, ТоварНаименование, ЕдиницаИзмерения, Цена, НаименованиеENG", "Сумма, СуммаНДС, Количество");
	
	//добавила Федотова Л., РГ-Софт, 10.08.10 ->
	Если НЕ ПараметрыПечати = Неопределено Тогда
		Если ПараметрыПечати.ВыводитьСкидку Тогда
			ПроцентСкидки = ПараметрыПечати.ПроцентСкидки;
			ВыгрузкаБезСкидки = Выгрузка.Скопировать();
			Для Каждого Строка Из Выгрузка Цикл
				Строка.Цена = Строка.Цена * 1/(1 - ПроцентСкидки/100);	
				Строка.Сумма = Строка.Сумма * 1/(1 - ПроцентСкидки/100);	
				Строка.СуммаНДС = Строка.СуммаНДС * 1/(1 - ПроцентСкидки/100);	
			КонецЦикла;
			НоваяСтрока = Выгрузка.Добавить();
			НоваяСтрока.SIR = "Скидка";
			НоваяСтрока.Сумма = ВыгрузкаБезСкидки.Итог("Сумма") - Выгрузка.Итог("Сумма");
			НоваяСтрока.СуммаНДС = ВыгрузкаБезСкидки.Итог("СуммаНДС") - Выгрузка.Итог("СуммаНДС");
		КонецЕсли;
	КонецЕсли;
	//<-
	
	Для Каждого СтрокаТЧ Из Выгрузка Цикл
	    ОбластьМакета.Параметры.Заполнить(СтрокаТЧ);
		ОбластьМакета.Параметры.Заказ = СтрокаТЧ.Отчет;
		Если Не ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаТЧ.ЕдиницаИзмерения) Тогда
			ОбластьМакета.Параметры.ЕдИзм = "" + СтрокаТЧ.ЕдиницаИзмерения + ?(СтрокаТЧ.ЕдиницаИзмерения.НаименованиеENG = "", "", " / " + СтрокаТЧ.ЕдиницаИзмерения.НаименованиеENG);
		Иначе
			ОбластьМакета.Параметры.ЕдИзм = " ";
		КонецЕсли;
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаТЧ.ТоварНаименование) Тогда
			ОбластьМакета.Параметры.Описание = СтрокаТЧ.НаименованиеENG;
		ИначеЕсли ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаТЧ.НаименованиеENG) Тогда
			ОбластьМакета.Параметры.Описание = СтрокаТЧ.ТоварНаименование;
		Иначе
			ОбластьМакета.Параметры.Описание = "" + СтрокаТЧ.ТоварНаименование + " / " + СтрокаТЧ.НаименованиеENG;
		КонецЕсли;
			
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	Если Шапка.СуммаВключаетНДС Тогда
		//СуммаНДС = Товары.Итог("СуммаНДС")+  Услуги.Итог("СуммаНДС");
		СуммаНДС = Выгрузка.Итог("СуммаНДС");
		//СуммаПоДокументу = Товары.Итог("Сумма")+  Услуги.Итог("Сумма");
		СуммаПоДокументу = Выгрузка.Итог("Сумма");
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоВТЧ");
			ОбластьМакета.Параметры.СтавкаНДС = ТЧТоварыУслуги[0].СтавкаНДС;  
			ОбластьМакета.Параметры.СуммаБезНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаПоДокументу);  
			ОбластьМакета.Параметры.СуммаНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);  
			ОбластьМакета.Параметры.Сумма      = СуммаПоДокументу;
		ТабДокумент.Вывести(ОбластьМакета);
	Иначе
		//СуммаНДС = Товары.Итог("СуммаНДС")+  Услуги.Итог("СуммаНДС");
		СуммаНДС = Выгрузка.Итог("СуммаНДС");
		//СуммаПоДокументу = Товары.Итог("Сумма")+  Услуги.Итог("Сумма");
		СуммаПоДокументу = Выгрузка.Итог("Сумма");
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		//Добавила условие Федотова Л., РГ-Софт, 26.06.13, вопрос SLI-0003665
		Если ТЧТоварыУслуги.Количество() > 0 Тогда
			ОбластьМакета.Параметры.СтавкаНДС = ТЧТоварыУслуги[0].СтавкаНДС;  
			ОбластьМакета.Параметры.СуммаБезНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаПоДокументу);  
			ОбластьМакета.Параметры.СуммаНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);  
			ОбластьМакета.Параметры.Сумма      = СуммаПоДокументу+СуммаНДС;
		КонецЕсли; 
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	ОбластьМакета = Макет.ПолучитьОбласть("Дополнительно");
	ОбластьМакета.Параметры.Примечание = Шапка.Примечание;  
	ОбластьМакета.Параметры.Дни = Шапка.ДнейНаОплату;  
	Если Не Рус Тогда
		ОбластьМакета.Параметры.Кому = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.БанковскийСчетОрганизации),"", Шапка.БанковскийСчетОрганизации.РеквизитыПлатежаENG);  
		Если Шапка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах ИЛИ Шапка.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код = "643" Тогда
	 		ОбластьМакета.Параметры.Кому = ОбластьМакета.Параметры.Кому + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ПодразделениеОрганизации, Шапка.Дата), "ИНН,КПП,");
			ОбластьМакета.Параметры.Кому = СтрЗаменить(ОбластьМакета.Параметры.Кому,"ИНН","INN/ИНН");
			ОбластьМакета.Параметры.Кому = СтрЗаменить(ОбластьМакета.Параметры.Кому,"КПП","KPP/КПП");
		КонецЕсли;
	Иначе
		ОбластьМакета.Параметры.Кому = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.БанковскийСчетОрганизации),"", Шапка.БанковскийСчетОрганизации.РеквизитыПлатежа);  
		Если Шапка.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах ИЛИ Шапка.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код = "643" Тогда
	 		ОбластьМакета.Параметры.Кому = ОбластьМакета.Параметры.Кому + Символы.ПС + ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ПодразделениеОрганизации, Шапка.Дата), "ИНН,КПП,");
		
		КонецЕсли;
	КонецЕсли;
		ОбластьМакета.Параметры.Номер = ?(Шапка.НомерСчетаНаОплату = "",Шапка.Номер,Шапка.НомерСчетаНаОплату);  
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	Если Не Рус Тогда
		ОбластьМакета.Параметры.Руководитель = Шапка.УтвердилНаименованиеEng;
	Иначе
		ОбластьМакета.Параметры.Руководитель = Шапка.УтвердилНаименование;
	КонецЕсли;  
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьАктаОбОказанииУслуг()

//[РКХ->]
// Функция Печати СчетПоУслугам
Функция ПечатьОригиналСчета(Ссылка)
	//Получаем шапку
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст ="ВЫБРАТЬ
	              |	ЗаказПокупателя.Номер,
	              |	ЗаказПокупателя.Дата,
	              |	ЗаказПокупателя.ДоговорКонтрагента,
	              |	ЗаказПокупателя.Организация,
	              |	ЗаказПокупателя.Контрагент КАК Контрагент,
	              |	ЗаказПокупателя.Организация КАК Получатель,
	              |	ЗаказПокупателя.ПодразделениеОрганизации КАК Поставщик,
	              |	ЗаказПокупателя.СуммаДокумента,
	              |	ЗаказПокупателя.ВалютаДокумента,
	              |	ЗаказПокупателя.УчитыватьНДС,
	              |	ЗаказПокупателя.СуммаВключаетНДС,
	              |	ЗаказПокупателя.СтруктурнаяЕдиница,
	              |	ЗаказПокупателя.СтруктурнаяЕдиница.ТекстКорреспондента КАК ТекстКорреспондента,
	              |	ЗаказПокупателя.СтруктурнаяЕдиница.Банк КАК Банк,
	              |	ЗаказПокупателя.СтруктурнаяЕдиница.БанкДляРасчетов КАК БанкДляРасчетов,
	              |	ЗаказПокупателя.ДоговорКонтрагента.ДатаНачала КАК КонтрагентаДатаНачала,
	              |	ЗаказПокупателя.ДоговорКонтрагента.SiebelID КАК SiebelID,
	              |	ЗаказПокупателя.КостЦентр,
	              |	ЗаказПокупателя.Утвердил,
	              |	ЗаказПокупателя.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименованиеПолное
	              |ИЗ
	              |	Документ.СчетНаОплатуПокупателю КАК ЗаказПокупателя
	              |ГДЕ
	              |	ЗаказПокупателя.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	//Получаем табличную часть
	ТабДокумент = Новый ТабличныйДокумент;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Oilfield КАК Месторождение,
	               |	ЗаказПокупателя.СтавкаНДС КАК СтавкаНДС,
	               |	ЗаказПокупателя.Сумма КАК Сумма,
	               |	ЗаказПокупателя.СуммаНДС КАК СуммаНДС,
	               |	ЗаказПокупателя.Номенклатура,
	               |	ЗаказПокупателя.Well КАК СквНомер,
	               |	ЗаказПокупателя.Содержание
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю.Услуги КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &ТекущийДокумент";
	
	ЗапросУслуги = Запрос.Выполнить().Выбрать();
	//Получаем содержание услуги
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказПокупателя.Содержание
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Услуги КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателя.Содержание";
	
	ЗапросСодерж = Запрос.Выполнить().Выбрать();
	//Получаем доп.соглашения
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказПокупателя.Ticket.Agreement.ДатаНачала КАК Дата,
	|	ЗаказПокупателя.Ticket.Agreement.ClientContractNumber КАК Номер
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Услуги КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателя.Ticket.Agreement.ClientContractNumber,
	|	ЗаказПокупателя.Ticket.Agreement.ДатаНачала";
	
	ЗапросДопСогл = Запрос.Выполнить().Выбрать();
	
	Макет = ПолучитьМакет("ОригиналСчета");
	
	// Выводим Данные получателя
	СведенияОПолучателе = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("ДанныеПолучателя");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ИНН = СведенияОПолучателе.ИНН;
	ОбластьМакета.Параметры.КПП = СведенияОПолучателе.КПП;
	Если ТипЗнч(Шапка.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
		Банк = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(Шапка.БанкДляРасчетов), Шапка.Банк, Шапка.БанкДляРасчетов);
		Если НЕ Банк = NULL Тогда 
			БИК        = Банк.Код;
			КоррСчет   = Банк.КоррСчет;
			ГородБанка = Банк.Город;
			НомерСчета = ВернутьРасчетныйСчет(Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.БИКБанкаПолучателя               = БИК;
			ОбластьМакета.Параметры.БанкПолучателяПредставление      = СокрЛП(Банк) + " " + ГородБанка;
			ОбластьМакета.Параметры.СчетПолучателя                   = КоррСчет;
			ОбластьМакета.Параметры.РасчСчетПолучателя               = НомерСчета;
		КонецЕсли; 
	КонецЕсли;
	
	ОбластьМакета.Параметры.Валюта=Шапка.ВалютаНаименованиеПолное;	
    
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Выводим данные контрагента
	
	СведенияОКонтрагенте = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
	ОбластьМакета = Макет.ПолучитьОбласть("ДанныеКонтрагента");
	ОбластьДопСогл = Макет.ПолучитьОбласть("ДопСогл");
	ОбластьAU = Макет.ПолучитьОбласть("AU");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПолноеНаимКонтр = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата), "ПолноеНаименование,");
	ОбластьМакета.Параметры.Город = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата), "ЮридическийАдрес,");
	ОбластьМакета.Параметры.Дата=Формат(Шапка.Дата,"ДЛФ=DD");
	
		
	//Убираем нули в номере счета
	НомерПР=Шапка.Номер;
	НомерПР=Сред(НомерПР,1,3);
	Номер=Шапка.Номер;
	Номер = Строка(Число(Прав(Номер,СтрДлина(Номер)-Найти(Номер,"0"))));
	ОбластьМакета.Параметры.СчетНомер =НомерПР+Номер;
	ОбластьМакета.Параметры.КонтрактНомер=Шапка.SiebelID;
	ОбластьМакета.Параметры.ДатаКонтракта=Формат(Шапка.КонтрагентаДатаНачала,"ДЛФ=D");
	ТабДокумент.Вывести(ОбластьМакета);
	Пока ЗапросДопСогл.Следующий() Цикл
		ОбластьДопСогл.Параметры.ДопСоглНомер = ЗапросДопСогл.Номер;
		ОбластьДопСогл.Параметры.ДатаДопСогл = Формат(ЗапросДопСогл.Дата,"ДЛФ=D");
		ТабДокумент.Вывести(ОбластьДопСогл);
	КонецЦикла;
	ОбластьAU.Параметры.CREW = Шапка.КостЦентр;
	ОбластьAU.Параметры.Валюта=Шапка.ВалютаДокумента;
	ТабДокумент.Вывести(ОбластьAU);
	//Выводим содержание услуги	
	ОбластьУслуга = Макет.ПолучитьОбласть("Услуга");
	Пока ЗапросСодерж.Следующий() Цикл
		ОбластьУслуга.Параметры.Услуга = ЗапросСодерж.Содержание;
		ТабДокумент.Вывести(ОбластьУслуга);
	КонецЦикла;
	ОбластьШапкаТаб = Макет.ПолучитьОбласть("ШапкаТаб");
	ТабДокумент.Вывести(ОбластьШапкаТаб);
	//Выводим месторождение	
	СуммаИтогУслуги=0;
	Пока ЗапросУслуги.Следующий() Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрока.Параметры.Заполнить(ЗапросУслуги);
		ОбластьСтрока.Параметры.Сумма = Формат(ЗапросУслуги.Сумма,"ЧДЦ=2");
		СуммаИтогУслуги = СуммаИтогУслуги + ЗапросУслуги.Сумма;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла; 
	//Выводим суммовые итоги
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.ИтогБезНДС=Формат(СуммаИтогУслуги,"ЧДЦ=2");
	ОбластьИтог.Параметры.ИтогНДС=Формат(0.18*СуммаИтогУслуги,"ЧДЦ=2");
	ОбластьИтог.Параметры.ИтогОбщий=Формат(СуммаИтогУслуги + (0.18*СуммаИтогУслуги),"ЧДЦ=2");
	ОбластьИтог.Параметры.Валюта=Шапка.ВалютаДокумента;
	ТабДокумент.Вывести(ОбластьИтог);
	
	// Вывести подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Утвердил = Шапка.Утвердил;
	//Исправила Федотова Л., РГ-Софт, 19.09.13
	//ОбластьПодвал.Параметры.Адрес =ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Получатель, Шапка.Дата), "ЮридическийАдрес,Телефоны,"); 
	ОбластьПодвал.Параметры.Адрес =ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата), "ЮридическийАдрес,Телефоны,"); 
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции //
//[<-РКХ]