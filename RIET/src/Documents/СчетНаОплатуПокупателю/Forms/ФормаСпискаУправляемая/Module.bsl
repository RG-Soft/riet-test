
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьЭлементыОтбора();

КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыОтбора()
	
	//настроим отбор
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Если Не РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "УчетПоВсемОрганизациям") Тогда
		
		ОсновнаяОрганизация = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнаяОрганизация");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
													"Организация",
													ОсновнаяОрганизация,
													ВидСравненияКомпоновкиДанных.Равно,
													,Истина,
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	КонецЕсли;
												
	Если Не РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "УчетПоВсемОтветственным") Тогда
		
		ОсновнойОтветственный = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнойОтветственный");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
													"Ответственный",
													ОсновнойОтветственный,
													ВидСравненияКомпоновкиДанных.Равно,
													,Истина,
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	КонецЕсли;
	
	Если Не РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "УчетПоВсемИнвойсинговымЦентрам") Тогда
		
		ОсновнойИнвойсинговыйЦентр = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнойИнвойсинговыйЦентр");
		СписокИнвойсинговыхЦентров = Новый СписокЗначений;
		СписокИнвойсинговыхЦентров.Добавить(ОсновнойИнвойсинговыйЦентр);
		СписокИнвойсинговыхЦентров.Добавить(Справочники.ИнвойсинговыеЦентры.ПустаяСсылка());
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
													"ИнвойсинговыйЦентр",
													СписокИнвойсинговыхЦентров,
													ВидСравненияКомпоновкиДанных.ВСписке,
													,Истина,
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	КонецЕсли;

	Если Параметры.Свойство("Организация") Тогда 
		 ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
													"Организация",
													Параметры.Организация,
													ВидСравненияКомпоновкиДанных.Равно,
													,Истина,
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	КонецЕсли;

КонецПроцедуры


///////////////////////////////////////////////////////////////////////////
// КОНТРАГЕНТ

&НаКлиенте
Процедура КонтрагентОтборНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	СписокКонтрагентов = ПолучитьСписокКонтрагентов(); 	
	ЭлементСписка = ВыбратьИзСписка(СписокКонтрагентов, Элементы.КонтрагентОтбор);
	
	Если ЭлементСписка <> Неопределено Тогда 
		Контрагент = ЭлементСписка.Значение;
		УстановитьОтборПоКонтрагенту();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокКонтрагентов()
	
	СписокКонтрагентов = Новый СписокЗначений;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Контрагенты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Контрагенты КАК Контрагенты
	                      |ГДЕ
	                      |	Контрагенты.ЭтоГруппа = ЛОЖЬ
	                      |	И Контрагенты.ПометкаУдаления = ЛОЖЬ
	                      |	И Контрагенты.Наименование <> """"
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Контрагенты.Наименование");
						  
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокКонтрагентов.Добавить(Выборка.Ссылка);
	КонецЦикла;					  
	
	Возврат СписокКонтрагентов;
	
КонецФункции

&НаКлиенте
Процедура КонтрагентОтборПриИзменении(Элемент)
	
	УстановитьОтборПоКонтрагенту();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоКонтрагенту()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек,
													"Контрагент",
													Контрагент,
													ВидСравненияКомпоновкиДанных.Равно,
													, ?(ЗначениеЗаполнено(Контрагент),Истина,Ложь),
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////
// СЕГМЕНТ  

&НаКлиенте
Процедура СегментПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек,
													"КостЦентр",
													ПолучитьСписокAU(Сегмент),
													ВидСравненияКомпоновкиДанных.ВСписке,
													, ?(ЗначениеЗаполнено(Сегмент),Истина,Ложь),
													РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокAU(Сегмент)
													
	СписокAU = Новый СписокЗначений;
	запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КостЦентры.Ссылка
	|ИЗ
	|	Справочник.КостЦентры КАК КостЦентры
	|ГДЕ
	|	КостЦентры.Сегмент В ИЕРАРХИИ(&Сегмент)");
	Запрос.УстановитьПараметр("Сегмент", Сегмент);
	МассивAU = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	СписокAU.ЗагрузитьЗначения(МассивAU);
	
	Возврат СписокAU;
	
КонецФункции
