
//////////////////////////////////////////////////////////////////////////////////////////
// ФОРМА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ТочноеВремяНачала = ОценкаПроизводительностиРГСофт.ТочноеВремя();
	
	ImportExportСервер.НастроитьВидимостьUnpostИSave(Элементы.Найти("ФормаОтменаПроведения"), Элементы.Найти("ФормаЗаписать"), Объект.Проведен);
	
	ServicesGrandTotal = ПолучитьServicesGrandTotal(РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service"));
	
	//ОценкаПроизводительностиРГСофт.ЗафиксироватьВремяОкончания(ТочноеВремяНачала, Справочники.КлючевыеОперации.SCAОткрытие, Объект.Ссылка);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	ПараметрыЗаписи.Вставить("ТочноеВремяНачала", ОценкаПроизводительностиРГСофт.ТочноеВремя());
	//КонецЕсли;
	
	РГСофтКлиентСервер.УстановитьЗначение(ТекущийОбъект.ModifiedBy, ПараметрыСеанса.ТекущийПользователь);
	ТекущийОбъект.ModificationDate = ТекущаяДата();
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ImportExportСервер.НастроитьВидимостьUnpostИSave(Элементы.Найти("ФормаОтменаПроведения"), Элементы.Найти("ФормаЗаписать"), Объект.Проведен);
	
	//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//ОценкаПроизводительностиРГСофт.ЗафиксироватьВремяОкончания(ПараметрыЗаписи.ТочноеВремяНачала, Справочники.КлючевыеОперации.SCAИнтерактивноеПроведение, Объект.Ссылка);
	//КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////
// ШАПКА


//////////////////////////////////////////////////////////////////////////////////////////
// ТАБЛИЧНАЯ ЧАСТЬ

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если МожноПолучитьUnallocatedServices() Тогда
		
		Очистить = Ложь;
		Если Объект.Services.Количество() > 0 Тогда
		
			Ответ = Вопрос("Очистить табличную часть?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, "Внимание!", КодВозвратаДиалога.Нет);
			Очистить = Ответ = КодВозвратаДиалога.Да;
		
		КонецЕсли; 
		
		ЗаполнитьНаСервере(Очистить);
	
	КонецЕсли; 	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(Очистить)
	
	Если Очистить Тогда
		Объект.Services.Очистить();
		Модифицированность = Истина;
	КонецЕсли; 
	
	МассивТекущихServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service");
	МассивUnallocatedServices = CustomsСервер.ПолучитьUnallocatedServices(Объект.Agent, Объект.Ссылка, МассивТекущихServices);
	Для Каждого Service Из МассивUnallocatedServices Цикл
		
		НоваяСтрокаТЧ = Объект.Services.Добавить();
		НоваяСтрокаТЧ.Service = Service;
		Модифицированность = Истина;
		
	КонецЦикла; 
	
	ServicesGrandTotal = ПолучитьServicesGrandTotal(РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service"));
	
КонецПроцедуры 

&НаКлиенте
Процедура ServicesПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	Если МожноПолучитьUnallocatedServices() Тогда
				
		СтруктураНастройки = Новый Структура;
		СтруктураНастройки.Вставить("Имя", "ВыборИзServicesCostsAllocation");
		СтруктураНастройки.Вставить("МассивТекущихServices", РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service"));
		СтруктураНастройки.Вставить("Agent", Объект.Agent);
		СтруктураНастройки.Вставить("ServicesCostsAllocation", Объект.Ссылка);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("СтруктураНастройки", СтруктураНастройки);
		СтруктураПараметров.Вставить("МножественныйВыбор", Истина);
		ОткрытьФорму("Документ.Service.ФормаВыбора", СтруктураПараметров, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ServicesОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив")
		И ВыбранноеЗначение.Количество() > 0
		И ТипЗнч(ВыбранноеЗначение[0]) = Тип("ДокументСсылка.Service") Тогда
		
		Для Каждого Service Из ВыбранноеЗначение Цикл
			НоваяСтрока = Объект.Services.Добавить();
			НоваяСтрока.Service = Service;
		КонецЦикла;
		
		Модифицированность = Истина;
		
		ServicesGrandTotal = ПолучитьServicesGrandTotal(РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ServicesВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущийService = Элемент.ТекущиеДанные.Service;
	Если ЗначениеЗаполнено(ТекущийService) Тогда
		ПоказатьЗначение(,ТекущийService);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ServicesПослеУдаления(Элемент)
	
	Если Объект.Services.Количество() Тогда
		ServicesGrandTotal = ПолучитьServicesGrandTotal(РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Services, "Service"));
	Иначе
		ServicesGrandTotal = 0;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Функция МожноПолучитьUnallocatedServices()
	
	Отказ = Ложь;
		
	Если НЕ ЗначениеЗаполнено(Объект.Agent) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Agent"" is empty!",
			, "Agent", "Объект", Отказ);
	КонецЕсли; 
	
	Возврат НЕ Отказ;
	
КонецФункции 


//////////////////////////////////////////////////////////////////////////////////////////
// ОБЩЕЕ

&НаСервереБезКонтекста
Функция ПолучитьServicesGrandTotal(Services)
	
	Если Services.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Services", Services);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ДокументService.GrandTotal) КАК GrandTotal
			|ИЗ
			|	Документ.Service КАК ДокументService
			|ГДЕ
			|	ДокументService.Ссылка В(&Services)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий()
			И ЗначениеЗаполнено(Выборка.GrandTotal) Тогда
			Возврат Выборка.GrandTotal;
		КонецЕсли;
		
	КонецЕсли; 
		
	Возврат 0;
	
КонецФункции 
