Перем мНачДата;
Перем мКонДата;
Перем мНачГода;
Перем мНачГраница;
Перем мКонГраница;

Перем мУдалятьДвижения;
Перем мВалютаРегламентированногоУчета Экспорт;

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");

	// Вызовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Функция РазностьДатВДнях(Дата1, Дата2)

	мДлинаСуток = 86400; // в секундах

	Возврат Окр((НачалоДня(Дата1) - НачалоДня(Дата2)) / мДлинаСуток);

КонецФункции

Функция СуммаСписанияЗаМесяц(СтатьяРасходовБудущихПериодов, Знач ДатаНачалаСписания, Знач ДатаОкончанияСписания, Сумма, Остаток)

	Если Сумма = 0 Тогда
		Возврат 0;
	КонецЕсли;

	ДатаНачалаСписания    = НачалоДня(ДатаНачалаСписания);
	ДатаОкончанияСписания = КонецДня(ДатаОкончанияСписания);

	Если ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаНачалаСписания) Тогда
		Возврат 0;

	ИначеЕсли ДатаНачалаСписания > мКонДата Тогда
		Возврат 0;

	КонецЕсли;

	Если ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаОкончанияСписания) Тогда
		Возврат 0;

	ИначеЕсли ДатаОкончанияСписания < мНачДата Тогда
		Возврат 0;

	ИначеЕсли ДатаОкончанияСписания < ДатаНачалаСписания Тогда
		Возврат 0;

	КонецЕсли;

	Если ДатаНачалаСписания < НачалоМесяца(ДатаОкончанияСписания) Тогда

		Если ДатаНачалаСписания > НачалоМесяца(ДатаНачалаСписания) Тогда
			ДатаНачалаПолногоМесяцаСписания = НачалоМесяца(ДобавитьМесяц(ДатаНачалаСписания, 1));
		Иначе
			ДатаНачалаПолногоМесяцаСписания = ДатаНачалаСписания;
		КонецЕсли;

		Если ДатаОкончанияСписания < КонецМесяца(ДатаОкончанияСписания) Тогда
			ДатаОкончанияПолногоМесяцаСписания = КонецМесяца(ДобавитьМесяц(ДатаОкончанияСписания, -1));
		Иначе
			ДатаОкончанияПолногоМесяцаСписания = ДатаОкончанияСписания;
		КонецЕсли;

		Если СтатьяРасходовБудущихПериодов = Перечисления.СпособыПризнанияРасходов.ВОсобомПорядке Тогда
			Возврат 0;
			
		ИначеЕсли СтатьяРасходовБудущихПериодов = Перечисления.СпособыПризнанияРасходов.ПоКалендарнымДням Тогда
		КоличествоДней = РазностьДатВДнях(ДатаОкончанияСписания, ДатаНачалаСписания) + 1;
		ЦенаДня = Сумма / КоличествоДней;
		Если НачалоМесяца(ДатаНачалаСписания) = НачалоМесяца(Дата) Тогда 
			КоличествоДнейТекущегоМесяца = РазностьДатВДнях(КонецМесяца(ДатаНачалаСписания), ДатаНачалаСписания) + 1; 
			СуммаСписания = ЦенаДня * КоличествоДнейТекущегоМесяца;
		ИначеЕсли КонецМесяца(ДатаОкончанияСписания) = КонецМесяца(Дата) Тогда 
			КоличествоДнейПервогоМесяца = РазностьДатВДнях(КонецМесяца(ДатаНачалаСписания), ДатаНачалаСписания) + 1; 
			СуммаСписанияЗаПрошедшиеМесяца = Окр(КоличествоДнейПервогоМесяца * ЦенаДня, 2); 
			ДатаТекущая = КонецМесяца(ДобавитьМесяц(ДатаНачалаСписания, 1));
			Пока Месяц(ДатаОкончанияСписания) > Месяц(ДатаТекущая) Цикл 
				СуммаСписанияЗаПрошедшиеМесяца = СуммаСписанияЗаПрошедшиеМесяца + Окр((День(ДатаТекущая)) * ЦенаДня, 2);
			    ДатаТекущая = КонецМесяца(ДобавитьМесяц(ДатаТекущая, 1));    
			КонецЦикла;
			СуммаСписания = Сумма - СуммаСписанияЗаПрошедшиеМесяца;
		Иначе
			КоличествоДнейТекущегоМесяца = День(КонецМесяца(Дата));
			СуммаСписания = ЦенаДня * КоличествоДнейТекущегоМесяца;
		КонецЕсли;
	Иначе 
			Если ДатаОкончанияПолногоМесяцаСписания >= ДатаНачалаПолногоМесяцаСписания Тогда
			КоличествоПолныхМесяцев = (Год(ДатаОкончанияПолногоМесяцаСписания) - Год(ДатаНачалаПолногоМесяцаСписания)) * 12 
			                        + Месяц(ДатаОкончанияПолногоМесяцаСписания) - Месяц(ДатаНачалаПолногоМесяцаСписания) + 1;
		Иначе
			КоличествоПолныхМесяцев = 0;
		КонецЕсли;

		ПериодСписанияВ_Днях          = РазностьДатВДнях(ДатаОкончанияСписания, ДатаНачалаСписания)+ 1;
		СуммаСписанияПервогоМесяца    = Окр(Сумма * РазностьДатВДнях(ДатаНачалаПолногоМесяцаСписания, ДатаНачалаСписания) / ПериодСписанияВ_Днях, 2);
		СуммаСписанияПоследнегоМесяца = Окр(Сумма * РазностьДатВДнях(ДатаОкончанияСписания, ДатаОкончанияПолногоМесяцаСписания) / ПериодСписанияВ_Днях, 2);

		Если КоличествоПолныхМесяцев > 0 Тогда
			СуммаСписанияПолногоМесяца = Окр((Сумма - СуммаСписанияПервогоМесяца - СуммаСписанияПоследнегоМесяца) / КоличествоПолныхМесяцев, 2);
		Иначе
			СуммаСписанияПолногоМесяца = 0;
		КонецЕсли;

		СуммаСписанияПоследнегоМесяца = Сумма - СуммаСписанияПервогоМесяца - СуммаСписанияПолногоМесяца * КоличествоПолныхМесяцев;

		Если ДатаНачалаПолногоМесяцаСписания > мКонДата Тогда
			СуммаСписания = СуммаСписанияПервогоМесяца;
			
		ИначеЕсли мКонДата = КонецМесяца(ДатаОкончанияСписания) Тогда
			СуммаСписания = Остаток;
			
		Иначе
			СуммаСписания = СуммаСписанияПолногоМесяца;
		КонецЕсли;

	КонецЕсли;
	
	Иначе
		СуммаСписания = Сумма;
	КонецЕсли;

	Если Остаток > 0 Тогда
		Возврат Мин(СуммаСписания, Остаток);
	Иначе
		Возврат Макс(СуммаСписания, Остаток);
	КонецЕсли;

КонецФункции // СуммаСписанияЗаМесяц()

Процедура СписаниеРБП(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецМесяца", мКонГраница);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(РасходыБудущихПериодовОстатки.СуммаОстаток, 0)) КАК СуммаОстатокДтБУ,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.ДатаНачалаСписания КАК ДатаНачалаСписания,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Сумма КАК Сумма,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.СпособПризнанияРасходов КАК СпособПризнанияРасходов,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.СчетДт КАК СчетДт,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Наименование КАК Наименование,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.AU КАК AU,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.TaxRegistration КАК Подразделение
	|ИЗ
	|	РегистрНакопления.РасходыБудущихПериодов.Остатки(&КонецМесяца, ) КАК РасходыБудущихПериодовОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.ДатаНачалаСписания,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.ДатаОкончанияСписания,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Сумма,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.СпособПризнанияРасходов,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.СчетДт,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Наименование,
	|	РасходыБудущихПериодовОстатки.РасходБудущегоПериода.Ссылка";
	
	
	Результат = Запрос.Выполнить();
	
	Таблица = Новый ТаблицаЗначений;
	Таблица = Результат.Выгрузить();
	СуммаСписанияБУ = 0;
	ВыборкаРБП = Результат.Выбрать();
	
	Пока ВыборкаРБП.Следующий() Цикл
		
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаРБП.ДатаНачалаСписания) ИЛИ
			ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаРБП.ДатаОкончанияСписания) ИЛИ
			ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаРБП.Сумма) Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаСписанияДт = СуммаСписанияЗаМесяц(ВыборкаРБП.СпособПризнанияРасходов, ВыборкаРБП.ДатаНачалаСписания, ВыборкаРБП.ДатаОкончанияСписания, ВыборкаРБП.Сумма, ВыборкаРБП.СуммаОстатокДтБУ);
		
		РБП    = ВыборкаРБП.СпособПризнанияРасходов;
		СчетДт = ВыборкаРБП.СчетДт;
		Сумма  = ВыборкаРБП.Сумма;
		Если (ВыборкаРБП.СуммаОстатокДтБУ <> 0) И (СуммаСписанияДт <> 0) Тогда
			Если ОбщегоНазначения.ЗначениеНеЗаполнено(РБП) Тогда
				Продолжить;
			КонецЕсли;
			Если ОбщегоНазначения.ЗначениеНеЗаполнено(СчетДт) Тогда
				ТекстСообщения = "В справочнике ""Расходы будущих периодов"" для статьи """+ РБП + """ не заполнен реквизит ""Счет списания"" !";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ, ОбщегоНазначения.ПредставлениеДокументаПриПроведении(СтруктураШапкиДокумента.Ссылка));
				Продолжить;
			КонецЕсли;
			
			Курс = ОбщегоНазначения.ПолучитьКурсВалюты(Справочники.Валюты.НайтиПоКоду("999"),СтруктураШапкиДокумента.Дата).Курс;
			СуммаFiscAm=СуммаСписанияДт/Курс;
			
			Движения.ПроводкиDSSОбщие.Записывать = Истина;
			
			Проводка = Движения.ПроводкиDSSОбщие.Добавить();
			Проводка.Период       = СтруктураШапкиДокумента.Дата;
			Проводка.PeriodLawson       = СтруктураШапкиДокумента.Дата;
			Проводка.DateLawson       = СтруктураШапкиДокумента.Дата;
			Проводка.AccountLawson       = ВыборкаРБП.СчетДт;
			Проводка.RubAmount        = СуммаСписанияДт;
			Проводка.AU       = ВыборкаРБП.AU;  
			Проводка.Company       = 4;
			Проводка.Currency       = мВалютаРегламентированногоУчета;   //рубли
			Проводка.Description       = "Deferred losses on FA sales";
			Проводка.FiscalType       = Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("AMDIEXP");
			Проводка.FiscAmount       = СуммаFiscAm;
			Проводка.GltObjId       = 1000000000;
			Проводка.GUID       = Новый УникальныйИдентификатор();
			Проводка.LegalEntity       = ВыборкаРБП.Подразделение;  
			Проводка.PermDiff       = -Проводка.FiscAmount;
			Проводка.Reference       = СтруктураШапкиДокумента.Номер;
			Проводка.System       = "AM";
			Проводка.Модуль       = Перечисления.МодулиРазработки.FixedAssets;
			
			Движения.РасходыБудущихПериодов.Записывать = Истина;
			
			Движение = Движения.РасходыБудущихПериодов.ДобавитьРасход();
			Движение.Период 			= СтруктураШапкиДокумента.Дата;
			Движение.Сумма = СуммаСписанияДт;
			Движение.РасходБудущегоПериода = ВыборкаРБП.Ссылка;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)
	
	//Добавил РГ-Софт - Пронин Иван
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	КонецЕсли;
	//Конец добавления
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	мНачДата    = НачалоМесяца(СтруктураШапкиДокумента.Дата);
	мКонДата    = КонецМесяца (СтруктураШапкиДокумента.Дата);
	мНачГода    = НачалоГода(СтруктураШапкиДокумента.Дата);
	мНачГраница = Новый Граница(мНачДата, ВидГраницы.Включая);
	мКонГраница = Новый Граница(мКонДата, ВидГраницы.Включая);
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(СтруктураШапкиДокумента.Ссылка);
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	СписаниеРБП(СтруктураШапкиДокумента, Отказ, Заголовок) ;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Добавил РГ-Софт - Пронин Иван
	мУдалятьДвижения = НЕ ЭтоНовый();
	//Конец добавления
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();