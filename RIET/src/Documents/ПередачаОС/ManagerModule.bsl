
Функция ПолучитьДанныеРБП(ТаблицаОСиРБП, Ссылка, ВалютаРегламентированногоУчета) Экспорт
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПередачаОС.Ссылка,
		                      |	ПередачаОС.КратностьВзаиморасчетов КАК Кратность,
		                      |	ПередачаОС.КурсВзаиморасчетов КАК Курс,
		                      |	ПередачаОС.ВалютаДокумента,
		                      |	ПередачаОС.СуммаВключаетНДС,
		                      |	ПередачаОС.ДатаПроведения
		                      |ПОМЕСТИТЬ Док
		                      |ИЗ
		                      |	Документ.ПередачаОС КАК ПередачаОС
		                      |ГДЕ
		                      |	ПередачаОС.Ссылка = &Ссылка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	данныеТЧ.ОсновноеСредство КАК ОС,
		                      |	ВЫРАЗИТЬ(данныеТЧ.РБП КАК Справочник.РасходыБудущихПериодов) КАК РБП,
		                      |	данныеТЧ.СтоимостьНУ - данныеТЧ.АмортизацияНУ - данныеТЧ.АмортизацияЗаМесяцНУ - данныеТЧ.СуммаКапитальныхВложенийВключаемыхВРасходыНУ КАК ОстаточнаяСтоимость,
		                      |	данныеТЧ.Сумма,
		                      |	данныеТЧ.суммаНДС
		                      |ПОМЕСТИТЬ ТЧ
		                      |ИЗ
		                      |	&ДанныеТЧ КАК данныеТЧ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВЫРАЗИТЬ(ВЫБОР
		                      |			КОГДА Док.ВалютаДокумента <> &Валюта
		                      |				ТОГДА ВЫБОР
		                      |						КОГДА Док.СуммаВключаетНДС
		                      |							ТОГДА ТЧ.Сумма * Док.Курс / Док.Кратность
		                      |						ИНАЧЕ ТЧ.Сумма * Док.Курс / Док.Кратность + ТЧ.суммаНДС * Док.Курс / Док.Кратность
		                      |					КОНЕЦ
		                      |			ИНАЧЕ ВЫБОР
		                      |					КОГДА Док.СуммаВключаетНДС
		                      |						ТОГДА ТЧ.Сумма
		                      |					ИНАЧЕ ТЧ.Сумма + ТЧ.суммаНДС
		                      |				КОНЕЦ
		                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаДокумента,
		                      |	ТЧ.ОС,
		                      |	ТЧ.ОстаточнаяСтоимость,
		                      |	ТЧ.РБП.ДатаНачалаСписания,
		                      |	Док.ДатаПроведения,
		                      |	ТЧ.РБП.ДатаОкончанияСписания,
		                      |	ТЧ.РБП
		                      |ПОМЕСТИТЬ ТЧ1
		                      |ИЗ
		                      |	Док КАК Док,
		                      |	ТЧ КАК ТЧ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
		                      |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.КостЦентр,
		                      |	СУММА(НачислениеАмортизацииСрезПоследних.СрокНУ + РАЗНОСТЬДАТ(Док.Ссылка.ДатаПроведения, ВложенныйЗапрос.ДатаСостояния, МЕСЯЦ)) КАК ОстаточныйСрок,
		                      |	ТЧ1.РБП,
		                      |	ТЧ1.ОС,
		                      |	ТЧ1.ОстаточнаяСтоимость - ТЧ1.СуммаДокумента КАК СуммаУбытка,
		                      |	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ТЧ1.ДатаПроведения, МЕСЯЦ), СЕКУНДА, 1) КАК ДатаНачалаСписания,
		                      |	ТЧ1.СуммаДокумента
		                      |ИЗ
		                      |	ТЧ1 КАК ТЧ1
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизации.СрезПоследних(
		                      |				,
		                      |				ОсновноеСредство В
		                      |					(ВЫБРАТЬ
		                      |						ТЧ.ОС
		                      |					ИЗ
		                      |						ТЧ)) КАК НачислениеАмортизацииСрезПоследних
		                      |		ПО ТЧ1.ОС = НачислениеАмортизацииСрезПоследних.ОсновноеСредство
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		                      |				,
		                      |				ОсновноеСредство В
		                      |					(ВЫБРАТЬ
		                      |						ТЧ1.ОС
		                      |					ИЗ
		                      |						ТЧ1)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		                      |		ПО ТЧ1.ОС = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                      |			СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
		                      |			СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния
		                      |		ИЗ
		                      |			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		                      |		ГДЕ
		                      |			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(перечисление.состоянияос.принятокучету)
		                      |			И СостоянияОСОрганизаций.ОсновноеСредство В
		                      |					(ВЫБРАТЬ
		                      |						ТЧ1.ОС
		                      |					ИЗ
		                      |						ТЧ1)) КАК ВложенныйЗапрос
		                      |		ПО ТЧ1.ОС = ВложенныйЗапрос.ОсновноеСредство,
		                      |	Док КАК Док
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
		                      |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.КостЦентр,
		                      |	ТЧ1.РБП,
		                      |	ТЧ1.ОС,
		                      |	ТЧ1.СуммаДокумента,
		                      |	ТЧ1.ОстаточнаяСтоимость - ТЧ1.СуммаДокумента,
		                      |	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ТЧ1.ДатаПроведения, МЕСЯЦ), СЕКУНДА, 1)");
		Запрос.УстановитьПараметр("ДанныеТЧ",ТаблицаОСиРБП);
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("Валюта",ВалютаРегламентированногоУчета);
		Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции
	                    	 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ
////////////////////////////////////////////////////////////////////////////////

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	//ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1") Тогда
		
		// { RGS LFedotova 02.02.2018 15:11:32 - вопрос SLI-0007480
		//НужноПечататьМакетОС1(МассивОбъектов, , КоллекцияПечатныхФорм);
		НужноПечататьМакетОС1(МассивОбъектов, , КоллекцияПечатныхФорм, ОбъектыПечати);
		// } RGS LFedotova 02.02.2018 15:12:09 - вопрос SLI-0007480
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1ДвеВалюты") Тогда
		
		// { RGS LFedotova 02.02.2018 15:11:32 - вопрос SLI-0007480
		//НужноПечататьМакетОС1(МассивОбъектов, Истина, КоллекцияПечатныхФорм);
		НужноПечататьМакетОС1(МассивОбъектов, Истина, КоллекцияПечатныхФорм, ОбъектыПечати);
		// } RGS LFedotova 02.02.2018 15:12:09 - вопрос SLI-0007480
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") тогда
		
		ТабДокумент = ПечатьМ15(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М15",
				"М-15", ТабДокумент);

	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") тогда
		
		ТабДокумент = ПечатьТОРГ12(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12",
				"ТОРГ-12 (Товарная накладная)", ТабДокумент);
				
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12ДвеВалюты") тогда
		
		ТабДокумент = ПечатьТОРГ12_ДвеВалюты(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12ДвеВалюты",
				"ТОРГ-12 в двух валютах (Товарная накладная)", ТабДокумент);
				
	КонецЕсли;
	
	// { RGS LFedotova 12.01.2018 1:44:47 - вопрос SLI-0007459 
	Если НЕ ТабДокумент = Неопределено Тогда
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
			1, ОбъектыПечати, МассивОбъектов);
	КонецЕсли; 
	// } RGS LFedotova 12.01.2018 1:45:01 - вопрос SLI-0007459

КонецПроцедуры

// { RGS LFedotova 02.02.2018 15:10:25 - вопрос SLI-0007480
//Процедура НужноПечататьМакетОС1(Ссылка, ДвеВалюты = Ложь, КоллекцияПечатныхФорм)
Процедура НужноПечататьМакетОС1(Ссылка, ДвеВалюты = Ложь, КоллекцияПечатныхФорм, ОбъектыПечати = Неопределено)
// } RGS LFedotova 02.02.2018 15:10:29 - вопрос SLI-0007480
	
	СтруктураМакетов = Новый Структура("ОС1,ОС1а,ОС1б,ОС1ДвеВалюты,ОС1аДвеВалюты,ОС1бДвеВалюты", 
						"ОС-1", "ОС-1а", "ОС-1б", "ОС-1 в двух валютах", "ОС-1а в двух валютах", "ОС-1б в двух валютах");
	
	СоответствиеТабДок = ПечатьОС1(Ссылка, ДвеВалюты);
	Сч = 0;
	Для Каждого ЭлементСоответствия из СоответствиеТабДок Цикл 

		// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
		//Имя = ЭлементСоответствия.Значение;		
		ИмяКлюч = ЭлементСоответствия.Ключ;
		Имя = Лев(ИмяКлюч, СтрДлина(ИмяКлюч) - 2);
		РеальныйНомерСтр = Прав(ИмяКлюч, 1);
		// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
		   	
		Если Сч > 0 Тогда 
			СтрТЗ = КоллекцияПечатныхФорм.Добавить();
			СтрТЗ.ИмяМакета = Имя;
			СтрТЗ.ИмяВРЕГ   = ВРег(Имя) + Сч;
			СтрТЗ.Экземпляров = 1;
		иначе
			КоллекцияПечатныхФорм[0].ИмяВРЕГ   = ВРег(Имя) + Сч;
			КоллекцияПечатныхФорм[0].ИмяМакета = Имя;
		КонецЕсли;

		// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
		//УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ВРег(Имя) + Сч,
		//		СтруктураМакетов[Имя]+" Стр."+(Сч+1), ЭлементСоответствия.Ключ);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ВРег(Имя) + Сч,
				СтруктураМакетов[Имя]+" Стр."+(РеальныйНомерСтр), СоответствиеТабДок[ЭлементСоответствия.Ключ]);
		// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
				
		Сч = Сч + 1;	
		// { RGS LFedotova 02.02.2018 15:09:56 - вопрос SLI-0007480
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ЭлементСоответствия.Значение,
		1, ОбъектыПечати, Ссылка);
		// } RGS LFedotova 02.02.2018 15:10:03 - вопрос SLI-0007480
	КонецЦикла;
	
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой ОС-1,
// 
// Возвращаемое значение:
//  Табличный документ 
//
Функция ПечатьОС1(Ссылка, ДвеВалюты = Ложь)
	
	СоответствиеТабДоков = Новый Соответствие;
		
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаОС.Дата КАК ДатаДок,
	|	ПередачаОС.Номер КАК НомерАкта,
	|	ПередачаОС.Ответственный,
	|	ПередачаОС.ПодразделениеОрганизации.НаименованиеПолное КАК ПодрСдатчика,
	|	ПередачаОС.Контрагент.Наименование КАК ОрганизацияПолучатель,
	|	ПередачаОС.Контрагент КАК Получатель,
	|	ПередачаОС.Организация.НаименованиеПолное КАК НаимСдатчика,
	|	ПередачаОС.ПодразделениеОрганизации.Адрес КАК АдресСдатчика,
	|	ПередачаОС.ДоговорКонтрагента КАК ДоговорПередачи,
	|	ПередачаОС.Контрагент.КодПоОКПО КАК КодПоОКПОПол,
	|	ПередачаОС.ПодразделениеОрганизации.КодПоОКПО КАК КодПоОКПО,
	|	ПередачаОС.ПодразделениеОрганизации КАК Сдатчик,
	|	ПередачаОС.Организация,
	|	ПередачаОС.КурсВзаиморасчетов КАК Курс,
	|	ПередачаОС.Грузополучатель,
	|	ПередачаОС.Руководитель,
	|	ПередачаОС.ГлавныйБухгалтер,
	|	ПередачаОС.ДолжностьРуководителя,
	|	ПередачаОС.ПодразделениеОрганизации.ИНН КАК СдатчикИНН,
	|	ПередачаОС.ПодразделениеОрганизации.КПП КАК СдатчикКПП,
	|	ПередачаОС.Местонахождение,
	|	ПередачаОС.ФизЛицоСдал,
	|	ПередачаОС.ВалютаДокумента
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &Ссылка";
	ВыборкаОС = Запрос.Выполнить().Выбрать();
	ВыборкаОС.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",            Ссылка);
	Запрос.УстановитьПараметр("Организация",       ВыборкаОС.Организация);
	Запрос.УстановитьПараметр("КонДата",           ВыборкаОС.ДатаДок);
	Если ДвеВалюты Тогда
		Запрос.УстановитьПараметр("Курс",      ВыборкаОС.Курс);
	Иначе
		Запрос.УстановитьПараметр("Курс",      1);
	КонецЕсли; 
	Запрос.УстановитьПараметр("Кратность", 1);
	Запрос.УстановитьПараметр("Капитальныйремонт", Перечисления.ВидыСобытийОС.КапитальныйРемонт);
	
	СписокВидовМодернизации = Новый Массив;
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Реконструкция);
	
	Запрос.УстановитьПараметр("СписокВидовМодернизации", СписокВидовМодернизации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаОСОС.НомерСтроки,
	|	ПередачаОСОС.ОсновноеСредство,
	|	ПередачаОСОС.СтоимостьБУ - ПередачаОСОС.АмортизацияБУ - ПередачаОСОС.АмортизацияЗаМесяцБУ КАК ОстСтоимость,
	|	ПередачаОСОС.АмортизацияБУ КАК НачАмортизация,
	|	ПередачаОСОС.АмортизацияЗаМесяцБУ КАК АмортизацияЗаМесяц,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.Ссылка.СуммаВключаетНДС
	|			ТОГДА (ПередачаОСОС.Сумма - ПередачаОСОС.СуммаНДС) * &Курс / &Кратность
	|		ИНАЧЕ ПередачаОСОС.Сумма * &Курс / &Кратность
	|	КОНЕЦ КАК ЦенаПродажи,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПередачаОСОС.Сумма - ПередачаОСОС.СуммаНДС
	|		ИНАЧЕ ПередачаОСОС.Сумма
	|	КОНЕЦ КАК ЦенаПродажиUSD,
	|	ПередачаОСОС.СтавкаНДС,
	|	ПередачаОСОС.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ПередачаОСОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПередачаОСОС.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОс,
	|	ПередачаОСОС.ОсновноеСредство.АмортизационнаяГруппа.Порядок + 1 КАК НомерГруппы,
	|	ПередачаОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ПередачаОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|	ПередачаОСОС.ОсновноеСредство.Изготовитель КАК Изготовитель,
	|	ПередачаОСОС.ОсновноеСредство.КодПоОКОФ КАК КодОКОФ,
	|	НачислениеАмортизацииСрезПоследних.СрокПолезногоИспользованияБУ КАК СрокПолезнИспПриПеред,
	|	НачислениеАмортизацииСрезПоследних.СрокПолезногоИспользованияБУ КАК СрокПолезнИспПриПост,
	|	ПоследнийКапитальныйРемонт.Период КАК ДатаПоследнегоКапитальногоРемонта,
	|	ПоследняяМодернизация.Период КАК ДатаПоследнейМодернизации,
	|	ПередачаОСОС.ОсновноеСредство.Код КАК ИнвНомер,
	|	МестонахождениеОС.Местонахождение.Наименование КАК Местонахождение,
	|	ПередачаОСОС.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта1,
	|	ПередачаОСОС.ОсновноеСредство.РегистрационныйНомер КАК РегистрационныйНомер1
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонДата, Организация = &Организация) КАК МестонахождениеОС
	|		ПО ПередачаОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизации.СрезПоследних(
	|				&КонДата,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Документ.ПередачаОС.ОС.ОсновноеСредство
	|						ИЗ
	|							Документ.ПередачаОС.ОС
	|						ГДЕ
	|							Документ.ПередачаОС.ОС.Ссылка = &Ссылка)) КАК НачислениеАмортизацииСрезПоследних
	|		ПО ПередачаОСОС.ОсновноеСредство = НачислениеАмортизацииСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|				&КонДата,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Документ.ПередачаОС.ОС.ОсновноеСредство
	|						ИЗ
	|							Документ.ПередачаОС.ОС
	|						ГДЕ
	|							Документ.ПередачаОС.ОС.Ссылка = &Ссылка)
	|					И Событие.ВидСобытияОС = &КапитальныйРемонт) КАК ПоследнийКапитальныйРемонт
	|		ПО ПередачаОСОС.ОсновноеСредство = ПоследнийКапитальныйРемонт.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|				&КонДата,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Документ.ПередачаОС.ОС.ОсновноеСредство
	|						ИЗ
	|							Документ.ПередачаОС.ОС
	|						ГДЕ
	|							Документ.ПередачаОС.ОС.Ссылка = &Ссылка)
	|					И Событие.ВидСобытияОС В (&СписокВидовМодернизации)) КАК ПоследняяМодернизация
	|		ПО ПередачаОСОС.ОсновноеСредство = ПоследняяМодернизация.ОсновноеСредство
	|ГДЕ
	|	ПередачаОСОС.Ссылка = &Ссылка";
	// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
	//ВыборкаПоОС = Запрос.Выполнить().Выбрать();
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПоОС = РезультатЗапроса.Выбрать();
	// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
	
	ДокВвода  = Неопределено;
	ДатаВвода = Дата('00000000');
	
	Если ВыборкаПоОС.Количество() = 1 Тогда
		
		ВыборкаПоОС.Следующий();
		
		ТабДокумент   = Новый ТабличныйДокумент();
		Если НЕ(ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Здания ИЛИ
			ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Сооружения) Тогда
			
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПринятиеКУчетуОС_ОС1";
			
			Если ДвеВалюты Тогда
				Макет         = ПолучитьОбщийМакет("ОС1ДвеВалюты");
			Иначе
				Макет         = ПолучитьОбщийМакет("ОС1");
			КонецЕсли; 
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(ВыборкаОС);
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
			
			УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, ВыборкаОС.Организация, Перечисления.СостоянияОС.ВведеноВЭксплуатацию, ДокВвода,        ДатаВвода);
			
			ОбластьМакета.Параметры.ГодВыпуска = ВыборкаПоОС.ГодВыпуска;
			ОбластьМакета.Параметры.ДатаВводаПриПередаче  = ДатаВвода;
			ОбластьМакета.Параметры.СрокЭкспл  = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода,ВыборкаОС.ДатаДок);
			Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
				ОбластьМакета.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
			КонецЕсли; 
			
			ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаОС, ОбластьМакета);
			ЗаполнитьДанныеОрганизацииСдатчика(ВыборкаОС, ОбластьМакета);
			
			ф = СтрНайти(Формат(ВыборкаОС.ДатаДок,"ДЛФ=DD")," ");
			ОбластьМакета.Параметры.День1 = """" + Лев(Формат(ВыборкаОС.ДатаДок,"ДЛФ=DD"),ф-1) + """" + Сред(Формат(ВыборкаОС.ДатаДок,"ДЛФ=DD"),ф);;
			ОбластьМакета.Параметры.День = """     "" ______________ 200  г.";
			
			Если НЕ ДвеВалюты Тогда
				Если ВыборкаОС.ВалютаДокумента.Код = "643" Тогда
					ОбластьМакета.Параметры.Валюта = "руб.";
				Иначе
					ОбластьМакета.Параметры.Валюта = "у.е.";
				КонецЕсли;				
			КонецЕсли; 
			
			ОбластьМакета.Параметры.БезНДС = "имость" +Символы.ПС+"без НДС),";
			
			ОбластьМакета.Параметры.Сдал = ВыборкаОС.ФизЛицоСдал;
			ОбластьМакета.Параметры.Местонахождение = ВыборкаОС.Местонахождение;
			ОбластьМакета.Параметры.ПодрСдатчика = ОбластьМакета.Параметры.ПодрСдатчика + " "+ ВыборкаОС.СдатчикИНН +"/"+ВыборкаОС.СдатчикКПП;
			ОбластьМакета.Параметры.КодПодрСд = ВыборкаПоОС.ОсновноеСредство.Подразделение.Код;
			Ячейка = ОбластьМакета.Области.Найти("НеСоотв");
			Ячейка.Шрифт = Новый Шрифт(Ячейка.Шрифт,,,,,,Ложь);
			Ячейка = ОбластьМакета.Области.Найти("Требуется");
			Ячейка.Шрифт = Новый Шрифт(Ячейка.Шрифт,,,,,,Ложь);
			
			Если ДвеВалюты Тогда
				ОбластьМакета.Параметры.РукСдатчика = "";
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
			//СоответствиеТабДоков.Вставить(ТабДокумент, ?(ДвеВалюты, "ОС1ДвеВалюты", "ОС1"));
			СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_1", "ОС1б_1"), ТабДокумент);
			// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020
			
		Иначе // Здание (сооружение)
			
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПринятиеКУчетуОС_ОС1а";
			
			ОС1а_Страница1 = Новый ТабличныйДокумент();
			Если ДвеВалюты Тогда
				МакетОС1а         = ПолучитьОбщийМакет("ОС1аДвеВалюты");
			Иначе
				МакетОС1а         = ПолучитьОбщийМакет("ОС1а");
			КонецЕсли; 
			ОбластьМакета  = МакетОС1а.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(ВыборкаОС);
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
			
			УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, ВыборкаОС.Организация, Перечисления.СостоянияОС.ВведеноВЭксплуатацию, ДокВвода, ДатаВвода);
			
			ОбластьМакета.Параметры.ГодВыпуска = ВыборкаПоОС.ГодВыпуска;
			ОбластьМакета.Параметры.ДатаВвода  = ДатаВвода;
			ОбластьМакета.Параметры.СрокЭкспл  = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода,ВыборкаОС.ДатаДок);
			Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
				ОбластьМакета.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
			КонецЕсли; 
			
			ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаОС, ОбластьМакета);
			ЗаполнитьДанныеОрганизацииСдатчика(ВыборкаОС, ОбластьМакета);
			
			Если ДвеВалюты Тогда
				ОбластьМакета.Параметры.РукСдатчика = "";
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
			//СоответствиеТабДоков.Вставить(ТабДокумент, ?(ДвеВалюты, "ОС1ДвеВалюты", "ОС1"));
			СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_1", "ОС1б_1"), ТабДокумент);
			// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020
			
		КонецЕсли;
		
		Возврат СоответствиеТабДоков;
		
	Иначе // Объектов много - групповая печать.
		
		ОС1б_Страница1 = Новый ТабличныйДокумент();
		ОС1б_Страница2 = Новый ТабличныйДокумент();
		ОС1б_Страница3 = Новый ТабличныйДокумент();
		ОС1б_Страница4 = Новый ТабличныйДокумент();
		
		Если ДвеВалюты Тогда
			МакетОС1б      = ПолучитьОбщийМакет("ОС1бДвеВалюты");
		Иначе
			МакетОС1б      = ПолучитьОбщийМакет("ОС1б");
		КонецЕсли; 
		
		Шапка1ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка1");
		Шапка2ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка2");
		Строка2ОС1б    = МакетОС1б.ПолучитьОбласть("Строка2");
		Строка2ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка2П");
		Подвал2        = МакетОС1б.ПолучитьОбласть("Подвал2");
		Шапка3ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка3");
		Строка3ОС1б    = МакетОС1б.ПолучитьОбласть("Строка3");
		Строка3ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка3П");
		Подвал3        = МакетОС1б.ПолучитьОбласть("Подвал3");
		Шапка4ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка4");
		
		Шапка1ОС1б.Параметры.Заполнить(ВыборкаОС);
		Шапка1ОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаОС, Шапка1ОС1б);
		ЗаполнитьДанныеОрганизацииСдатчика(ВыборкаОС, Шапка1ОС1б);
		
		Если ДвеВалюты Тогда
			Шапка1ОС1б.Параметры.РукСдатчика = "";
		КонецЕсли;
		
		ОС1б_Страница1.Вывести(Шапка1ОС1б);
		
		Шапка2ОС1б.Параметры.Заполнить(ВыборкаОС);
		Шапка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница2.Вывести(Шапка2ОС1б);
		
		Шапка3ОС1б.Параметры.Заполнить(ВыборкаОС);
		Шапка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница3.Вывести(Шапка3ОС1б);
		
		Шапка4ОС1б.Параметры.Заполнить(ВыборкаОС);
		Шапка4ОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница4.Вывести(Шапка4ОС1б);
		
		Пока ВыборкаПоОС.Следующий() Цикл
			
			Строка2ОС1б.Параметры.Заполнить(ВыборкаОС);
			Строка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			УправлениеВнеоборотнымиАктивами.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, ВыборкаОС.Организация, Перечисления.СостоянияОС.ВведеноВЭксплуатацию, ДокВвода, ДатаВвода);
			Строка2ОС1б.Параметры.ДатаВвода  = ДатаВвода;
			Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
				Строка2ОС1б.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
			КонецЕсли; 
			ОС1б_Страница2.Вывести(Строка2ОС1б);
			
			Строка3ОС1б.Параметры.Заполнить(ВыборкаОС);
			Строка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			Строка3ОС1б.Параметры.СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода,ВыборкаОС.ДатаДок);
			ОС1б_Страница3.Вывести(Строка3ОС1б);
			
		КонецЦикла;
		
		Строка2ПОС1б.Параметры.Заполнить(ВыборкаОС);
		Строка2ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница2.Вывести(Строка2ПОС1б);
		
		Подвал2.Параметры.Заполнить(ВыборкаОС);
		Подвал2.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница2.Вывести(Подвал2);
		
		Строка3ПОС1б.Параметры.Заполнить(ВыборкаОС);
		Строка3ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
		ОС1б_Страница3.Вывести(Строка3ПОС1б);
		
		Подвал3.Параметры.Заполнить(ВыборкаОС);
		Подвал3.Параметры.Заполнить(ВыборкаПоОС);
		// { RGS LFedotova 11.01.2017 20:43:36 - вопрос SLI-0007053
		Если НЕ ДвеВалюты Тогда
			// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
			Подвал3.Параметры.ИтогЦенаПродажи = РезультатЗапроса.Выгрузить().Итог("ЦенаПродажи");
			// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020
		КонецЕсли; 
		// } RGS LFedotova 11.01.2017 20:44:00 - вопрос SLI-0007053
		Подвал3.Параметры.Сдал = ВыборкаОС.ФизЛицоСдал;
		ЗаполнитьДанныеОрганизацииСдатчика(ВыборкаОС, Подвал3);
		ОС1б_Страница3.Вывести(Подвал3);
		
		// { RGS AFokin 06.12.2016 12:48:25 - SLI-0007020 
		//СоответствиеТабДоков.Вставить(ОС1б_Страница1, ?(ДвеВалюты, "ОС1бДвеВалюты", "ОС1б"));
		//СоответствиеТабДоков.Вставить(ОС1б_Страница4, ?(ДвеВалюты, "ОС1бДвеВалюты", "ОС1б"));
		//СоответствиеТабДоков.Вставить(ОС1б_Страница3, ?(ДвеВалюты, "ОС1бДвеВалюты", "ОС1б"));
		//СоответствиеТабДоков.Вставить(ОС1б_Страница2, ?(ДвеВалюты, "ОС1бДвеВалюты", "ОС1б"));
		СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_1", "ОС1б_1"), ОС1б_Страница1);
		СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_2", "ОС1б_2"), ОС1б_Страница2);
		СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_3", "ОС1б_3"), ОС1б_Страница3);
		СоответствиеТабДоков.Вставить(?(ДвеВалюты, "ОС1бДвеВалюты_4", "ОС1б_4"), ОС1б_Страница4);
		// } RGS AFokin 06.12.2016 12:48:25 - SLI-0007020
		
		Возврат СоответствиеТабДоков;
		
	КонецЕсли;
	
КонецФункции // ПечатьОС1()

// Функция формирует табличный документ унифицированной формы М-15
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-15.
//
Функция ПечатьМ15(Ссылка)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаОС.Номер КАК Номер,
	|	ПередачаОС.Дата КАК ДатаСоставления,
	|	ПередачаОС.Дата КАК ДатаДокумента,
	|	ПередачаОС.Организация КАК Организация,
	|	ПередачаОС.Организация КАК ЮрФизЛицо,
	|	ПередачаОС.Организация КАК Руководители,
	|	ПередачаОС.ПодразделениеОрганизации КАК Склад,
	|	ПередачаОС.ПодразделениеОрганизации.Наименование КАК СкладНаименование,
	|	ПередачаОС.Контрагент.Код КАК КонтрагентКод,
	|	ПередачаОС.Контрагент КАК Контрагент,
	|	ПередачаОС.КурсВзаиморасчетов КАК Курс,
	|	ПередачаОС.КратностьВзаиморасчетов КАК Кратность,
	|	ПередачаОС.ВалютаДокумента КАК ВалютаДокумента,
	|	ПередачаОС.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПередачаОС.Сделка КАК Сделка,
	|	ПередачаОС.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	ПередачаОС.ДоговорКонтрагента.ВидДоговора КАК ДоговорВид
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &ТекущийДокумент";
	
	ВыборкаШапки = Запрос.Выполнить().Выбрать();
	ВыборкаШапки.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Курс", ?(ВыборкаШапки.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, ВыборкаШапки.Курс));           
	Запрос.УстановитьПараметр("Кратность", ?(ВыборкаШапки.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, ВыборкаШапки.Кратность));      
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОСОС.ОсновноеСредство КАК Товар,
	|	ВЫРАЗИТЬ(ПередачаОСОС.ОсновноеСредство.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ПередачаОСОС.ОсновноеСредство.Код КАК ПорядковыйНомер,
	|	""91.01"" КАК СчетУчетаБУКод,
	|	""91.01"" КАК ПереданныеСчетУчетаБУКод,
	|	""91.02"" КАК СчетРасходовБУКод,
	|	1 КАК Количество,
	|	ПередачаОСОС.Сумма * &Курс / &Кратность КАК Цена,
	|	ПередачаОСОС.Сумма * &Курс / &Кратность КАК Сумма,
	|	ПередачаОСОС.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ПередачаОСОС.СтавкаНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка.Ссылка = &ТекущийДокумент";
	ВыборкаСтрок = Запрос.Выполнить().Выгрузить();
	
	
	Макет = ПолучитьОбщийМакет("М15");
	
	// Получаем области макета для вывода в табличный документ
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы    = Макет.ПолучитьОбласть("Строка");
	Подвал           = Макет.ПолучитьОбласть("Подвал");	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М15";
	
	// Выведем шапку документа
	Шапка.Параметры.Заполнить(ВыборкаШапки);
	
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(ВыборкаШапки.ЮрФизЛицо, ВыборкаШапки.ДатаСоставления);
	
	Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаШапки);
	Шапка.Параметры.КонтрагентНаименование   = ФормированиеПечатныхФорм.ОписаниеОрганизации(КонтактнаяИнформация.СведенияОЮрФизЛице(ВыборкаШапки.Контрагент, ВыборкаШапки.ДатаСоставления), 
											      	 "ПолноеНаименование,");
	ЗаголовокДокумента                       = ?(ЗначениеЗаполнено(ВыборкаШапки.Сделка), СокрЛП(ВыборкаШапки.Сделка.Метаданные().Представление()) + " № " + ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаШапки.Сделка)+
	                                              	 " от " + Формат(ВыборкаШапки.Сделка.Дата, "ДФ='дд ММММ гггг'"), "");
	Шапка.Параметры.Основание                = ?(ЗаголовокДокумента = "", "Договор " + СокрЛП(ВыборкаШапки.ДоговорНаименование), ЗаголовокДокумента);
	
	ТабДокумент.Вывести(Шапка);
	
	// Подготовим к выводу выборку строк
	ВыборкаСтрок.Колонки.Добавить("КоррСчет");
	ВыборкаСтрок.Колонки.Добавить("КоррКод");
	ВыборкаСтрок.Колонки.Добавить("СуммаСНДС");
	ВыборкаСтрок.Колонки.Добавить("СуммаБезНДС");
	ВыборкаСтрок.Колонки.Добавить("ЕдиницаИзмеренияНаименование");
	
	Для Каждого СтрокаВыборки Из ВыборкаСтрок Цикл
		  				
		СуммаНДС    = СтрокаВыборки.СуммаНДС;
		Количество  = СтрокаВыборки.Количество;
		СуммаСНДС   = (СтрокаВыборки.Сумма + ?(ВыборкаШапки.СуммаВключаетНДС, 0, СтрокаВыборки.СуммаНДС));
		СуммаБезНДС = СуммаСНДС - СуммаНДС;
		
		СтрокаВыборки.ТоварНаименование = СокрЛП(СтрокаВыборки.ТоварНаименование);
		СтрокаВыборки.СуммаСНДС         = СуммаСНДС;
		СтрокаВыборки.СуммаБезНДС       = СуммаБезНДС;
		СтрокаВыборки.Цена              = СуммаБезНДС / ?(Количество = 0, 1, Количество);
		СтрокаВыборки.ЕдиницаИзмеренияНаименование = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("Шт");
	КонецЦикла;
	
	// Заполним подвал документа
	
	Подвал.Параметры.Заполнить(ВыборкаШапки);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(ВыборкаШапки.Руководители, ВыборкаШапки.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	ИтогНДС      = ВыборкаСтрок.Итог("СуммаНДС");
	
	Подвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ВыборкаСтрок.Количество(), ,",,,с,,,,,0");
	Подвал.Параметры.СуммаПрописью                              = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(ВыборкаСтрок.Итог("СуммаСНДС"), ВалютаРегламентированногоУчета);
	Подвал.Параметры.ИтогНДС                                    = ?(НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ИтогНДС), Формат(Цел(ИтогНДС), "ЧДЦ=0") + " руб. " + Формат((ИтогНДС - Цел(ИтогНДС)) * 100, "ЧЦ=2; ЧВН=") + " коп. ", "______ руб. ______ коп.");
	Подвал.Параметры.ФИОРуководителя                            = Руководитель;
	Подвал.Параметры.ФИОГлавБухгалтера                          = Бухгалтер;
	
	// Инициализируем счетчик страниц
	НомерСтраницы = 1;
	
	// Выведем заголовок табличной части
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Выведем выборку строк
	Для Каждого СтрокаВыборки Из ВыборкаСтрок Цикл
		
		СтрокаТаблицы.Параметры.Заполнить(СтрокаВыборки);
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		//СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		
		// Если обрабатываемая строка - последняя, будем проверять, помещается ли подвал документа
		Если ВыборкаСтрок.Индекс(СтрокаВыборки) = ВыборкаСтрок.Количество() - 1 Тогда 
			СтрокаСПодвалом.Добавить(Подвал);
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			//ТабДокумент.Вывести(ПодвалТаблицы);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			НомерСтраницы = НомерСтраницы + 1;
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;
	      			
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ15()

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьТОРГ12(Ссылка)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОС.Номер,
	|	ПередачаОС.Дата КАК ДатаДокумента,
	|	ПередачаОС.Организация,
	|	ПередачаОС.Организация КАК ЮрФизЛицо,
	|	ПередачаОС.Организация КАК Поставщик,
	|	ПередачаОС.Организация КАК Контрагент,
	|	ПередачаОС.Организация КАК Руководители,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА ПередачаОС.Контрагент
	|		ИНАЧЕ ПередачаОС.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА ПередачаОС.Организация
	|		ИНАЧЕ ПередачаОС.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ПередачаОС.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	ПередачаОС.Контрагент КАК Покупатель,
	|	ПередачаОС.Контрагент КАК Плательщик,
	|	ПередачаОС.ДоговорКонтрагента.Представление КАК Основание,
	|	ПередачаОС.ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
	|	ПередачаОС.ВалютаДокумента,
	|	ПередачаОС.КурсВзаиморасчетов КАК Курс,
	|	ПередачаОС.КратностьВзаиморасчетов КАК Кратность,
	|	ПередачаОС.УчитыватьНДС,
	|	ПередачаОС.СуммаВключаетНДС,
	|	ПередачаОС.Руководитель,
	|	ПередачаОС.ГлавныйБухгалтер,
	|	ПередачаОС.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Курс", ?(Шапка.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, Шапка.Курс));           
	Запрос.УстановитьПараметр("Кратность", ?(Шапка.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, Шапка.Кратность));
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ФормированиеПечатныхФорм.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("РеализацияТоваровУслуг");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОС.НомерСтроки КАК Номер,
	|	ПередачаОС.ОсновноеСредство,
	|	ВЫРАЗИТЬ(ПередачаОС.ОсновноеСредство.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ПередачаОС.ОсновноеСредство.Код КАК ТоварКод,
	|	1 КАК Количество,
	|	1 КАК КоличествоМест,
	|	""шт"" КАК БазоваяЕдиницаНаименование,
	|	""796"" КАК БазоваяЕдиницаКодПоОКЕИ,
	|	""шт"" КАК ВидУпаковки,
	|	1 КАК Коэффициент,
	|	1 КАК КоличествоВОдномМесте,
	|	ПередачаОС.Сумма * &Курс / &Кратность КАК Цена,
	|	ПередачаОС.Сумма * &Курс / &Кратность КАК Сумма,
	|	ПередачаОС.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ПередачаОС.СтавкаНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОС
	|
	|ГДЕ
	|	ПередачаОС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО                                        
	|	Номер";
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12";
	
	Макет = ПолучитьОбщийМакет("ТОРГ12");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);
	СведенияОГрузоотправителе = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	СведенияОПокупателе       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
	ОбластьМакетаШапка.Параметры.НомерДокумента = СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка));
	ОбластьМакетаШапка.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе,"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
	ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакетаШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	
	// Выводим всевозможные коды
	ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО          = СведенияОГрузоотправителе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ВидДеятельностиПоОКДП      = "";
	ОбластьМакетаШапка.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ОснованиеНомер             = "";
	ОбластьМакетаШапка.Параметры.ОснованиеДата              = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	
	// Выведем заголовок таблицы
	НомерСтраницы = 1;
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаНаСтранице      = 0;
	ИтогоНДСНаСтранице        = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	
	// Инициализация итогов по документу
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	ИтогоСумма      = 0;
	ИтогоНДС        = 0;
	
	// Инициализация счетчика строк
	НомерСтроки     = 0;
	КоличествоСтрок = ЗапросТовары.Количество();
	
	// Выводим многострочную часть докмента
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
		
		ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
		ОбластьМакетаСтрока.Параметры.ТоварКод = СокрЛП(ВыборкаСтрок.ТоварКод);
		
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаСтрок.КоличествоМест) Тогда
			ОбластьМакетаСтрока.Параметры.ВидУпаковки           = "";
			ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте = "";
		КонецЕсли;
		
		ОбластьМакетаСтрока.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		
		СуммаСНДС = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС - СуммаНДС;
		
		ОбластьМакетаСтрока.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакетаСтрока.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакетаСтрока.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
		ОбластьМакетаСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
		ОбластьМакетаСтрока.Параметры.Цена        = СуммаБезНДС / ?(Количество = 0, 1, Количество);
		
		// Проверим вывод
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
		Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
			СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и подвал документа
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			
			// Выводим итоги по странице
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
			
			ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
			
			// Очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаНаСтранице      = 0;
			ИтогоНДСНаСтранице        = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			
			// Выведем заголовок таблицы
			НомерСтраницы = НомерСтраницы + 1;
			ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
		
		// Увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
		ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		
		// Увеличим итоги по документу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
		ИтогоНДС        = ИтогоНДС        + СуммаНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		
	КонецЦикла;
	
	// Выводим итоги по странице
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
	
	
	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакетаВсего.Параметры.ИтогКоличество = ИтогоКоличество;
	ОбластьМакетаВсего.Параметры.ИтогСуммы      = ИтогоСумма;
	ОбластьМакетаВсего.Параметры.ИтогНДС        = ИтогоНДС;
	ОбластьМакетаВсего.Параметры.ИтогСуммыСНДС  = ИтогоСуммаСНДС;
	
	
	ТабДокумент.Вывести(ОбластьМакетаВсего);
	
	Если ЗначениеЗаполнено(Шапка.Руководитель) Тогда
		ОбластьМакетаПодвал.Параметры.ФИОРуководителя = Шапка.Руководитель;
	КонецЕсли;
	Если ЗначениеЗаполнено(Шапка.ГлавныйБухгалтер) Тогда
		ОбластьМакетаПодвал.Параметры.ФИОГлавБухгалтера = Шапка.ГлавныйБухгалтер;
	КонецЕсли;
	Если ЗначениеЗаполнено(Шапка.ДолжностьРуководителя) Тогда
		ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = Шапка.ДолжностьРуководителя;
	КонецЕсли;

	
	ОбластьМакетаПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакетаПодвал.Параметры.СуммаПрописью                              = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(ИтогоСуммаСНДС, ВалютаРегламентированногоУчета);
	
	ОбластьМакетаПодвал.Параметры.ДатаДокумента = Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТОРГ12()

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьТОРГ12_ДвеВалюты(Ссылка)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОС.Номер,
	|	ПередачаОС.Дата КАК ДатаДокумента,
	|	ПередачаОС.Организация,
	|	ПередачаОС.Организация КАК ЮрФизЛицо,
	|	ПередачаОС.Организация КАК Поставщик,
	|	ПередачаОС.Организация КАК Контрагент,
	|	ПередачаОС.Организация КАК Руководители,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА ПередачаОС.Контрагент
	|		ИНАЧЕ ПередачаОС.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА ПередачаОС.ПодразделениеОрганизации
	|		ИНАЧЕ ПередачаОС.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ПередачаОС.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	ПередачаОС.Контрагент КАК Покупатель,
	|	ПередачаОС.Контрагент КАК Плательщик,
	|	ПередачаОС.ДоговорКонтрагента.Представление КАК Основание,
	|	ПередачаОС.ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
	|	ПередачаОС.ВалютаДокумента,
	|	ПередачаОС.КурсВзаиморасчетов КАК Курс,
	|	ПередачаОС.КратностьВзаиморасчетов КАК Кратность,
	|	ПередачаОС.УчитыватьНДС,
	|	ПередачаОС.СуммаВключаетНДС,
	|	ПередачаОС.ГлавныйБухгалтер,
	|	ПередачаОС.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Курс", ?(Шапка.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, Шапка.Курс));           
	Запрос.УстановитьПараметр("Кратность", ?(Шапка.ВалютаДокумента = ВалютаРегламентированногоУчета, 1, Шапка.Кратность));
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ФормированиеПечатныхФорм.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("РеализацияТоваровУслуг");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОС.НомерСтроки КАК Номер,
	|	ПередачаОС.ОсновноеСредство,
	|	ВЫРАЗИТЬ(ПередачаОС.ОсновноеСредство.НаименованиеПолное КАК Строка(1000)) КАК ТоварНаименование,
	|	ПередачаОС.ОсновноеСредство.Код КАК ТоварКод,
	|	1 КАК Количество,
	|	1 КАК КоличествоМест,
	|	""шт"" КАК БазоваяЕдиницаНаименование,
	|	""796"" КАК БазоваяЕдиницаКодПоОКЕИ,
	|	""шт"" КАК ВидУпаковки,
	|	1 КАК Коэффициент,
	|	1 КАК КоличествоВОдномМесте,
	|	ПередачаОС.Сумма * &Курс / &Кратность КАК Цена,
	|	ПередачаОС.Сумма КАК ЦенаUSD,
	|	ПередачаОС.Сумма * &Курс / &Кратность КАК Сумма,
	|	ПередачаОС.Сумма КАК СуммаUSD,
	|	ПередачаОС.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ПередачаОС.СтавкаНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОС
	|
	|ГДЕ
	|	ПередачаОС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО                                        
	|	Номер";
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12";
	
	Макет = ПолучитьОбщийМакет("ТОРГ12ДвеВалюты");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);
	СведенияОГрузоотправителе = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	СведенияОПокупателе       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
	ОбластьМакетаШапка.Параметры.НомерДокумента = СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка));
	ОбластьМакетаШапка.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе,"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
	ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакетаШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	
	// Выводим всевозможные коды
	ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО          = СведенияОГрузоотправителе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ВидДеятельностиПоОКДП      = "";
	ОбластьМакетаШапка.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ОснованиеНомер             = "";
	ОбластьМакетаШапка.Параметры.ОснованиеДата              = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	
	// Выведем заголовок таблицы
	НомерСтраницы = 1;
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаНаСтранице      = 0;
	ИтогоСуммаНаСтраницеUSD   = 0;
	ИтогоНДСНаСтранице        = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;
	ИтогоСуммаСНДСНаСтраницеUSD = 0;
	
	// Инициализация итогов по документу
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	ИтогоСуммаСНДСUSD  = 0;
	ИтогоСумма      = 0;
	ИтогоСуммаUSD   = 0;
	ИтогоНДС        = 0;
	
	// Инициализация счетчика строк
	НомерСтроки     = 0;
	КоличествоСтрок = ЗапросТовары.Количество();
	
	// Выводим многострочную часть докмента
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
		
		ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
		
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(ВыборкаСтрок.КоличествоМест) Тогда
			ОбластьМакетаСтрока.Параметры.ВидУпаковки           = "";
			ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте = "";
		КонецЕсли;
		
		ОбластьМакетаСтрока.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		
		СуммаСНДС = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		СуммаСНДСUSD = СуммаСНДС/Шапка.Курс;
		
		Количество  = ВыборкаСтрок.Количество;
		СуммаНДС    = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС = СуммаСНДС - СуммаНДС;
		СуммаБезНДСUSD = ВыборкаСтрок.СуммаUSD;
		
		ОбластьМакетаСтрока.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакетаСтрока.Параметры.СуммаСНДСUSD   = СуммаСНДСUSD;
		ОбластьМакетаСтрока.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакетаСтрока.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
		ОбластьМакетаСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
		ОбластьМакетаСтрока.Параметры.СуммаБезНДСUSD = СуммаБезНДСUSD;
		ОбластьМакетаСтрока.Параметры.Цена        = СуммаБезНДС / ?(Количество = 0, 1, Количество);
		ОбластьМакетаСтрока.Параметры.ЦенаUSD        = СуммаБезНДСUSD / ?(Количество = 0, 1, Количество);
		
		// Проверим вывод
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
		Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
			СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и подвал документа
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			
			// Выводим итоги по странице
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтраницеUSD   = ИтогоСуммаНаСтраницеUSD;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
			ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтраницеUSD = ИтогоСуммаСНДСНаСтраницеUSD;
			
			ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
			
			// Очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаНаСтранице      = 0;
			ИтогоСуммаНаСтраницеUSD      = 0;
			ИтогоНДСНаСтранице        = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;
			ИтогоСуммаСНДСНаСтраницеUSD  = 0;
			
			// Выведем заголовок таблицы
			НомерСтраницы = НомерСтраницы + 1;
			ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
		
		// Увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
		ИтогоСуммаНаСтраницеUSD   = ИтогоСуммаНаСтраницеUSD   + СуммаБезНДСUSD;
		ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
		ИтогоСуммаСНДСНаСтраницеUSD  = ИтогоСуммаСНДСНаСтраницеUSD  + СуммаСНДСUSD;
		
		// Увеличим итоги по документу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
		ИтогоСуммаUSD   = ИтогоСуммаUSD   + СуммаБезНДСUSD;
		ИтогоНДС        = ИтогоНДС        + СуммаНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		ИтогоСуммаСНДСUSD  = ИтогоСуммаСНДСUSD  + СуммаСНДСUSD;
		
	КонецЦикла;
	
	// Выводим итоги по странице
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтраницеUSD   = ИтогоСуммаНаСтраницеUSD;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтраницеUSD  = ИтогоСуммаСНДСНаСтраницеUSD;
	
	
	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакетаВсего.Параметры.ИтогКоличество = ИтогоКоличество;
	ОбластьМакетаВсего.Параметры.ИтогСуммы      = ИтогоСумма;
	ОбластьМакетаВсего.Параметры.ИтогСуммыUSD   = ИтогоСуммаUSD;
	ОбластьМакетаВсего.Параметры.ИтогНДС        = ИтогоНДС;
	ОбластьМакетаВсего.Параметры.ИтогСуммыСНДС  = ИтогоСуммаСНДС;
	ОбластьМакетаВсего.Параметры.ИтогСуммыСНДСUSD  = ИтогоСуммаСНДСUSD;
	
	
	ТабДокумент.Вывести(ОбластьМакетаВсего);
	
	Если ЗначениеЗаполнено(Шапка.ГлавныйБухгалтер) Тогда
		ОбластьМакетаПодвал.Параметры.ФИОГлавБухгалтера = Шапка.ГлавныйБухгалтер;
	КонецЕсли;
	Если ЗначениеЗаполнено(Шапка.ДолжностьРуководителя) Тогда
		ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = Шапка.ДолжностьРуководителя;
	КонецЕсли;
	
	ОбластьМакетаПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакетаПодвал.Параметры.СуммаПрописьюUSD                           = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(ИтогоСуммаСНДСUSD, Шапка.ВалютаДокумента);
	ОбластьМакетаПодвал.Параметры.СуммаПрописью                              = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(ИтогоСуммаСНДС, ВалютаРегламентированногоУчета);
	
	ОбластьМакетаПодвал.Параметры.ДатаДокумента = Формат(Шапка.ДатаДокумента, "ДЛФ=DD");
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТОРГ12()


//Процедура заполняет параметры организации-получателя формы ОС1 
Процедура ЗаполнитьДанныеОрганизацииПолучателя(ПараметрыДокумента, ОбластьМакета)
	
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(ПараметрыДокумента.Получатель, ПараметрыДокумента.ДатаДок);
	СведенияОГрузополучателе = КонтактнаяИнформация.СведенияОЮрФизЛице(ПараметрыДокумента.Грузополучатель, ПараметрыДокумента.ДатаДок);
	
	ПараметрыОрганизации = Новый структура("ОрганизацияПолучатель,АдресПолучателя,РеквПолучателя,ДолжРукПолуч,РукПолучателя,КодПоОКПОПолучателя,ПодрПолучателя");	
	
	ПараметрыОрганизации.ОрганизацияПолучатель = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СведенияОбОрганизации.ПолноеНаименование),СведенияОбОрганизации.Представление,СведенияОбОрганизации.ПолноеНаименование);
	Если ПараметрыДокумента.Грузополучатель.Код = "консалтинг12410" Тогда
		ПараметрыОрганизации.АдресПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ЮридическийАдрес,Телефоны,");
	Иначе
		ПараметрыОрганизации.АдресПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,Телефоны,");
	КонецЕсли;
	ПараметрыОрганизации.РеквПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ПараметрыОрганизации.КодПоОКПОПолучателя = СведенияОбОрганизации.КодПоОКПО;
	
	ПараметрыОрганизации.ПодрПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН,КПП");
	
	ОтветственныеЛицаОрганизации = ОбщегоНазначения.ОтветственныеЛица(ПараметрыДокумента.Получатель, ПараметрыДокумента.ДатаДок);
	ПараметрыОрганизации.РукПолучателя = ОтветственныеЛицаОрганизации.РуководительПредставление;
	ПараметрыОрганизации.ДолжРукПолуч = ОтветственныеЛицаОрганизации.РуководительДолжность;
	
	ОбластьМакета.Параметры.Заполнить(ПараметрыОрганизации);
	
КонецПроцедуры

//Процедура заполняет параметры организации-сдатчика формы ОС1 
Процедура ЗаполнитьДанныеОрганизацииСдатчика(ПараметрыДокумента, ОбластьМакета)
	
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(ПараметрыДокумента.Сдатчик, ПараметрыДокумента.ДатаДок);
	ОтветственныеЛицаОрганизации = ОбщегоНазначения.ОтветственныеЛица(ПараметрыДокумента.Сдатчик, ПараметрыДокумента.ДатаДок);
	
	ПараметрыОрганизации = Новый структура("АдресСдатчика,РеквСдатчика,ДолжРукСдатчика,РукСдатчика,ГлавБухСдатчика,КодПоОКПОСдатчика");	
	
	//ПараметрыОрганизации.НаимСдатчика = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СведенияОбОрганизации.ПолноеНаименование),СведенияОбОрганизации.Представление,СведенияОбОрганизации.ПолноеНаименование);
	СведенияОбОрганизации2 = КонтактнаяИнформация.СведенияОЮрФизЛице(ПараметрыДокумента.Организация, ПараметрыДокумента.ДатаДок);
	
	
	ПараметрыОрганизации.АдресСдатчика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации2, "ЮридическийАдрес,Телефоны,");
	ПараметрыОрганизации.РеквСдатчика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ПараметрыОрганизации.КодПоОКПОСдатчика = СведенияОбОрганизации.КодПоОКПО;
	
	Если ЗначениеЗаполнено(ПараметрыДокумента.Руководитель) Тогда
		ПараметрыОрганизации.РукСдатчика = ПараметрыДокумента.Руководитель;
	Иначе
		ПараметрыОрганизации.РукСдатчика = ОтветственныеЛицаОрганизации.Руководитель;
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПараметрыДокумента.ДолжностьРуководителя) Тогда
		ПараметрыОрганизации.ДолжРукСдатчика = ПараметрыДокумента.ДолжностьРуководителя;
	Иначе
		ПараметрыОрганизации.ДолжРукСдатчика = ОтветственныеЛицаОрганизации.РуководительДолжность;
	КонецЕсли; 
	Если ЗначениеЗаполнено(ПараметрыДокумента.ГлавныйБухгалтер) Тогда
		ПараметрыОрганизации.ГлавБухСдатчика = ПараметрыДокумента.ГлавныйБухгалтер;
	Иначе
		ПараметрыОрганизации.ГлавБухСдатчика = ОтветственныеЛицаОрганизации.ГлавныйБухгалтер;
	КонецЕсли; 
	
	ОбластьМакета.Параметры.Заполнить(ПараметрыОрганизации);
	
КонецПроцедуры

