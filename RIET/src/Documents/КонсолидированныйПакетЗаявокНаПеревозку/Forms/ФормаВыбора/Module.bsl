
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СтруктураНастройки") Тогда
		
		СтруктураНастройки = Параметры.СтруктураНастройки;
		Если СтруктураНастройки.Имя = "ВыборИзShipment" Тогда
			НастроитьДляВыбораИзShipment(СтруктураНастройки);
		КонецЕсли;
		
		СтруктураНастройки = Параметры.СтруктураНастройки;
		Если СтруктураНастройки.Имя = "ВыборИзTDStatuses" Тогда
			НастроитьДляВыбораИзTDStatuses(СтруктураНастройки);
		КонецЕсли;

	КонецЕсли;
	
	Отбор = Параметры.Отбор;
	
	Отбор.Вставить("Отменен", Ложь);
	
	ImportExportСервер.ДобавитьОтборПоProcessLevelПриНеобходимости(Отбор, "ProcessLevel");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзShipment(СтруктураНастройки)

	СтруктураОтбора = Параметры.Отбор;
	
	СтруктураОтбора.Вставить("HouseKeeping", Ложь);	
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Requested",
		,
		ВидСравненияКомпоновкиДанных.Заполнено,
		,
		Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Received",
		,
		ВидСравненияКомпоновкиДанных.Заполнено,
		,
		Истина);	
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Granted",
		,
		ВидСравненияКомпоновкиДанных.Заполнено,
		,
		Истина);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("CurrentShipment", СтруктураНастройки.CurrentShipment);
	Запрос.УстановитьПараметр("CurrentDOCs", СтруктураНастройки.CurrentDOCs);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументКонсолидированныйПакетЗаявокНаПеревозку.Ссылка КАК DOC
		|ИЗ
		|	Документ.КонсолидированныйПакетЗаявокНаПеревозку КАК ДокументКонсолидированныйПакетЗаявокНаПеревозку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Поставка.УпаковочныеЛисты КАК ПоставкаУпаковочныеЛисты
		|		ПО ДокументКонсолидированныйПакетЗаявокНаПеревозку.Ссылка = ПоставкаУпаковочныеЛисты.УпаковочныйЛист
		|			И ((НЕ ПоставкаУпаковочныеЛисты.Ссылка = &CurrentShipment))
		|			И ((НЕ ПоставкаУпаковочныеЛисты.Ссылка.Отменен))
		|ГДЕ
		|	(НЕ ДокументКонсолидированныйПакетЗаявокНаПеревозку.Отменен)
		|	И (НЕ ДокументКонсолидированныйПакетЗаявокНаПеревозку.HouseKeeping)
		|	И (ДокументКонсолидированныйПакетЗаявокНаПеревозку.CurrentStage = ЗНАЧЕНИЕ(Перечисление.DOCStages.Granted)
		|			ИЛИ ДокументКонсолидированныйПакетЗаявокНаПеревозку.CurrentStage = ЗНАЧЕНИЕ(Перечисление.DOCStages.Booked))
		|	И (НЕ ДокументКонсолидированныйПакетЗаявокНаПеревозку.Ссылка В (&CurrentDOCs))
		|	И ПоставкаУпаковочныеЛисты.Ссылка ЕСТЬ NULL";
			
	ПодходящиеDOCs = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("DOC");
	СписокDOCs = Новый СписокЗначений;
	СписокDOCs.ЗагрузитьЗначения(ПодходящиеDOCs);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(
		Список.Отбор,
		"Ссылка",
		ВидСравненияКомпоновкиДанных.ВСписке,
		СписокDOCs,
		"Granted DOCs not in Shipments",
		Истина);
	  		
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзTDStatuses(СтруктураНастройки) 
	
	Отбор = Параметры.Отбор;
	
	Запрос = Новый Запрос;
	// { RGS AArsentev 17.05.2018
	//Запрос.УстановитьПараметр("PartNumber", СтруктураНастройки.PartNumber);
	Запрос.УстановитьПараметр("PartNumbers", СтруктураНастройки.PartNumbers);
	// } RGS AArsentev 17.05.2018
	
	Запрос.Текст = 
	// { RGS ASeryakov 27.04.2018 16:36:35 - S-I-0005166
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	// { RGS ASeryakov 27.04.2018 16:36:35 - S-I-0005166
		|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка КАК DOC
		|ИЗ
		|	Справочник.СтрокиИнвойса КАК СтрокиИнвойса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
		|		ПО СтрокиИнвойса.Инвойс = КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс
		|ГДЕ
		// { RGS AArsentev 17.05.2018
		//|	СтрокиИнвойса.КодПоИнвойсу = &PartNumber
		|	СтрокиИнвойса.КодПоИнвойсу В(&PartNumbers)
		// } RGS AArsentev 17.05.2018
		|	И НЕ СтрокиИнвойса.ПометкаУдаления
		|	И НЕ КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка.Отменен
		|	И КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка.Booked = ДАТАВРЕМЯ(1, 1, 1)";	
		
	ВозможныеDOCs = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("DOC");
	
	Отбор.Вставить("Ссылка", ВозможныеDOCs);
	
КонецПроцедуры


