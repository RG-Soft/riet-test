
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	TMS = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрКоманды, "TMS");
	
	Если TMS Тогда 
		Сообщить("You can not copy TMS DOCs.");
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос(
		"Copy DOC with invoices and parcels (numbers + ""."")?",
		РежимДиалогаВопрос.ДаНет,
		60,
		КодВозвратаДиалога.Нет,
		,
		КодВозвратаДиалога.Нет);
		
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	НовыйDOC = CopyНаСервере(ПараметрКоманды);
	Если ЗначениеЗаполнено(НовыйDOC) Тогда
		ПоказатьЗначение(,НовыйDOC);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция CopyНаСервере(DOCссылка)
	
	DOCОбъект = DOCссылка.ПолучитьОбъект();
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	// Скопируем текущий DOC
	НовыйDOC = DOCОбъект.Скопировать();
	НовыйDOC.Номер = СокрЛП(DOCОбъект.Номер) + ".";
	НовыйDOC.Дата = DOCОбъект.Дата;
	
	// Скопируем все товары и грузовые места
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("DOC", DOCОбъект.Ссылка);
	Запрос.УстановитьПараметр("Номер", СокрЛП(НовыйDOC.Номер));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс КАК Invoice,
		|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс.Дата КАК InvoiceDate
		|ИЗ
		|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
		|ГДЕ
		|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка = &DOC
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиИнвойса.Ссылка КАК Item,
		|	СтрокиИнвойса.Инвойс КАК Invoice,
		|	СтрокиИнвойса.НомерСтрокиИнвойса КАК НомерСтрокиИнвойса
		|ИЗ
		|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтрокиИнвойса КАК СтрокиИнвойса
		|		ПО КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс = СтрокиИнвойса.Инвойс
		|ГДЕ
		|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка = &DOC
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсолидированныйПакетЗаявокНаПеревозкуParcels.Parcel
		|ИЗ
		|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Parcels КАК КонсолидированныйПакетЗаявокНаПеревозкуParcels
		|ГДЕ
		|	КонсолидированныйПакетЗаявокНаПеревозкуParcels.Ссылка = &DOC
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонсолидированныйПакетЗаявокНаПеревозку.Номер КАК DOCNo
		|ИЗ
		|	Документ.КонсолидированныйПакетЗаявокНаПеревозку КАК КонсолидированныйПакетЗаявокНаПеревозку
		|ГДЕ
		|	КонсолидированныйПакетЗаявокНаПеревозку.Номер = &Номер
		|	И НЕ КонсолидированныйПакетЗаявокНаПеревозку.Отменен";	
		
	Результаты = Запрос.ВыполнитьПакет();
	
	//проверим нет ли уже скопированного DOC c номером + "."
	ВыборкаDOCs = Результаты[3].Выбрать();
	Если ВыборкаDOCs.Следующий() Тогда 
		Сообщить("DOC with no. '" + СокрЛП(НовыйDOC.Номер) + "' already exists.");
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецЕсли;
	
	// скопируем все инвойсы
	ВыборкаInvoices = Результаты[0].Выбрать();
	
	Пока ВыборкаInvoices.Следующий() Цикл
		
		НовыйInvoice = ВыборкаInvoices.Invoice.Скопировать();
		НовыйInvoice.Номер = СокрЛП(НовыйInvoice.Номер) + ".";
		НовыйInvoice.Дата = ВыборкаInvoices.InvoiceDate;
		НовыйInvoice.Записать();
		
		СтрокаТЧInvoices = НовыйDOC.Инвойсы.Добавить();
		СтрокаТЧInvoices.Инвойс = НовыйInvoice.Ссылка;
		
		// Скопируем все товары, заодно запомним соответствие старых и новых товаров
		СоответствиеСтарыхИНовыхТоваров = Новый Соответствие;
		ВыборкаItems = Результаты[1].Выбрать();
		
		Пока ВыборкаItems.Следующий() Цикл
			
			Если ВыборкаItems.Invoice <> ВыборкаInvoices.Invoice Тогда 
				Продолжить;	
			КонецЕсли;
			
			НовыйТоварОбъект = ВыборкаItems.Item.Скопировать();
			НовыйТоварОбъект.Инвойс = НовыйInvoice.Ссылка;
			НовыйТоварОбъект.НомерСтрокиИнвойса = ВыборкаItems.НомерСтрокиИнвойса;
			НовыйТоварОбъект.Записать();
			СоответствиеСтарыхИНовыхТоваров.Вставить(ВыборкаItems.Item, НовыйТоварОбъект.Ссылка);		
			
		КонецЦикла;
		
	КонецЦикла;

	// Скопируем все не отмененные грузовые места
	ВыборкаParcels = Результаты[2].Выбрать();
	Пока ВыборкаParcels.Следующий() Цикл
		
		НовыйParcel = ВыборкаParcels.Parcel.Скопировать();
		НовыйParcel.Код = СокрЛП(НовыйParcel.Код) + ".";
				
		// Заменим в табличной части старые товары на новые
		ParcelItems = НовыйParcel.Детали;
		Для Каждого СтрокаТЧ Из ParcelItems Цикл	
			СтрокаТЧ.СтрокаИнвойса = СоответствиеСтарыхИНовыхТоваров[СтрокаТЧ.СтрокаИнвойса];	
		КонецЦикла;
		
		НовыйParcel.Записать();
		
		СтрокаТЧParcels = НовыйDOC.Parcels.Добавить();
		СтрокаТЧParcels.Parcel = НовыйParcel.Ссылка;

	КонецЦикла;
	
	// Сохраним новый DOC
	НовыйDOC.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Возврат НовыйDOC.Ссылка;
		
КонецФункции
