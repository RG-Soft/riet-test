////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ДОКУМЕНТА

// Процедура - обработчик события "ПриУстановкеНовогоНомера" документа.
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс = Константы.увПрефиксБазы.Получить();
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью" документа
//
Процедура ПередЗаписью(Отказ)
	
	
#Если Клиент Тогда
	Если ОтправлятьСрочно и НЕ Отправлен Тогда
		ОтветНаВопрос = Вопрос("Отправить вопрос по email?",РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			//ИнтернетПочта = Новый ИнтернетПочта();
			//Профиль = Новый ИнтернетПочтовыйПрофиль();
			//ПрофильОтправки = Константы.увОсновнойПочтовыйПрофиль.Получить();
			//Если ПрофильОтправки.Пустая() Тогда
			//	ОтправлятьСрочно = Ложь;
			//	Сообщить("Не указан основной почтовый профиль. Невозможно отправить вопрос.");
			//	Возврат;
			//КонецЕсли;
			//Профиль.АдресСервераPOP3 = ПрофильОтправки.АдресСервераPOP3;
			//Профиль.АдресСервераSMTP = ПрофильОтправки.АдресСервераSMTP;
			//Профиль.Пароль = ПрофильОтправки.Пароль;
			//Профиль.ПарольSMTP = ПрофильОтправки.ПарольSMTP;
			//Профиль.Пользователь = ПрофильОтправки.Пользователь;
			//Профиль.ПользовательSMTP = ПрофильОтправки.ПользовательSMTP;
			//Профиль.ПортPOP3 = ПрофильОтправки.ПортPOP3;
			//Профиль.ПортSMTP = ПрофильОтправки.ПортSMTP;
			//Профиль.ВремяОжидания = 40;
			//
			//Письмо = Новый ИнтернетПочтовоеСообщение();
			//ОтборАдреса = Новый Структура("Объект,Тип,Вид",Ответил,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя );
			//АдресПолучателя = РегистрыСведений.КонтактнаяИнформация.Получить(ОтборАдреса);
			//Если АдресПолучателя.Представление = "" Тогда
			//	ОтправлятьСрочно = Ложь;
			//	Сообщить("Не указан адрес электронной почты пользователя "+Ответил+". Невозможно отправить вопрос.");
			//	Возврат;
			//КонецЕсли;
			//
			//Письмо.Получатели.Добавить(АдресПолучателя);
			//Письмо.ИмяОтправителя = Профиль.Пользователь;
			//Письмо.Тема = "Срочный вопрос от " + Спросил + ", "+Константы.увПрефиксБазы.Получить()+", " + ТекущаяДата();
			//Письмо.Отправитель = ПрофильОтправки.АдресОтправителя;
			//Строка = "Вопрос от " + Спросил + Символы.ПС + "Требуемая дата ответа " + ТребуемаяДатаОтвета + Символы.ПС + "Тема вопроса: " + ТемаВопроса + Символы.ПС + Вопрос;
			//Письмо.Тексты.Добавить(Строка,);
			//
			//Попытка
			//	ИнтернетПочта.Подключиться(Профиль);
			//	ИнтернетПочта.Послать(Письмо, ОбработкаТекстаИнтернетПочтовогоСообщения.НеОбрабатывать);
			//	ИнтернетПочта.Отключиться();
			//	Отправлен = Истина;
			//Исключение
			//	Предупреждение("Не удалось отправить файл выгрузки по электронной почте " + ПрофильОтправки.АдресОтправителя + " " + ОписаниеОшибки());
			//КонецПопытки;
			//Попытка
				//определяем адрес человека, которому задан вопрос
				ОтборАдреса = Новый Структура("Объект,Тип,Вид",Ответил,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя );
				АдресПолучателя = РегистрыСведений.КонтактнаяИнформация.Получить(ОтборАдреса);
				Если АдресПолучателя.Представление = "" Тогда
					ОтправлятьСрочно = Ложь;
					Сообщить("Не указан адрес электронной почты пользователя "+Ответил+". Невозможно отправить вопрос.");
					Возврат;
				КонецЕсли;
				Тема = "Срочный вопрос от " + Спросил + ", "+Константы.увПрефиксБазы.Получить()+", " + ТекущаяДата();
				Тело = "Вопрос от " + Спросил + Символы.ПС + "Требуемая дата ответа " + ТребуемаяДатаОтвета + Символы.ПС + "Тема вопроса: " + ТемаВопроса + Символы.ПС + Вопрос;
				ПрофильОтправки = Константы.увОсновнойПочтовыйПрофиль.Получить();
				Если ПрофильОтправки.Пустая() Тогда
					ОтправлятьСрочно = Ложь;
					Сообщить("Не указан основной почтовый профиль. Невозможно отправить вопрос.");
					Возврат;
				КонецЕсли;
				
				Если SalesBook.ОтправитьПочтуSSL(ПрофильОтправки, АдресПолучателя.Представление, Тема, Тело) Тогда
					Отправлен = Истина;
				КонецЕсли;
				
			//Исключение
			//	Сообщить(ОписаниеОшибки());
			//	Предупреждение("Не удалось отправить файл выгрузки по электронной почте " + ПрофильОтправки.АдресОтправителя);
			//КонецПопытки;
		КонецЕсли;
	КонецЕсли;             			
#КонецЕсли

	//проверим заплнение необходимых полей
	Если Не ЗначениеЗаполнено(Дата) Тогда	
		Сообщить("Не заполнено поле: Дата");
		Отказ = Истина;
	ИначеЕсли Не ЗначениеЗаполнено(Номер) Тогда	
		Сообщить("Не заполнено поле: Номер");
		Отказ = Истина;
	ИначеЕсли Не ЗначениеЗаполнено(Спросил) Тогда	
		Сообщить("Не заполнено поле: От");
		Отказ = Истина;	
	ИначеЕсли Не ЗначениеЗаполнено(Ответил) Тогда	
		Сообщить("Не заполнено поле: Кому");
		Отказ = Истина;	
	ИначеЕсли Не ЗначениеЗаполнено(ТемаВопроса) Тогда
		Сообщить("Не заполнено поле: Тема вопроса");	
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ И История.Количество()>0 Тогда
		Статус = История[История.Количество()-1].Статус;
	КонецЕсли;

КонецПроцедуры


#Если Клиент Тогда
	// Функция вывода на печать текущего вопроса.
	//
	//Возвращаемое значение - ТабличныйДокумент - содержит табличный документ
	//с выведенным в него вопросом в виде форума.
	Функция ПечататьВопрос() Экспорт
		
		ТабДок=Новый ТабличныйДокумент;
		Макет=ЭтотОбъект.ПолучитьМакет("МакетФорума");
		Запрос=Новый Запрос("ВЫБРАТЬ
		|	увВопросИстория.Статус,
		|	увВопросИстория.Дата,
		|	увВопросИстория.Пользователь,
		|	увВопросИстория.Текст
		|ИЗ
		|	Документ.увВопрос.История КАК увВопросИстория
		|ГДЕ
		|	увВопросИстория.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		ОбластьЗаголовка=Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовка.Параметры.Номер=Номер;
		ОбластьЗаголовка.Параметры.Дата=Дата;
		ОбластьЗаголовка.Параметры.ТемаВопроса=ТемаВопроса;
		ТабДок.Вывести(ОбластьЗаголовка);
		ОбластьШапки=Макет.ПолучитьОбласть("Шапка");
		ТабДок.Вывести(ОбластьШапки);
		
		ДанныеЗаписи=Макет.ПолучитьОбласть("ДанныеЗаписи");
		МакетВопрос=Макет.ПолучитьОбласть("Вопрос");
		
		Для каждого СтрокаТЗ из ТЗ Цикл
			ДанныеЗаписи.Параметры.Заполнить(СтрокаТЗ);
			ТабДок.Вывести(ДанныеЗаписи);
			Если ЗначениеЗаполнено(СтрокаТЗ.Текст) Тогда
				МакетВопрос.Параметры.Заполнить(СтрокаТЗ);
				ТабДок.Вывести(МакетВопрос);
			КонецЕсли;
		КонецЦикла;	
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Защита = Ложь;
		ТабДок.ТолькоПросмотр = Ложь;
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.ФиксацияСверху = 5;
		Возврат ТабДок;
		
	КонецФункции
#КонецЕсли

//Процедура ПриЗаписи(Отказ)
//	Запрос= Новый Запрос;
//	Запрос.Текст="ВЫБРАТЬ
//	|	ЗадачиПользователя.Ссылка КАК Задача
//	|ИЗ
//	|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
//	|ГДЕ
//	|	ЗадачиПользователя.Выполнена = ЛОЖЬ
//	|	И ЗадачиПользователя.Объект = &ЭтотВопрос";
//	Запрос.УстановитьПараметр("ЭтотВопрос",Ссылка);
//	
//	СписокПользователей=Новый СписокЗначений;
//	Если Сторона=Истина Тогда
//		Если ТипЗнч(Ответил)=Тип("СправочникСсылка.Пользователи") Тогда
//			СписокПользователей.Добавить(Ответил)
//		Иначе
//			Для каждого СтрокаТЧ из Ответил.ПользователиГруппы Цикл
//				СписокПользователей.Добавить(СтрокаТЧ.Пользователь);     	
//			КонецЦикла;
//		КонецЕсли;
//	Иначе
//		СписокПользователей.Добавить(Спросил);
//	КонецЕсли;
//	
//	Выборка=Запрос.Выполнить().Выбрать();
//	Пока Выборка.Следующий() Цикл
//		ЗадачаОбъект=Выборка.Задача.ПолучитьОбъект();
//		ЭлементСписка=СписокПользователей.НайтиПоЗначению(ЗадачаОбъект.Исполнитель);
//		
//		//Нужно определить открытую в текущий момент задачу
//		Если ЗадачаОбъект.Исполнитель=ПараметрыСеанса.ТекущийПользователь Тогда
//			Если не ЭлементСписка=Неопределено Тогда
//				СписокПользователей.Удалить(ЭлементСписка);
//			КонецЕсли;
//			Продолжить;
//		КонецЕсли;
//		
//		Если Не ЭлементСписка=Неопределено Тогда
//			ЗадачаОбъект.Дата=ТекущаяДата();
//			ЗадачаОбъект.Наименование=ТемаВопроса;
//			ЗадачаОбъект.Описание=увМониторСопровождения.ПолучитьТекстВопроса(Ссылка);
//			ЗадачаОбъект.СрокИсполнения=ТребуемаяДатаОтвета;
//			ЗадачаОбъект.СрокОповещения=ТекущаяДата();
//			ЗадачаОбъект.Оповещение=Истина;
//			ЗадачаОбъект.Объект=Ссылка;
//			ЗадачаОбъект.Инициатор=ПараметрыСеанса.ТекущийПользователь;
//			ЗадачаОбъект.Записать();       
//			
//			СписокПользователей.Удалить(ЭлементСписка);
//		Иначе		
//			ЗадачаОбъект.Описание=увМониторСопровождения.ПолучитьТекстВопроса(Ссылка);
//			ЗадачаОбъект.Выполнена=Истина;
//		КонецЕсли;
//		ЗадачаОбъект.Записать();                  		
//	КонецЦикла;
//	
//	Для каждого Пользователь из СписокПользователей Цикл
//			ЗадачаОбъект=Задачи.ЗадачиПользователя.СоздатьЗадачу();
//			ЗадачаОбъект.Дата=ТекущаяДата();
//			ЗадачаОбъект.Наименование=ТемаВопроса;
//			ЗадачаОбъект.Описание=увМониторСопровождения.ПолучитьТекстВопроса(Ссылка);
//			ЗадачаОбъект.СрокИсполнения=ТребуемаяДатаОтвета;
//			ЗадачаОбъект.СрокОповещения=ТекущаяДата();
//			ЗадачаОбъект.Оповещение=Истина;
//			ЗадачаОбъект.Объект=Ссылка;
//			ЗадачаОбъект.Исполнитель=Пользователь.Значение;
//			ЗадачаОбъект.Инициатор=ПараметрыСеанса.ТекущийПользователь;
//			ЗадачаОбъект.Записать();          	
//		КонецЦикла;

//КонецПроцедуры


