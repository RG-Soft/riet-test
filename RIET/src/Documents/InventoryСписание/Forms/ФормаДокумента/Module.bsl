
//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначения.УстановитьЗначение(ТекущийОбъект.Responsible, ПараметрыСеанса.ТекущийПользователь);
	ТекущийОбъект.LastModified = ТекущаяДата();
		
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// ТАБЛИЧНАЯ ЧАСТЬ GOODs

&НаКлиенте
Процедура GoodsQuantityПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Goods.ТекущиеДанные;
	ТекущиеДанные.ManagementSum = ТекущиеДанные.Quantity * ТекущиеДанные.ManagementPrice;
	
КонецПроцедуры

&НаКлиенте
Процедура GoodsManagementPriceПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Goods.ТекущиеДанные;
	ТекущиеДанные.ManagementSum = ТекущиеДанные.Quantity * ТекущиеДанные.ManagementPrice;
	
КонецПроцедуры

&НаКлиенте
Процедура GoodsManagementSumПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Goods.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Quantity) Тогда
		ТекущиеДанные.ManagementPrice = ТекущиеДанные.ManagementSum / ТекущиеДанные.Quantity;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура BatchНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Goods.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Период", Объект.Дата);
	ПараметрыФормы.Вставить("Location", Объект.InventoryLocation);
	ПараметрыФормы.Вставить("AU", ТекущиеДанные.AU);
	ПараметрыФормы.Вставить("UOM", ТекущиеДанные.UOM);
	ПараметрыФормы.Вставить("Good", ТекущиеДанные.Good);
	
	ОткрытьФормуМодально("ОбщаяФорма.ФормаПодбораПартииМатериалов", ПараметрыФормы, Элемент);
	
КонецПроцедуры


&НаКлиенте
Процедура BatchОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Goods.ТекущиеДанные;
	
	ТекущиеДанные.Batch = ВыбранноеЗначение.Batch;
	
КонецПроцедуры


&НаКлиенте
Процедура РеализацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	МассивКодов = Новый Массив;
	Для каждого СтрокаТЧ Из Объект.Goods Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Good) Тогда
			МассивКодов.Добавить(СтрокаТЧ.Good.Код);
		КонецЕсли; 
	КонецЦикла; 
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Сегмент", Объект.Segment);
	ПараметрыФормы.Вставить("Дата", ДобавитьМесяц(Объект.дата, -6));
	ПараметрыФормы.Вставить("МассивКодов", МассивКодов);
	ПараметрыФормы.Вставить("AU", Объект.Goods[0].AU);
	
	ОткрытьФормуМодально("Документ.InventoryСписание.Форма.ФормаВыбораРеализации", ПараметрыФормы, Элемент);
КонецПроцедуры


&НаКлиенте
Процедура РеализацияПриИзменении(Элемент)
	
	ПриИзмененииРеализации();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииРеализации()

	Если ЗначениеЗаполнено(Объект.Реализация) Тогда
		Объект.НалоговыйПериод = Объект.Реализация.НалоговыйПериод;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	обновитьСчетаФактуры()
КонецПроцедуры

&НаКлиенте
Процедура GoodsРеализацияПриИзменении(Элемент)
	ОбновитьСчетаФактуры()
КонецПроцедуры

&НаСервере
Процедура обновитьСчетаФактуры()
	для каждого Стр из Объект.Goods цикл
		стр.СчетФактура = ОбщегоНазначения.НайтиПодчиненныйДокумент(Стр.Реализация, "СчетФактураВыданный");
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	//Добавила Федотова Л., РГ-Софт, 28.03.13, вопрос SLI-0003437
	Попытка
		Если ВладелецФормы.Заголовок = "ОсновныеСредства" Тогда
			СтруктураОповещения = Новый Структура("Документ", Объект.Ссылка);
			Оповестить("ДокументСписанияInventory", СтруктураОповещения);
		КонецЕсли; 
	Исключение
	КонецПопытки;
	//Конец добавления
	
КонецПроцедуры

//-> RG-Soft VIvanov 2015/02/18
&НаКлиенте
Процедура GoodsAUНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текДанные = Элементы.Goods.ТекущиеДанные;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Дата", Объект.Дата);
	СтруктураПараметров.Вставить("ТекущаяСтрока", текДанные.AU);
	ФормаВыбора = ПолучитьФорму("Справочник.КостЦентры.Форма.ФормаВыбораИзРегистра", СтруктураПараметров, Элемент);
	ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура GoodsAUАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПолученияДанных.Вставить("Дата", Объект.Дата);
		//ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.КостЦентры"), Параметры);
		ДанныеВыбора = РГСофт.ПолучитьДанныеВыбораКостЦентров(ПараметрыПолученияДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура GoodsAUОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПолученияДанных.Вставить("Дата", Объект.Дата);
		//ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.КостЦентры"), Параметры);
		ДанныеВыбора = РГСофт.ПолучитьДанныеВыбораКостЦентров(ПараметрыПолученияДанных);
	КонецЕсли;
	
КонецПроцедуры
//<- RG-Soft VIvanov

// { RGS MYurkevich 7/13/2015 4:03:00 PM - 
&НаКлиенте
Процедура РедактироватьСебестоимость(Команда)
	ПараметрыФормы = Новый Структура;
	Отбор  = Новый Структура;      
	Отбор.Вставить("Регистратор",Объект.Ссылка);
	ПараметрыФормы.Вставить("Отбор",Отбор);
	ОткрытьФорму("РегистрСведений.РасчетСебестоимости.Форма.ФормаНабораЗаписей", ПараметрыФормы);
КонецПроцедуры
// } RGS MYurkevich 7/13/2015 4:03:00 PM -

// { RGS AArsentev 10.10.2016 18:14:05 - SLI-0006848
&НаКлиенте
Процедура ВключитьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из Объект.Goods Цикл
		СтрокаТЧ.Флаг = Истина;		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из Объект.Goods Цикл
		СтрокаТЧ.Флаг = Ложь;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьPref_Реализацию(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьИнвентори", ЭтотОбъект); 
	ОткрытьФорму("ОбщаяФорма.ИнвенториЗаполнениеСписание", , , , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьИнвентори(Результат, ДополнительныеПараметры) Экспорт  
	
	Если Результат <> Неопределено Тогда
		Если Вопрос("Текущие данные в колонке Реализация будут перезаполнены! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;	
		КонецЕсли;
		Для Каждого Элемент из Объект.Goods Цикл
			
			Если Не Элемент.Флаг тогда
				Продолжить
			Иначе
				Если ЗначениеЗаполнено(Результат.Реализация) Тогда
					Элемент.Реализация = Результат.Реализация;
				КонецЕсли;
				Если ЗначениеЗаполнено(Результат.ticked) Тогда
					Элемент.TicketId = Результат.ticked;
				КонецЕсли;
			КонецЕсли;									
		КонецЦикла;
		ОбновитьСчетаФактуры()
	Иначе
		Возврат
	КонецЕсли;	

КонецПроцедуры 
// } RGS AArsentev 10.10.2016 18:14:05 - SLI-0006848

// { RGS LFedotova 22.12.2016 18:54:53 - вопрос SLI-0007006
&НаКлиенте
Процедура LocationInПриИзменении(Элемент)
	LocationInПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура LocationInПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	InventoryLocationСведенияСрезПоследних.Location,
		|	InventoryLocationСведенияСрезПоследних.Отправитель,
		|	InventoryLocationСведенияСрезПоследних.Получатель,
		|	InventoryLocationСведенияСрезПоследних.ДоверенностьОтправителяДата,
		|	InventoryLocationСведенияСрезПоследних.ДоверенностьПолучателяДата,
		|	InventoryLocationСведенияСрезПоследних.МатериалПередал,
		|	InventoryLocationСведенияСрезПоследних.МатериалПолучил
		|ИЗ
		|	РегистрСведений.InventoryLocationСведения.СрезПоследних(&Дата, Location = &Location) КАК InventoryLocationСведенияСрезПоследних";
	
	Запрос.УстановитьПараметр("Location", Объект.LocationIn);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект,ВыборкаДетальныеЗаписи);	
	КонецЦикла;
	
КонецПроцедуры
// } RGS LFedotova 22.12.2016 18:55:14 - вопрос SLI-0007006

// { RGS LFedotova 25.10.2018 21:13:48 - вопрос SLI-0007720
&НаКлиенте
Процедура Defer(Команда)
	Объект.Defer = Истина;
КонецПроцедуры
// } RGS LFedotova 25.10.2018 21:13:57 - вопрос SLI-0007720 


 