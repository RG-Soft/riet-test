//Добавила Федорова 23.03.16 KF-00000196
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(МассивОбъектов, ПараметрыПечатиНач, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	ЭтотОбъект = МассивОбъектов[0];
	Если ТипЗнч(ЭтотОбъект) = Тип("ДокументСсылка.InventoryСписание") Тогда
		ЭтотОбъект = ЭтотОбъект.ПолучитьОбъект();
	КонецЕсли;
	ИмяМакета = КоллекцияПечатныхФорм[0].ИмяМакета;
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
		Сообщить("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	// Получить экземпляр документа на печать
	ТабДокумент = ЭтотОбъект.ПечатьАкта(МассивОбъектов, ОбъектыПечати);
	Если ИмяМакета = "АктПриемаПередачи" Тогда
		
		Если ИмяМакета = "АктПриемаПередачи" Тогда
			ПараметрыПечати = ПараметрыПечатиНач;
		КонецЕсли;
				
	КонецЕсли;
	
	Стр = КоллекцияПечатныхФорм.Найти(ВРег(ИмяМакета), "ИмяВРЕГ");
	
	Если Стр <> Неопределено Тогда
		Стр.ТабличныйДокумент = ТабДокумент;
		Стр.СинонимМакета = ИмяМакета;
		Стр.Картинка = Неопределено;
		Стр.ПолныйПутьКМакету = "";
	КонецЕсли;
	
	// Запомним номер строки, с которой начали выводить текущий документ.
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст	= ТекстЗапросаПечатьАктов();
	Результаты		= Запрос.ВыполнитьПакет();
	
	ПервыйДокумент = Истина;

	Выборка	= Результаты[0].Выбрать();
	
	// В табличном документе зададим имя области, в которую был выведен объект.
	// Нужно для возможности печати покомплектно.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	
КонецПроцедуры // Печать

Функция ТекстЗапросаПечатьАктов()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	InventoryСписание.Ссылка
	|ИЗ
	|	Документ.InventoryСписание КАК InventoryСписание
	|ГДЕ
	|	InventoryСписание.Ссылка В(&МассивОбъектов)";	
	Возврат ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

Процедура ПечатьАкта(ТабДок, МассивПараметров) Экспорт
	
	Ссылка  = МассивПараметров;
	
	Макет = Документы.InventoryСписание.ПолучитьМакет("АктПриемаПередачи");
	
	//получение областей
	Заголовок		 = Макет.ПолучитьОбласть("Заголовок");
	ТекстИ			 = Макет.ПолучитьОбласть("ТекстИ");
	АнглТекст		 = Макет.ПолучитьОбласть("АнглТекст");
	АнглТекст1		 = Макет.ПолучитьОбласть("АнглТекст1");
	РусТекст		 = Макет.ПолучитьОбласть("РусТекст");
	РусТекст1		 = Макет.ПолучитьОбласть("РусТекст1");
	ЗаголовокТабл	 = Макет.ПолучитьОбласть("ЗаголовокТабл");
	ШапкаТабл		 = Макет.ПолучитьОбласть("ШапкаТаблицы");
	Строка			 = Макет.ПолучитьОбласть("Строка");
	ИтогАнгл		 = Макет.ПолучитьОбласть("ИтогАнгл");
	ИтогРус			 = Макет.ПолучитьОбласть("ИтогРус");
	Подвал			 = Макет.ПолучитьОбласть("Подвал");
	ПустаяСтрока	 = Макет.ПолучитьОбласть("ПустаяСтрока");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
	|	КонтрагентыКонтактнаяИнформация.Представление + ""; "" + КонтрагентыКонтактнаяИнформацияАнгл.Представление КАК Представление
	|ПОМЕСТИТЬ втАдреса
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформацияАнгл
	|		ПО КонтрагентыКонтактнаяИнформация.Ссылка = КонтрагентыКонтактнаяИнформацияАнгл.Ссылка
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Вид = &Адрес
	|	И КонтрагентыКонтактнаяИнформацияАнгл.Вид = &АдресАнгл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(155)) КАК АдресРус,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформацияАнгл.Представление, """") КАК СТРОКА(155)) КАК АдресАнгл
	|ПОМЕСТИТЬ втАдресОтправителя
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияАнгл
	|		ПО КонтактнаяИнформация.Объект = КонтактнаяИнформацияАнгл.Объект
	|ГДЕ
	|	КонтактнаяИнформация.Вид = &АдресОтпр
	|	И КонтактнаяИнформацияАнгл.Вид = &АдресОтпрАнгл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryСписание.Дата,
	|	InventoryСписание.Номер КАК НомерАкта,
	|	InventoryСписание.Ссылка КАК Ссылка,
	|	ГОД(InventoryСписание.Дата) КАК Год,
	|	МЕСЯЦ(InventoryСписание.Дата) КАК Месяц,
	|	ДЕНЬ(InventoryСписание.Дата) КАК День,
	|	InventoryСписание.ДоверенностьПолучателяДата КАК ДоверенностьПолучателя,
	|	InventoryСписание.ДоверенностьОтправителяДата КАК ДоверенностьОтправителя,
	|	InventoryСписание.Получатель.ФИОродительныйПадеж КАК Получатель,
	|	InventoryСписание.Отправитель.ФИОродительныйПадеж КАК Отправитель,
	|	InventoryСписание.КонтрагентПродажи.НаименованиеПолное КАК КонтрагентПродажиРус,
	|	InventoryСписание.КонтрагентПродажи.DescriptionFull КАК КонтрагентПродажиАнгл,
	|	InventoryСписание.МатериалПолучил,
	|	InventoryСписание.МатериалПередал,
	|	InventoryСписание.Получатель.НаименованиеEng КАК ПолучательАнгл,
	|	InventoryСписание.Отправитель.НаименованиеEng КАК ОтправительАнгл,
	|	втАдресаПолучателя.Представление КАК АдресПолучателя,
	|	втАдресОтправителя.АдресРус + ""; "" + втАдресОтправителя.АдресАнгл КАК АдресОтправителя,
	|	ПодразделенияОрганизаций.НаименованиеПолное КАК ОтправительОрг,
	|	ПодразделенияОрганизаций.НаименованиеИнострОрганизации КАК ОтправительОргАнгл
	|ИЗ
	|	Документ.InventoryСписание КАК InventoryСписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАдреса КАК втАдресаПолучателя
	|		ПО InventoryСписание.КонтрагентПродажи = втАдресаПолучателя.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО InventoryСписание.TaxRegistration = ПодразделенияОрганизаций.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАдресОтправителя КАК втАдресОтправителя
	|		ПО InventoryСписание.TaxRegistration = втАдресОтправителя.Объект
	|ГДЕ
	|	InventoryСписание.Ссылка В(&Ссылка)
	|АВТОУПОРЯДОЧИВАНИЕ";
				   
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Адрес",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Запрос.УстановитьПараметр("АдресОтпр",Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	Запрос.УстановитьПараметр("АдресАнгл",Справочники.ВидыКонтактнойИнформации.АнглийскийАдресКонтрагента);
	Запрос.УстановитьПараметр("АдресОтпрАнгл",Справочники.ВидыКонтактнойИнформации.АнглийскийАдресОрганизации);
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	
	ТаблицаДат = Новый ТаблицаЗначений;
	ТаблицаДат.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаДат.Добавить();
		НоваяСтрока.Дата = Выборка.Дата;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	// { RGS LFedotova 25.01.2017 12:48:55 - вопрос SLI-0007090
	Если СокрЛП(Ссылка.IctDocType) = "IS" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	InventoryСписаниеGoods.НомерСтроки КАК НомерСтроки,
		|	InventoryСписаниеGoods.Good.Наименование КАК НоменклатураАнгл,
		|	InventoryСписаниеGoods.Good.Код КАК НомерПартии,
		|	InventoryСписаниеGoods.Quantity КАК Количество,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementPrice КАК ЧИСЛО(15, 2)) КАК СтоимостьШтВал,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementSum КАК ЧИСЛО(15, 2)) КАК СтоимостьВсегоВал,
		|	ВЫБОР
		|		КОГДА InventoryBatchesОбороты.QuantityРасход <> 0
		|			ТОГДА ВЫРАЗИТЬ(InventoryBatchesОбороты.SumРасход / InventoryBatchesОбороты.QuantityРасход КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ ВЫРАЗИТЬ(InventoryBatchesОбороты.SumРасход КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК СтоимостьШт,
		|	ВЫРАЗИТЬ(InventoryBatchesОбороты.SumРасход КАК ЧИСЛО(15, 2)) КАК СтоимостьВсего,
		|	InventoryСписаниеGoods.Ссылка КАК Ссылка,
		|	InventoryСписаниеGoods.UOM.Код КАК ЕдИзм,
		|	InventoryСписаниеGoods.Good.DescriptionRus КАК НоменклатураРус
		|ИЗ
		|	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.InventoryBatches.Обороты(, , Регистратор, ) КАК InventoryBatchesОбороты
		|		ПО InventoryСписаниеGoods.Ссылка = InventoryBatchesОбороты.Регистратор
		|			И InventoryСписаниеGoods.Good = InventoryBatchesОбороты.Good
		|ГДЕ
		|	InventoryСписаниеGoods.Ссылка В(&Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки),
		|	СУММА(СтоимостьШт),
		|	СУММА(СтоимостьВсего)
		|ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ТаблицаДат.Дата, ДЕНЬ) КАК Дата
		|ПОМЕСТИТЬ втТаблицаДат
		|ИЗ
		|	&ТаблицаДат КАК ТаблицаДат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КурсыВалют.Курс,
		|	КурсыВалют.Кратность,
		|	НАЧАЛОПЕРИОДА(КурсыВалют.Период, ДЕНЬ) КАК ДатаКурса
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаДат КАК втТаблицаДат
		|		ПО КурсыВалют.Период = втТаблицаДат.Дата
		|ГДЕ
		|	КурсыВалют.Валюта = &Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	InventoryСписаниеGoods.НомерСтроки КАК НомерСтроки,
		|	InventoryGoods.Наименование КАК НоменклатураАнгл,
		|	InventoryGoods.Код КАК НомерПартии,
		|	InventoryСписаниеGoods.Quantity КАК Количество,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementPrice КАК ЧИСЛО(15, 2)) КАК СтоимостьШтВал,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementSum КАК ЧИСЛО(15, 2)) КАК СтоимостьВсегоВал,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementPrice * КурсыВалют.Курс / КурсыВалют.Кратность КАК ЧИСЛО(15, 2)) КАК СтоимостьШт,
		|	ВЫРАЗИТЬ(InventoryСписаниеGoods.ManagementSum * КурсыВалют.Курс / КурсыВалют.Кратность КАК ЧИСЛО(15, 2)) КАК СтоимостьВсего,
		|	InventoryСписаниеGoods.Ссылка КАК Ссылка,
		|	InventoryСписаниеGoods.UOM.Код КАК ЕдИзм,
		|	InventoryGoods.DescriptionRus КАК НоменклатураРус
		|ИЗ
		|	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.InventoryGoods КАК InventoryGoods
		|		ПО InventoryСписаниеGoods.Good = InventoryGoods.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		|		ПО (НАЧАЛОПЕРИОДА(InventoryСписаниеGoods.Ссылка.Дата, ДЕНЬ) = КурсыВалют.ДатаКурса)
		|ГДЕ
		|	InventoryСписаниеGoods.Ссылка В(&Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки),
		|	СУММА(СтоимостьШтВал),
		|	СУММА(СтоимостьВсегоВал),
		|	СУММА(СтоимостьШт),
		|	СУММА(СтоимостьВсего)
		|ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;	

	// } RGS LFedotova 25.01.2017 12:49:48 - вопрос SLI-0007090
	Запрос.УстановитьПараметр("ТаблицаДат", ТаблицаДат);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоНаименованию("USD"));
	
	ВыборкаОбщ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаШапка.Следующий() Цикл
		
	    Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ВыборкаОбщ.Сбросить();

		Если ВыборкаОбщ.НайтиСледующий(ВыборкаШапка.Ссылка) Тогда
			ВыборкаСтрок = ВыборкаОбщ.Выбрать();
		Иначе
			ТекстСообщения = НСтр("ru = 'Невозможно сформировать печатную форму ""Акт приема-передачи ТМЦ"" документа ""%1"", так как табличная часть в данном документе является пустой.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ВыборкаШапка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ВыборкаШапка.Ссылка);
			Продолжить;			
		КонецЕсли;
		
		Заголовок.Параметры.Заполнить(ВыборкаШапка);
		ТабДок.Вывести(Заголовок);
		ТабДок.Вывести(ПустаяСтрока);
		
		АнглТекст.Параметры.Заполнить(ВыборкаШапка);
		АнглТекст.Параметры.ДоверенностьОтправителя =  Формат(ВыборкаШапка.ДоверенностьОтправителя,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(АнглТекст);                                                                 
		ТабДок.Вывести(ПустаяСтрока);
		РусТекст.Параметры.Заполнить(ВыборкаШапка);
		РусТекст.Параметры.ДоверенностьОтправителя =  Формат(ВыборкаШапка.ДоверенностьОтправителя,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(РусТекст);
		
		ТабДок.Вывести(ПустаяСтрока);
		ТабДок.Вывести(ТекстИ);
		ТабДок.Вывести(ПустаяСтрока);
		
		АнглТекст1.Параметры.Заполнить(ВыборкаШапка);
		АнглТекст1.Параметры.ДоверенностьПолучателя =  Формат(ВыборкаШапка.ДоверенностьПолучателя,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(АнглТекст1);
		Если ЗначениеЗаполнено(ВыборкаШапка.КонтрагентПродажиАнгл) Тогда
			АнглТекст1.Параметры.КонтрагентПродажиАнгл = ВыборкаШапка.КонтрагентПродажиРус;
		КонецЕсли;
		ТабДок.Вывести(ПустаяСтрока);
		РусТекст1.Параметры.Заполнить(ВыборкаШапка);
		РусТекст1.Параметры.ДоверенностьПолучателя =  Формат(ВыборкаШапка.ДоверенностьПолучателя,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(РусТекст1);
		ТабДок.Вывести(ПустаяСтрока);
		
		ТабДок.Вывести(ЗаголовокТабл);
		ТабДок.Вывести(ПустаяСтрока);
		ТабДок.Вывести(ШапкаТабл);
		
		Пока ВыборкаСтрок.Следующий() Цикл
			Строка.Параметры.Заполнить(ВыборкаСтрок);
			ТабДок.Вывести(Строка);				
		КонецЦикла;
		
		ВыборкаСтрок.Сбросить();
		
		ТабДок.Вывести(ПустаяСтрока);
		
		ИтогАнгл.Параметры.Заполнить(ВыборкаОбщ);
		ТабДок.Вывести(ИтогАнгл);
		
		ИтогРус.Параметры.Заполнить(ВыборкаОбщ);
		ТабДок.Вывести(ИтогРус);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		Подвал.Параметры.Заполнить(ВыборкаШапка);
		Табдок.Вывести(Подвал);
			
	КонецЦикла;

	
КонецПроцедуры
//Конец добавления 23.03.16 KF-00000196

Процедура ПечатьОС(ТабДок, МассивПараметров) Экспорт
	
	Ссылка   = МассивПараметров[0];
	ОСLawson = МассивПараметров[1];
	
	
	Макет = Документы.InventoryСписание.ПолучитьМакет("Печать");
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	InventoryСписаниеGoods.ОСLawson,
	|	InventoryСписаниеGoods.AU,
	|	InventoryСписаниеGoods.Ссылка.Segment,
	|	InventoryСписаниеGoods.Ссылка.Номер,
	|	InventoryСписаниеGoods.Ссылка.Дата,
	|	InventoryСписаниеGoods.Ссылка.Company,
	|	InventoryСписаниеGoods.Ссылка.TaxRegistration
	|ПОМЕСТИТЬ ВТ_ОСLawson
	|ИЗ
	|	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	|ГДЕ
	|	InventoryСписаниеGoods.Ссылка = &Ссылка
	|	И НЕ InventoryСписаниеGoods.ОСLawson = ЗНАЧЕНИЕ(Справочник.ОсновныеСредстваLawson.ПустаяСсылка)
	|	И InventoryСписаниеGoods.ОСLawson = &ОСLawson
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОсновныеСредства.Ссылка,
	|	ВТ_ОСLawson.ОСLawson,
	|	ВТ_ОСLawson.AU,
	|	ОсновныеСредства.Код КАК КодОС,
	|	ОсновныеСредства.НаименованиеПолное,
	|	ОсновныеСредства.НаименованиеENG,
	|	ВТ_ОСLawson.Segment,
	|	ВТ_ОСLawson.Номер,
	|	ВТ_ОСLawson.Дата,
	|	ВТ_ОСLawson.Company,
	|	ВТ_ОСLawson.TaxRegistration
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОСLawson КАК ВТ_ОСLawson
	|		ПО ОсновныеСредства.ОсновноеСредствоLawson = ВТ_ОСLawson.ОСLawson";
	
	ЗапросШапка.Параметры.Вставить("Ссылка", Ссылка);
	ЗапросШапка.Параметры.Вставить("ОСLawson", ОСLawson);
	
	РезультатШапка = ЗапросШапка.Выполнить();
	ВыборкаШапка = РезультатШапка.Выбрать();
	ВыборкаШапка.Следующий();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьGoodsШапка = Макет.ПолучитьОбласть("GoodsШапка");
	ОбластьGoods = Макет.ПолучитьОбласть("Goods");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	Шапка.Параметры.Заполнить(ВыборкаШапка);
	
	Если ВыборкаШапка.Company = 4 Тогда
		//[РКХ->]
		//Если ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "PA" Тогда
		//	//Изменила Федотова Л., РГ-Софт, 01.10.13, вопрос PA_-0000019 ->
		//	//Шапка.Параметры.Company = Справочники.Организации.НайтиПоКоду("00001");
		//	Шапка.Параметры.Company = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяОрганизация");
		//	//<-
		//Иначе
		//	Шапка.Параметры.Company = Справочники.Организации.НайтиПоКоду("00001");
		//КонецЕсли;
		//[<-РКХ]		
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	InventoryСписаниеGoods.Good,
	|	InventoryСписаниеGoods.Quantity КАК Quantity,
	|	InventoryСписаниеGoods.ОСLawson,
	|	InventoryСписаниеGoods.AU,
	|	InventoryBatches.Sum * InventoryСписаниеGoods.Quantity / InventoryBatches.Quantity КАК Sum,
	|	ВЫРАЗИТЬ(InventoryСписаниеGoods.Good.DescriptionRus КАК СТРОКА(250)) КАК DescriptionRus,
	|	InventoryСписаниеGoods.Good.Наименование,
	|	InventoryСписаниеGoods.FinishedGoodPONumber,
	|	InventoryСписаниеGoods.Good.Код КАК Code
	|ПОМЕСТИТЬ ТЧ
	|ИЗ
	|	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.InventoryBatches КАК InventoryBatches
	|		ПО InventoryСписаниеGoods.Good = InventoryBatches.Good
	|ГДЕ
	|	InventoryСписаниеGoods.Ссылка = &Ссылка
	|	И НЕ InventoryСписаниеGoods.ОСLawson = ЗНАЧЕНИЕ(Справочник.ОсновныеСредстваLawson.ПустаяСсылка)
	|	И InventoryBatches.Регистратор = &Ссылка
	|	И InventoryСписаниеGoods.ОСLawson = &ОСLawson
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ.Good,
	|	СУММА(ТЧ.Quantity) КАК Quantity,
	|	ТЧ.ОСLawson,
	|	ТЧ.AU,
	|	СУММА(ТЧ.Sum) КАК Sum,
	|	ТЧ.DescriptionRus,
	|	ТЧ.GoodНаименование,
	|	ТЧ.FinishedGoodPONumber,
	|	ТЧ.Code
	|ИЗ
	|	ТЧ КАК ТЧ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧ.ОСLawson,
	|	ТЧ.AU,
	|	ТЧ.DescriptionRus,
	|	ТЧ.Good,
	|	ТЧ.GoodНаименование,
	|	ТЧ.FinishedGoodPONumber,
	|	ТЧ.Code
	|ИТОГИ
	|	СУММА(Quantity),
	|	СУММА(Sum)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("ОСLawson", ОСLawson);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	
	ПервоначальнаяСтоимость = ВыборкаИтоги.Sum;
	Шапка.Параметры.ПервоначальнаяСтоимость = ПервоначальнаяСтоимость;	
	ТабДок.Вывести(Шапка, ВыборкаШапка.Уровень());
	
	ТабДок.Вывести(ОбластьGoodsШапка);
	
	КоличествоИтог = ВыборкаИтоги.Quantity;
	Выборка= ВыборкаИтоги.Выбрать();
	
	НомерСтроки = 0;
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;

		ОбластьGoods.Параметры.Заполнить(Выборка);
		ОбластьGoods.Параметры.Номер = НомерСтроки;
		ОбластьGoods.Параметры.Price = ?(Выборка.Quantity = 0, 0, Выборка.Sum / Выборка.Quantity);
		
		ТабДок.Вывести(ОбластьGoods, Выборка.Уровень());
	КонецЦикла;
	
	Подвал.Параметры.Quantity = КоличествоИтог;
	Подвал.Параметры.Sum = ПервоначальнаяСтоимость;

	ТабДок.Вывести(Подвал);
	
	
КонецПроцедуры
