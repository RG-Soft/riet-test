////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовОпераций(Дата, Основание)

	ИспользуетсяПостановлениеНДС1137 = УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(Дата);
	ОсуществляетсяЗакупкаТоваровУслугДляКомитентов = ПолучитьФункциональнуюОпцию("ОсуществляетсяЗакупкаТоваровУслугДляКомитентов");
	
	СписокВидовОпераций = Новый СписокЗначений;
	
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление, ВернутьСтр("ru = 'Счет-фактура на поступление'"));
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАванс, ВернутьСтр("ru = 'Счет-фактура на аванс'"));
	
	Если ИспользуетсяПостановлениеНДС1137 И ОсуществляетсяЗакупкаТоваровУслугДляКомитентов
		И ТипЗнч(Основание) <> Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда 
		СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента, ВернутьСтр("ru = 'Счет-фактура на аванс комитента на закупку'"));
	КонецЕсли;
	
	Если Основание = Неопределено Тогда
		СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный, ВернутьСтр("ru = 'Корректировочный счет-фактура...'"));
		СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.ПустаяСсылка(), ВернутьСтр("ru = 'Исправление счета-фактуры...'"));
	КонецЕсли;
	
	Возврат СписокВидовОпераций;

КонецФункции

&НаКлиенте
Процедура НачатьЗамерВремени(ВидСчетаФактуры)

	// Для корректировочного счета-фактуры показывается сначала форма подбора исходного документа,
	// поэтому счетчик для него здесь не включаем.

	КлючеваяОперация = "";
	Если ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.НаПоступление") Тогда
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			КлючеваяОперация = "СозданиеФормыСчетФактураПолученныйБланкСтрогойОтчетности";
		Иначе
			КлючеваяОперация = "СозданиеФормыСчетФактураПолученныйНаПоступление";
		КонецЕсли;
	ИначеЕсли ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.НаАванс")
		ИЛИ ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента") Тогда
		КлючеваяОперация = "СозданиеФормыСчетФактураПолученныйНаАванс";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КлючеваяОперация) Тогда
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовОпераций.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ЗначенияЗаполнения.Вставить("ВидСчетаФактуры", СтрокаТаблицы.Значение);
		
		ЗначениеОтбора = Новый Структура();
		
		Если ЗначенияЗаполнения.Свойство("Организация") Тогда
			ЗначениеОтбора.Вставить("Организация", ЗначенияЗаполнения.Организация);
		КонецЕсли;
		
		Если ЗначенияЗаполнения.Свойство("Контрагент") Тогда 
			ЗначениеОтбора.Вставить("Контрагент", ЗначенияЗаполнения.Контрагент);
		КонецЕсли;
		
		ЗначениеОтбора.Вставить("Исправление", Ложь);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
		СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
		СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
		СтруктураПараметров.Вставить("Основание",           Основание);
		СтруктураПараметров.Вставить("Отбор", ЗначениеОтбора);
		
		Модифицированность = Ложь;
		Закрыть();
		
		
		НачатьЗамерВремени(СтрокаТаблицы.Значение);
		
		ОткрытьФорму("Документ.СчетФактураПолученный.Форма." + ФормыСчетовФактур[СтрокаТаблицы.Значение], СтруктураПараметров, ВладелецФормы);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовОпераций.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ЗначенияЗаполнения.Вставить("ВидСчетаФактуры", СтрокаТаблицы.Значение);
	
	ЗначениеОтбора = Новый Структура();
	
	Если ЗначенияЗаполнения.Свойство("Организация") Тогда
		ЗначениеОтбора.Вставить("Организация", ЗначенияЗаполнения.Организация);
	КонецЕсли;
	
	Если ЗначенияЗаполнения.Свойство("Контрагент") Тогда 
		ЗначениеОтбора.Вставить("Контрагент", ЗначенияЗаполнения.Контрагент);
	КонецЕсли;
	
	ЗначениеОтбора.Вставить("Исправление", Ложь);
    	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
	СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("Основание",           Основание);
	СтруктураПараметров.Вставить("Отбор", ЗначениеОтбора);
	
	Модифицированность = Ложь;
	Закрыть();
	
	НачатьЗамерВремени(СтрокаТаблицы.Значение);
	
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма." + ФормыСчетовФактур[СтрокаТаблицы.Значение], СтруктураПараметров, ВладелецФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
	ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	Основание           = Параметры.Основание;
	
	ФормыСчетовФактур = Новый ФиксированноеСоответствие(
		Документы.СчетФактураПолученный.ПолучитьСоответствиеВидовСчетаФактурыФормам());
	
	ВидыОпераций = ПолучитьСписокВидовОпераций(Объект.Дата, Основание);
	Для Каждого ВидОперации Из ВидыОпераций Цикл
		НоваяОперация = СписокВидовОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяОперация, ВидОперации);
	КонецЦикла;

КонецПроцедуры
