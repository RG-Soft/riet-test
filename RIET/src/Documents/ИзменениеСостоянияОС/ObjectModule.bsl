///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА
Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация");

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);

	// Теперь вызовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверим на виды операций, которые не могут использоваться в данном документе КАТЕГОРИЧЕСКИ!
	Если СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету или 
		СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию тогда
		ОбщегоНазначения.ОшибкаПриПроведении("События с основными средствами с видом <Принятие к учету> или <Принятие к учету с вводом в эксплуатацию>
		|не могут отражаться данным документом!",Отказ,Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверка реквизитов в ТЧ по регл. учету
// 
Процедура ПроверкаРеквизитовТЧРегл(Отказ, Заголовок)

	// Проверим соответствие организайий ОС и организации документа

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокОС"      , ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ВыбОрганизация", Организация);
	Запрос.УстановитьПараметр("ДатаСреза"     , Дата);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МестонахождениеОсновныхСредствОрганизацийСрезПоследних.Организация КАК Организация,
	|	ОсновныеСредства.Код                                               КАК Инв,
	|	ОсновныеСредства.Ссылка                                            КАК ОсновноеСредство,
	|	Представление(ОсновныеСредства.Ссылка)                             КАК ОсновноеСредствоПредставление
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСреза, (ОсновноеСредство В(&СписокОС) И Организация = &ВыбОрганизация)) КАК МестонахождениеОсновныхСредствОрганизацийСрезПоследних
	|	ПО ОсновныеСредства.Ссылка = МестонахождениеОсновныхСредствОрганизацийСрезПоследних.ОсновноеСредство
	|
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&СписокОС)
	|	И
	|	НЕ ОсновныеСредства.ЭтоГруппа
	|	И
	|	МестонахождениеОсновныхСредствОрганизацийСрезПоследних.Организация ЕСТЬ NULL";
	Выборка = Запрос.Выполнить().Выбрать();

	//Если Выборка.Количество() > 0 Тогда

	//	Отказ = Истина;

	//	Пока Выборка.Следующий() Цикл
	//		ОбщегоНазначения.СообщитьОбОшибке(("Бух.учет: Несоответствие организаций ОС """ + СокрЛП(Выборка.ОсновноеСредствоПредставление) + """ инв.№ " + СокрЛП(Выборка.Инв) + " и организации указанной в документе."),, Заголовок);
	//	КонецЦикла;

	//КонецЕсли;

КонецПроцедуры

// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ОсновноеСредство");

	// Теперь вызовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураОбязательныхПолей, Отказ, Заголовок);

	ПроверкаРеквизитовТЧРегл(Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)

	ДатаДока = Дата;

	ВидыОперацийОтражающиесяВРегистреСостояний = Новый Соответствие();
	ВидыОперацийОтражающиесяВРегистреСостояний.Вставить(Перечисления.ВидыСобытийОС.ВводВЭксплуатацию, Перечисления.СостоянияОС.ВведеноВЭксплуатацию);
	ВидыОперацийОтражающиесяВРегистреСостояний.Вставить(Перечисления.ВидыСобытийОС.Передача, Перечисления.СостоянияОС.СнятоСУчета);
	ВидыОперацийОтражающиесяВРегистреСостояний.Вставить(Перечисления.ВидыСобытийОС.Списание, Перечисления.СостоянияОС.СнятоСУчета);

	ОперацииОСБух            = Движения.СобытияОСОрганизаций;
	
	//Добавил РГ-Софт - Пронин Иван - 2009-09-21
	//Получение срезапоследних по регистру НачислениеАмортизации
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		масОС = ТаблицаПоОС.ВыгрузитьКолонку("ОсновноеСредство");
		табНачислениеАмортизацииПервоначальныеСведения = УправлениеВнеоборотнымиАктивами.ПолучитьТаблицуПоАмортизации(Дата, Организация, масОС);
	КонецЕсли;

	Если не ВидыОперацийОтражающиесяВРегистреСостояний.Получить(СтруктураШапкиДокумента.ВидСобытияОС) = Неопределено тогда
		СостоянияОС = Движения.СостоянияОСОрганизаций;
	КонецЕсли;

	Для каждого СтрокаТЧ Из ТаблицаПоОС Цикл

		Движение = ОперацииОСБух.Добавить();

		Движение.Период            = ДатаДока;
		Движение.ОсновноеСредство  = СтрокаТЧ.ОсновноеСредство;
		Движение.Организация       = СтруктураШапкиДокумента.Организация;
		Движение.Событие           = СтруктураШапкиДокумента.СобытиеОС;
		Движение.НазваниеДокумента = Строка(СтруктураШапкиДокумента.Ссылка.Метаданные());
		Движение.НомерДокумента    = СтруктураШапкиДокумента.Номер;

		Если не ВидыОперацийОтражающиесяВРегистреСостояний.Получить(СтруктураШапкиДокумента.ВидСобытияОС) = Неопределено тогда
			
			Движение = СостоянияОС.Добавить();
			
			Движение.ДатаСостояния    = ДатаДока;
			Движение.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
			Движение.Организация      = СтруктураШапкиДокумента.Организация;
			Движение.Состояние        = ВидыОперацийОтражающиесяВРегистреСостояний.Получить(СтруктураШапкиДокумента.ВидСобытияОС);
			
			//Добавил РГ-Софт - Пронин Иван - 2009-09-21
			// Движения по регистрам НачислениеАмортизации и ПервоначальныеСведения
			Если Движение.Состояние = Перечисления.СостоянияОС.ВведеноВЭксплуатацию Тогда
				ДвижениеВТаблице = табНачислениеАмортизацииПервоначальныеСведения.Найти(СтрокаТЧ.ОсновноеСредство, "ОсновноеСредство");
				ДвижениеВТаблице.ЕстьДвижениеНачислениеАмортизации = Истина;
				ДвижениеВТаблице.ДатаВводаНУ  			 = Дата;
			КонецЕсли;
			
		КонецЕсли;

		Если СтруктураШапкиДокумента.ВлияетНаНачилениеАмортизации Тогда
			
			Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
				
				//Добавил РГ-Софт - Пронин Иван - 2009-09-21
				// Движения по регистрам НачислениеАмортизации и ПервоначальныеСведения
				ДвижениеВТаблице = табНачислениеАмортизацииПервоначальныеСведения.Найти(СтрокаТЧ.ОсновноеСредство, "ОсновноеСредство");
				ДвижениеВТаблице.ЕстьДвижениеНачислениеАмортизации = Истина;
				ДвижениеВТаблице.НачислятьБУ = СтруктураШапкиДокумента.НачислятьАмортизацию;
				
			КонецЕсли;
			
			Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
				
				//Добавил РГ-Софт - Пронин Иван - 2009-09-21
				// Движения по регистрам НачислениеАмортизации и ПервоначальныеСведения
				ДвижениеВТаблице = табНачислениеАмортизацииПервоначальныеСведения.Найти(СтрокаТЧ.ОсновноеСредство, "ОсновноеСредство");
				ДвижениеВТаблице.ЕстьДвижениеНачислениеАмортизации = Истина;
				ДвижениеВТаблице.НачислятьНУ = СтруктураШапкиДокумента.НачислятьАмортизацию;
				
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	//Добавил РГ-Софт - Пронин Иван - 2009-09-21
	// Движения по регистрам НачислениеАмортизации и ПервоначальныеСведения
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		Для Каждого Запись Из табНачислениеАмортизацииПервоначальныеСведения Цикл
			Если Запись.ЕстьДвижениеНачислениеАмортизации Тогда
				Движение = Движения.НачислениеАмортизации.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Запись);
				Если Движение.СпециальныйКоэффициент = 0 Тогда Движение.СпециальныйКоэффициент = 1; КонецЕсли;
			КонецЕсли;
			Если Запись.ЕстьДвижениеПервоначальныеСведения Тогда
				Движение = Движения.ПервоначальныеСведения.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Запись);
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
	
	Если не ВидыОперацийОтражающиесяВРегистреСостояний.Получить(СтруктураШапкиДокумента.ВидСобытияОС) = Неопределено тогда
		УправлениеВнеоборотнымиАктивами.ПроверкаДублированияЗаписейСостоянийОС(СтруктураШапкиДокумента.Организация, СостоянияОС,Отказ,Заголовок);
	КонецЕсли;

	Если не Отказ и ((СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ВводВЭксплуатацию)
	 // или (СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.Модернизация) 
	 )
	 Тогда
		// Формирование движений документа для подсистемы НДС
		ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);

	КонецЕсли;

КонецПроцедуры // ДвиженияПоРегистрам

// Процедура вызывается из тела процедуры ДвиженияПоРегистрам
// Формирует движения по регистрам подсистемы учета НДС "НДСПокупки" и "НДСПродажи"
Процедура ДвиженияРегистровПодсистемыНДС(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)
	
	Если Не ОбщегоНазначения.ПроводитьДокументПоРазделуУчета(СтруктураШапкиДокумента.Организация, Перечисления.РазделыУчета.НДС, СтруктураШапкиДокумента.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	Если  СтруктураШапкиДокумента.ВидСобытияОС = Перечисления.ВидыСобытийОС.ВводВЭксплуатацию Тогда
		
		МассивОбъектов = ТаблицаПоОС.выгрузитьКолонку("ОсновноеСредство");
		
    	// Вычет остается заблокированным до начала следующего месяца после ввода в эксплуатацию ОС,
		// полученного из объекта строительства.
		ДатаЗаписи = НачалоМесяца(ДобавитьМесяц((СтруктураШапкиДокумента.Дата),1));
		
		// Разблокируется весь НДС, заблокированный до момента ввода в эксплуатацию. Остатков быть не может,
		// так как один объект ОС нельзя ввести в эксплуатацию частично (в этом случае это должны быть разные объекты).
		КоэффициентРаспределения = 1;
		
		////Разблокируем полностью вычет, отразим погашение события ОжидаетсяВводВЭксплуатацию
		//УчетНДС.СформироватьДвиженияПоРегиструНДСпоОСиНМА_ИзменениеТекущегоСостоянияНДС(СтруктураШапкиДокумента,
		//													МассивОбъектов,
		//													Перечисления.НДССостоянияОСНМА.ОжидаетсяВводВЭксплуатацию,
		//													Перечисления.СобытияПоНДСПокупки.ОСВведеноВЭксплуатацию,
		//													ДатаЗаписи,КоэффициентРаспределения, Движения, Отказ);
		//УчетНДС.СформироватьДвиженияПоРегиструНДСпоОСиНМА_ИзменениеТекущегоСостоянияНДС_Хозспособ(СтруктураШапкиДокумента,
		//													МассивОбъектов,
		//													Перечисления.НДССостоянияОСНМА.ОжидаетсяВводВЭксплуатацию,
		//													Перечисления.СобытияПоНДСПокупки.ОСВведеноВЭксплуатацию,
		//													ДатаЗаписи,КоэффициентРаспределения, Движения, Отказ);
    КонецЕсли;
	
КонецПроцедуры // ДвиженияРегистровПодсистемыНДС()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
  		Если Основание.ЭтоГруппа Тогда
			Сообщить("Нельзя изменять состояние по группе основных средств",СтатусСообщения.Внимание);
			Возврат;
		КонецЕсли; 

		СобытиеОС = УправлениеВнеоборотнымиАктивами.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ВводВЭксплуатацию);

		СтрокаТабличнойЧасти = ОС.Добавить();
		СтрокаТабличнойЧасти.ОсновноеСредство = Основание.Ссылка;

	КонецЕсли;

КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроведения(Отказ)

	Заголовок = "";

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента.Вставить("ВидСобытияОС",СтруктураШапкиДокумента.СобытиеОС.ВидСобытияОС);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок);

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Период",      МоментВремени());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИзменениеСостоянияОсновногоСредстваОсновныеСредства.НомерСтроки,
	               |	ИзменениеСостоянияОсновногоСредстваОсновныеСредства.ОсновноеСредство,
	               |	НачислениеАмортизацииСрезПоследних.НачислятьБУ КАК НачислятьАмортизациюБух,
	               |	НачислениеАмортизацииСрезПоследних.НачислятьНУ КАК НачислятьАмортизациюНал
	               |ИЗ
	               |	Документ.ИзменениеСостоянияОС.ОС КАК ИзменениеСостоянияОсновногоСредстваОсновныеСредства
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизации.СрезПоследних(&Период, Организация = &Организация) КАК НачислениеАмортизацииСрезПоследних
	               |		ПО ИзменениеСостоянияОсновногоСредстваОсновныеСредства.ОсновноеСредство = НачислениеАмортизацииСрезПоследних.ОсновноеСредство
	               |ГДЕ
	               |	ИзменениеСостоянияОсновногоСредстваОсновныеСредства.Ссылка = &Ссылка";
	ТаблицаПоОС = Запрос.Выполнить().Выгрузить();

	// Проверим, нет ли повторяющихся основных средств в таблице по ОС.
	УправлениеВнеоборотнымиАктивами.ПроверитьДублиОС(ТаблицаПоОС, Отказ, Заголовок);
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);
		
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();