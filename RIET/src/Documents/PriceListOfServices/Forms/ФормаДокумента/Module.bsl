
////////////////////////////////////////////////////////////////////////
// ФОРМА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьКодыServices();
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РГСофтКлиент.ПроверитьНеобходимостьЗаписиДокумента(ПараметрыЗаписи.РежимЗаписи, Объект.Проведен, Модифицированность, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.LastModified = ТекущаяДата();
	РГСофтКлиентСервер.УстановитьЗначение(ТекущийОбъект.Responsible, ПараметрыСеанса.ТекущийПользователь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьКодыServices();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ШАПКА


////////////////////////////////////////////////////////////////////////
// STANDARD TARIFFS

&НаКлиенте
Процедура StandardTariffsServiceНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	CurrentServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.StandardTariffs, "Service");
	ВыбратьService(Элемент, "StandardTariff", CurrentServices);
	
КонецПроцедуры

&НаКлиенте
Процедура StandardTariffsServiceПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.StandardTariffs.ТекущиеДанные;
	ЗаполнитьКодService(ТекущиеДанные);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// COST-PLUS

&НаКлиенте
Процедура CostPlusServiceНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	CurrentServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.CostPlus, "Service");
	ВыбратьService(Элемент, "CostPlus", CurrentServices);
	
КонецПроцедуры

&НаКлиенте
Процедура CostPlusServiceПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.CostPlus.ТекущиеДанные;
	ЗаполнитьКодService(ТекущиеДанные);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// QUOTED

&НаКлиенте
Процедура QuotedServiceНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	CurrentServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Quoted, "Service");
	ВыбратьService(Элемент, "Quoted", CurrentServices);
	
КонецПроцедуры

&НаКлиенте
Процедура QuotedServiceПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Quoted.ТекущиеДанные;
	ЗаполнитьКодService(ТекущиеДанные);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыбратьService(Элемент, ИмяSumCalculationMethod, CurrentServices)
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Имя", "ВыборИзPriceListOfServices");
	СтруктураНастройки.Вставить("ИмяSumCalculationMethod", ИмяSumCalculationMethod);
	СтруктураНастройки.Вставить("CurrentServices", CurrentServices);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураНастройки", СтруктураНастройки);			
	ОткрытьФорму("Справочник.Services.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКодService(ТекущиеДанныеСтроки)
	
	Если ЗначениеЗаполнено(ТекущиеДанныеСтроки.Service) Тогда
		
		МассивServices = Новый Массив;
		МассивServices.Добавить(ТекущиеДанныеСтроки.Service);
		СоответствиеКодовServices = ПолучитьСоответствиеКодовServices(МассивServices);
		ТекущиеДанныеСтроки.ServiceCode = СоответствиеКодовServices[ТекущиеДанныеСтроки.Service];
		
	Иначе
		ТекущиеДанныеСтроки.ServiceCode = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКодыServices()
	
	МассивStandardServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.StandardTariffs, "Service");
	МассивCostPlusServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.CostPlus, "Service");
	МассивQuotedServices = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.Quoted, "Service");
	МассивServices = РГСофтКлиентСервер.СложитьМассивы(МассивStandardServices, МассивCostPlusServices);
	МассивServices = РГСофтКлиентСервер.СложитьМассивы(МассивServices, МассивQuotedServices);
	
	СоответствиеКодовServices = ПолучитьСоответствиеКодовServices(МассивServices);
	
	ЗаполнитьКодыServicesВТЧ(Объект.StandardTariffs, СоответствиеКодовServices);
	ЗаполнитьКодыServicesВТЧ(Объект.CostPlus, СоответствиеКодовServices);
	ЗаполнитьКодыServicesВТЧ(Объект.Quoted, СоответствиеКодовServices);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКодыServicesВТЧ(ТЧ, СоответсвиеКодовServices)
	
	Для Каждого СтрокаТЧ Из ТЧ Цикл
		
		СтрокаТЧ.ServiceCode = ?(ЗначениеЗаполнено(СтрокаТЧ.Service), СоответсвиеКодовServices[СтрокаТЧ.Service], "");
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСоответствиеКодовServices(Знач МассивServices)
	
	ы = 0;
	Пока ы < МассивServices.Количество() Цикл
		Если НЕ ЗначениеЗаполнено(МассивServices[ы]) Тогда
			МассивServices.Удалить(ы);
		Иначе
			ы = ы + 1;
		КонецЕсли;
	КонецЦикла;
	
	Соответствие = Новый Соответствие;
	
	Если МассивServices.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Services", МассивServices);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Services.Ссылка КАК Service,
			|	Services.Код КАК Code
			|ИЗ
			|	Справочник.Services КАК Services
			|ГДЕ
			|	Services.Ссылка В(&Services)";
		Выборка = Запрос.Выполнить().Выбрать();
	    Пока Выборка.Следующий() Цикл
			Соответствие.Вставить(Выборка.Service, Выборка.Code);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Соответствие;
	
КонецФункции
