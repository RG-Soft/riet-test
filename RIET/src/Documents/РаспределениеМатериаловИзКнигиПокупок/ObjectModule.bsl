
///////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьЗаполнениеРеквизитов(Отказ);
	КонецЕсли;
	    		 	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Для каждого Стр ИЗ FA Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ПроводкаДеталейСКП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""FA"": поле ""Проводка деталей СКП"" не заполнено!",
				ЭтотОбъект, "FA[" + FA.Индекс(Стр) + "].ПроводкаДеталейСКП", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"В строке номер """ + Стр.НомерСтроки + """ табличной части ""FA"": поле ""Номенклатура"" не заполнено!",
			ЭтотОбъект, "FA[" + FA.Индекс(Стр) + "].Номенклатура", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.Количество) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"В строке номер """ + Стр.НомерСтроки + """ табличной части ""FA"": поле ""Количество"" не заполнено!",
			ЭтотОбъект, "FA[" + FA.Индекс(Стр) + "].Количество", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СуммаРуб) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"В строке номер """ + Стр.НомерСтроки + """ табличной части ""FA"": поле ""Сумма руб."" не заполнено!",
			ЭтотОбъект, "FA[" + FA.Индекс(Стр) + "].СуммаРуб", , Отказ);
		КонецЕсли;	
				
	КонецЦикла;
	
	Для каждого Стр ИЗ INVENTORY Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ПроводкаДеталейСКП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""INVENTORY"": поле ""Проводка деталей СКП"" не заполнено!",
				ЭтотОбъект, "INVENTORY[" + INVENTORY.Индекс(Стр) + "].ПроводкаДеталейСКП", , Отказ);
		КонецЕсли;
		
		//Если НЕ ЗначениеЗаполнено(Стр.POLine) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//		"В строке номер """ + Стр.НомерСтроки + """ табличной части ""INVENTORY"": поле ""PO Line"" не заполнено!",
		//		ЭтотОбъект, "INVENTORY[" + INVENTORY.Индекс(Стр) + "].POLine", , Отказ);
		//КонецЕсли;
		
		//Если НЕ ЗначениеЗаполнено(Стр.Количество) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//		"В строке номер """ + Стр.НомерСтроки + """ табличной части ""INVENTORY"": поле ""Количество"" не заполнено!",
		//		ЭтотОбъект, "INVENTORY[" + INVENTORY.Индекс(Стр) + "].Количество", , Отказ);
		//КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СуммаРуб) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""INVENTORY"": поле ""Сумма руб."" не заполнено!",
				ЭтотОбъект, "INVENTORY[" + INVENTORY.Индекс(Стр) + "].СуммаРуб", , Отказ);
		КонецЕсли;
				
	КонецЦикла;
	
	Для каждого Стр ИЗ MandS Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ПроводкаДеталейСКП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""M&S"": поле ""Проводка деталей СКП"" не заполнено!",
				ЭтотОбъект, "MandS[" + MandS.Индекс(Стр) + "].ПроводкаДеталейСКП", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СуммаРуб) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""M&S"": поле ""Сумма руб."" не заполнено!",
				ЭтотОбъект, "MandS[" + MandS.Индекс(Стр) + "].СуммаРуб", , Отказ);
		КонецЕсли;	
				
	КонецЦикла;
      	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА ПРОВЕДЕНИЯ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр МатериальныеАктивы Расход
	ТабЧасти = Метаданные.Документы.РаспределениеМатериаловИзКнигиПокупок.ТабличныеЧасти;
	МассивПроводок = Новый Массив;
	Движения.МатериальныеАктивы.Записывать = Истина;
	
	Для каждого ТабЧасть Из ТабЧасти Цикл
		
		ТекТабЧасть = ЭтотОбъект[ТабЧасть.Имя];
		Для Каждого ТекСтрока Из ТекТабЧасть Цикл
			ПроводкаДеталейСКП = ТекСтрока.ПроводкаДеталейСКП; 
			Движение = Движения.МатериальныеАктивы.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.ПроводкаДеталейСКП = ПроводкаДеталейСКП;
			Движение.Сумма = ТекСтрока.Сумма;
			Движение.СуммаРуб = ТекСтрока.СуммаРуб;
			
			МассивПроводок.Добавить(ПроводкаДеталейСКП);
		КонецЦикла;
		
	КонецЦикла; 
	
	Движения.МатериальныеАктивы.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПроводок", МассивПроводок);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Представление КАК ПроводкаПредставление,
		|	МатериальныеАктивыОстатки.СуммаОстаток,
		|	МатериальныеАктивыОстатки.СуммаРубОстаток
		|ИЗ
		|	РегистрНакопления.МатериальныеАктивы.Остатки(&МоментВремени, ПроводкаДеталейСКП В (&МассивПроводок)) КАК МатериальныеАктивыОстатки";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Сообщить("Проводка DSS деталей счетов книги покупок " + Выборка.ПроводкаПредставление + " уже была распределена!");
		//Отказ = Истина;
		
	КонецЦикла;
	
	Если Не Отказ Тогда 
		
		Движения.ОборудованиеDSS.Записывать = Истина;
        Движения.InventoryTangibleAssetsCosts.Записывать = Истина;
		Движения.MaterialsAndSupplies.Записывать = Истина;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
        Запрос.Текст = "ВЫБРАТЬ
                       |	РаспределениеМатериаловИзКнигиПокупокFA.ПроводкаДеталейСКП,
                       |	РаспределениеМатериаловИзКнигиПокупокFA.СуммаРуб,
                       |	РаспределениеМатериаловИзКнигиПокупокFA.Сумма,
                       |	РаспределениеМатериаловИзКнигиПокупокFA.Номенклатура,
                       |	РаспределениеМатериаловИзКнигиПокупокFA.Количество
                       |ИЗ
                       |	Документ.РаспределениеМатериаловИзКнигиПокупок.FA КАК РаспределениеМатериаловИзКнигиПокупокFA
                       |ГДЕ
                       |	РаспределениеМатериаловИзКнигиПокупокFA.Ссылка = &Ссылка
                       |;
                       |
                       |////////////////////////////////////////////////////////////////////////////////
                       |ВЫБРАТЬ
                       |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП,
                       |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.СуммаРуб,
                       |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Сумма,
                       |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Количество
                       |ИЗ
                       |	Документ.РаспределениеМатериаловИзКнигиПокупок.INVENTORY КАК РаспределениеМатериаловИзКнигиПокупокINVENTORY
                       |ГДЕ
                       |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка = &Ссылка
                       |;
                       |
                       |////////////////////////////////////////////////////////////////////////////////
                       |ВЫБРАТЬ
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.ПроводкаДеталейСКП,
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.СуммаРуб,
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.Сумма,
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.ПроводкаДеталейСКП.Документ КАК СчетКнигиПокупок,
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.ПроводкаДеталейСКП.Документ.ДатаПроведения КАК ДатаПроведенияСКП,
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.НомерСтроки
                       |ИЗ
                       |	Документ.РаспределениеМатериаловИзКнигиПокупок.MandS КАК РаспределениеМатериаловИзКнигиПокупокMandS
                       |ГДЕ
                       |	РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка = &Ссылка
                       |;
                       |
                       |////////////////////////////////////////////////////////////////////////////////
                       |ВЫБРАТЬ
                       |	СУММА(РаспределениеМатериаловИзКнигиПокупокInvTransport.СуммаРуб) КАК СуммаРуб,
                       |	СУММА(РаспределениеМатериаловИзКнигиПокупокInvTransport.Сумма) КАК Сумма,
                       |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Сегмент,
                       |	РаспределениеМатериаловИзКнигиПокупокInvTransport.TaxRegistration
                       |ИЗ
                       |	Документ.РаспределениеМатериаловИзКнигиПокупок.InvTransport КАК РаспределениеМатериаловИзКнигиПокупокInvTransport
                       |ГДЕ
                       |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Ссылка = &Ссылка
                       |
                       |СГРУППИРОВАТЬ ПО
                       |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Сегмент,
                       |	РаспределениеМатериаловИзКнигиПокупокInvTransport.TaxRegistration";
					   
		Результат = Запрос.ВыполнитьПакет();
		
		// регистр ОборудованиеDSS Приход
		ВыборкаFA = Результат[0].Выбрать();     				
		Пока ВыборкаFA.Следующий() Цикл
			Движение = Движения.ОборудованиеDSS.ДобавитьПриход();
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаFA.Номенклатура;
			Движение.Количество = ВыборкаFA.Количество;
			Движение.ПроводкаДеталейСКП = ВыборкаFA.ПроводкаДеталейСКП;
			Движение.Сумма = ВыборкаFA.Сумма;
			Движение.СуммаРуб = ВыборкаFA.СуммаРуб;
		КонецЦикла;
		Движения.ОборудованиеDSS.Записать();
		
		// регистр InventoryTangibleAssetsCosts
		ВыборкаInventory = Результат[1].Выбрать(); 	
		Пока ВыборкаInventory.Следующий() Цикл
			Движение = Движения.InventoryTangibleAssetsCosts.ДобавитьПриход();
			Движение.Период = Дата;
			Движение.ПроводкаДеталейСКП = ВыборкаInventory.ПроводкаДеталейСКП;
			Движение.Количество = ВыборкаInventory.Количество;
			Движение.FiscalSum = ВыборкаInventory.СуммаРуб;
			Движение.ManagementSum = ВыборкаInventory.Сумма;
		КонецЦикла;
		Движения.InventoryTangibleAssetsCosts.Записать();
		
		// регистр M&S
		ВыборкаMandS = Результат[2].Выбрать(); 	
		Пока ВыборкаMandS.Следующий() Цикл
			Движение = Движения.MaterialsAndSupplies.ДобавитьПриход();
			Если ТипЗнч(ВыборкаMandS.СчетКнигиПокупок) = Тип("ДокументСсылка.СчетКнигиПокупок") Тогда 
				Движение.ДокументПоступления = ВыборкаMandS.СчетКнигиПокупок;
				Движение.Период = ВыборкаMandS.ДатаПроведенияСКП;
			иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Проводка: """ + ВыборкаMandS.ПроводкаДеталейСКП + """ не привязана к Счету книги покупок!",
					ЭтотОбъект, "MandS[" + (ВыборкаMandS.НомерСтроки-1) + "].ПроводкаДеталейСКП");
				Движение.Период = Дата;
			КонецЕсли;
			Движение.ПроводкаДеталейСКП = ВыборкаMandS.ПроводкаДеталейСКП;
			Движение.FiscalSum = ВыборкаMandS.СуммаРуб;
			Движение.ManagementSum = ВыборкаMandS.Сумма;
		КонецЦикла;
		Движения.MaterialsAndSupplies.Записать();
		
		// регистр InventoryTransportation
		ВыборкаInvTransport = Результат[3].Выбрать(); 	
		Пока ВыборкаInvTransport.Следующий() Цикл
			Движение = Движения.InventoryTransportation.ДобавитьПриход();
			Движение.Период = Дата;
			Движение.Сегмент = ВыборкаInvTransport.Сегмент;
			Движение.TaxRegistration = ВыборкаInvTransport.TaxRegistration;
			Движение.СуммаРуб = ВыборкаInvTransport.СуммаРуб;
			Движение.Сумма = ВыборкаInvTransport.Сумма;
		КонецЦикла;
		Движения.InventoryTransportation.Записать();
		
	КонецЕсли;
	 			
КонецПроцедуры
