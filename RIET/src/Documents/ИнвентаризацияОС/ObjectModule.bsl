//////////////////////////////////////////////////////////////////////////////// 
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА
//

#Если Клиент Тогда

// Функция вызывает форму печати табличного документа с печатной формой
// инвентаризационной описи основных средств.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Неопределено.
//
Функция ПечатьИНВ1() Экспорт
	
	ФормаИНВ1 = ПолучитьФорму("ФормаПечатиОписи");
	ФормаИНВ1.ДокументОбъект = ЭтотОбъект;
	ФормаИНВ1.Открыть();

	Возврат Неопределено;

КонецФункции // ПечатьИНВ1()

// Функция формирует табличный документ с печатной формой сличительной ведомости
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма сличительной ведомости.
//
Функция ПечатьИНВ18() Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияОС.Дата КАК Дата,
	|	ИнвентаризацияОС.Номер КАК Номер,
	|	ИнвентаризацияОС.Организация КАК Организация,
	|	ИнвентаризацияОС.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияОС.ПодразделениеОрганизации.Код КАК ПодразделениеКод,
	|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОС.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
	|ГДЕ
	|	ИнвентаризацияОС.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияОСОС.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ИнвентаризацияОСОС.ОсновноеСредство.Наименование
	|		ИНАЧЕ ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
	|	ИнвентаризацияОСОС.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	ИнвентаризацияОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство.Код КАК ИнвентарныйНомер,
	|	ИнвентаризацияОСОС.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
	|	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
	|	ИнвентаризацияОСОС.СтоимостьФактическая КАК СтоимостьФактическая,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСОС.НаличиеПоДаннымУчета = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеПоДаннымУчета,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСОС.НаличиеФактическое = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеФактическое
	|ИЗ
	|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							ИнвентаризацияОСОС.ОсновноеСредство
	|						ИЗ
	|							Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	|						ГДЕ
	|							ИнвентаризацияОСОС.Ссылка = &Ссылка)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО ИнвентаризацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	ИнвентаризацияОСОС.Ссылка = &Ссылка
	|	И НЕ ИнвентаризацияОСОС.СтоимостьПоДаннымУчета = ИнвентаризацияОСОС.СтоимостьФактическая
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ18");
	
	// Получаем области макета для вывода в табличный документ
	Шапка                     = Макет.ПолучитьОбласть("Шапка");
	СекцияМОЛ                 = Макет.ПолучитьОбласть("СекцияМОЛ");
	СтрокаНадТаблицей         = Макет.ПолучитьОбласть("СтрокаНадТаблицей");
	ЗаголовокТаблицы          = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы             = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ПодвалТаблицы             = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ПодписьГлавногоБухгалтера = Макет.ПолучитьОбласть("ПодписьГлавногоБухгалтера");
	ШапкаПодписейМОЛ          = Макет.ПолучитьОбласть("ШапкаПодписейМОЛ");
	Подпись                   = Макет.ПолучитьОбласть("Подпись");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ18";

	// Выведем шапку документа
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Получим список МОЛ на основании списка ОС
	СписокОС = ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ОсновноеСредство", СписокОС);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("Дата",             Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, Организация = &Организация И ОсновноеСредство В (&ОсновноеСредство)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
	
	Результат = Запрос.Выполнить().Выгрузить();
	СписокМОЛ = Результат.ВыгрузитьКолонку("МОЛ");
	
	// Выведем подписи МОЛов
	ДанныеМОЛ = ОбщегоНазначения.ДанныеФизЛиц(Организация, СписокМОЛ, Дата);
	
	// Сначала выведем МОЛов из выборки
	Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
		
		Если НЕ ТабДокумент.ПроверитьВывод(СекцияМОЛ) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		КонецЕсли;
		
		СекцияМОЛ.Параметры.Должность = СтрокаМОЛ.Должность;
		СекцияМОЛ.Параметры.ФИО       = СтрокаМОЛ.Представление;
		
		ТабДокумент.Вывести(СекцияМОЛ);
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 2-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если ДанныеМОЛ.Количество() < 2 Тогда
		
		Если НЕ ТабДокумент.ПроверитьВывод(СекцияМОЛ) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		КонецЕсли;
		
		Для Итератор = (ДанныеМОЛ.Количество() + 1) По 2 Цикл
			
			СекцияМОЛ.Параметры.Должность = "";
			СекцияМОЛ.Параметры.ФИО       = "";
			
			ТабДокумент.Вывести(СекцияМОЛ);
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Проверим, помещаются ли строка над таблицей, заголовок и первая строка.
	ШапкаТаблицы = Новый Массив;
	ШапкаТаблицы.Добавить(СтрокаНадТаблицей);
	ШапкаТаблицы.Добавить(ЗаголовокТаблицы);
	ШапкаТаблицы.Добавить(СтрокаТаблицы);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ШапкаТаблицы) Тогда
			
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЕсли;
	
	// Выведем строку над таблицей
	ТабДокумент.Вывести(СтрокаНадТаблицей);
	
	// Выведем заголовок таблицы	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Создадим переменные для накопления итогов по каждой странице
	ИтогИзлишекКоличество   = 0;
	ИтогИзлишекСтоимость    = 0;
	ИтогНедостачаКоличество = 0;
	ИтогНедостачаСтоимость  = 0;
	
	// Выведем строки таблицы
	НомСтроки = 0;
	Для Каждого СтрокаОС Из ТаблицаОС Цикл
		
		НомСтроки = НомСтроки + 1;
		
		СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
		СтрокаТаблицы.Параметры.НомерСтроки = НомСтроки; 
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		Если (ТаблицаОС.Индекс(СтрокаОС) + 1) = ТаблицаОС.Количество() Тогда // если последняя строка, должна
			СтрокаСПодвалом.Добавить(ПодписьГлавногоБухгалтера);             // помещаться и подпись гл.бухгалтера
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			
			// Выведем подвал таблицы
			ПодвалТаблицы.Параметры.ИтогИзлишекКоличество   = ИтогИзлишекКоличество;
			ПодвалТаблицы.Параметры.ИтогИзлишекСтоимость    = ИтогИзлишекСтоимость;
			ПодвалТаблицы.Параметры.ИтогНедостачаКоличество = ИтогНедостачаКоличество;
			ПодвалТаблицы.Параметры.ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость;
			
			ТабДокумент.Вывести(ПодвалТаблицы);
			
			// Обнулим переменные для накопления итогов по каждой странице
			ИтогИзлишекКоличество   = 0;
			ИтогИзлишекСтоимость    = 0;
			ИтогНедостачаКоличество = 0;
			ИтогНедостачаСтоимость  = 0;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Выведем заголовок таблицы	
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		РазницаПоНаличию   = СтрокаОС.НаличиеФактическое - СтрокаОС.НаличиеПоДаннымУчета;
		РазницаПоСтоимости = СтрокаОС.СтоимостьФактическая - СтрокаОС.СтоимостьПоДаннымУчета;
		
		ИзлишекКоличество   = ?(РазницаПоНаличию > 0, РазницаПоНаличию, 0);
		ИзлишекСтоимость    = ?(РазницаПоСтоимости > 0, РазницаПоСтоимости, 0);
		НедостачаКоличество = ?(РазницаПоНаличию < 0, -РазницаПоНаличию, 0);
		НедостачаСтоимость  = ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);
		
		ИтогИзлишекКоличество   = ИтогИзлишекКоличество + ИзлишекКоличество;
		ИтогИзлишекСтоимость    = ИтогИзлишекСтоимость + ИзлишекСтоимость;
		ИтогНедостачаКоличество = ИтогНедостачаКоличество + НедостачаКоличество;
		ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость + НедостачаСтоимость;
		
		СтрокаТаблицы.Параметры.ИзлишекКоличество   = ИзлишекКоличество;
		СтрокаТаблицы.Параметры.ИзлишекСтоимость    = ИзлишекСтоимость;
		СтрокаТаблицы.Параметры.НедостачаКоличество = НедостачаКоличество;
		СтрокаТаблицы.Параметры.НедостачаСтоимость  = НедостачаСтоимость;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;
	
	// Выведем подвал таблицы
	ПодвалТаблицы.Параметры.ИтогИзлишекКоличество   = ИтогИзлишекКоличество;
	ПодвалТаблицы.Параметры.ИтогИзлишекСтоимость    = ИтогИзлишекСтоимость;
	ПодвалТаблицы.Параметры.ИтогНедостачаКоличество = ИтогНедостачаКоличество;
	ПодвалТаблицы.Параметры.ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость;
	
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Выведем подпись бухгалтера
	Руководители = ОбщегоНазначения.ОтветственныеЛица(Док.Организация, Док.Дата);
	
	ПодписьГлавногоБухгалтера.Параметры.РасшифровкаПодписи = Руководители.ГлавныйБухгалтерПредставление;
	
	ТабДокумент.Вывести(ПодписьГлавногоБухгалтера);
	
	// Проверим, помещаются ли шапка подписей и одна подпись
	Подписи = Новый Массив;
	Подписи.Добавить(ШапкаПодписейМОЛ);
	Подписи.Добавить(Подпись);
	
	Если НЕ ТабДокумент.ПроверитьВывод(Подписи) Тогда
			
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЕсли;
	
	// Выведем шапку подписей МОЛ
	ТабДокумент.Вывести(ШапкаПодписейМОЛ);
	
	// Выведем подписи МОЛов
	ЗаголовокРазделаПодписей = "Материально ответственное(ые) лицо(а)";
	ВыводитьЗаголовок = Истина;
	
	// Сначала выведем МОЛов из выборки
	Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
		
		Если НЕ ТабДокумент.ПроверитьВывод(Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей,
													   "");
		Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 2-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если ДанныеМОЛ.Количество() < 2 Тогда
		
		Если НЕ ТабДокумент.ПроверитьВывод(Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (ДанныеМОЛ.Количество() + 1) По 2 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИНВ18()

// Функция формирует табличный документ с печатной формой приказа о проведении
// инвентаризации.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма приказа.
//
Функция ПечатьИНВ22() Экспорт

	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияОС.Дата КАК Дата,
	|	ИнвентаризацияОС.Номер КАК Номер,
	|	ИнвентаризацияОС.Организация КАК Организация,
	|	ИнвентаризацияОС.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	|	ИнвентаризацияОС.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации,
	|	ИнвентаризацияОС.ИнвентаризационнаяКомиссия.(
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
	|ГДЕ
	|	ИнвентаризацияОС.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	ТаблицаИнвентаризационнаяКомиссия = Док.ИнвентаризационнаяКомиссия.Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ22");
	
	// Получаем области макета для вывода в табличный документ
	Шапка   = Макет.ПолучитьОбласть("Шапка");
	Подпись = Макет.ПолучитьОбласть("Подпись");
	Подвал  = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 20;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ22";

	// Выведем шапку документа
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = Док.ДокументОснованиеНомер;
	Шапка.Параметры.ДатаДокумента  = Док.ДокументОснованиеДата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Выведем подпись председателя инвентаризационной комиссии
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ПредседательКомиссии.ФизЛицо, Док.Дата);
			
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		
	Иначе
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	// Сформируем список членов комиссии
	СписокЧленовКомиссии = Новый Массив();
	
	Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
		Если НЕ Строка.Председатель Тогда
			СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеЧленовКомиссии = ОбщегоНазначения.ДанныеФизЛиц(Док.Организация, СписокЧленовКомиссии, Док.Дата);
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
		
		Если НЕ ТабДокумент.ПроверитьВывод(Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
													   "");
		Подпись.Параметры.Должность                = ЧленКомиссии.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ЧленКомиссии.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
		
		Если НЕ ТабДокумент.ПроверитьВывод(Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Выведем подвал приказа
	Если НЕ ТабДокумент.ПроверитьВывод(Подвал) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	Подвал.Параметры.ДатаНачалаИнвентаризации        = Формат(Док.ДатаНачалаИнвентаризации, "ДЛФ=DD");
	Подвал.Параметры.ДатаОкончанияИнвентаризации     = Формат(Док.ДатаОкончанияИнвентаризации, "ДЛФ=DD");
	Подвал.Параметры.ПричинаПроведенияИнвентаризации = Док.ПричинаПроведенияИнвентаризации;
	
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИНВ22()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ИНВ1" тогда
		ТабДокумент = ПечатьИНВ1();
	ИначеЕсли ИмяМакета = "ИНВ18" тогда
		ТабДокумент = ПечатьИНВ18();
	ИначеЕсли ИмяМакета = "ИНВ22" тогда
		ТабДокумент = ПечатьИНВ22();
	КонецЕсли;

	ФормированиеПечатныхФорм.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), НепосредственнаяПечать);

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ИНВ1,ИНВ18,ИНВ22","ИНВ-1 (инвентаризационная опись)","ИНВ-18 (сличительная ведомость)","ИНВ-22 (приказ)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры