
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьЗаполнениеРеквизитов(Отказ);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	 	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Для каждого Стр ИЗ ДопРасходы Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ПроводкаДеталейСКП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""Доп. расходы"": поле ""Проводка деталей СКП"" не заполнено!",
				ЭтотОбъект, "ДопРасходы[" + ДопРасходы.Индекс(Стр) + "].ПроводкаДеталейСКП", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СуммаРуб) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""Доп. расходы"": поле ""Сумма руб."" не заполнено!",
				ЭтотОбъект, "ДопРасходы[" + ДопРасходы.Индекс(Стр) + "].СуммаРуб", , Отказ);
		КонецЕсли;	
				
	КонецЦикла;
	
	Для каждого Стр ИЗ МатАктивы Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.ПроводкаДеталейСКП) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""Материальные активы"": поле ""Проводка деталей СКП"" не заполнено!",
				ЭтотОбъект, "МатАктивы[" + МатАктивы.Индекс(Стр) + "].ПроводкаДеталейСКП", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.ДокументРаспределениеМА) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В строке номер """ + Стр.НомерСтроки + """ табличной части ""Материальные активы"": поле ""Документ распределение МА"" не заполнено!",
				ЭтотОбъект, "МатАктивы[" + МатАктивы.Индекс(Стр) + "].ДокументРаспределениеМА", , Отказ);
		КонецЕсли;	
				
	КонецЦикла;
	
	//проверяем, что в ТЧ Мат активы проводки не повторяются
	ТЗПроводки = МатАктивы.Выгрузить(,"ПроводкаДеталейСКП");
	ТЗПроводки.Колонки.Добавить("ЧислоПроводок", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1));
	ТЗПроводки.ЗаполнитьЗначения(1, "ЧислоПроводок");
	ТЗПроводки.Свернуть("ПроводкаДеталейСКП","ЧислоПроводок");
	
	Для Каждого Стр из ТЗПроводки Цикл 
		
		Если Стр.ЧислоПроводок > 1 Тогда 
			Сообщить("В табличной части Материальные активы найдено несколько строк с Проводкой деталей СКП """ + Стр.ПроводкаДеталейСКП + """!");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// ОБРАБОТКА ПРОВЕДЕНИЯ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	МассивПроводок = Новый Массив;	
	
	// регистр МатериальныеАктивы Расход
	Движения.МатериальныеАктивы.Записывать = Истина;
	
	Для Каждого ТекСтрокаДопРасходы Из ДопРасходы Цикл
		
		Движение = Движения.МатериальныеАктивы.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.ПроводкаДеталейСКП = ТекСтрокаДопРасходы.ПроводкаДеталейСКП;
		Движение.Сумма = ТекСтрокаДопРасходы.Сумма;
		Движение.СуммаРуб = ТекСтрокаДопРасходы.СуммаРуб;
		
		МассивПроводок.Добавить(ТекСтрокаДопРасходы.ПроводкаДеталейСКП);
	
	КонецЦикла;
	
	Движения.МатериальныеАктивы.Записать();
	
	//проверяем, что проводки в документе не были распределены другим документом
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПроводок", МассивПроводок);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Представление КАК ПроводкаПредставление,
		|	МатериальныеАктивыОстатки.СуммаОстаток,
		|	МатериальныеАктивыОстатки.СуммаРубОстаток
		|ИЗ
		|	РегистрНакопления.МатериальныеАктивы.Остатки(, ПроводкаДеталейСКП В (&МассивПроводок)) КАК МатериальныеАктивыОстатки";
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Сообщить("Проводка DSS деталей счетов книги покупок """ + Выборка.ПроводкаПредставление + """ уже была распределена!");
		//Отказ = Истина;
		
	КонецЦикла;
	
	Если Не Отказ Тогда 
		
		//Расчет коэффициента распределения суммы доп. расходов   	
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП КАК ПроводкаДеталейСКП,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА КАК ДокументРаспределениеМА
		|ПОМЕСТИТЬ РаспределениеДопРасходовИзКнигиПокупокМатАктивы
		|ИЗ
		|	Документ.РаспределениеДопРасходовИзКнигиПокупок.МатАктивы КАК РаспределениеДопРасходовИзКнигиПокупокМатАктивы
		|ГДЕ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПроводкаДеталейСКП,
		|	ДокументРаспределениеМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП,
		|	РаспределениеМатериаловИзКнигиПокупокFA.Номенклатура,
		|	РаспределениеМатериаловИзКнигиПокупокFA.Сумма,
		|	РаспределениеМатериаловИзКнигиПокупокFA.СуммаРуб,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА
		|ИЗ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы КАК РаспределениеДопРасходовИзКнигиПокупокМатАктивы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.FA КАК РаспределениеМатериаловИзКнигиПокупокFA
		|		ПО РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА = РаспределениеМатериаловИзКнигиПокупокFA.Ссылка
		|			И РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокFA.ПроводкаДеталейСКП
		|			И (РаспределениеМатериаловИзКнигиПокупокFA.Ссылка.Проведен)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП,
		|	РаспределениеМатериаловИзКнигиПокупокINVENTORY.СуммаРуб,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП.TranAmount КАК Сумма
		|ИЗ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы КАК РаспределениеДопРасходовИзКнигиПокупокМатАктивы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.INVENTORY КАК РаспределениеМатериаловИзКнигиПокупокINVENTORY
		|		ПО РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА = РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка
		|			И РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП
		|			И (РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка.Проведен)
		|			И (РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП.System = ""AP"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределениеМатериаловИзКнигиПокупокMandS.СуммаРуб,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП,
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП.TranAmount КАК Сумма
		|ИЗ
		|	РаспределениеДопРасходовИзКнигиПокупокМатАктивы КАК РаспределениеДопРасходовИзКнигиПокупокМатАктивы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.MandS КАК РаспределениеМатериаловИзКнигиПокупокMandS
		|		ПО РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокMandS.ПроводкаДеталейСКП
		|			И РаспределениеДопРасходовИзКнигиПокупокМатАктивы.ДокументРаспределениеМА = РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка
		|			И (РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка.Проведен)";
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		ТаблицаFA = МассивРезультатов[1].Выгрузить();
		ТаблицаInventory = МассивРезультатов[2].Выгрузить();
		ТаблицаMAndS = МассивРезультатов[3].Выгрузить();
		
		СтруктураПоиска = Новый Структура("ПроводкаДеталейСКП, ДокументРаспределениеМА");
		Для Каждого СтрокаТЧ ИЗ МатАктивы Цикл
			
			СтруктураПоиска.ПроводкаДеталейСКП = СтрокаТЧ.ПроводкаДеталейСКП;
			СтруктураПоиска.ДокументРаспределениеМА = СтрокаТЧ.ДокументРаспределениеМА;
			
			СтрокиFA = ТаблицаFA.НайтиСтроки(СтруктураПоиска);
			СтрокиInventory = ТаблицаInventory.НайтиСтроки(СтруктураПоиска);
			СтрокиMandS = ТаблицаMAndS.НайтиСтроки(СтруктураПоиска);
			
			Если Не СтрокиFA.Количество() 
				И НЕ СтрокиInventory.Количество()
				И НЕ СтрокиMandS.Количество() Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Не удалось найти проведенного документа """ + СтрокаТЧ.ДокументРаспределениеМА + """ с проводкой """ + СтрокаТЧ.ПроводкаДеталейСКП + """ в строке номер """ + СтрокаТЧ.НомерСтроки + """ табличной части ""Материальные активы""!",
					ЭтотОбъект, "МатАктивы[" + МатАктивы.Индекс(СтрокаТЧ) + "].ДокументРаспределениеМА", , Отказ);
								
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ Отказ Тогда
			
			СуммаМатАктивов = ТаблицаFA.Итог("СуммаРуб") + ТаблицаInventory.Итог("СуммаРуб") + ТаблицаMAndS.Итог("СуммаРуб");
			
			Если СуммаМатАктивов <> 0 Тогда 
				
				КоэфРаспределения = ДопРасходы.Итог("СуммаРуб") / СуммаМатАктивов;
				
				// регистр ОборудованиеDSS Расход
				Движения.ОборудованиеDSS.Записывать = Истина;
				
				Для Каждого СтрокаFA ИЗ ТаблицаFA Цикл
					Движение = Движения.ОборудованиеDSS.ДобавитьПриход();
					Движение.Период = Дата;
					Движение.ПроводкаДеталейСКП = СтрокаFA.ПроводкаДеталейСКП;
					Движение.Номенклатура = СтрокаFA.Номенклатура;
					Движение.СуммаРуб = СтрокаFA.СуммаРуб * КоэфРаспределения;
					Движение.Сумма = СтрокаFA.Сумма * КоэфРаспределения;
				КонецЦикла;
				Движения.ОборудованиеDSS.Записать();
				
				// регистр InventoryTangibleAssetsCosts 
				Движения.InventoryTangibleAssetsCosts.Записывать = Истина;
				
				Для Каждого СтрокаInventory ИЗ ТаблицаInventory Цикл
					Движение = Движения.InventoryTangibleAssetsCosts.Добавить();
					Движение.Период = Дата;
					Движение.ПроводкаДеталейСКП = СтрокаInventory.ПроводкаДеталейСКП;
					Движение.FiscalSum = СтрокаInventory.СуммаРуб * КоэфРаспределения;
					Движение.ManagementSum = СтрокаInventory.Сумма * КоэфРаспределения;
				КонецЦикла; 
				Движения.InventoryTangibleAssetsCosts.Записать();
				
				// регистр M&S 
				Движения.MaterialsAndSupplies.Записывать = Истина;
				
				Для Каждого СтрокаMAndS ИЗ ТаблицаMAndS Цикл
					Движение = Движения.MaterialsAndSupplies.Добавить();
					Движение.Период = Дата;
					Движение.ПроводкаДеталейСКП = СтрокаMAndS.ПроводкаДеталейСКП;
					Движение.FiscalSum = СтрокаMAndS.СуммаРуб * КоэфРаспределения;
					Движение.ManagementSum = СтрокаMAndS.Сумма * КоэфРаспределения;
				КонецЦикла; 
				Движения.MaterialsAndSupplies.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры
