#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет ТЧ Товары и Услуги по расчетному документу
//
Процедура ЗаполнитьПоРасчетномуДокументу(РежимДобавления) Экспорт

//Обновление на бух. корп. 3.0.38.43
//Не в лоджелке
//<=

КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)

//Обновление на бух. корп. 3.0.38.43
//Не в лоджелке
//<=


КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	Иначе
		СуммаВключаетНДС = Истина;
	КонецЕсли;

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();
	
	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
	ВалютаДокумента, Дата);
	
	КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если НЕ ЗаписьДополнительногоЛиста Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КорректируемыйПериод");
	КонецЕсли;

	Если НЕ ИспользоватьДокументРасчетовКакСчетФактуру Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РасчетныйДокумент");
	КонецЕсли;

	// Проверка табличной части "Товары и услуги
	Если ПрямаяЗаписьВКнигу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.СчетУчета");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.СчетДоходов");
	КонецЕсли;

	Если НЕ ПрямаяЗаписьВКнигу Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыИУслуги.ВидЦенности");
	КонецЕсли;

	Если ПрямаяЗаписьВКнигу Тогда
		
		Для каждого СтрокаТаблицы Из ТоварыИУслуги Цикл
			Префикс = "ТоварыИУслуги[%1].";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));
			
			ИмяСписка = ВернутьСтр("ru = 'ТоварыИУслуги'");
			
			// Проверка счета НДС.
			Если ФормироватьПроводки И СтрокаТаблицы.СуммаНДС <> 0
					И НЕ ЗначениеЗаполнено(СтрокаТаблицы.СчетУчетаНДСПоРеализации) Тогда
					
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", ,
					ВернутьСтр("ru = 'Счет учета НДС по реализации'"), СтрокаТаблицы.НомерСтроки, ИмяСписка);
				Поле = Префикс + "СчетУчетаНДСПоРеализации";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Посчитать сумму документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект, "ТоварыИУслуги");

	УчетНДСПереопределяемый.СинхронизацияПометкиНаУдалениеУСчетаФактуры(ЭтотОбъект);
	
	//Обновление на бух. корп. 3.0.38.43
	//Документы.КорректировкаРеализации.ОбновитьРеквизитыСвязанныхДокументовКорректировки(ЭтотОбъект, Отказ);
	//<=
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
	
		УчетНДСПереопределяемый.ПроверитьСоответствиеРеквизитовСчетаФактурыВыданного(ЭтотОбъект);		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);

	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ОтражениеНачисленияНДС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	ТаблицаТоваровУслуг = ПараметрыПроведения.ТоварыУслуги.Скопировать();

	Документы.ОтражениеНачисленияНДС.СформироватьДвиженияОтражениеНачисленияНДС(
		ТаблицаТоваровУслуг,
		ПараметрыПроведения.ДокументыОплаты,
		ПараметрыПроведения.ТаблицаРеквизиты,
		Движения,
		Отказ);
		
	//Движения регистра "Рублевые суммы документов в валюте"
	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалюте(ПараметрыПроведения.ТоварыУслуги, 
		ПараметрыПроведения.ТаблицаРеквизиты, Движения, Отказ);
		
	Движения.Записать();
	УчетНДСПереопределяемый.УстановкаПроведенияУСчетаФактуры(Ссылка, "СчетФактураВыданный", Истина, Отказ,
		ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект));
			
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
		
	УчетНДСПереопределяемый.УстановкаПроведенияУСчетаФактуры(Ссылка, "СчетФактураВыданный", Ложь, Отказ);
		
КонецПроцедуры

#КонецЕсли