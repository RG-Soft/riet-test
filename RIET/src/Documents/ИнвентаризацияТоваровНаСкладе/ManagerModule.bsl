Процедура ИНВ3(Объект) Экспорт
	ТабДок = ПечатьИНВ3(Объект);
	ТабДок.Показать();
КонецПроцедуры

Процедура ИНВ19(Объект) Экспорт
	ТабДок = ПечатьИНВ19(Объект);
	ТабДок.Показать();
КонецПроцедуры

Процедура ИНВ22(Объект) Экспорт
	ТабДок = ПечатьИНВ22(Объект);
	ТабДок.Показать();
КонецПроцедуры

Функция ПечатьИНВ3(Объект) 
	Перем мВалютаРегламентированногоУчета;
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаПечати = мВалютаРегламентированногоУчета;

	Запрос       = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаОкончанияИнвентаризации,
	|	""приказ, постановление, распоряжение"" КАК ДокументОснованиеВид,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.Организация,
	|	ИнвентаризацияТоваровНаСкладе.Goods.(
	|		НомерСтроки КАК Номер,
	|		Good.DescriptionRus КАК ТоварНаименование,
	|		ВЫРАЗИТЬ(ИнвентаризацияТоваровНаСкладе.Goods.Good.Код КАК СТРОКА(32)) КАК ТоварКод,
	|		UOM.BasicUOM КАК ЕдиницаИзмеренияНаименование,
	|		UOM.BasicUOM.КодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.Goods.Quantity = 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Goods.Sum / ИнвентаризацияТоваровНаСкладе.Goods.Quantity
	|		КОНЕЦ КАК Цена,
	|		ActualQuantity КАК ФактКоличество,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.Goods.Quantity < 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Goods.Quantity
	|		КОНЕЦ КАК БухКоличество,
	|		ActualSum КАК ФактСумма,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.Goods.Sum < 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Goods.Sum
	|		КОНЕЦ КАК БухСумма
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Goods.НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();

	Шапка.Следующий();
	
	ВыборкаСтрокТовары = Шапка.Goods.Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ3";
	Макет       = Документы.ИнвентаризацияТоваровНаСкладе.ПолучитьМакет("ИНВ3");

	//////////////////////////////////////////////////////////////////////
	// 1-я страница формы

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	ПредставлениеОрганизации = Объект.Организация.НаименованиеПолное;
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = Объект.Организация.КодПоОКПО;
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.НомерДокумента           = Объект.Номер;
	ОбластьМакета.Параметры.ДатаОкончанияИнвентаризацииЛокальныйФормат = Шапка.ДатаОкончанияИнвентаризации; 
	
	Если ЗначениеЗаполнено(Объект.InventoryLocation) Тогда
		ПодразделениеПечать = Объект.InventoryLocation.Подразделение.Родитель.НаименованиеПолное;
		ОбластьМакета.Параметры.Подразделение = ПодразделениеПечать;
	КонецЕсли; 
	
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	//////////////////////////////////////////////////////////////////////
	// 2-я страница формы

	ИтогФактКоличество = 0;
	ИтогФактСумма      = 0;
	ИтогФактСуммаВсего = 0;
	ИтогБухКоличество  = 0;
	ИтогБухСумма       = 0;

	КолвоСтрокПоСтранице = 0;
	КолвоПоСтранице      = 0;
	СуммаЛиста           = 0;
	ИтогоКолво           = 0;
	
	НомерСтраницы = 2;
    Ном = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	// Выводим многострочную часть документа
	ПодвалСтраницы  = Макет.ПолучитьОбласть("ПодвалСтраницы");	
		
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Ном = Ном + 1;
		СтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
		СтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалСтраницы);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");

			ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество = ИтогФактКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма      = ИтогФактСумма;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество  = ИтогБухКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма       = ИтогБухСумма;

			ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
			ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(КолвоПоСтранице);
			ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

			ИтогФактКоличество = 0;
			ИтогФактСумма      = 0;
			ИтогБухКоличество  = 0;
			ИтогБухСумма       = 0;

			КолвоСтрокПоСтранице = 0;
			КолвоПоСтранице      = 0;
			СуммаЛиста           = 0;

		КонецЕсли;

		СтрокаТаблицы.Параметры.Номер = Ном;
		СтрокаТаблицы.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование;

		ТабДокумент.Вывести(СтрокаТаблицы);

		ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
		ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
		ИтогФактСуммаВсего = ИтогФактСуммаВсего + ВыборкаСтрокТовары.ФактСумма;
		ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
		ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
		ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.ФактКоличество;

		КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
		КолвоПоСтранице      = КолвоПоСтранице      + ВыборкаСтрокТовары.ФактКоличество;
		СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");

	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество  = ИтогФактКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма       = ИтогФактСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество   = ИтогБухКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма        = ИтогБухСумма;
	ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
	ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(КолвоПоСтранице);
	ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, мВалютаРегламентированногоУчета);
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим подвал документа
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтогоКолво);
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
	ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаПечати);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписиМОЛ");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
	ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
		
	ОбластьМакета.Параметры.ДатаДокумента 	= Шапка.ДатаДокумента;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ3()

Функция ПечатьИНВ19(Объект)
	Перем мВалютаРегламентированногоУчета;
	ДопПараметры = Новый Структура;
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаПечати = мВалютаРегламентированногоУчета;
	ДопПараметры    = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаПечати, Объект.Дата);

	Запрос       = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.УстановитьПараметр("Курс",            ДопПараметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       ДопПараметры.Кратность);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаОкончанияИнвентаризации,
	|	""приказ, постановление, распоряжение"" КАК ДокументОснованиеВид,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.Организация,
	|	ИнвентаризацияТоваровНаСкладе.Goods.(
	|		НомерСтроки КАК Номер,
	|		Good.DescriptionRus КАК ТоварНаименование,
	|		Good.Код КАК ТоварКод,
	|		UOM.BasicUOM КАК ЕдиницаИзмеренияНаименование,
	|		UOM.BasicUOM.КодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.Goods.Quantity = 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Goods.Sum / ИнвентаризацияТоваровНаСкладе.Goods.Quantity * &Курс / &Кратность
	|		КОНЕЦ КАК Цена,
	|		ActualQuantity КАК ФактКоличество,
	|		Quantity КАК БухКоличество,
	|		ИнвентаризацияТоваровНаСкладе.Goods.ActualSum * &Курс / &Кратность КАК ФактСумма,
	|		ИнвентаризацияТоваровНаСкладе.Goods.Sum * &Курс / &Кратность КАК БухСумма
	|	)
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Goods.НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Goods.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	
	// Параметры печати.
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ19";
	
	// Получение областей макета.
	Макет = Документы.ИнвентаризацияТоваровНаСкладе.ПолучитьМакет("ИНВ19");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы1");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицы1");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

	// Вывод шапки документа.
	ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
	
	ПредставлениеОрганизации = Объект.Организация.НаименованиеПолное;
	ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	
	Если ЗначениеЗаполнено(Объект.InventoryLocation) Тогда
		ПодразделениеПечать = Объект.InventoryLocation.Подразделение.Родитель.НаименованиеПолное;
		ОбластьМакетаШапка.Параметры.ПредставлениеПодразделения = ПодразделениеПечать;
	КонецЕсли; 
	
	ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        	  = Объект.Организация.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакетаШапка.Параметры.ДатаНачалаИнвентаризации = Формат(Шапка.ДатаНачалаИнвентаризации, "ДЛФ=DD");
	ОбластьМакетаШапка.Параметры.НомерДокумента           = Объект.Номер;
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	НомерСтраницы   = 2;
	НомерСтроки     = 1;
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	ИтогоРезультатНедостачаКоличество   = 0;
	ИтогоРезультатНедостачаСумма        = 0;
	ИтогоПриходИзлишковКоличество = 0;
	ИтогоПриходИзлишковСумма      = 0;

	// Вывод заголовка таблицы.
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

	// Вывод многострочной части докмента.
	ВыборкаСтрокТовары = Шапка.Goods.Выбрать();
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакетаСтрока.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование;

		Разница     = 0;
		РазницаСумм = 0;

		Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
		РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;
		
		Если Разница = 0 Тогда
			Продолжить;
		КонецЕсли;

		ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
		
		Если Разница < 0 Тогда
			
			ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = - Разница;
			ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = - РазницаСумм;
			ОбластьМакетаСтрока.Параметры.ПриходИзлишковКоличество   = 0;
			ОбластьМакетаСтрока.Параметры.ПриходИзлишковСумма        = 0;

			ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + ( - Разница);
			ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + ( - РазницаСумм);
			ИтогоПриходИзлишковКоличество   = ИтогоПриходИзлишковКоличество   + 0;
			ИтогоПриходИзлишковСумма        = ИтогоПриходИзлишковСумма        + 0;
			
		Иначе
			
			ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = 0;
			ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = 0;
			ОбластьМакетаСтрока.Параметры.ПриходИзлишковКоличество   = Разница;
			ОбластьМакетаСтрока.Параметры.ПриходИзлишковСумма        = РазницаСумм;

			ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + 0;
			ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + 0;
			ИтогоПриходИзлишковКоличество   = ИтогоПриходИзлишковКоличество   + Разница;
			ИтогоПриходИзлишковСумма        = ИтогоПриходИзлишковСумма        + РазницаСумм;
			
		КонецЕсли;

		// Проверка вывода.
		СтрокаСПодвалом = Новый Массив();
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
		СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если НЕ КоличествоСтрок = 1 Тогда
		
				// Вывод итого по странице.
				ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
				
				// Вывод разделителя страниц.
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				// Вывод заголовка таблицы.
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;

		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
		
		НомерСтроки = НомерСтроки + 1;

	КонецЦикла;

	// Вывод итого по странице.
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПриходИзлишковКоличество   = ИтогоПриходИзлишковКоличество;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоПриходИзлишковСумма        = ИтогоПриходИзлишковСумма;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма;
	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
	
	// Вывод подвала.
	ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
	//ОбластьМакетаПодвал.Параметры.ФИОБухгалтера = Бухгалтер;
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ19()

Функция ПечатьИНВ22(Объект)
   
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК Номер,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Макет = Документы.ИнвентаризацияТоваровНаСкладе.ПолучитьМакет("ИНВ22");
	
	// Получаем области макета для вывода в табличный документ
	Шапка   = Макет.ПолучитьОбласть("Шапка");
	Подпись = Макет.ПолучитьОбласть("Подпись");
	Подвал  = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 20;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ22";

	// Выведем шапку документа
	Шапка.Параметры.Заполнить(Док);
	
	ПредставлениеОрганизации = Объект.Организация.НаименованиеПолное;
	Шапка.Параметры.Организация = ПредставлениеОрганизации;
	Шапка.Параметры.ОрганизацияКодПоОКПО = Объект.Организация.КодПоОКПО;
	
	Если ЗначениеЗаполнено(Объект.InventoryLocation) Тогда
		ПодразделениеПечать = Объект.InventoryLocation.Подразделение.Родитель.НаименованиеПолное;
		Шапка.Параметры.Подразделение = ПодразделениеПечать;
	КонецЕсли; 
	
	Шапка.Параметры.НомерДокумента = Док.Номер;
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	Шапка.Параметры.НаименованиеИмуществаОбязательств = "";
	
	ТабДокумент.Вывести(Шапка);
	
	ТабДокумент.Вывести(Подпись);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	КоличествоЧленовКомиссии = 0;
	
	// Выведем подвал приказа
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подвал) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	Подвал.Параметры.НаименованиеИмуществаОбязательств = "";
	Подвал.Параметры.ДатаНачалаИнвентаризации          = Формат(Док.ДатаНачалаИнвентаризации, "ДЛФ=DD");
	Подвал.Параметры.ДатаОкончанияИнвентаризации       = Формат(Док.ДатаОкончанияИнвентаризации, "ДЛФ=DD");
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИНВ22()

