&НаСервере
Процедура ЗаполнитьТабличнуюЧастьПоРегистру()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КостЦентры.Ссылка
	|ПОМЕСТИТЬ AU
	|ИЗ
	|	Справочник.КостЦентры КАК КостЦентры
	|ГДЕ
	|	КостЦентры.Сегмент В ИЕРАРХИИ(&СписокСегментов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК Quantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК Sum,
	|	InventoryBatchesОстатки.Good.StandardUOM КАК UOM,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК ActualQuantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК ActualSum,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ КАК Price,
	|	InventoryBatchesОстатки.AU.TaxRegistration КАК TaxRegistration
	|ИЗ
	|	РегистрНакопления.InventoryBatches.Остатки(
	|			&ДатаДокумента,
	|			Company = 4
	|				И (&НеЗаполненаЛокация
	|					ИЛИ InventoryLocation = &InvLoc)
	|				И (&НеЗаполненСписокСегементов
	|					ИЛИ AU В
	|						(ВЫБРАТЬ
	|							AU.Ссылка
	|						ИЗ
	|							AU КАК AU))) КАК InventoryBatchesОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	InventoryBatchesОстатки.Good.StandardUOM,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ,
	|	InventoryBatchesОстатки.AU.TaxRegistration";
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("НеЗаполненаЛокация", НЕ ЗначениеЗаполнено(Объект.InventoryLocation));
	Запрос.УстановитьПараметр("InvLoc", Объект.InventoryLocation);
	Если Объект.Segments.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Ложь);
		Запрос.УстановитьПараметр("СписокСегментов", Объект.Segments.Выгрузить( ,"Segment").ВыгрузитьКолонку("Segment"));
	Иначе
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Истина);
		Запрос.УстановитьПараметр("СписокСегментов", Новый Массив);
	КонецЕсли; 
	
	Результат = Запрос.Выполнить().Выгрузить();
	Объект.Goods.Загрузить(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщить("Не указана дата документа!");
		Возврат;
	КонецЕсли; 
	Если Объект.Goods.Количество() > 0 Тогда
		Если Вопрос("Табличная часть Goods будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	ЗаполнитьТабличнуюЧастьПоРегистру();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ОбщегоНазначения.УстановитьЗначение(ТекущийОбъект.Responsible, ПараметрыСеанса.ТекущийПользователь);
КонецПроцедуры

&НаКлиенте
Процедура GoodsActualQuantityПриИзменении(Элемент)
	ТекСтрока = Элементы.Goods.ТекущиеДанные;
	ТекСтрока.ActualSum = ТекСтрока.Price * ТекСтрока.ActualQuantity;
КонецПроцедуры

&НаКлиенте
Процедура GoodsActualSumПриИзменении(Элемент)
	ТекСтрока = Элементы.Goods.ТекущиеДанные;
	ТекСтрока.ActualQuantity = ?(ТекСтрока.Price = 0, 0, ТекСтрока.ActualSum/ТекСтрока.Price);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяОрганизация");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Заполнить2011(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщить("Не указана дата документа!");
		Возврат;
	КонецЕсли; 
	Если Объект.Goods.Количество() > 0 Тогда
		Если Вопрос("Табличная часть Goods будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	ВыполнитьЗаполнение2011();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаполнение2011()
	Объект.Goods.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КостЦентры.Ссылка
	|ПОМЕСТИТЬ AU
	|ИЗ
	|	Справочник.КостЦентры КАК КостЦентры
	|ГДЕ
	|	КостЦентры.Сегмент В ИЕРАРХИИ(&СписокСегментов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryКорректировкаGoods.Good,
	|	СУММА(InventoryКорректировкаGoods.Quantity) КАК Quantity,
	|	СУММА(InventoryКорректировкаGoods.FiscalSum) КАК FiscalSum,
	|	InventoryКорректировкаGoods.Ссылка.InventoryLocation,
	|	InventoryКорректировкаGoods.AU.Segment КАК Segment
	|ПОМЕСТИТЬ Корректировки
	|ИЗ
	|	Документ.InventoryКорректировка.Goods КАК InventoryКорректировкаGoods
	|ГДЕ
	|	InventoryКорректировкаGoods.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаДокумента, ГОД) И КОНЕЦПЕРИОДА(&ДатаДокумента, ГОД)
	|	И InventoryКорректировкаGoods.Ссылка.Проведен
	|	И InventoryКорректировкаGoods.Reference.Наименование ПОДОБНО ""%Count%""
	|	И InventoryКорректировкаGoods.Quantity > 0
	|	И InventoryКорректировкаGoods.FiscalSum > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	InventoryКорректировкаGoods.Good,
	|	InventoryКорректировкаGoods.Ссылка.InventoryLocation,
	|	InventoryКорректировкаGoods.AU.Segment
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК Quantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК Sum,
	|	InventoryBatchesОстатки.Good.StandardUOM КАК UOM,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК ActualQuantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК ActualSum,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ КАК Price,
	|	InventoryBatchesОстатки.AU.TaxRegistration КАК TaxRegistration,
	|	InventoryBatchesОстатки.InventoryLocation,
	|	InventoryBatchesОстатки.AU.Segment КАК Сегмент
	|ПОМЕСТИТЬ ТекущиеОстатки
	|ИЗ
	|	РегистрНакопления.InventoryBatches.Остатки(
	|			&ДатаДокумента,
	|			Company = 4
	|				И (&НеЗаполненаЛокация
	|					ИЛИ InventoryLocation = &InvLoc)
	|				И (&НеЗаполненСписокСегементов
	|					ИЛИ AU В
	|						(ВЫБРАТЬ
	|							AU.Ссылка
	|						ИЗ
	|							AU КАК AU))) КАК InventoryBatchesОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	InventoryBatchesОстатки.Good.StandardUOM,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ,
	|	InventoryBatchesОстатки.AU.TaxRegistration,
	|	InventoryBatchesОстатки.InventoryLocation,
	|	InventoryBatchesОстатки.AU.Segment
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеОстатки.Good,
	|	ТекущиеОстатки.AU,
	|	ТекущиеОстатки.Quantity - ЕСТЬNULL(Корректировки.Quantity, 0) КАК Quantity,
	|	ТекущиеОстатки.Sum - ЕСТЬNULL(Корректировки.FiscalSum, 0) КАК Sum,
	|	ТекущиеОстатки.UOM,
	|	ТекущиеОстатки.ActualQuantity,
	|	ТекущиеОстатки.ActualSum,
	|	ТекущиеОстатки.Price,
	|	ТекущиеОстатки.TaxRegistration
	|ИЗ
	|	ТекущиеОстатки КАК ТекущиеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Корректировки КАК Корректировки
	|		ПО ТекущиеОстатки.Good = Корректировки.Good
	|			И ТекущиеОстатки.InventoryLocation = Корректировки.InventoryLocation
	|			И ТекущиеОстатки.Сегмент = Корректировки.Segment";
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("НеЗаполненаЛокация", НЕ ЗначениеЗаполнено(Объект.InventoryLocation));
	Запрос.УстановитьПараметр("InvLoc", Объект.InventoryLocation);
	Если Объект.Segments.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Ложь);
		Запрос.УстановитьПараметр("СписокСегментов", Объект.Segments.Выгрузить( ,"Segment").ВыгрузитьКолонку("Segment"));
	Иначе
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Истина);
		Запрос.УстановитьПараметр("СписокСегментов", Новый Массив);
	КонецЕсли; 
	
	Результат = Запрос.Выполнить().Выгрузить();
	Объект.Goods.Загрузить(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить2012(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщить("Не указана дата документа!");
		Возврат;
	КонецЕсли; 
	Если Объект.Goods.Количество() > 0 Тогда
		Если Вопрос("Табличная часть Goods будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	ВыполнитьЗаполнение2012();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаполнение2012()
	Объект.Goods.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КостЦентры.Ссылка
	|ПОМЕСТИТЬ AU
	|ИЗ
	|	Справочник.КостЦентры КАК КостЦентры
	|ГДЕ
	|	КостЦентры.Сегмент В ИЕРАРХИИ(&СписокСегментов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryКорректировкаGoods.Good КАК Good,
	|	InventoryКорректировкаGoods.AU КАК AU,
	|	InventoryКорректировкаGoods.Ссылка
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	Документ.InventoryКорректировка.Goods КАК InventoryКорректировкаGoods
	|ГДЕ
	|	InventoryКорректировкаGoods.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаДокумента, КВАРТАЛ) И КОНЕЦПЕРИОДА(&ДатаДокумента, КВАРТАЛ)
	|	И InventoryКорректировкаGoods.Ссылка.Проведен
	|	И InventoryКорректировкаGoods.Reference.Наименование ПОДОБНО ""%Count%""
	|	И (&НеЗаполненаЛокация
	|			ИЛИ InventoryКорректировкаGoods.Ссылка.InventoryLocation = &InvLoc)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Good,
	|	ВложенныйЗапрос.Quantity,
	|	ВложенныйЗапрос.FiscalSum,
	|	ВложенныйЗапрос.InventoryLocation,
	|	ВложенныйЗапрос.Segment
	|ПОМЕСТИТЬ Корректировки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Good КАК Good,
	|		СУММА(ВложенныйЗапрос.Quantity) КАК Quantity,
	|		СУММА(ВложенныйЗапрос.FiscalSum) КАК FiscalSum,
	|		ВложенныйЗапрос.InventoryLocation КАК InventoryLocation,
	|		ВложенныйЗапрос.Segment КАК Segment
	|	ИЗ
	|		(ВЫБРАТЬ
	|			InventoryBatches.Good КАК Good,
	|			СУММА(ВЫБОР
	|					КОГДА InventoryBatches.ВидДвижения = ЗНАЧЕНИЕ(виддвижениянакопления.приход)
	|						ТОГДА InventoryBatches.Quantity
	|					ИНАЧЕ -InventoryBatches.Quantity
	|				КОНЕЦ) КАК Quantity,
	|			СУММА(ВЫБОР
	|					КОГДА InventoryBatches.ВидДвижения = ЗНАЧЕНИЕ(виддвижениянакопления.приход)
	|						ТОГДА InventoryBatches.Sum
	|					ИНАЧЕ -InventoryBatches.Sum
	|				КОНЕЦ) КАК FiscalSum,
	|			InventoryBatches.InventoryLocation КАК InventoryLocation,
	|			InventoryBatches.AU.Segment КАК Segment
	|		ИЗ
	|			РегистрНакопления.InventoryBatches КАК InventoryBatches
	|		ГДЕ
	|			(InventoryBatches.Good, InventoryBatches.AU, InventoryBatches.Регистратор) В
	|					(ВЫБРАТЬ
	|						данные.Good,
	|						данные.AU,
	|						данные.Ссылка
	|					ИЗ
	|						данные)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			InventoryBatches.Good,
	|			InventoryBatches.InventoryLocation,
	|			InventoryBatches.AU.Segment) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Good,
	|		ВложенныйЗапрос.InventoryLocation,
	|		ВложенныйЗапрос.Segment) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.Quantity > 0
	|	И ВложенныйЗапрос.FiscalSum > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК Quantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК Sum,
	|	InventoryBatchesОстатки.Good.StandardUOM КАК UOM,
	|	СУММА(InventoryBatchesОстатки.QuantityОстаток) КАК ActualQuantity,
	|	СУММА(InventoryBatchesОстатки.SumОстаток) КАК ActualSum,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ КАК Price,
	|	InventoryBatchesОстатки.AU.TaxRegistration КАК TaxRegistration,
	|	InventoryBatchesОстатки.InventoryLocation,
	|	InventoryBatchesОстатки.AU.Segment КАК Сегмент
	|ПОМЕСТИТЬ ТекущиеОстатки
	|ИЗ
	|	РегистрНакопления.InventoryBatches.Остатки(
	|			&ДатаДокумента,
	|			Company = 4
	|				И (&НеЗаполненаЛокация
	|					ИЛИ InventoryLocation = &InvLoc)
	|				И (&НеЗаполненСписокСегементов
	|					ИЛИ AU В
	|						(ВЫБРАТЬ
	|							AU.Ссылка
	|						ИЗ
	|							AU КАК AU))) КАК InventoryBatchesОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	InventoryBatchesОстатки.Good,
	|	InventoryBatchesОстатки.AU,
	|	InventoryBatchesОстатки.Good.StandardUOM,
	|	ВЫБОР
	|		КОГДА InventoryBatchesОстатки.QuantityОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ InventoryBatchesОстатки.SumОстаток / InventoryBatchesОстатки.QuantityОстаток
	|	КОНЕЦ,
	|	InventoryBatchesОстатки.AU.TaxRegistration,
	|	InventoryBatchesОстатки.InventoryLocation,
	|	InventoryBatchesОстатки.AU.Segment
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеОстатки.Good,
	|	ТекущиеОстатки.AU,
	|	ТекущиеОстатки.Quantity - ЕСТЬNULL(Корректировки.Quantity, 0) КАК Quantity,
	|	ТекущиеОстатки.Sum - ЕСТЬNULL(Корректировки.FiscalSum, 0) КАК Sum,
	|	ТекущиеОстатки.UOM,
	|	ТекущиеОстатки.ActualQuantity,
	|	ТекущиеОстатки.ActualSum,
	|	ТекущиеОстатки.Price,
	|	ТекущиеОстатки.TaxRegistration
	|ИЗ
	|	ТекущиеОстатки КАК ТекущиеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Корректировки КАК Корректировки
	|		ПО ТекущиеОстатки.Good = Корректировки.Good
	|			И ТекущиеОстатки.InventoryLocation = Корректировки.InventoryLocation
	|			И ТекущиеОстатки.Сегмент = Корректировки.Segment";
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("НеЗаполненаЛокация", НЕ ЗначениеЗаполнено(Объект.InventoryLocation));
	Запрос.УстановитьПараметр("InvLoc", Объект.InventoryLocation);
	Если Объект.Segments.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Ложь);
		Запрос.УстановитьПараметр("СписокСегментов", Объект.Segments.Выгрузить( ,"Segment").ВыгрузитьКолонку("Segment"));
	Иначе
		Запрос.УстановитьПараметр("НеЗаполненСписокСегементов", Истина);
		Запрос.УстановитьПараметр("СписокСегментов", Новый Массив);
	КонецЕсли; 
	
	Результат = Запрос.Выполнить().Выгрузить();
	Объект.Goods.Загрузить(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Проверка(Команда)
	
	Для Каждого СтрокаТЧ Из Объект.Goods Цикл
		Если СтрокаТЧ.Sum < 0 Или СтрокаТЧ.Price = 1 Тогда
			СтрокаТЧ.Ошибка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры




