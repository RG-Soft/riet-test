
////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.Country) Тогда
			
			Объект.Country = ImportExportСервер.ПолучитьCountryПользователя(ПараметрыСеанса.ТекущийПользователь);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РГСофтКлиент.ПроверитьНеобходимостьЗаписиДокумента(ПараметрыЗаписи.РежимЗаписи, Объект.Проведен, Модифицированность, Отказ);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//ПараметрыЗаписи.Вставить("ТочноеВремяНачала", ОценкаПроизводительностиРГСофт.ТочноеВремя());
	
	ТекущийОбъект.ModifiedBy = ПараметрыСеанса.ТекущийПользователь;
	ТекущийОбъект.ModificationDate = ТекущаяДата();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//ОценкаПроизводительностиРГСофт.ЗафиксироватьВремяОкончания(ПараметрыЗаписи.ТочноеВремяНачала, Справочники.КлючевыеОперации.BlacklistИнтерактивнаяЗапись, Объект.Ссылка);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////
// ТАБЛИЧНАЯ ЧАСТЬ

&НаКлиенте
Процедура Fill(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Country) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Country"" is empty!",
			, "Country", "Объект");
		Возврат;
	КонецЕсли;
	
	Очистить = Ложь;
	Если Объект.POLines.Количество() > 0 Тогда
	
		Ответ = Вопрос("Clear table?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, , КодВозвратаДиалога.Нет);
		Очистить = Ответ = КодВозвратаДиалога.Да;
	
	КонецЕсли; 
	
	ЗаполнитьНаСервере(Очистить);
	
КонецПроцедуры

// ДОДЕЛАТЬ
&НаСервере
Процедура ЗаполнитьНаСервере(Очистить)
	
	//ТочноеВремяНачала = ОценкаПроизводительностиРГСофт.ТочноеВремя();	
	
	Если Очистить Тогда
		Объект.POLines.Очистить();
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	// ДОБАВИТЬ БЫ ЭТО В СПРАВОЧНИК СТРАН
	ИсключаемыеСтраны = Новый Массив;
	Если Объект.Country = Справочники.CountriesOfProcessLevels.RU Тогда
		
		ИсключаемыеСтраны.Добавить("Russian Federation");
		ИсключаемыеСтраны.Добавить("Russia");
		
	ИначеЕсли Объект.Country = Справочники.CountriesOfProcessLevels.KZ Тогда
		
		ИсключаемыеСтраны.Добавить("Kazakhstan");
		
	ИначеЕсли Объект.Country = Справочники.CountriesOfProcessLevels.UZ Тогда
		
		ИсключаемыеСтраны.Добавить("Uzbekistan");

	ИначеЕсли Объект.Country = Справочники.CountriesOfProcessLevels.AZ Тогда
		
		ИсключаемыеСтраны.Добавить("Azerbaijan");
		
	ИначеЕсли Объект.Country = Справочники.CountriesOfProcessLevels.TM Тогда
		
		ИсключаемыеСтраны.Добавить("Turkmenistan");
		
	КонецЕсли;
	Запрос.УстановитьПараметр("ИсключаемыеСтраны", ИсключаемыеСтраны);
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Country", Объект.Country);
	Запрос.УстановитьПараметр("CurrentPOLines", РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(Объект.POLines, "POLine"));
	
	// Запрос построим так:
	// Вначале сформируем 4 временных таблицы: NotAllowedRulesByPartNo, NotAllowedRulesByDescription, AllowedRulesByPartNo, AllowedRulesByDescription
	// Потом соединим справочник PO lines с этими таблицами, а также с таблицами блеклистов и товаров, чтобы отсечь PO lines которые уже попали в другие блеклисты или вошли в инвойсы
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Rules.Ссылка,
		|	Rules.Value
		|ПОМЕСТИТЬ NotAllowedRulesByPartNo
		|ИЗ
		|	Справочник.RulesOfBlacklist КАК Rules
		|ГДЕ
		|	Rules.Country = &Country
		|	И Rules.Type <> ЗНАЧЕНИЕ(Перечисление.TypesOfRulesOfBlacklist.Allowed)
		|	И Rules.Field = ЗНАЧЕНИЕ(Перечисление.FieldsForRulesOfBlacklist.КодПоставщика)
		|	И (НЕ Rules.ПометкаУдаления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Rules.Value
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Rules.Ссылка,
		|	Rules.Value
		|ПОМЕСТИТЬ NotAllowedRulesByDescription
		|ИЗ
		|	Справочник.RulesOfBlacklist КАК Rules
		|ГДЕ
		|	Rules.Country = &Country
		|	И Rules.Type <> ЗНАЧЕНИЕ(Перечисление.TypesOfRulesOfBlacklist.Allowed)
		|	И Rules.Field = ЗНАЧЕНИЕ(Перечисление.FieldsForRulesOfBlacklist.ОписаниеНоменклатуры)
		|	И (НЕ Rules.ПометкаУдаления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Rules.Value
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Rules.Value
		|ПОМЕСТИТЬ AllowedRulesByPartNo
		|ИЗ
		|	Справочник.RulesOfBlacklist КАК Rules
		|ГДЕ
		|	Rules.Country = &Country
		|	И Rules.Type = ЗНАЧЕНИЕ(Перечисление.TypesOfRulesOfBlacklist.Allowed)
		|	И Rules.Field = ЗНАЧЕНИЕ(Перечисление.FieldsForRulesOfBlacklist.КодПоставщика)
		|	И (НЕ Rules.ПометкаУдаления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Rules.Value
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Rules.Value
		|ПОМЕСТИТЬ AllowedRulesByDescription
		|ИЗ
		|	Справочник.RulesOfBlacklist КАК Rules
		|ГДЕ
		|	Rules.Country = &Country
		|	И Rules.Type = ЗНАЧЕНИЕ(Перечисление.TypesOfRulesOfBlacklist.Allowed)
		|	И Rules.Field = ЗНАЧЕНИЕ(Перечисление.FieldsForRulesOfBlacklist.ОписаниеНоменклатуры)
		|	И (НЕ Rules.ПометкаУдаления)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Rules.Value
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиЗаявкиНаЗакупку.Ссылка КАК POLine,
		|	ЕСТЬNULL(NotAllowedRulesByPartNo.Ссылка, NotAllowedRulesByDescription.Ссылка) КАК Rule
		|ИЗ
		|	Справочник.СтрокиЗаявкиНаЗакупку КАК СтрокиЗаявкиНаЗакупку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Blacklist.POLines КАК BlacklistPOLines
		|		ПО СтрокиЗаявкиНаЗакупку.Ссылка = BlacklistPOLines.POLine
		|			И ((НЕ BlacklistPOLines.Ссылка.ПометкаУдаления))
		|			И (BlacklistPOLines.Ссылка <> &Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтрокиИнвойса КАК СтрокиИнвойса
		|		ПО СтрокиЗаявкиНаЗакупку.Ссылка = СтрокиИнвойса.СтрокаЗаявкиНаЗакупку
		|			И ((НЕ СтрокиИнвойса.ПометкаУдаления))
		|			И ((НЕ СтрокиИнвойса.Инвойс.Отменен))
		|		ЛЕВОЕ СОЕДИНЕНИЕ AllowedRulesByPartNo КАК AllowedRulesByPartNo
		|		ПО СтрокиЗаявкиНаЗакупку.КодПоставщика = AllowedRulesByPartNo.Value
		|		ЛЕВОЕ СОЕДИНЕНИЕ AllowedRulesByDescription КАК AllowedRulesByDescription
		|		ПО (СтрокиЗаявкиНаЗакупку.ОписаниеНоменклатуры ПОДОБНО ""%"" + AllowedRulesByDescription.Value + ""%"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ NotAllowedRulesByPartNo КАК NotAllowedRulesByPartNo
		|		ПО СтрокиЗаявкиНаЗакупку.КодПоставщика = NotAllowedRulesByPartNo.Value
		|		ЛЕВОЕ СОЕДИНЕНИЕ NotAllowedRulesByDescription КАК NotAllowedRulesByDescription
		|		ПО (СтрокиЗаявкиНаЗакупку.ОписаниеНоменклатуры ПОДОБНО ""%"" + NotAllowedRulesByDescription.Value + ""%"")
		|ГДЕ
		|	(СтрокиЗаявкиНаЗакупку.Владелец.БОРГ.Компания.Country = &Country)
		|	И СтрокиЗаявкиНаЗакупку.Владелец.ДатаЗаявкиНаЗакупку >= ДАТАВРЕМЯ(2011, 1, 1)
		|	И НЕ СтрокиЗаявкиНаЗакупку.Владелец.СтранаПоставщика В (&ИсключаемыеСтраны)
		|	И (НЕ СтрокиЗаявкиНаЗакупку.ПометкаУдаления)
		|	И (НЕ СтрокиЗаявкиНаЗакупку.Ссылка В (&CurrentPOLines))
		|	И BlacklistPOLines.POLine ЕСТЬ NULL 
		|	И СтрокиИнвойса.СтрокаЗаявкиНаЗакупку ЕСТЬ NULL 
		|	И AllowedRulesByPartNo.Value ЕСТЬ NULL 
		|	И AllowedRulesByDescription.Value ЕСТЬ NULL 
		|	И (НЕ(NotAllowedRulesByPartNo.Ссылка ЕСТЬ NULL 
		|				И NotAllowedRulesByDescription.Ссылка ЕСТЬ NULL ))
		|
		|УПОРЯДОЧИТЬ ПО
		|	POLine";
		
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("POLine") Цикл
		
		НоваяСтрокаТЧ = Объект.POLines.Добавить();
		НоваяСтрокаТЧ.POLine = Выборка.POLine;
		НоваяСтрокаТЧ.Rule = Выборка.Rule;
		НоваяСтрокаТЧ.Status = Перечисления.StatusesOfLineOfBlacklist.New;
		
	КонецЦикла; 
	
	Модифицированность = Истина;
	
	//ОценкаПроизводительностиРГСофт.ЗафиксироватьВремяОкончания(ТочноеВремяНачала, Справочники.КлючевыеОперации.BlacklistИнтерактивноеЗаполнение, Объект.Ссылка);
	
КонецПроцедуры
