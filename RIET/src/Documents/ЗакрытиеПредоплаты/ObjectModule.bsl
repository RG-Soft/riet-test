
Перем мВалютаРегламентированногоУчета Экспорт;

//Добавил РГ-Софт - Пронин Иван
Перем мУдалятьДвижения;
//Конец добавления

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ОБЕСПЕЧИВАЮЩИЕ ПРОВЕДЕНИЕ ДОКУМЕНТА

Процедура ПодготовитьТаблицуПоСчетам(СтруктураШапкиДокумента, ТаблицаПоСчетам, Отказ, Заголовок)
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("НомерСчета"	, "НомерСчета");
	СтруктураПолей.Вставить("ДатаСчета"		, "ДатаСчета");
	СтруктураПолей.Вставить("Валюта"		, "Валюта");
	//СтруктураПолей.Вставить("ДатаПП"		, "ДатаПП");
	
	СтруктураПолей.Вставить("Сумма"			, "Сумма");
	СтруктураПолей.Вставить("СуммаРуб"		, "СуммаРуб");
	
	СтруктураПолей.Вставить("СтавкаНДС"		, "СтавкаНДС");
	СтруктураПолей.Вставить("СуммаБезНДС"	, "СуммаБезНДС");
	СтруктураПолей.Вставить("СуммаНДС"		, "СуммаНДС");
	
	РезультатЗапросаПоСчетам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Счета", СтруктураПолей);
	ТаблицаПоСчетам = РезультатЗапросаПоСчетам.Выгрузить();
	
КонецПроцедуры

Процедура ПодготовитьТаблицуПоНДС(СтруктураШапкиДокумента, ТаблицаПоНДС, Отказ, Заголовок)
		
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Сумма"				, "Сумма");
	СтруктураПолей.Вставить("СтавкаНДС"			, "СтавкаНДС");
	СтруктураПолей.Вставить("СуммаНДС"			, "СуммаНДС");
	СтруктураПолей.Вставить("БухСчет1С"			, "БухСчет1С");                                        	
	СтруктураПолей.Вставить("AU1С"				, "AU1С");
	СтруктураПолей.Вставить("ОписаниеЗатрат"	, "ОписаниеЗатрат");
	СтруктураПолей.Вставить("Причина"			, "Причина");
		
	РезультатЗапросаПоНДС = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "НДС", СтруктураПолей);
	ТаблицаПоНДС = РезультатЗапросаПоНДС.Выгрузить();
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура;
	СтруктураОбязательныхПолей.Вставить("ДатаПроведения");
	СтруктураОбязательныхПолей.Вставить("НалоговыйПериод");
	СтруктураОбязательныхПолей.Вставить("Организация");
	СтруктураОбязательныхПолей.Вставить("ОписаниеЗатрат");
	СтруктураОбязательныхПолей.Вставить("ДатаСФ");
	СтруктураОбязательныхПолей.Вставить("Контрагент");
	СтруктураОбязательныхПолей.Вставить("Валюта");
	СтруктураОбязательныхПолей.Вставить("AU1С");
	СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	СтруктураОбязательныхПолей.Вставить("Сумма");
	СтруктураОбязательныхПолей.Вставить("СуммаБезНДС");	
	СтруктураОбязательныхПолей.Вставить("ДатаПрихода");
		
	// Теперь позовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Выполним более сложные проверки
	
	Если НЕ НДС.Количество() Тогда
		
		//Проверим заполнене поля БухСчет1с
		Если НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.БухСчет1с) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Бух. счет 1С""!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтруктураШапкиДокумента.ОписаниеЗатрат) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Описание затрат""!", Отказ, Заголовок);
		КонецЕсли;
				
	КонецЕсли;
	
	// Проверим заполнение поля Номер СФ
	Если СокрЛП(СтруктураШапкиДокумента.НомерСФ) = "" Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Номер СФ""!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверим заполнение поля СуммаНДС
	Если НЕ ОбщегоНазначения.ЗначениеСуммаНДСЗаполнено(СтруктураШапкиДокумента.СтавкаНДС, СтруктураШапкиДокумента.СуммаНДС) Тогда		
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Сумма НДС""!", Отказ, Заголовок);	
	КонецЕсли;
	
	// Проверим заполнение поля Номер прихода
	Если СокрЛП(СтруктураШапкиДокумента.НомерПрихода) = "" Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Номер поступления""!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверим заполнение поля Номер ваучера
	Если СокрЛП(СтруктураШапкиДокумента.НомерВаучера) = "" тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Номер ваучера""!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверим заполнение поля PO
	Если СокрЛП(СтруктураШапкиДокумента.ШвепсПО) = "" тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""PO""!", Отказ, Заголовок);
	КонецЕсли;	
			
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеТабличныхЧастей(СтруктураШапкиДокумента, ТаблицаПоСчетам, ТаблицаПоНДС, Отказ, Заголовок)
	
	// СЧЕТА
    
	СтруктураОбязательныхПолей = Новый Структура;
	СтруктураОбязательныхПолей.Вставить("ДатаСчета");
	СтруктураОбязательныхПолей.Вставить("Валюта");
	СтруктураОбязательныхПолей.Вставить("Сумма");
	СтруктураОбязательныхПолей.Вставить("СуммаРуб");
	СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	СтруктураОбязательныхПолей.Вставить("СуммаБезНДС");
	
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Счета", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Выполним более сложные проверки
	Для Каждого СтрокаТаблицыПоСчетам Из ТаблицаПоСчетам Цикл
		
		// Номер счета
		Если СокрЛП(СтрокаТаблицыПоСчетам.НомерСчета) = "" Тогда
			ТекстОшибки = "В строке номер " + СтрокаТаблицыПоСчетам.НомерСтроки + " табличной части ""Счета"": Не заполнено значение реквизита ""Номер счета""!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		КонецЕсли;
		
		// Сумма НДС
		Если НЕ ОбщегоНазначения.ЗначениеСуммаНДСЗаполнено(СтрокаТаблицыПоСчетам.СтавкаНДС, СтрокаТаблицыПоСчетам.СуммаНДС) Тогда
			ТекстОшибки = "В строке номер " + СтрокаТаблицыПоСчетам.НомерСтроки + " табличной части ""Счета"": Не заполнено значение реквизита ""Сумма НДС""!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		КонецЕсли;
		
	КонецЦикла;
	
	// ДУМАТЬ!!!
	//Если Валюта = мВалютаРегламентированногоУчета Тогда
	//	
	//	Если СтруктураШапкиДокумента.Сумма <> ТаблицаПоСчетам.Итог("СуммаРуб") Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Сумма СЧФ закрытия не совпадает с суммой сумм счетов табличной части!", Отказ, Заголовок);
	//	КонецЕсли;
	//	
	//	Если СтруктураШапкиДокумента.СуммаБезНДС <> ТаблицаПоСчетам.Итог("СуммаБезНДС") Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Сумма СЧФ без НДС  не совпадает с суммой сумм без НДС счетов табличной части!", Отказ, Заголовок);
	//	КонецЕсли;
	//	
	//	Если СтруктураШапкиДокумента.СуммаНДС <> ТаблицаПоСчетам.Итог("СуммаНДС") Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Сумма НДС СЧФ не совпадает с суммой сумм НДС счетов табличной части!", Отказ, Заголовок);
	//	КонецЕсли;
	//	
	//Иначе
	//	
	//	Если СтруктураШапкиДокумента.Сумма <> ТаблицаПоСчетам.Итог("Сумма") тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Сумма СЧФ закрытия не совпадает с суммой валютных сумм счетов табличной части!", Отказ, Заголовок);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
	
	
	// НДС
	
	СтруктураОбязательныхПолей = Новый Структура;
	СтруктураОбязательныхПолей.Вставить("Сумма");
	СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	СтруктураОбязательныхПолей.Вставить("AU1С");
	СтруктураОбязательныхПолей.Вставить("ОписаниеЗатрат");
	СтруктураОбязательныхПолей.Вставить("БухСчет1С");
	
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "НДС", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Выполним более сложные проверки
	Для Каждого СтрокаТаблицыНДС Из ТаблицаПоНДС Цикл
		
		// Сумма НДС
		Если НЕ ОбщегоНазначения.ЗначениеСуммаНДСЗаполнено(СтрокаТаблицыНДС.СтавкаНДС, СтрокаТаблицыНДС.СуммаНДС) Тогда
			ТекстОшибки = "В строке номер " + СтрокаТаблицыНДС.НомерСтроки + " табличной части ""НДС"": Не заполнено значение реквизита ""Сумма НДС""!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ОписаниеЗатрат)
		И ТаблицаПоНДС.Количество() = 0 Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена табличная часть ""НДС""!", Отказ, Заголовок);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоСчетам, ТаблицаПоНДС, Отказ, Заголовок);
	
	// В ТЧ Счета может быть указано больше счетов, чем надо списать
	//	будем списывать их в порядке их следования в ТЧ
	ОсталосьСписатьСНДС		= СтруктураШапкиДокумента.Сумма;
	ОсталосьСписатьБезНДС	= СтруктураШапкиДокумента.СуммаБезНДС;
	ОсталосьСписатьНДС		= СтруктураШапкиДокумента.СуммаНДС;
	
	// Цикл по счетам
	Для Каждого СтрокаТаблицыПоСчетам из ТаблицаПоСчетам Цикл
		
		СписатьСНДС = Мин(СтрокаТаблицыПоСчетам.Сумма, ОсталосьСписатьСНДС);
		
		Если СписатьСНДС <= 0 Тогда
			Прервать;
		КонецЕсли;

		
		// Инициализация сумм и других переменных
		Если СтруктураШапкиДокумента.Валюта = мВалютаРегламентированногоУчета Тогда
			 
			СписатьБезНДСРуб	= Мин(СтрокаТаблицыПоСчетам.СуммаБезНДС	, ОсталосьСписатьБезНДС);
			СписатьНДСРуб		= Мин(СтрокаТаблицыПоСчетам.СуммаНДС	, ОсталосьСписатьНДС);
			СписатьСНДСРуб		= СписатьБезНДСРуб + СписатьНДСРуб;
							
		Иначе
			
			Если СписатьСНДС < СтрокаТаблицыПоСчетам.Сумма Тогда
				
				Коэффициент = СписатьСНДС / СтрокаТаблицыПоСчетам.Сумма;
				//А КТО СКАЗАЛ ЧТО ОНИ РУБЛЕВЫЕ??? Пометить на форме
				СписатьБезНДСРуб	= СтрокаТаблицыПоСчетам.СуммаБезНДС	* Коэффициент;
				СписатьНДСРуб		= СтрокаТаблицыПоСчетам.СуммаНДС	* Коэффициент;
				СписатьСНДСРуб		= СтрокаТаблицыПоСчетам.СуммаРуб	* Коэффициент;
				
			Иначе
				
				СписатьБезНДСРуб = СтрокаТаблицыПоСчетам.СуммаБезНДС;
				СписатьНДСРуб = СтрокаТаблицыПоСчетам.СуммаНДС;
				СписатьСНДСРуб = СтрокаТаблицыПоСчетам.СуммаРуб;
				
			КонецЕсли;	
							
		КонецЕсли;
		
		Если ТаблицаПоНДС.Количество() = 0 Тогда
			НомерСчета = СтрокаТаблицыПоСчетам.НомерСчета;
		Иначе
			НомерСчета = "";
		КонецЕсли;
		
		
		// Движение по НДСПокупкиУпр - НДС оплачен
		ДобавитьДвижениеПоНДСПокупкиУпр(
			СтруктураШапкиДокумента,
			СтруктураШапкиДокумента.ДатаПроведения,
			Перечисления.СобытияПоНДСПокупки.НДСОплачен,
			НомерСчета,
			СтрокаТаблицыПоСчетам.СтавкаНДС,
			СписатьБезНДСРуб,
			СписатьНДСРуб);
						

		// Движение по ВзаиморасчетыСПоставщиками
		Движение = Движения.ВзаиморасчетыСПоставщиками.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		Движение.Период 		= СтруктураШапкиДокумента.ДатаСФ;
		Движение.Контрагент 	= СтруктураШапкиДокумента.Контрагент;
		Движение.Валюта 		= мВалютаРегламентированногоУчета;
		Движение.CashCode 		= СтруктураШапкиДокумента.CashCode;
		Движение.НомерСчета 	= СтрокаТаблицыПоСчетам.НомерСчета;
		Движение.СтавкаНДС 		= СтрокаТаблицыПоСчетам.СтавкаНДС;
		Движение.НомерДокумента	= СтруктураШапкиДокумента.НомерСФ;
		Движение.Договор		= СтруктураШапкиДокумента.Договор;
		//А ПОЧЕМУ ЭТО ЗДЕСЬ РУБЛЕВЫЕ СУММЫ???
		Движение.Сумма 			= СписатьБезНДСРуб + СписатьНДСРуб;
		Движение.СуммаНДС 		= СписатьНДСРуб;
		
		
		// Движение по АктыКонтрагентов
		Движение = Движения.АктыКонтрагентов.Добавить();
		Движение.Период 		= СтруктураШапкиДокумента.ДатаПроведения;
		Движение.Контрагент 	= СтруктураШапкиДокумента.Контрагент;
		Движение.НомерСчета 	= НомерСчета;
		Движение.НомерПрихода	= СтруктураШапкиДокумента.НомерПрихода;	
		Движение.ДатаПрихода 	= СтруктураШапкиДокумента.ДатаПрихода;
		Движение.НомерВаучера	= СтруктураШапкиДокумента.НомерВаучера;
		Движение.Валюта 		= СтруктураШапкиДокумента.Валюта;
		Движение.СтавкаНДС		= СтруктураШапкиДокумента.СтавкаНДС;
		
		Движение.Сумма			= СписатьСНДС;
		Движение.СуммаРуб		= СписатьСНДСРуб;
											
				
		// Движение по НДСПредоплаченныеСчета
		Движение=Движения.НДСПредоплаченныеСчета.Добавить();
		Движение.ВидДвижения		= ВидДвиженияНакопления.Расход;
		Движение.Период				= СтруктураШапкиДокумента.ДатаПроведения;	
		Движение.Валюта				= СтрокаТаблицыПоСчетам.Валюта;
		Движение.Контрагент			= СтруктураШапкиДокумента.Контрагент;
		Движение.ДатаСчета			= СтрокаТаблицыПоСчетам.ДатаСчета;
		Движение.НомерСчета			= СтрокаТаблицыПоСчетам.НомерСчета;
		Движение.СтавкаНДС			= СтрокаТаблицыПоСчетам.СтавкаНДС;
		Движение.НалоговыйПериод	= СтруктураШапкиДокумента.НалоговыйПериод;
		// косяк!!!
		//Движ.Сумма=стр.Сумма;
		Движение.Сумма				= СписатьСНДС;
		// косяк!!!
		Движение.СуммаРуб			= СписатьСНДСРуб;
		//А ЭТО ТОЧНО РУБЛЕВЫЕ РЕСУРСЫ??? Не рублевые. Поэтому и косяк.
		Движение.СуммаБезНДС		= СписатьБезНДСРуб;
		Движение.СуммаНДС			= СписатьНДСРуб;

			
		Если ТаблицаПоНДС.Количество() = 0 Тогда
				
			// Движение по НДСПокупкиУпр - Предъявлен НДС поставщиком
			ДобавитьДвижениеПоНДСПокупкиУпр(
				СтруктураШапкиДокумента,
				СтруктураШапкиДокумента.ДатаПроведения,
				Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком,
				НомерСчета,
				СтрокаТаблицыПоСчетам.СтавкаНДС,
				СписатьБезНДСРуб,
				СписатьНДСРуб);
				
			
			// Движение по НДСПокупкиУпр - Получен Счет-фактура
			ДобавитьДвижениеПоНДСПокупкиУпр(
				СтруктураШапкиДокумента,
				СтруктураШапкиДокумента.ДатаПроведения,
				Перечисления.СобытияПоНДСПокупки.ПолученСчетФактура,
				СтрокаТаблицыПоСчетам.НомерСчета,
				СтрокаТаблицыПоСчетам.СтавкаНДС,
				СписатьБезНДСРуб,
				СписатьНДСРуб);
				
					
			Если СокрЛП(СтруктураШапкиДокумента.ОписаниеЗатрат.Наименование) = "FA" тогда
					
				ДобавитьДвижениеПоОборудованиеЛокальное(СтруктураШапкиДокумента, СписатьБезНДСРуб);
				
			//Закомментировал РГ-Софт - Иванов Антон - 2009-03-27
			//Регистр ДанныеКнигиПокупок не закрывался, да и не использовался, поэтому мы решили его очистить до тех пор пока не заработает Inventory
			//иначеЕсли ОписаниеЗатрат.Родитель.Наименование = "SERV" тогда
			//		
			//	продолжить;
			//				
			//Иначе
			
				// ЭТИ ДВИЖЕНИЯ ТАКЖЕ БЫЛИ В ЦИКЛЕ ПО ТАБЛИЦЕ НДС!!!
				//Движение 				= Движения.ДанныеКнигиПокупок.Добавить();
				//Движение.Период 		= ДатаРегистрацииПрихода;
				////Движение.НомерСчета 	= стр.НомерСчета;
				//Движение.Документ		= Ссылка;
				//Движение.ОписаниеЗатрат	= ОписаниеЗатрат;
				//Движение.НомерПрихода	= номерПрихода;
				//Движение.ДатаПрихода	= ДатаПрихода;
				//Движение.Поставщик 		= Контрагент;
				////
				////СуммаНДСДвиж = ОбщегоНазначения.РассчитатьСуммуНДС(Сумма,
				////								   Истина, 
				////								   Истина,
				////								   УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС));

				//Движение.Сумма		    = СписатьБезНДС;
				//Движение.ПлатежныйЦентр	= CashCode.ПлатежныйЦентр;
				//Движение.НомерВаучера	= НомерВаучера;
				//Движение.ПО 			= ШвепсПО;
				//Движение.Валюта			= ВалютаПрихода;
				//Движение.Организация	= Организация;
					
			КонецЕсли; //Если СокрЛП(СтруктураШапкиДокумента.ОписаниеЗатрат.Наименование) = "FA" 
				
		КонецЕсли; // Если ТаблицаПоНДС.Количество() = 0 Тогда
		
		// А ПОЧЕМУ ЭТО У НАС ЭТИ ДВИЖЕНИЯ ДЕЛАЮТСЯ ДЛЯ КАЖДОЙ СТРОКИ СЧЕТОВ???
		//Если есть расшифровка, то делаем движения по ТЧ
		Для каждого СтрокаТаблицыПоНДС Из ТаблицаПоНДС Цикл
		
			// Движение по НДСПокупкиУпр - Предъявлен НДС поставщиком
			ДобавитьДвижениеПоНДСПокупкиУПР(
				СтруктураШапкиДокумента,
				СтруктураШапкиДокумента.ДатаПроведения,
				Перечисления.СобытияПоНДСПокупки.ПредъявленНДСПоставщиком,
				НомерСчета,
				СтрокаТаблицыПоНДС.СтавкаНДС,
				//А ЭТИ СУММЫ ТОЧНО РУБЛЕВЫЕ??? Пометить на форме
				СтрокаТаблицыПоНДС.Сумма - СтрокаТаблицыПоНДС.СуммаНДС,
				СтрокаТаблицыПоНДС.СуммаНДС);
				
				
			// Движение по НДСПокупкиУпр - Получен Счет-фактура
			ДобавитьДвижениеПоНДСПокупкиУПР(
				СтруктураШапкиДокумента,
				СтруктураШапкиДокумента.ДатаПроведения,
				Перечисления.СобытияПоНДСПокупки.ПолученСчетФактура,
				НомерСчета,
				СтрокаТаблицыПоНДС.СтавкаНДС,
				СтрокаТаблицыПоНДС.Сумма - СтрокаТаблицыПоНДС.СуммаНДС,
				СтрокаТаблицыПоНДС.СуммаНДС);
				
				
			// Движение по СчетаФактурыКонтрагентов
			Движение = Движения.СчетаФактурыКонтрагентов.Добавить();
			Движение.Период				= СтруктураШапкиДокумента.ДатаПроведения;
			Движение.Контрагент			= СтруктураШапкиДокумента.Контрагент;
			Движение.Валюта				= СтруктураШапкиДокумента.Валюта;
			Движение.НомерСчета			= НомерСчета;
			Движение.НомерСФ			= СтруктураШапкиДокумента.НомерСФ;
			Движение.ДатаСФ				= СтруктураШапкиДокумента.ДатаСФ;
			Движение.НомерВаучера		= СтруктураШапкиДокумента.НомерВаучера;
			Движение.ДатаРегистрации	= СтруктураШапкиДокумента.ДатаПроведения;
			Движение.СтавкаНДС			= СтрокаТаблицыПоНДС.СтавкаНДС;
			Движение.БухСчет1С			= СтрокаТаблицыПоНДС.БухСчет1С;
			Движение.AU1С				= СтрокаТаблицыПоНДС.AU1С;
			Движение.Причина			= СтрокаТаблицыПоНДС.Причина;
			Движение.ОписаниеЗатрат		= СтрокаТаблицыПоНДС.ОписаниеЗатрат;
			//КОСЯК!!! А ЕСЛИ ВАЛЮТА НЕ РУБЛИ??? Пересчитать.
			Движение.Сумма				= СтрокаТаблицыПоНДС.Сумма;
			Движение.СуммаРуб			= СтрокаТаблицыПоНДС.Сумма;

				
			Если СокрЛП(СтрокаТаблицыПоНДС.ОписаниеЗатрат.Наименование) = "FA" тогда
				
				ДобавитьДвижениеПоОборудованиеЛокальное(СтруктураШапкиДокумента, СтрокаТаблицыПоНДС.Сумма - СтрокаТаблицыПоНДС.СуммаНДС);				
								
			КонецЕсли; //Если CокрЛП(СтрокаТаблицыПоНДС.ОписаниеЗатрат.Наименование) = "FA"
	
		КонецЦикла; // Для каждого СтрокаТаблицыПоНДС Из ТаблицаПоНДС Цикл
			
		
		//Постусловия цикла
		ОсталосьСписатьСНДС = ОсталосьСписатьСНДС - СписатьСНДС;
			
	КонецЦикла; // Для Каждого СтрокаТаблицыПоСчетам из ТаблицаПоСчетам Цикл
		
				
	// Движение по СчетаФактурыКонтрагентов 
	Если НЕ НДС.Количество() Тогда
		
		Движение = Движения.СчетаФактурыКонтрагентов.Добавить();
		Движение.Период				= СтруктураШапкиДокумента.ДатаПроведения;
		Движение.Валюта				= СтруктураШапкиДокумента.Валюта;
		Движение.Контрагент			= СтруктураШапкиДокумента.Контрагент;
		Движение.ДатаСФ				= СтруктураШапкиДокумента.ДатаСФ;
		Движение.НомерСФ			= СтруктураШапкиДокумента.НомерСФ;
		Движение.НомерСчета			= НомерСчета;
		Движение.НомерВаучера		= СтруктураШапкиДокумента.НомерВаучера;
		Движение.ДатаРегистрации	= СтруктураШапкиДокумента.ДатаПроведения;
		Движение.СтавкаНДС			= СтруктураШапкиДокумента.СтавкаНДС;
		Движение.БухСчет1С			= СтруктураШапкиДокумента.БухСчет1С;
		Движение.AU1С				= СтруктураШапкиДокумента.AU1С;
		Движение.Причина			= СтруктураШапкиДокумента.Причина;
		Движение.ОписаниеЗатрат		= СтруктураШапкиДокумента.ОписаниеЗатрат;
		Движение.Сумма				= СтруктураШапкиДокумента.СуммаПрихода;
		Движение.СуммаРуб			= СтруктураШапкиДокумента.СуммаПриходаРуб;
							
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДвижениеПоНДСПокупкиУпр(СтруктураШапкиДокумента, Период, Событие, НомерСчета, СтавкаНДС, СуммаБезНДСРуб, НДСРуб)
	
	Движение = Движения.НДСПокупкиУпр.Добавить();
	Движение.Событие 			= Событие;
	Движение.Организация 		= СтруктураШапкиДокумента.Организация;
	Движение.Период 			= Период;
	Движение.НомерСчета 		= НомерСчета;
	Движение.НомерСФ 			= СтруктураШапкиДокумента.НомерСФ;
	Движение.ДатаСФ				= СтруктураШапкиДокумента.ДатаСФ;
	Движение.Поставщик			= СтруктураШапкиДокумента.Контрагент;
	Движение.Валюта         	= СтруктураШапкиДокумента.Валюта;
	Движение.СтавкаНДС			= СтавкаНДС;
	Движение.Подразделение		= СтруктураШапкиДокумента.Подразделение;
	Движение.AU					= СтруктураШапкиДокумента.AU;
	Движение.CashCode			= СтруктураШапкиДокумента.CashCode;
	Движение.НомерВаучера		= СтруктураШапкиДокумента.НомерВаучера;
	Движение.НалоговыйПериод	= СтруктураШапкиДокумента.НалоговыйПериод;
	
	Движение.СуммаБезНДС   		= СуммаБезНДСРуб;
	Движение.НДС   				= НДСРуб;
	// А ВАЛЮТНЫЕ РЕСУРСЫ???
	
КонецПроцедуры

Процедура ДобавитьДвижениеПоОборудованиеЛокальное(СтруктураШапкиДокумента, ПереданнаяСумма)
	
	Движение = Движения.ОборудованиеЛокальное.Добавить();
	Движение.ВидДвижения		= ВидДвиженияНакопления.Приход;
	Движение.Период				= СтруктураШапкиДокумента.ДатаПроведения;
	Движение.Поставщик			= СтруктураШапкиДокумента.Контрагент;
	Движение.НомерНакладной		= СтруктураШапкиДокумента.НомерПрихода;
	Движение.ДатаНакладной		= СтруктураШапкиДокумента.ДатаПрихода;
	Движение.AU					= СтруктураШапкиДокумента.AU1С;
	Движение.Подразделение		= СтруктураШапкиДокумента.Подразделение;
	Движение.РО					= СтруктураШапкиДокумента.ШвепсПО;
	
	Движение.Сумма 				= ПереданнаяСумма;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ДОКУМЕНТА

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем ТаблицаПоСчетам, ТаблицаПоНДС;
	
	//Добавил РГ-Софт - Пронин Иван
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	КонецЕсли;
	//Конец добавления
	
	
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	//Сформируем структуру шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
		
	// Подготовим таблицы документа
	ПодготовитьТаблицуПоСчетам(СтруктураШапкиДокумента, ТаблицаПоСчетам, Отказ, Заголовок);
	ПодготовитьТаблицуПоНДС(СтруктураШапкиДокумента, ТаблицаПоНДС, Отказ, Заголовок);	
	
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Проверим правильность заполнения табличных частей
	ПроверитьЗаполнениеТабличныхЧастей(СтруктураШапкиДокумента, ТаблицаПоСчетам, ТаблицаПоНДС, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоСчетам, ТаблицаПоНДС, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

//Добавил РГ-Софт - Пронин Иван
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
