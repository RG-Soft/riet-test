
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	// { RGS AArsentev 17.05.2018
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ExportRequest")
		ИЛИ ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.КонсолидированныйПакетЗаявокНаПеревозку") Тогда
		МассивКаталогов = ПолучитьСписокКаталогов(ПараметрКоманды);
		Если МассивКаталогов.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("No data for Part No. from - " + ПараметрКоманды);
		ИначеЕсли МассивКаталогов.Количество() = 1 Тогда
			Адрес = ДобавитьВАрхив(МассивКаталогов[0]);
			Если Адрес <> Неопределено Тогда
				ИмяФайла = "" + СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МассивКаталогов[0], "Код")) + " " + Формат(ТекущаяДата(), "ДФ=dd_MM_yyyy") + ".zip";
				ПолучитьФайл(Адрес, ИмяФайла);
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нет присоединенных файлов!";
				Сообщение.Сообщить();
			КонецЕсли;
		Иначе
			Адрес = ПолучитьАрхивПоНесколькимКаталогам(МассивКаталогов);
			Если Адрес <> Неопределено Тогда
				ИмяФайла = "" + СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрКоманды, "Номер")) + " " + Формат(ТекущаяДата(), "ДФ=dd_MM_yyyy") + ".zip";
				ПолучитьФайл(Адрес, ИмяФайла);
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нет присоединенных файлов!";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
		// } RGS AArsentev 17.05.2018
	Иначе
		Адрес = ДобавитьВАрхив(ПараметрКоманды);
		Если Адрес <> Неопределено Тогда
			ИмяФайла = "" + СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрКоманды, "Код")) + " " + Формат(ТекущаяДата(), "ДФ=dd_MM_yyyy") + ".zip";
			ПолучитьФайл(Адрес, ИмяФайла);
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нет присоединенных файлов!";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьВАрхив(Каталог)
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Файлы.Ссылка,
	|	Файлы.Наименование,
	|	Файлы.Расширение
	|ИЗ
	|	Справочник.CatalogПрисоединенныеФайлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &ВладелецФайла
	|	И НЕ Файлы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Каталог);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивДляОчистки = Новый Массив;
	МассивКартинок = Новый Массив;
	Путь = ПолучитьИмяВременногоФайла(".zip");
	Архив = Новый ЗаписьZipФайла(Путь, "", "", МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Оптимальный, МетодШифрованияZIP.Zip20);
	
	Если Выборка.Количество() = 0 Тогда
		
		TechnicalDescription = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "TechnicalDescription");
		Если ЗначениеЗаполнено(TechnicalDescription) Тогда
			ДобавимWord(МассивКартинок, Архив, МассивДляОчистки, Каталог);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		
		// { RGS ASeryakov, 10.10.2018 12:54:22 S-I-0006169
		КаталогФайловTD = КаталогВременныхФайлов + "TDAttachments\";
		КаталогФайловTDФайл = Новый Файл(КаталогФайловTD);
		
		Если НЕ КаталогФайловTDФайл.Существует() Тогда
			СоздатьКаталог(КаталогФайловTD);
		КонецЕсли;
		
		Дата = Строка(Формат(ТекущаяДата(), "ДФ=yyyyMMdd"));
		КаталогДата = КаталогФайловTD + Дата;
		
		КаталогДатаФайл = Новый Файл(КаталогДата);
		
		Если НЕ КаталогДатаФайл.Существует() Тогда
			
			Попытка
				УдалитьФайлы(КаталогФайловTD,"*");
			Исключение
			КонецПопытки;
			
			СоздатьКаталог(КаталогДата);
		КонецЕсли;
		// } RGS ASeryakov, 10.10.2018 12:54:22 S-I-0006169
		
		
		Пока Выборка.Следующий() Цикл
			// { RGS ASeryakov, 10.10.2018 12:54:22 S-I-0006169
			//ИмяФайла = КаталогВременныхФайлов + Выборка.Наименование + "." + Выборка.Расширение;
			
			КаталогИД = КаталогДата +"\"+ Строка(Новый УникальныйИдентификатор);
			СоздатьКаталог(КаталогИД);
			ИмяФайла = КаталогИД + "\" + Выборка.Наименование + "." + Выборка.Расширение;
			// } RGS ASeryakov, 10.10.2018 12:54:22 S-I-0006169
			
			Попытка
				ПрисоединенныеФайлыСлужебный.ВыгрузитьФайл(Выборка.Ссылка, ИмяФайла);
			Исключение
			КонецПопытки;
			Архив.Добавить(ИмяФайла);
			Если НРег(Выборка.Расширение) = "jpg" ИЛИ НРег(Выборка.Расширение) = "jpeg" ИЛИ НРег(Выборка.Расширение) = "png" ИЛИ НРег(Выборка.Расширение) = "gif" Тогда
				МассивКартинок.Добавить(ИмяФайла);
			КонецЕсли;
			МассивДляОчистки.Добавить(ИмяФайла);
		КонецЦикла;
		
		ДобавимWord(МассивКартинок, Архив, МассивДляОчистки, Каталог);
		
		
	КонецЕсли;
	
	Попытка
		Архив.Записать();
	Исключение
	КонецПопытки;
	
	Двоичное = Новый ДвоичныеДанные(Путь);
	Адрес = ПоместитьВоВременноеХранилище(Двоичное);
	
	МассивДляОчистки.Добавить(Путь);
	
	Для Каждого Файл ИЗ МассивДляОчистки Цикл
		Попытка
			УдалитьФайлы(Файл);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	Возврат Адрес
	
КонецФункции

&НаСервере
Процедура ДобавимWord(МассивКартинок, Архив, МассивДляОчистки, Каталог)
	
	TechnicalDescription = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "TechnicalDescription");
	
	Если ЗначениеЗаполнено(TechnicalDescription) ИЛИ МассивКартинок.Количество() > 0 Тогда
		
		ТабДок = Новый ТабличныйДокумент; 
		Макет = Справочники.Catalog.ПолучитьМакет("ШаблонДляВыводаДанных");
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
		ОбластьСтроки.Параметры.PartNumber = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "Код"));
		ОбластьСтроки.Параметры.TechnicalDescriptionEng = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "TechnicalDescription"));
		ОбластьСтроки.Параметры.TechnicalDescriptionRus = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "DescriptionRus"));
		ТабДок.Вывести(ОбластьСтроки);
		
		Если МассивКартинок.Количество() > 0 Тогда
			ОбластьКартинка = Макет.ПолучитьОбласть("Картинка");
			Для Каждого Элемент Из  МассивКартинок Цикл
				Картинка = Новый Картинка(Элемент);
				ОбластьКартинка.Рисунки.КартинкаИзФайла.Картинка = Картинка; 
				ТабДок.Вывести(ОбластьКартинка);
			КонецЦикла;
		КонецЕсли;
		
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.ПолеСлева = 5;
		ТабДок.ПолеСправа = 5;
		ТабДок.РазмерКолонтитулаСверху = 0;
		ТабДок.РазмерКолонтитулаСнизу = 0;
		ТабДок.АвтоМасштаб = Истина;
		
		Имя = "" + СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "Код")) + " " + Формат(ТекущаяДата(), "ДФ=dd_MM_yyyy") + ".docx";
		ТабДок.Записать(Имя, ТипФайлаТабличногоДокумента.DOCX);
		Архив.Добавить(Имя);
		МассивДляОчистки.Добавить(Имя);
		
	КонецЕсли;
	
КонецПроцедуры

// { RGS AArsentev 17.05.2018
&НаСервере
Функция ПолучитьСписокКаталогов(ДокументИсточник)
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ExportRequest") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Catalog.Ссылка КАК Каталог
		|ИЗ
		|	Справочник.Catalog КАК Catalog
		|ГДЕ
		|	Catalog.Код В
		|			(ВЫБРАТЬ
		|				СтрокиИнвойса.КодПоИнвойсу
		|			ИЗ
		|				Справочник.СтрокиИнвойса КАК СтрокиИнвойса
		|			ГДЕ
		|				СтрокиИнвойса.ExportRequest = &ExportRequest
		|			СГРУППИРОВАТЬ ПО
		|				СтрокиИнвойса.КодПоИнвойсу)";
		Запрос.УстановитьПараметр("ExportRequest", ДокументИсточник);
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Catalog.Ссылка КАК Каталог
		|ИЗ
		|	Справочник.Catalog КАК Catalog
		|ГДЕ
		|	Catalog.Код В
		|			(ВЫБРАТЬ
		|				СтрокиИнвойса.КодПоИнвойсу
		|			ИЗ
		|				Справочник.СтрокиИнвойса КАК СтрокиИнвойса
		|					ЛЕВОЕ СОЕДИНЕНИЕ Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
		|					ПО
		|						СтрокиИнвойса.Инвойс = КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс
		|			ГДЕ
		|				КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка = &Doc
		|			СГРУППИРОВАТЬ ПО
		|				СтрокиИнвойса.КодПоИнвойсу)";
		Запрос.УстановитьПараметр("Doc", ДокументИсточник);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Каталог");
	
КонецФункции // } RGS AArsentev 17.05.2018

&НаСервере
Функция ПолучитьАрхивПоНесколькимКаталогам(Каталоги)
	
	Путь = ПолучитьИмяВременногоФайла(".zip");
	Архив = Новый ЗаписьZipФайла(Путь, "", "", МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Оптимальный, МетодШифрованияZIP.Zip20);
	КолВоФайлов = 0;
	МассивДляОчистки = Новый Массив;
	Для Каждого Каталог Из Каталоги Цикл
		
		Адрес = ДобавитьВАрхив(Каталог);
		Если Адрес <> Неопределено Тогда
			КолВоФайлов = КолВоФайлов + 1;
			КаталогВременныхФайлов = КаталогВременныхФайлов();
			ИмяФайла = "" + КаталогВременныхФайлов  + СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Каталог, "Код")) + " " + Формат(ТекущаяДата(), "ДФ=dd_MM_yyyy") + ".zip";
			Двоичные = ПолучитьИзВременногоХранилища(Адрес);
			Двоичные.Записать(ИмяФайла);
			Архив.Добавить(ИмяФайла);
			МассивДляОчистки.Добавить(ИмяФайла);
		КонецЕсли;
		
	КонецЦикла;
	
	Если КолВоФайлов <> 0 Тогда
		Попытка
			Архив.Записать();
			МассивДляОчистки.Добавить(Путь);
		Исключение
		КонецПопытки;
		
		Двоичное = Новый ДвоичныеДанные(Путь);
		АдресАрхива = ПоместитьВоВременноеХранилище(Двоичное);
		
		Для Каждого Файл ИЗ МассивДляОчистки Цикл
			Попытка
				УдалитьФайлы(Файл);
			Исключение
			КонецПопытки;
		КонецЦикла;
		
		Возврат АдресАрхива;
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции
