
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ПроверкаТекстаTDилиAttachment(ПараметрКоманды) Тогда
		
		ПоказатьВопрос(
		Новый ОписаниеОповещения("ОбработкаКомандыTechnicalDescriptionSubmitted", 
		ЭтотОбъект, Новый Структура("PartNo", ПараметрКоманды)),
		"Technical description submitted for Part no.: " + СокрЛП(ПараметрКоманды) + "?", 
		РежимДиалогаВопрос.ДаНет,
		60,
		КодВозвратаДиалога.Нет,
		,
		КодВозвратаДиалога.Нет);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыTechnicalDescriptionSubmitted(Результат, Параметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьTDStatusesDOCs(Параметры.PartNo);
	
	ОповеститьОбИзменении(Параметры.PartNo);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьTDStatusesDOCs(PartNo)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("PartNo", PartNo);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	TDStatusesСрезПоследних.DOC,
		               |	TDStatusesСрезПоследних.Query,
		               |	TDStatusesСрезПоследних.Item
		               |ИЗ
		               |	РегистрСведений.TDStatuses.СрезПоследних(, PartNo = &PartNo) КАК TDStatusesСрезПоследних
		               |ГДЕ
		               |	TDStatusesСрезПоследних.Status = ЗНАЧЕНИЕ(Перечисление.TDStatuses.Requested)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			менеджерЗаписи = РегистрыСведений.TDStatuses.СоздатьМенеджерЗаписи();
			менеджерЗаписи.Период 		= ТекущаяДатаСеанса();
			менеджерЗаписи.ModifiedBy 	= Пользователи.ТекущийПользователь();
			менеджерЗаписи.DOC			= Выборка.DOC;
			менеджерЗаписи.PartNo		= PartNo;
			менеджерЗаписи.Status		= Перечисления.TDStatuses.Submitted;
			менеджерЗаписи.Query		= Выборка.Query;
			менеджерЗаписи.Item			= Выборка.Item;
			менеджерЗаписи.EMail		= Неопределено;
			
			менеджерЗаписи.Записать(Ложь);
			
			Если ТипЗнч(Выборка.DOC) = Тип("ДокументСсылка.КонсолидированныйПакетЗаявокНаПеревозку") Тогда 
				Документы.КонсолидированныйПакетЗаявокНаПеревозку.ЗарегистрироватьTDStatus(Выборка.DOC);
			КонецЕсли;
			// { RGS ASeryakov 23.01.2018 18:00:00 - S-I-0005138
			DOC = Выборка.DOC;
			// { RGS ASeryakov 23.01.2018 18:00:00 - S-I-0005138
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		Сообщить("Failed to update TD statuses in DOCs,
		|please send request via RIET-support.", СтатусСообщения.ОченьВажное);
		ОтменитьТранзакцию();
		
		// { RGS ASeryakov 23.01.2018 18:00:00 - S-I-0005138
		DOC = ?(DOC = Неопределено, "DOC не получен", DOC);
		ЗаписьЖурналаРегистрации("Update.TDStatuses",
		УровеньЖурналаРегистрации.Ошибка,
		Метаданные.Документы.КонсолидированныйПакетЗаявокНаПеревозку,
		DOC,
		"Failed to update TD statuses in DOCs: " + DOC + " PartNo: " + СокрЛП(PartNo) +";"+" Описание ошибки: " + ОписаниеОшибки());
		// } RGS ASeryakov 23.01.2018 18:36:00 - S-I-0005138
		
		Возврат;
		
	КонецПопытки;
	
	Сообщить("TD status was successfully updated.");
		
	УстановитьПривилегированныйРежим(Ложь);
			   
КонецПроцедуры

&НаСервере
Функция ПроверкаТекстаTDилиAttachment(PartNo)
	
	TDзаполнено = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", PartNo);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Catalog.TechnicalDescription,
	               |	ЕСТЬNULL(НаличиеПрисоединенныхФайлов.ЕстьФайлы, ЛОЖЬ) КАК ЕстьФайлы
	               |ИЗ
	               |	Справочник.Catalog КАК Catalog
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеПрисоединенныхФайлов КАК НаличиеПрисоединенныхФайлов
	               |		ПО Catalog.Ссылка = НаличиеПрисоединенныхФайлов.ОбъектСФайлами
	               |ГДЕ
	               |	Catalog.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если ЗначениеЗаполнено(Выборка.TechnicalDescription) ИЛИ Выборка.ЕстьФайлы Тогда 
			Возврат Истина;
		иначе
			Сообщить("For Part no. '" + СокрЛП(PartNo) + "' field 'Technical description' is empty and no files attached. Status can not be changed to submitted.");
		КонецЕсли;
	
	КонецЦикла;  	
	
	Возврат TDзаполнено;	
	
КонецФункции
