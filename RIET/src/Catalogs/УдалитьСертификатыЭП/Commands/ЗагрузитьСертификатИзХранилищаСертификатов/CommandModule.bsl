
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ВыполнятьКриптооперацииНаСервере = ЭлектронныеДокументыСлужебныйВызовСервера.ВыполнятьКриптооперацииНаСервере();
	
	Если ВыполнятьКриптооперацииНаСервере Тогда
		
		Если Не ЭлектронныеДокументыСлужебныйВызовСервера.ЕстьКриптосредстваНаСервере() Тогда
			Возврат;
		КонецЕсли;
		
		МассивСтруктурЛичныхСертификатов = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьМассивСтруктурСертификатов(Истина);
		
	Иначе
		
		РасширениеПодключено = ПодключитьРасширениеРаботыСКриптографией();

		Если НЕ РасширениеПодключено Тогда
			
			ЭлектронныеДокументыСлужебныйКлиент.УстановитьРасширениеРаботыСКриптографиейНаКлиенте();
			
			Возврат;
			
		Иначе
			
			МассивСтруктурЛичныхСертификатов = ЭлектронныеДокументыСлужебныйКлиент.ПолучитьМассивСтруктурСертификатов(Истина);
			
		КонецЕсли;

	КонецЕсли;
	
	УстановитьСертификатИзХранилища(МассивСтруктурЛичныхСертификатов, ВыполнятьКриптооперацииНаСервере);

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСертификатИзХранилища(МассивСтруктурЛичныхСертификатов, ВыполнятьКриптооперацииНаСервере)
	
	
	ПараметрыФормы = Новый Структура("МассивСтруктурСертификатов", МассивСтруктурЛичныхСертификатов);
	ПараметрыФормы.Вставить("ЗагрузкаСертификата", Истина);
	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыполнятьКриптооперацииНаСервере", ВыполнятьКриптооперацииНаСервере);
	
	ОбработикОповещения = Новый ОписаниеОповещения("ВыборСертификатаОповещение", ЭтотОбъект, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	//ОткрытьФорму("ОбщаяФорма.ПерсональныеСертификатыДляШифрования", ПараметрыФормы,,,,,ОбработикОповещения, Режим);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборСертификатаОповещение(СтруктураВозврата, ПараметрыСертификата) Экспорт
	
	Если Не ТипЗнч(СтруктураВозврата) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Отпечаток = СтруктураВозврата.Отпечаток;
	ВыполнятьКриптооперацииНаСервере = ПараметрыСертификата.ВыполнятьКриптооперацииНаСервере;
	
	Если ВыполнятьКриптооперацииНаСервере Тогда
		СтруктураСертификата = ЭлектронныеДокументыСлужебныйВызовСервера.ЗаполнитьСтруктуруСертификатаПоОтпечатку(Отпечаток);
		ДвоичныеДанныеСертификата = ДвоичныеДанныеСертификата(Отпечаток);
	Иначе
		СтруктураСертификата = ЭлектроннаяПодписьКлиент.ЗаполнитьСтруктуруСертификатаПоОтпечатку(Отпечаток);
		Сертификат = ЭлектронныеДокументыСлужебныйКлиент.ПолучитьСертификатПоОтпечатку(Отпечаток, Истина); // только личные
		ДвоичныеДанныеСертификата = Сертификат.Выгрузить();
	КонецЕсли;
	
	СтруктураСертификата.Вставить("ДвоичныеДанныеСертификата", ДвоичныеДанныеСертификата);
	
	Организация = Неопределено;
	
	ЭлектронныеДокументыСлужебныйВызовСервера.ОпределитьОрганизацию(Организация);
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("СтруктураСертификата", СтруктураСертификата);
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ВыборОрганизацииОповещение", ЭтотОбъект, ДополнительныеПараметры);
		Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		ОткрытьФорму("Справочник.УдалитьСертификатыЭП.Форма.ВыборОрганизации",,,,,,ОбработчикОповещения, Режим);
		
	Иначе
		
		ЗагрузитьСертификат(Организация, СтруктураСертификата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборОрганизацииОповещение(Организация, ДополнительныеПараметры) Экспорт
	
	Если Организация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСертификата = ДополнительныеПараметры.СтруктураСертификата;
	
	ЗагрузитьСертификат(Организация, СтруктураСертификата);
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗагрузитьСертификат(Организация, СтруктураСертификата)
	
	НазваниеСправочникаОрганизации = ИмяПрикладногоСправочника("Организации");
	Если Не ЗначениеЗаполнено(НазваниеСправочникаОрганизации) Тогда
		НазваниеСправочникаОрганизации = "Организации";
	КонецЕсли;
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка." + НазваниеСправочникаОрганизации) И ЗначениеЗаполнено(Организация) Тогда
		СтруктураСертификата.Вставить("Организация", Организация);
	Иначе
		Возврат;
	КонецЕсли;

	ТекстСообщения = "";
	СсылкаНаОбъект = ЭлектронныеДокументыСлужебныйВызовСервера.ЗагрузитьСертификат(СтруктураСертификата, ТекстСообщения);
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаОбъект);
	ОткрытьФорму("Справочник.УдалитьСертификатыЭП.ФормаОбъекта", ПараметрыФормы);
	ОповеститьОбИзменении(СсылкаНаОбъект);
	Оповестить("ОбновитьСписокСертификатов");

	
КонецПроцедуры

&НаСервере
Функция ИмяПрикладногоСправочника(Название)
	
	Возврат ЭлектронныеДокументыПовтИсп.ПолучитьИмяПрикладногоСправочника(Название);
	
КонецФункции

&НаСервере
Функция ДвоичныеДанныеСертификата(Отпечаток)
	
	Сертификат = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСертификатПоОтпечатку(Отпечаток, Истина);
	Возврат Сертификат.Выгрузить();
	
КонецФункции
