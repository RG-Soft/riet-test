
///////////////////////////////////////////////////////////////////////////////////////////////
// ПРИ КОПИРОВАНИИ

Процедура ПриКопировании(ОбъектКопирования)
	
	РГСофт.ОчиститьCreationModification(ЭтотОбъект);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ)
	 
	РГСофтКлиентСервер.УстановитьЗначение(Наименование, СокрЛП(Наименование));
	РГСофтКлиентСервер.УстановитьЗначение(EMailBox, СокрЛП(EMailBox));
	РГСофтКлиентСервер.УстановитьЗначение(EMailBoxForErrorMassages, СокрЛП(EMailBoxForErrorMassages));
    РГСофтКлиентСервер.УстановитьЗначение(Код, ВРег(СокрЛП(Код)));
	РГСофтКлиентСервер.УстановитьЗначение(TMSID, СокрЛП(TMSID));
    РГСофтКлиентСервер.УстановитьЗначение(Prefix, ВРег(Prefix));
	РГСофтКлиентСервер.УстановитьЗначение(NameRus, СокрЛП(NameRus));
	
	Warehouses.Свернуть("Warehouse");
	POAs.Свернуть("POA");
	
	Если Не AgentWarehouse Тогда 
		StartOfLeg7Reports = Неопределено;
		Prefix = Неопределено;
		EMailBox = Неопределено;
		Warehouses.Очистить();
		POAs.Очистить();
	КонецЕсли;
	
	Если Не Leg7 Тогда
		TMSID = Неопределено;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьЗаполнениеРеквизитов(Отказ);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		РГСофт.ЗаполнитьCreation(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры
     
///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
			
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Name' is empty!",
			ЭтотОбъект, "Наименование", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(NameRus) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Name (rus)' is empty!",
			ЭтотОбъект, "NameRus", , Отказ);
	КонецЕсли;
		
	Если ПустаяСтрока(Код) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Code (Lawson code)' is empty!",
			ЭтотОбъект, "Код", , Отказ);
	Иначе 
		ПроверитьServiceProvidersСТакимЖеКодом(Отказ);	
	КонецЕсли;
	     	
	Если Leg7 И НЕ ЗначениеЗаполнено(TMSID) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'TMS ID' is empty!",
			ЭтотОбъект, "TMSID", , Отказ);
	КонецЕсли;
       			
	Если AgentWarehouse И ЗначениеЗаполнено(StartOfLeg7Reports) Тогда
		
		Если НЕ ЗначениеЗаполнено(DefaultWarehouse) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'Default warehouse' is empty!",
				ЭтотОбъект, "DefaultWarehouse", , Отказ);
		КонецЕсли;
		
		Если ПустаяСтрока(Prefix) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'Prefix' is empty!",
				ЭтотОбъект, "Prefix", , Отказ);
		КонецЕсли;
		
		Если ПустаяСтрока(EMailBox) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'E-mail box' is empty!",
				ЭтотОбъект, "EMailBox", , Отказ);
		КонецЕсли;

		Если Warehouses.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Add at least one Warehouse!",
				ЭтотОбъект, "Warehouses", , Отказ);
		КонецЕсли;

		Если POAs.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Add at least one import point of arrival!",
				ЭтотОбъект, "POAs", , Отказ);
		КонецЕсли;
		
		// { RGS AGorlenko 15.05.2014 15:47:06 - S-I-0000725
		//ПроверитьServiceProvidersСТакимиЖеДанными(Отказ);
		// } RGS AGorlenko 15.05.2014 15:47:12 - S-I-0000725
		
	КонецЕсли;
			
КонецПроцедуры

Процедура ПроверитьServiceProvidersСТакимиЖеДанными(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Prefix", Prefix);
	Запрос.УстановитьПараметр("МассивWarehouses", Warehouses.ВыгрузитьКолонку("Warehouse"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ServiceProviders.Представление КАК Представление
	               |ИЗ
	               |	Справочник.ServiceProviders КАК ServiceProviders
	               |ГДЕ
	               |	ServiceProviders.Ссылка <> &Ссылка
	               |	И ServiceProviders.Prefix = &Prefix
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ServiceProvidersWarehouses.Ссылка.Представление,
	               |	ServiceProvidersWarehouses.Warehouse
	               |ИЗ
	               |	Справочник.ServiceProviders.Warehouses КАК ServiceProvidersWarehouses
	               |ГДЕ
	               |	ServiceProvidersWarehouses.Ссылка <> &Ссылка
	               |	И ServiceProvidersWarehouses.Warehouse В(&МассивWarehouses)";
				   
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаPrefix = Результат[0].Выбрать();
	Пока ВыборкаPrefix.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Prefix '" + Prefix + "' is already used for Service provider '" + ВыборкаPrefix.Представление + "'!",
			ЭтотОбъект, "Prefix", , Отказ);
	КонецЦикла;
	
	ВыборкаWarehouse = Результат[1].Выбрать();
	Пока ВыборкаWarehouse.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Warehouse '" + ВыборкаWarehouse.Warehouse + "' is already used for Service provider '" + ВыборкаWarehouse.Представление + "'!",
			ЭтотОбъект, "Warehouses", , Отказ);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьServiceProvidersСТакимЖеКодом(Отказ)
	
	Если Не Leg7 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Код", СокрЛП(Код));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ServiceProviders.Представление КАК Представление
	|ИЗ
	|	Справочник.ServiceProviders КАК ServiceProviders
	|ГДЕ
	|	ServiceProviders.Ссылка <> &Ссылка
	|	И ServiceProviders.Код = &Код
	|	И ServiceProviders.Leg7
	|	И НЕ ServiceProviders.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Code (Lawson code) '" + СокрЛП(Код) + "' is already used for Service provider '" + Выборка.Представление + "'!",
		ЭтотОбъект, "Код", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

