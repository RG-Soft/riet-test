
Функция ЗаполнитьPOLineВInvoiceLine(InvoiceLine) Экспорт
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	POLine.Ссылка КАК POLine,
		|	POLine.АктивитиКод КАК Activity,
		|	POLine.КостЦентр КАК AU,
		|	POLine.Классификатор КАК ERPTreatment,
		|	POLine.ОписаниеНоменклатуры КАК Description,
		|	POLine.КодПоставщика КАК PartNo,
		|	POLine.Каталог КАК Catalog,
		|	POLine.ЕдиницаИзмерения КАК UOM,
		|	POLine.Владелец.СтранаПоставщика КАК SupplierCountry,
		|	POLine.Количество КАК Qty,
		|	POLine.Цена КАК Price,
		|	POLine.Владелец.EUCNotRequired КАК EUCNotRequired,
		|	POLine.Владелец.EUCRequested КАК EUCRequested,
		|	POLine.Владелец.EUCReceived КАК EUCReceived,
		|	POLine.ProjectMobilization,
		// { RGS Aseryakov 20.12.2018 13:24:07 - S-I-0006324
		|	POLine.CountryOfOrigin
		// { RGS Aseryakov 20.12.2018 13:24:07 - S-I-0006324
		|ИЗ
		|	Справочник.СтрокиЗаявкиНаЗакупку КАК POLine
		|ГДЕ
		|	НЕ POLine.ПометкаУдаления
		|	И НЕ POLine.Владелец.ПометкаУдаления";
						
	PONo = СокрЛП(InvoiceLine.НомерЗаявкиНаЗакупку);
	Если ЗначениеЗаполнено(PONo) Тогда
		
		Запрос.УстановитьПараметр("PONo", PONo);
		Запрос.Текст = Запрос.Текст + "
			|	И POLine.Владелец.Код = &PONo";
		
	КонецЕсли; 
	
	PartNo = СокрЛП(InvoiceLine.КодПоИнвойсу);
	Если ЗначениеЗаполнено(PartNo) Тогда
		
		Запрос.УстановитьПараметр("PartNo", PartNo);
		Запрос.Текст = Запрос.Текст + "
			|	И POLine.КодПоставщика = &PartNo";
		
	КонецЕсли; 	
		
	Если ЗначениеЗаполнено(InvoiceLine.Количество) Тогда
		
		Запрос.УстановитьПараметр("Qty", InvoiceLine.Количество);
		Запрос.Текст = Запрос.Текст + "
			|	И POLine.Количество >= &Qty";
		
	КонецЕсли; 
		
	Если ЗначениеЗаполнено(InvoiceLine.ЕдиницаИзмерения) Тогда
		
		Запрос.УстановитьПараметр("UOM", InvoiceLine.ЕдиницаИзмерения);
		Запрос.Текст = Запрос.Текст + "
			|	И POLine.ЕдиницаИзмерения = &UOM";
		
	КонецЕсли; 	
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	КоличествоPOLine = Выборка.Количество();
	Если КоличествоPOLine = 1 Тогда
		
		Выборка.Следующий();
		InvoiceLine.СтрокаЗаявкиНаЗакупку = Выборка.POLine;
		ImportExportКлиентСервер.ПерезаполнитьInvoiceLineПоPOLineПриНеобходимости(InvoiceLine, Выборка);
			
	КонецЕсли;
	
	Возврат КоличествоPOLine;
	
КонецФункции

Функция ПолучитьНаименованиеImportItem(ImportInvoiceNo, ImportInvoiceLineNo) Экспорт
	
	Возврат СокрЛП(ImportInvoiceNo) + "-" + ImportInvoiceLineNo;
			
КонецФункции

Функция ПолучитьТаблицу(Items) Экспорт
	
	// возвращает таблицу реквизитов items, с индексом по колонке ссылка
	// параметр Items должен быть массивом или ссылкой на Item
	
	Если ТипЗнч(Items) <> Тип("Массив") И ТипЗнч(Items) <> Тип("СправочникСсылка.СтрокиИнвойса") Тогда
		ВызватьИсключение "Wrong type of parameter Items!";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Items", Items);
	
	// ДОБАВЛЯЙТЕ НОВЫЕ РЕКВИЗИТЫ, ЕСЛИ ОНИ ВАМ НУЖНЫ!
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Items.Ссылка,
		|	Items.КодПоИнвойсу КАК PartNo,
		|	Items.СерийныйНомер КАК SerialNo,
		|	Items.НомерЗаявкиНаЗакупку КАК PONo,
		|	Items.СтрокаЗаявкиНаЗакупку КАК POLine,
		|	Items.НаименованиеТовара КАК Description,
		|	Items.МеждународныйКодТНВЭД КАК HTC,
		|	Items.Количество КАК Qty,
		|	Items.ЕдиницаИзмерения КАК QtyUOM,
		|	Items.NetWeight,
		|	Items.WeightUOM,
		|	Items.Цена КАК Price,
		|	Items.Сумма КАК TotalPrice,
		|	Items.Currency,
		|	Items.SoldTo КАК ParentCompany,
		|	Items.КостЦентр КАК AU,
		|	Items.Активити КАК Activity,
		|	Items.Классификатор КАК ERPTreatment,
		|	Items.PermanentTemporary,
		|	Items.PSA КАК PSAContract
		|ИЗ
		|	Справочник.СтрокиИнвойса КАК Items
		|ГДЕ
		|	Items.Ссылка В(&Items)";
		
	ТаблицаItems = Запрос.Выполнить().Выгрузить();
	ТаблицаItems.Индексы.Добавить("Ссылка");
	
	Возврат ТаблицаItems;
	
КонецФункции

// ДОДЕЛАТЬ
Процедура ПроверитьExportItem(Отказ, РеквизитыItem, ExportRequest, РеквизитыExportRequest, КлючДанных) Экспорт
	
	// проверяет экспортную часть товара
	// так как проверки необходимо осуществлять как из товара, так и из Export request - решено вынести их в отдельную процедуру
	
	Если РеквизитыExportRequest.ExportPurpose = Справочники.ExportPurposes.RAN
		И НЕ ЗначениеЗаполнено(РеквизитыItem.RAN) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'RAN' is empty!",
			КлючДанных, "RAN", , Отказ);
	КонецЕсли;
	
	// для AZ и TM в Item должен быть заполнен PSA на этапе Accepted
	// НУЖНО В PROCESS LEVEL СДЕЛАТЬ НАСТРОЙКУ, А НЕ ХАРДКОДИТЬ
	Если ЗначениеЗаполнено(РеквизитыExportRequest.AcceptedBySpecialist)
		И (РеквизитыExportRequest.ProcessLevel = Справочники.ProcessLevels.AZ ИЛИ РеквизитыExportRequest.ProcessLevel = Справочники.ProcessLevels.TM)
		И Не ЗначениеЗаполнено(РеквизитыItem.PSA) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'PSA' is empty!",
			КлючДанных, "PSA",, Отказ);
	КонецЕсли;

	МассивERPTreatmentsДляКоторыхОбязателенСерийныйНомер = ImportExportСерверПовтИспСеанс.ПолучитьERPTreatmentsДляКоторыхОбязателенСерийныйНомер();
	Если МассивERPTreatmentsДляКоторыхОбязателенСерийныйНомер.Найти(РеквизитыItem.Классификатор) <> Неопределено
		И (Не ЗначениеЗаполнено(РеквизитыItem.СерийныйНомер) ИЛИ ВРег(СокрЛП(РеквизитыItem.СерийныйНомер)) = "N/A"
		ИЛИ ВРег(СокрЛП(РеквизитыItem.СерийныйНомер)) = "N\A" ИЛИ ВРег(СокрЛП(РеквизитыItem.СерийныйНомер)) = "NA")  Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"S/N can not be empty or ""N/A"", ""NA"" for ERP treatments: Asset, LOAN, FAT!",
			КлючДанных, "СерийныйНомер",, Отказ);
	КонецЕсли;  
	
	Если Документы.ExportRequest.ПолучитьExportToTMSПоExportRequest(ExportRequest) Тогда
	
		Если ТипЗнч(РеквизитыItem.СтранаПроисхождения) <> Тип("СправочникСсылка.CountriesHUBs")
			ИЛИ НЕ ЗначениеЗаполнено(РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(РеквизитыItem.СтранаПроисхождения, "TMSID")) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'Country of origin' is not in TMS!
				|Choose Country of origin that is in TMS.",
				КлючДанных, "СтранаПроисхождения", , Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыItem.ЕдиницаИзмерения) 
			И НЕ РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(РеквизитыItem.ЕдиницаИзмерения, "InTMS") Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'Qty UOM' is not in TMS!
				|Choose Qty UOM that is in TMS.",
				КлючДанных, "ЕдиницаИзмерения", , Отказ);
			
		КонецЕсли;
		   		
		Если ЗначениеЗаполнено(РеквизитыItem.WeightUOM)
			И НЕ РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(РеквизитыItem.WeightUOM, "InTMS") Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"'Weight UOM' is not in TMS!
				|Choose Weight UOM that is in TMS.",
				КлючДанных, "WeightUOM", , Отказ);
			
		КонецЕсли;
					
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если (Параметры.Свойство("ЗначенияЗаполнения") И Параметры.ЗначенияЗаполнения.Свойство("TransportRequest")) 
		ИЛИ (Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования.TransportRequest))
		ИЛИ (Параметры.Свойство("Ключ") И ЗначениеЗаполнено(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "TransportRequest"))) Тогда 
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаЭлементаДляTransportRequest";
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруРеквизитовКаталога(Catalog)  Экспорт 
	
	СтруктураРеквизитовКаталога = Новый Структура("PartNo,DescriptionEng,DescriptionRus,TNVED,NetWeight");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(Catalog.Код КАК СТРОКА(50)) КАК PartNo,
	               |	Catalog.DescriptionEng,
	               |	Catalog.DescriptionRus,
	               |	Catalog.КодТНВЭД КАК TNVED,
	               |	Catalog.NetWeight
	               |ИЗ
	               |	Справочник.Catalog КАК Catalog
	               |ГДЕ
	               |	Catalog.Ссылка = &Catalog";
	
	Запрос.УстановитьПараметр("Catalog", Catalog);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий(); 
	
	СтруктураРеквизитовКаталога.PartNo = СокрЛП(Выборка.PartNo);
	СтруктураРеквизитовКаталога.DescriptionEng = СокрЛП(Выборка.DescriptionEng);
	СтруктураРеквизитовКаталога.DescriptionRus = СокрЛП(Выборка.DescriptionRus);
	СтруктураРеквизитовКаталога.TNVED = Выборка.TNVED;
	СтруктураРеквизитовКаталога.NetWeight = Выборка.NetWeight;

	Возврат СтруктураРеквизитовКаталога;	
	
КонецФункции 