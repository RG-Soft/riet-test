
////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДозаполнитьРеквизитыНовогоОбъекта();
	КонецЕсли;
	
	НастроитьВидимостьЭлементовДляCustomUnionTransaction(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.TransportRequest, "CustomUnionTransaction"));
	
КонецПроцедуры

&НаСервере
Процедура ДозаполнитьРеквизитыНовогоОбъекта()
	
	Объект.LocalOnly = Истина;
	Объект.Final = Истина;

	Если НЕ ЗначениеЗаполнено(Объект.WeightUOM) Тогда
		Объект.WeightUOM = Справочники.UOMs.KG;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СтранаПроисхождения) Тогда
		Объект.СтранаПроисхождения = Справочники.CountriesHUBs.ПустаяСсылка();	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементовДляCustomUnionTransaction(CustomUnionTransaction)
	
	Элементы.TNVED.АвтоОтметкаНезаполненного = CustomUnionTransaction;
	Элементы.СтранаПроисхождения.АвтоОтметкаНезаполненного = CustomUnionTransaction;
	Элементы.Цена.АвтоОтметкаНезаполненного = CustomUnionTransaction;
	Элементы.Currency.АвтоОтметкаНезаполненного = CustomUnionTransaction;
	   	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ЭЛЕМЕНТЫ УПРАВЛЕНИЯ

&НаКлиенте
Процедура НомерЗаявкиНаЗакупкуОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	CustomsКлиент.ОткрытьPOПоНомеру(СокрЛП(Объект.НомерЗаявкиНаЗакупку), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	Объект.Сумма = Объект.Количество * Объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	Объект.Сумма = Объект.Количество * Объект.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаЗаявкиНаЗакупкуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.НомерЗаявкиНаЗакупку) Тогда
		Если РГСофтСерверПовтИспСеанс.ПолучитьПараметрСеансаShowNamesAndDescriptionsRUS() Тогда 
			ТекстОшибки = "Не заполнено поле 'PO no./ Номер заказа'!";
		иначе
			ТекстОшибки = "'PO no.' is empty!";
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,
			, "НомерЗаявкиНаЗакупку", "Объект", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("Имя", "ВыборИзGood");
		
	PONo = СокрЛП(Объект.НомерЗаявкиНаЗакупку);
	СтруктураНастройки.Вставить("PONo", PONo);
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураНастройки", СтруктураНастройки);			
	ОткрытьФорму("Справочник.СтрокиЗаявкиНаЗакупку.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерЗаявкиНаЗакупкуПриИзменении(Элемент)
	
	Объект.НомерЗаявкиНаЗакупку = ВРег(СокрЛП(Объект.НомерЗаявкиНаЗакупку));
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаЗаявкиНаЗакупкуПриИзменении(Элемент)
	
	ImportExportКлиентСервер.ПерезаполнитьInvoiceLineПоPOLineПриНеобходимости(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ОткрытьФорму("Справочник.CountriesHUBs.Форма.ФормаВыбораДляTransportRequest", , Элемент);
		    		
КонецПроцедуры

///////////////////////////////////////////////////////////////////
// Fill from catalog

&НаКлиенте
Процедура FillFromCatalog(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Каталог) Тогда
		Если РГСофтСерверПовтИспСеанс.ПолучитьПараметрСеансаShowNamesAndDescriptionsRUS() Тогда 
			ТекстОшибки = "Не заполнено поле 'Catalog / Каталог'!";
		иначе
			ТекстОшибки = "'Catalog' is empty!";
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,
			, "Каталог", "Объект");
		Возврат;
	КонецЕсли;

	СтруктураРеквизитовКаталога = ПолучитьСтруктуруРеквизитовКаталога(Объект.Каталог);
	
	Если ЗначениеЗаполнено(Объект.КодПоИнвойсу) 
		ИЛИ ЗначениеЗаполнено(Объект.НаименованиеТовара)
		ИЛИ ЗначениеЗаполнено(Объект.DescriptionRus) 
		ИЛИ ЗначениеЗаполнено(Объект.TNVED) Тогда 
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнениеПоКаталогу", ЭтаФорма, СтруктураРеквизитовКаталога);
		ПоказатьВопрос(Оповещение, "Перезаполнить поля по каталогу?", РежимДиалогаВопрос.ДаНет,,, "Заполнение по каталогу");
	иначе
		ЗаполненитьПоКаталогу(СтруктураРеквизитовКаталога);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнениеПоКаталогу(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ЗаполненитьПоКаталогу(Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполненитьПоКаталогу(СтруктураРеквизитовКаталога) Экспорт
	
	// { RGS EParshina 14.12.2018 18:03:57 - S-I-0006506
	//Объект.КодПоИнвойсу = СтруктураРеквизитовКаталога.PartNo;
	// } RGS EParshina 14.12.2018 18:03:57 - S-I-0006506
	Объект.DescriptionRus = СтруктураРеквизитовКаталога.DescriptionRus;
	Объект.НаименованиеТовара = СтруктураРеквизитовКаталога.DescriptionEng;
	Объект.TNVED = СтруктураРеквизитовКаталога.TNVED;
	Объект.NetWeight = СтруктураРеквизитовКаталога.NetWeight;
	Объект.WeightUOM = ПредопределенноеЗначение("Справочник.UOMs.KG");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруРеквизитовКаталога(Catalog)
	
	Возврат Справочники.СтрокиИнвойса.ПолучитьСтруктуруРеквизитовКаталога(Catalog);
	
КонецФункции    

// { RGS ASeryakov, 19.09.2018 19:11:14 SLK-0001314
#Область Вопрос

&НаКлиенте
Процедура TNVEDНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.TNVEDCodes.ФормаВыбора", Новый Структура("TransportRequest", Объект.TransportRequest), ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборТНВЭД" Тогда
		Объект.TNVED = Параметр;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.TNVEDCodes.Форма.ФормаВыбора" Тогда
		
		Объект.TNVED = ВыбранноеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


