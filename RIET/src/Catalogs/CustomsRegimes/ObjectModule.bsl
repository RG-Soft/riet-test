
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизитыБезДополнительныхДанных();
		
	ПроверитьЗаполнениеРеквизитов(Отказ);		
		
КонецПроцедуры

Процедура ДозаполнитьРеквизитыБезДополнительныхДанных()
	
	РГСофтКлиентСервер.УстановитьЗначение(Код, СокрЛП(Код));
	РГСофтКлиентСервер.УстановитьЗначение(Наименование, СокрЛП(Наименование));
	РГСофтКлиентСервер.УстановитьЗначение(ProcedureCode, СокрЛП(ProcedureCode));
	РГСофтКлиентСервер.УстановитьЗначение(ModeCode, СокрЛП(ModeCode));
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Code"" is empty!",
			ЭтотОбъект, "Код", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ProcedureCode) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Procedure code"" is empty!",
			ЭтотОбъект, "ProcedureCode", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ModeCode) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Mode code"" is empty!",
			ЭтотОбъект, "ModeCode", , Отказ);
	КонецЕсли;
	
	// Проверм, что не существует другого режим с таким же Procedure code и Mode code
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ProcedureCode", ProcedureCode);
	Запрос.УстановитьПараметр("ModeCode", ModeCode);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CustomsRegimes.Представление
		|ИЗ
		|	Справочник.CustomsRegimes КАК CustomsRegimes
		|ГДЕ
		|	(НЕ CustomsRegimes.ПометкаУдаления)
		|	И CustomsRegimes.ProcedureCode = &ProcedureCode
		|	И CustomsRegimes.ModeCode = &ModeCode
		|	И CustomsRegimes.Ссылка <> &Ссылка";
		
	ВыборкаДублей = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДублей.Следующий() Цикл
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"There is already Customs regime """ + СокрЛП(ВыборкаДублей.Представление) + """ with Procedure code """ + ProcedureCode + """ and Mode code """ + ModeCode + """!",
			ЭтотОбъект,,, Отказ);
		
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Наименование)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Name"" is empty!",
			ЭтотОбъект, "Наименование", , Отказ);
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(ImportExport) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Import / Export"" is empty!",
			ЭтотОбъект, "ImportExport", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(PermanentTemporary) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Permanent / Temporary"" is empty!",
			ЭтотОбъект, "PermanentTemporary", , Отказ);
	КонецЕсли;
	
КонецПроцедуры
