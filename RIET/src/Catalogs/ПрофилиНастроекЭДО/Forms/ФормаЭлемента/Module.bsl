&НаКлиенте
Перем ВнутренниеДанные, СвойстваПароля;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФорму();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЭлектронныеДокументыСлужебныйКлиент.ПроверитьИспользованиеИнтернетПоддержкаПользователей() Тогда
		Элементы.НадписьЛичныйКабинетУчастникаОбменаЭД.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если КонтролироватьСодержимоеНастроекЭД Тогда
		ТекущийОбъект.ПометитьНаУдалениеСвязанныеНастройкиЭДО(ТекущийОбъект, Отказ)
	КонецЕсли;
	
	Если ТекущийОбъект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
		ТекущийОбъект.РесурсВходящихДокументов  = FTPКаталогВходящихДокументов;
	ИначеЕсли ТекущийОбъект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
		ТекущийОбъект.РесурсВходящихДокументов  = КаталогВходящихДокументов;
	ИначеЕсли ТекущийОбъект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
		ТекущийОбъект.РесурсВходящихДокументов  = ЭлектроннаяПочтаОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьСостояниеЭД");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПервоначальнаяНастройкаОбменаЭД Тогда
		ТекстВопроса = ВернутьСтр("ru = 'Подключить контрагента к обмену электронными документами?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемПродолжить", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если ВыбранноеЗначение = Истина Тогда
			Сертификат = ВнутренниеДанные["ВыбранныйСертификат"];
			СвойстваПароля = Новый Структура("Значение", ВнутренниеДанные["ВыбранныйСертификатПароль"]);
			ВнутренниеДанные.Удалить("ВыбранныйСертификат");
			ВнутренниеДанные.Удалить("ВыбранныйСертификатПароль");
		Иначе
			Сертификат = ВыбранноеЗначение;
		КонецЕсли;
		ТипВыбЗначения = ТипЗнч(Сертификат);
		Если ТипВыбЗначения = Тип("СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования") Тогда
			
			// Сначала нужно проверить, что выбранный сертификат уже не содержится в списке
			МассивСтрок = Объект.СертификатыПодписейОрганизации.НайтиСтроки(Новый Структура("Сертификат", Сертификат));
			Если МассивСтрок.Количество() > 0 Тогда
				ТекстПредупреждения = ВернутьСтр("ru = 'Выбранный сертификат уже зарегистрирован в соглашении'");
				ПоказатьПредупреждение(, ТекстПредупреждения, 30);
				Возврат;
			КонецЕсли;
			
			Если ЭлектронныеДокументыСлужебныйКлиент.ПроверитьИспользованиеИнтернетПоддержкаПользователей()
				И Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском") Тогда
				
				ДобавляемыйСертификат = Сертификат;
				ЗарегистрироватьСертификат(ДобавляемыйСертификат);
				// Добавление сертификата срабатывает в обработчике оповещения
			Иначе
				ДобавитьСертификатПодписиВСписок(Сертификат);
				Элементы.СертификатыПодписейОрганизации.Обновить();
			КонецЕсли;
		КонецЕсли;
		СвойстваПароля = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ИнтернетПоддержкаПользователей
	
	// Механизм получения уникального идентификатора передает уникальный идентификатор
	// в виде строки в параметре оповещения с именем события
	// "ОповещениеОПолученииУникальногоИдентификатораУчастникаОбменаЭД"
	Если ИмяСобытия = "ОповещениеОПолученииУникальногоИдентификатораУчастникаОбменаЭД" Тогда
		
		Если ЗначениеЗаполнено(Источник) И Источник <> ЭтаФорма.УникальныйИдентификатор Тогда
			// Это не та форма
			Возврат;
		КонецЕсли;
		
		ДанныеИзменены = Ложь;
		ИдОрганизации = СокрЛП(Параметр);
		Если СокрЛП(Объект.ИдентификаторОрганизации) <> ИдОрганизации Тогда
			ДанныеИзменены = Истина;
			Объект.ИдентификаторОрганизации = ИдОрганизации;
		КонецЕсли;
		
		// ДобавляемыйСертификат инициализируется в ОбработкаВыбора(...)
		Если ЗначениеЗаполнено(ДобавляемыйСертификат) Тогда
			ДанныеИзменены = Истина;
			ДобавитьСертификатПодписиВСписок(ДобавляемыйСертификат);
			Элементы.СертификатыПодписейОрганизации.Обновить();
			ДобавляемыйСертификат = Неопределено;
		КонецЕсли;
		
		ЭтаФорма.Модифицированность = ДанныеИзменены;
		УправлениеДоступностьюЛичногоКабинета();
	КонецЕсли;
	
	// Конец ИнтернетПоддержкаПользователей
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейФормы

&НаКлиенте
Процедура СпособОбменаЭДПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииПриИзменении(Элемент)
	
	Объект.ИдентификаторОрганизации = СокрЛП(Объект.ИдентификаторОрганизации);
КонецПроцедуры

&НаКлиенте
Процедура КаталогВходящихДокументовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	КаталогОбмена(КаталогВходящихДокументов);
КонецПроцедуры

&НаКлиенте
Процедура НадписьЛичныйКабинетУчастникаОбменаЭДНажатие(Элемент)
	
	// Если соглашение содержит более одного сертификата, то считается,
	// что все сертификаты были зарегистрированы у оператора ЭДО ранее
	// Обращение в личный кабинет выполняется по текущему или по первому сертификату
	
	Если Объект.СертификатыПодписейОрганизации.Количество() = 0 Тогда
		ТекстПредупреждения = ВернутьСтр("ru = 'Для входа в личный кабинет должен быть зарегистрирован хотя бы один сертификат'");
		ПоказатьПредупреждение(, ТекстПредупреждения, 30);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПерейтиВЛичныйКабинет", ЭтотОбъект);
	Если Модифицированность Тогда
		ТекстВопроса = ВернутьСтр("ru = 'Выполнить действие можно только в записанном профиле настроек ЭДО.
			|Записать?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПриглашенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ЗавершитьРедактированиеТекстаПриглашения", ЭтотОбъект);
	ЗаголовокФормы = ВернутьСтр("ru = 'Шаблон текста для приглашений контрагентов'");
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		Оповещение, Элементы.ТекстПриглашений.ТекстРедактирования, ЗаголовокФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Не КонтролироватьСодержимоеНастроекЭД Тогда
		ТекстВопроса = ВернутьСтр("ru = 'Изменения ""Профиля настроек ЭДО"" будут применены для всех связанных с ним ""Настроек ЭДО"".
			|Продолжить?'");
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("СтарыйИдентификаторОрганизации", Объект.ИдентификаторОрганизации);
		ОписаниеОповещения = Новый ОписаниеОповещения("РазрешитьРедактированиеИдентификатораОрганизацииЗавершить", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ТестПрофиляНастроек(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьТестПрофиляНастроек", ЭтотОбъект);
	Если Модифицированность Тогда
		ТекстВопроса = "В текущий профиль настройек ЭДО внесены изменения. Продолжить выполнение теста?";
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Выполнить", "Сохранить и выполнить тест.");
		СписокКнопок.Добавить("Отменить", "Отменить тест.");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок, , "Выполнить", "Тест настроек");
	Иначе
		ЗавершитьТестПрофиляНастроек("Выполнить", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСертификат(Команда)
	
	Если НЕ ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
		"ИспользоватьЭлектронныеПодписи") Тогда
		
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("ПодписаниеЭД");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуВыбораСертификатаЭП();
	
КонецПроцедуры

&НаКлиенте
Процедура НачальнаяДатаЗапросаДанныхУОператора(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПрофильНастроекЭДО", Объект.Ссылка);
	ПараметрыФормы.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОткрытьФорму(
			"РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО.Форма.ФормаРедактирования",
			ПараметрыФормы,
			ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыПодписиОрганизации

&НаКлиенте
Процедура СертификатыПодписейОрганизацииПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Сертификат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПолейТаблицыИсходящиеДокументы

&НаКлиенте
Процедура ИсходящиеДокументыПередНачаломИзменения(Элемент, Отказ)
	
	Если Не КонтролироватьСодержимоеНастроекЭД Тогда
		ТекстВопроса = ВернутьСтр("ru = 'Изменения ""Профиля настроек ЭДО"" будут применены для всех связанных с ним ""Настроек ЭДО"".
			|Продолжить?'");
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ИдентификаторСтроки", Элемент.ТекущиеДанные.ПолучитьИдентификатор());
		ПараметрыОповещения.Вставить("ВерсияФормата",       Элемент.ТекущиеДанные.ВерсияФормата);
		ПараметрыОповещения.Вставить("ИспользоватьЭП",      Элемент.ТекущиеДанные.ИспользоватьЭП);
		ПараметрыОповещения.Вставить("ИсходящийДокумент",   Элемент.ТекущиеДанные.ИсходящийДокумент);
		ПараметрыОповещения.Вставить("Формировать",         Элемент.ТекущиеДанные.Формировать);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовСпискаВидыЭДЗавершить", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящиеДокументыПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Если Элемент.ТекущийЭлемент.Имя = "ИсходящиеДокументыФормировать" Тогда
		ЗначениеЭлемента = Элемент.ТекущиеДанные.Формировать;
		Если Не ЗначениеЭлемента Тогда
			Элемент.ТекущиеДанные.ИспользоватьЭП = ЗначениеЭлемента;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.ИспользоватьЭП И НЕ Элемент.ТекущиеДанные.Формировать Тогда
		Если Элемент.ТекущийЭлемент.Имя = "ИсходящиеДокументыИспользоватьЭП" Тогда
			Элемент.ТекущиеДанные.Формировать = Истина;
		Иначе
			Элемент.ТекущиеДанные.ИспользоватьЭП = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.ПроизвольныйЭД")
		ИЛИ Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском") Тогда
		
		Элемент.ТекущиеДанные.ИспользоватьЭП = Элемент.ТекущиеДанные.Формировать;
	КонецЕсли;
	
	Если (Элемент.ТекущиеДанные.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.СчетФактура")
		ИЛИ Элемент.ТекущиеДанные.ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.КорректировочныйСчетФактура"))
		И Объект.СпособОбменаЭД <> ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском") Тогда
		
		//Элемент.ТекущиеДанные.Формировать = Ложь;
		//Элемент.ТекущиеДанные.ИспользоватьЭП = Ложь;
		//
		//ШаблонСообщения = ВернутьСтр("ru='Отправка документа %1 возможна только через оператора ЭДО.'");
		//ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
		//	Элемент.ТекущиеДанные.ИсходящийДокумент);
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФорму()
	
	Если Объект.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
		FTPКаталогВходящихДокументов = Объект.РесурсВходящихДокументов;
	ИначеЕсли Объект.СпособОбменаЭД  = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
		КаталогВходящихДокументов    = Объект.РесурсВходящихДокументов;
	ИначеЕсли Объект.СпособОбменаЭД  = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
		ЭлектроннаяПочтаОрганизации  = Объект.РесурсВходящихДокументов;
	КонецЕсли;
	
	// Помощник создания настроек ЭДО
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка
	|ИЗ
	|	Справочник.СоглашенияОбИспользованииЭД.ИсходящиеДокументы КАК СоглашенияОбИспользованииЭДИсходящиеДокументы
	|ГДЕ
	|	СоглашенияОбИспользованииЭДИсходящиеДокументы.СпособОбменаЭД = &СпособОбменаЭД
	|	И СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка.Организация = &Организация
	|	И НЕ СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка.ПометкаУдаления";
	Запрос.УстановитьПараметр("СпособОбменаЭД", Объект.СпособОбменаЭД);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	ПервоначальнаяНастройкаОбменаЭД = Запрос.Выполнить().Пустой();
	
	ПометитьНеДействующиеСертификатыВСписке();
	
	// Использование ЭП
	Элементы.ИсходящиеДокументыИспользоватьЭП.Видимость = ЭлектронныеДокументыСлужебный.ИспользоватьКриптоСредства()
		И Объект.СпособОбменаЭД <> ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском");
	Элементы.ГруппаСертификатыПодписейОрганизации.Видимость = ЭлектронныеДокументыСлужебный.ИспользоватьКриптоСредства();
	Элементы.СтраницыПрофиляНастроекЭДО.ОтображениеСтраниц = ?(ЭлектронныеДокументыСлужебный.ИспользоватьКриптоСредства(),
		ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ГруппаОбменЧерезОператораИнформация.Видимость = Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском");
	Элементы.ГруппаПрямойОбменЧерезЭлектроннуюПочтуИнформация.Видимость = Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту");
	Элементы.ГруппаПрямойОбменЧерезКаталогИнформация.Видимость = Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог");
	Элементы.ГруппаПрямойОбменЧерезFTPИнформация.Видимость = Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезFTP");
	Элементы.НачальнаяДатаЗапросаДанныхУОператора.Видимость = Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьСертификат(СертификатЭП)
	
	// Проводим тест настроек сертификата подписи с подавлением вывода успешных результатов.
	ОчиститьСообщения();
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(СертификатЭП) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
											ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Сертификат"),
											Объект.Ссылка,
											"СертификатыПодписейОрганизации",
											,
											Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
											ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Организация"),
											Объект.Ссылка,
											"Организация",
											,
											Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СертификатЭП", СертификатЭП);
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ЗарегистрироватьСертификатОповещение", ЭтотОбъект, ДополнительныеПараметры);
	
	ЭлектронныеДокументыСлужебныйКлиент.ТестНастроекСПроверкойСертификата(СертификатЭП,
		ОбработкаОповещения, Истина, ЭтаФорма, Истина, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьСертификатОповещение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		СертификатЭП = ДополнительныеПараметры.СертификатЭП;
		
		ЭлектронныеДокументыКлиентПереопределяемый.СтартоватьМеханизмРаботыСОператоромЭДО(СертификатЭП,
																						  Объект.Организация,
																						  "taxcomGetID",
																						  Объект.ИдентификаторОрганизации,
																						  Результат.ПарольПользователя,
																						  ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюЛичногоКабинета()
	
	Элементы.НадписьЛичныйКабинетУчастникаОбменаЭД.Доступность = НЕ ПустаяСтрока(Объект.ИдентификаторОрганизации);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСертификатПодписиВСписок(СертификатЭП)
	
	Строка = Объект.СертификатыПодписейОрганизации.Добавить();
	Строка.Сертификат = СертификатЭП;
	Модифицированность = Истина;
	ПометитьНеДействующиеСертификатыВСписке();
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНеДействующиеСертификатыВСписке()
	
	Для Каждого Строка Из Объект.СертификатыПодписейОрганизации Цикл
		Строка.Действует = НЕ (Строка.Сертификат.ПометкаУдаления ИЛИ Строка.Сертификат.Отозван);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОбмена(ПутьККаталогу)
	
	ДиалогКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогКаталога.Заголовок = ВернутьСтр("ru = 'Выберите сетевой каталог для обмена'");
	ДиалогКаталога.Каталог   = ПутьККаталогу;
	Если ДиалогКаталога.Выбрать() Тогда
		ПутьККаталогу = ДиалогКаталога.Каталог;
		ЭлектронныеДокументыСлужебныйКлиент.ПроверитьДоступностьКаталогаДляПрямогоОбмена(ПутьККаталогу);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСертификатаЭП()
	
	Если Объект.ПометкаУдаления Тогда
		ТекстСообщения = ВернутьСтр("ru='Для выполнения действия необходимо снять пометку удаления.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ЭлектронныеДокументыСлужебныйКлиент.ПроверитьИспользованиеИнтернетПоддержкаПользователей() Тогда
		// Обработчик библиотеки ИПП
		
		Если ПустаяСтрока(Объект.ИдентификаторОрганизации)
			И Объект.СертификатыПодписейОрганизации.Количество() > 0 Тогда
			// Эта операция запрещена. Так как в соглашении уже имеется хотя бы один
			// сертификат, но еще не получен идентификатор
			ТекстПредупреждения = ВернутьСтр("ru = 'Перед добавлением новых сертификатов в соглашение
				|необходимо получить идентификатор участника обмена ЭДО'");
			ПоказатьПредупреждение(, ТекстПредупреждения, 30);
			Возврат;
			
			// Иначе
			// Остались случаи, когда добавляется первый сертификат
			// и когда добавляемый сертификат нужно зарегистрировать в 1С-Такском
			// оба этих случая отрабатываются в обработчике события формы ОбработкаВыбора 
			
		КонецЕсли;
	КонецЕсли;
	// Конец обработчика библиотеки ИПП
	
	Форма = ПолучитьФорму("Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.ФормаВыбора", , ЭтотОбъект);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Организация", Объект.Организация,
		ВидСравненияКомпоновкиДанных.Равно, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	Форма.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Служебные обработчики асинхронных диалогов

&НаКлиенте
Процедура ЗавершитьТестПрофиляНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат = "Отменить" Тогда
			Возврат;
		ИначеЕсли Модифицированность Тогда
			Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
		Состояние(ВернутьСтр("ru = 'Тест настроек.'"),
			,
			ВернутьСтр("ru = 'Выполняется тестирование обмена ЭД через электронную почту. Подождите...'"));
			
		УчетнаяЗапись = Объект.РесурсВходящихДокументов;
		
		Если РаботаСПочтовымиСообщениямиВызовСервера.ПарольЗадан(УчетнаяЗапись) Тогда
			РаботаСПочтовымиСообщениямиКлиент.ПроверитьВозможностьОтправкиИПолученияЭлектроннойПочты(Неопределено, УчетнаяЗапись, Неопределено);
		Иначе
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("УчетнаяЗапись", УчетнаяЗапись);
			ПараметрыФормы.Вставить("ПроверитьВозможностьОтправкиИПолучения", Истина);
			ОткрытьФорму("ОбщаяФорма.ПодтверждениеПароляУчетнойЗаписи", ПараметрыФормы);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог") Тогда
		Состояние(ВернутьСтр("ru = 'Тест настроек.'"),
			,
			ВернутьСтр("ru = 'Выполняется тестирование обмена ЭД через каталог. Подождите...'"));
		
		ПутьКРодительскомуКаталогуПрофильНастроекЭДО = Объект.РесурсВходящихДокументов;
		
		// Блок проверки доступа к каталогам.
		ШаблонСообщения = ВернутьСтр("ru = 'Тест. Проверка доступа к общему каталогу для обмена ЭД.
		|%1'");
		Попытка
			Если ЭлектронныеДокументыСлужебныйВызовСервера.ПроверитьДоступностьКаталогаДляПрямогоОбмена(
				ПутьКРодительскомуКаталогуПрофильНастроекЭДО) Тогда
				
				РезультатТеста = ВернутьСтр("ru = 'Пройден успешно.'");
			Иначе
				РезультатТеста = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("107");
			КонецЕсли;
		Исключение
			ШаблонРезультата = ВернутьСтр("ru = '%1
			|%2'");
			ТекстОшибки = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("107");
			РезультатТеста = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонРезультата, ТекстОшибки,
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, РезультатТеста);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Если Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезFTP") Тогда
		Состояние(ВернутьСтр("ru = 'Тест настроек.'"),
			,
			ВернутьСтр("ru = 'Выполняется тестирование обмена ЭД через FTP. Подождите...'"));
		
		ПутьКРодительскомуКаталогуПрофильНастроекЭДО = Объект.РесурсВходящихДокументов;
		
		// Блок проверки доступа к каталогам.
		ШаблонСообщения = ВернутьСтр("ru = 'Тест. Проверка доступа к общему каталогу для обмена ЭД.
		|%1'");
		Попытка
			Если ЭлектронныеДокументыСлужебныйВызовСервера.ПроверитьДоступностьКаталогаДляПрямогоОбмена(
				ПутьКРодительскомуКаталогуПрофильНастроекЭДО) Тогда
				
				РезультатТеста = ВернутьСтр("ru = 'Пройден успешно.'");
			Иначе
				РезультатТеста = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("107");
			КонецЕсли;
		Исключение
			ШаблонРезультата = ВернутьСтр("ru = '%1
			|%2'");
			ТекстОшибки = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьСообщениеОбОшибке("107");
			РезультатТеста = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонРезультата, ТекстОшибки,
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, РезультатТеста);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ПроверитьСертификаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСертификаты()
	
	МассивСтруктурСертификатов = ЭлектронныеДокументыСлужебныйКлиент.ПолучитьМассивСтруктурСертификатов(Истина);
	ДляАвторизации = (Объект.СпособОбменаЭД = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезОператораЭДОТакском"));
	Соответствие = ЭлектронныеДокументыСлужебныйВызовСервера.СоответствиеДоступныхСертификатовИПараметров(
		МассивСтруктурСертификатов, Объект.Ссылка, ДляАвторизации);
	
	Сертификат = Неопределено;
	ПарольПолучен = Ложь;
	Для Каждого КлючЗначение Из Соответствие Цикл
		ТекСертификат = КлючЗначение.Ключ;
		Если Сертификат = Неопределено Тогда
			// Если в соответствии нет сертификатов с сохраненным паролем, то для теста возьмем первый из списка сертификат.
			Сертификат = ТекСертификат;
		КонецЕсли;
		Если КлючЗначение.Значение.Свойство("ПарольПолучен", ПарольПолучен) И ПарольПолучен = Истина Тогда
			Сертификат = ТекСертификат;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(Сертификат) Тогда
		ЭлектронныеДокументыСлужебныйКлиент.ТестНастроекСПроверкойСертификата(Сертификат, , ДляАвторизации, ЭтаФорма);
	ИначеЕсли ДляАвторизации Тогда
		ТекстСообщения = ВернутьСтр("ru = 'Нет доступных сертификатов. Тест не выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПродолжить(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершить", ЭтотОбъект);
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
		ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
		ПараметрыФормыВыбора.Вставить("МножественныйВыбор", ложь);
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора",
			ПараметрыФормыВыбора, ЭтотОбъект, УникальныйИдентификатор, , , ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершить(Знач Контрагент, Знач ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ПараметрыФормы = Новый Структура;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Контрагент",         Контрагент);
		ЗначенияЗаполнения.Вставить("ПрофильНастроекЭДО", Объект.Ссылка);
		
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ОткрытьФорму("Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
	ПервоначальнаяНастройкаОбменаЭД = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВЛичныйКабинет(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	Массив = Новый Массив;
	Массив.Добавить(Объект.Ссылка);
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ПерейтиВЛичныйКабинетОповещение", ЭтотОбъект);
	
	ЭлектронныеДокументыСлужебныйКлиент.ПолучитьСоответсвиеСоглашенийИПараметровСертификатов(ОбработкаОповещения, Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВЛичныйКабинетОповещение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеПрофилейИПараметровСертификатов = "";
	СертификатПодписи  = Неопределено;
	ПарольПользователя = Неопределено;
	Если Результат.Свойство("СоответствиеПрофилейИПараметровСертификатов", СоответствиеПрофилейИПараметровСертификатов)
		И Не ЗначениеЗаполнено(СоответствиеПрофилейИПараметровСертификатов) Тогда
		
		ТекстСообщения = ВернутьСтр("ru='Нет доступных сертификатов, среди зарегистрированных по данному профилю настроек ЭДО.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
			,
			"СертификатыПодписейОрганизации",
			"Объект.СертификатыПодписейОрганизации",
			);
	Иначе
		Для Каждого ЭлементСтруктуры Из СоответствиеПрофилейИПараметровСертификатов Цикл
			СтруктураСертификата = ЭлементСтруктуры.Значение;
			Если ТипЗнч(СтруктураСертификата) = Тип("Структура") Тогда
				СтруктураСертификата.Свойство("СертификатПодписи", СертификатПодписи);
				СтруктураСертификата.Свойство("ПарольПользователя", ПарольПользователя);
			КонецЕсли;
			Прервать;
		КонецЦикла;
	КонецЕсли;
	Если ЗначениеЗаполнено(СертификатПодписи) Тогда
		ЭлектронныеДокументыКлиентПереопределяемый.СтартоватьМеханизмРаботыСОператоромЭДО(СертификатПодписи,
		Объект.Организация,
		"taxcomPrivat",
		Объект.ИдентификаторОрганизации,
		ПарольПользователя,
		УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовСпискаВидыЭДЗавершить(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		КонтролироватьСодержимоеНастроекЭД = Истина;
	Иначе
		
		ЗаполнитьЗначенияСвойств(Объект.ИсходящиеДокументы.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки),
			ДополнительныеПараметры);
		ЭтаФорма.ТекущийЭлемент = Элементы.ИдентификаторОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеИдентификатораОрганизацииЗавершить(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		КонтролироватьСодержимоеНастроекЭД = Истина;
	Иначе
		Объект.ИдентификаторОрганизации = СокрЛП(ДополнительныеПараметры.СтарыйИдентификаторОрганизации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактированиеТекстаПриглашения(Результат, ДополнительныеПараметры) Экспорт
	
	Объект.ШаблонТекстаПриглашений = Результат;
	
КонецПроцедуры


#КонецОбласти
