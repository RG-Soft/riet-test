&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаСервере
Перем КонтекстЭДОСервер;

&НаСервере
Функция ПолучитьВложениеНаСервере(ИмяФайла)
	
	Результат = Новый Структура("ТекстПредупреждения, АдресДанных");
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		//// инициализируем контекст ЭДО - модуль обработки
		ТекстСообщения = "";
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
		Если КонтекстЭДОСервер = Неопределено Тогда 
			Результат.ТекстПредупреждения = ТекстСообщения;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	// получаем вложение
	СтрВложения = КонтекстЭДОСервер.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Объект.Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Результат.ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ВернутьСтр("ru='Вложение с именем  %1 не обнаружено.'"), Символ(34) + ИмяФайла + Символ(34));
		Возврат Результат;
	КонецЕсли;
	
	Вложение = СтрВложения[0];
	
	Адрес = ПоместитьВоВременноеХранилище(Вложение.Данные.Получить(), УникальныйИдентификатор);
	Результат.АдресДанных = Адрес;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура КомандаВыгрузитьВложения(Команда)
	
	СохранитьВложения();

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВложения()
	
	МассивИменВложений = Новый Массив;
	Для Каждого Элемент Из Вложения Цикл
		МассивИменВложений.Добавить(Элемент.Значение.ИмяФайла);
	КонецЦикла;
	
	Если МассивИменВложений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивОписанийПолучаемыеФайлы = ПолучитьМассивОписанийФайловВложений(МассивИменВложений);
	КонтекстЭДОКлиент.ВыгрузитьВложения(МассивОписанийПолучаемыеФайлы, МассивИменВложений);
	
КонецПроцедуры

&НаКлиенте
Функция ВыделитьРасширениеИзИмениФайла(ИмяФайла)
	
	ДлинаИмени = СтрДлина(ИмяФайла);
	Для Инд = 1 По ДлинаИмени Цикл
		ТекИнд = ДлинаИмени - Инд + 1;
		ТекСимв = Сред(ИмяФайла, ТекИнд, 1);
		Если ТекСимв = "." Тогда
			Возврат нрег(СокрЛП(Сред(ИмяФайла, ТекИнд + 1)));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	Если ЭтоНовый Тогда
		ТекстПредупреждения = ВернутьСтр("ru = 'Копирование входящих сообщений запрещено!'");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДОСервер = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Заголовок = Строка(Объект.ВидДокумента) + " " + Объект.НомерДокумента + " от " + Формат(Объект.ДатаДокумента, "ДЛФ=D");
	Элементы.Тема.Заголовок = Заголовок;
	Элементы.ТекстПисьма.Заголовок = "Приложенные файлы:";
	
	Вложения.ЗагрузитьЗначения(ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ПолучитьВложенияДокументовРеализацииПолномочийНалоговыхОрганов(Объект.Ссылка));
	Элементы.Вложения.Заголовок = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ФорматированноеПредставлениеСпискаВложений(Вложения.ВыгрузитьЗначения());
	
	ОписьВходящихДокументов = КонтекстЭДОСервер.ПолучитьОписьВходящихДокументовПоТребованию(Объект.Ссылка);
	
	Если Объект.ВидДокумента <> Перечисления.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов Тогда
		Элементы.ГруппаСрокиПредставления.Видимость = Ложь;
	КонецЕсли;
	
	ПрорисоватьСтатус();
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	КонтекстЭДОСервер.ПометитьОбъектПрочтенным(Объект.Ссылка);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда 
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	Если КонтекстЭДОКлиент = Неопределено Тогда 
		Закрыть();
	КонецЕсли;
	
	Если Не Параметры.Ключ.Пустая() Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Организация", Объект.Организация);
		ПараметрыОповещения.Вставить("Ссылка", Объект.Ссылка);
		
		Оповестить("Изменение признака прочтенности", ПараметрыОповещения, Объект.Ссылка);
	КонецЕсли;		
		
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивОписанийФайловВложений(МассивИменВложений)
	
	МассивОписаний = Новый Массив;
	
	Для Каждого ИмяВложения Из МассивИменВложений Цикл 
		Результат = ПолучитьВложениеНаСервере(ИмяВложения);
		Если ЗначениеЗаполнено(Результат.АдресДанных) Тогда 
			ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ИмяВложения, Результат.АдресДанных); 
			МассивОписаний.Добавить(ОписаниеФайла);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат МассивОписаний;
	
КонецФункции

&НаКлиенте
Процедура КомандаСоздатьОтвет(Команда)
	
	Если Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов") Тогда
		КонтекстЭДОКлиент.СоздатьИсходящуюОписьПоОснованию(Объект.Ссылка);
	Иначе
		КонтекстЭДОКлиент.СоздатьПисьмоОтветНаУведомление(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОписиИсходящихДокументовВНалоговыеОрганы" И ТипЗнч(Параметр) = Тип("СправочникСсылка.ОписиИсходящихДокументовВНалоговыеОрганы") Тогда
		ПрорисоватьСтатус();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ДокументыРеализацииПолномочийНалоговыхОрганов", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Функция ПрорисоватьСтатус()
	
	ПараметрыПрорисовкиПанелиОтправки = ДокументооборотСКОВызовСервера.ПараметрыПрорисовкиПанелиОтправки(Объект.Ссылка, Объект.Организация, "ФНС");
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПрименитьПараметрыПрорисовкиПанелиОтправки(ЭтаФорма, ПараметрыПрорисовкиПанелиОтправки);
	ПрорисоватьПанельПриема();
			
КонецФункции

&НаСервере
Процедура ПрорисоватьПанельПриема()
	
	КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО();
	ТекущееСостояниеОтправки = КонтекстЭДОСервер.ТекущееСостояниеОтправки(Объект.Ссылка, Перечисления.ТипыКонтролирующихОрганов.ФНС);

	ГруппаКнопкиПриемаВидимость 	= Ложь;
	
	Если ТекущееСостояниеОтправки <> Неопределено Тогда
		ТекущийЭтапОтправки = ТекущееСостояниеОтправки.ТекущийЭтапОтправки;
		Если ТекущийЭтапОтправки <> Неопределено Тогда
			
			СостояниеСдачиОтчетности = ТекущийЭтапОтправки.СостояниеСдачиОтчетности;
			
			ГруппаКнопкиПриемаВидимость = (СостояниеСдачиОтчетности = Перечисления.СостояниеСдачиОтчетности.ТребуетсяПодтверждениеПриема);
			
		КонецЕсли;
	КонецЕсли;
	
	//Элементы.ГруппаКнопкиПриема.Видимость 	= ГруппаКнопкиПриемаВидимость;
	Элементы.БлокСостоянияОтправки.Видимость 	= ГруппаКнопкиПриемаВидимость;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодтвердитьПрием(Команда)    
	
	КонтекстЭДОКлиент.СоздатьРезультатПриемаВходящейОписиИнтерактивноПоДокументуОписи(Объект.Ссылка, Истина);
	ПрорисоватьСтатус();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтказатьВПриеме(Команда)
	
	КонтекстЭДОКлиент.СоздатьРезультатПриемаВходящейОписиИнтерактивноПоДокументуОписи(Объект.Ссылка, Ложь);
	ПрорисоватьСтатус();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаСрокиНажатие(Элемент)
	
	ОткрытьФорму("Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов.Форма.ФормаСрокиПредставления", , ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяФайла = НавигационнаяСсылка;
	ОткрытьВложение(ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВложение(ИмяФайла)
	
	РасширениеФайла = ВыделитьРасширениеИзИмениФайла(ИмяФайла);
	Если РасширениеФайла = "txt" Тогда
		Результат = ПоказатьТекстовоеВложение(ИмяФайла);
		Если ЗначениеЗаполнено(Результат.ТекстПредупреждения) Тогда 
			ПоказатьПредупреждение(, Результат.ТекстПредупреждения);
		Иначе
			// выводим на экран
			Текст = Новый ТекстовыйДокумент;
			Текст.УстановитьТекст(Результат.ТекстФайла);
			Текст.Показать(ИмяФайла, ИмяФайла);
		КонецЕсли;
	Иначе
		Попытка
			ПоказатьПроизвольноеВложение(ИмяФайла);
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ВернутьСтр("ru='При открытии поизвольного вложения %1 возникла ошибка: %2'"), Символ(34) + ИмяФайла + Символ(34), Символы.ПС + ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПроизвольноеВложение(ИмяФайла)
	
	Результат = ПолучитьВложениеНаСервере(ИмяФайла);
	Если ЗначениеЗаполнено(Результат.ТекстПредупреждения) Тогда 
		ПоказатьПредупреждение(, Результат.ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	КонтекстЭДОКлиент.ПоказатьПроизвольноеВложение(Результат, ИмяФайла);

КонецПроцедуры

&НаСервере
Функция ПоказатьТекстовоеВложение(ИмяФайла)
	
	Результат = Новый Структура("ТекстПредупреждения, ТекстФайла");
	
	Если КонтекстЭДОСервер = Неопределено Тогда 
		// инициализируем контекст ЭДО - модуль обработки
		ТекстСообщения = "";
		КонтекстЭДОСервер = ДокументооборотСКОВызовСервера.ПолучитьОбработкуЭДО(ТекстСообщения);
		Если КонтекстЭДОСервер = Неопределено Тогда 
			Результат.ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ВернутьСтр("ru='Не удалось получить текст вложения с именем %1.'"),
																									Символы.ПС + ТекстСообщения);
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	// получаем вложение
	СтрВложения = КонтекстЭДОСервер.ПолучитьФайлыДокументовРеализацииПолномочийНалоговыхОрганов(Объект.Ссылка, ИмяФайла);
	Если СтрВложения.Количество() = 0 Тогда
		Результат.ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ВернутьСтр("ru='Вложение с именем %1 не обнаружено.'"),
																								Символ(34) + ИмяФайла + Символ(34));
		Возврат Результат;
	КонецЕсли;
	СтрВложение = СтрВложения[0];
	
	// сохраняем вложение на диск
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	СтрВложение.Данные.Получить().Записать(ИмяВременногоФайла);
	
	// считываем при помощи ЧтениеТекста, чтобы автоматически распозналась кодировка UTF8 или ANSI
	ОбъектЧтение = Новый ЧтениеТекста(ИмяВременногоФайла);
	СтрТекст = ОбъектЧтение.Прочитать();
	ОбъектЧтение.Закрыть();
	
	Результат.ТекстФайла = СтрТекст;
	
	// удаляем временный файл
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат Результат;
	
КонецФункции

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма);
КонецПроцедуры

#КонецОбласти