
//////////////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизиты();
		
	ПроверитьРеквизиты(Отказ);
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////

Процедура ДозаполнитьРеквизиты()
	
	РГСофтКлиентСервер.УстановитьЗначение(Код, СокрЛП(Код));
	
	// Дозаполним реквизиты ТЧ From TMS IDs и Import WB
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(FromTMSIDs, "FromTMSID");
	ОбщегоНазначения.ОчиститьТаблицуОтСтрокСПустымиРеквизитами(FromTMSIDs, "FromTMSID");
	ОбщегоНазначения.ОчиститьТаблицуОтСтрокСПустымиРеквизитами(ImportWB, "WBField,Waybill");
	
	FromTMSIDs.Свернуть("FromTMSID", "");
	FromTMSIDs.Сортировать("FromTMSID");
	
	// Для удобства пользователей перечислим From TMS IDs через запятую в реквизите шапки
	МассивFromTMSIDs = FromTMSIDs.ВыгрузитьКолонку("FromTMSID");
	FromTMSIDsList = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивFromTMSIDs, ", ");
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьРеквизиты(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Code"" is empty!",
			ЭтотОбъект, "Код", , Отказ);
	КонецЕсли;
		
	// Проверим уникальность значений в ТЧ From TMS IDs
	Если FromTMSIDs.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		
		МассивFromTMSIDs = FromTMSIDs.ВыгрузитьКолонку("FromTMSID");
		Запрос.УстановитьПараметр("FromTMSIDs", МассивFromTMSIDs);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	MOTsFromTMSIDs.FromTMSID,
			|	MOTsFromTMSIDs.Ссылка.Представление КАК Представление
			|ИЗ
			|	Справочник.MOTs КАК MOTs
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.MOTs.FromTMSIDs КАК MOTsFromTMSIDs
			|		ПО MOTs.Ссылка = MOTsFromTMSIDs.Ссылка
			|ГДЕ
			|	MOTsFromTMSIDs.FromTMSID В(&FromTMSIDs)
			|	И MOTsFromTMSIDs.Ссылка <> &Ссылка
			|	И НЕ MOTs.ПометкаУдаления";
			
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаТЧ = FromTMSIDs.Найти(Выборка.FromTMSID, "FromTMSID");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"From TMS ID """ + Выборка.FromTMSID + """ is already used in MOT """ + СокрЛП(Выборка.Представление) + """!",
				ЭтотОбъект, "FromTMSIDs[" + (СтрокаТЧ.НомерСтроки-1) + "].FromTMSID", , Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Import WB
	Для Каждого СтрокаImportWB из ImportWB Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаImportWB.WBField) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаImportWB.НомерСтроки + " WB field is empty!",
				ЭтотОбъект, "ImportWB[" + (СтрокаImportWB.НомерСтроки-1) + "].WBField", , Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаImportWB.Waybill) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаImportWB.НомерСтроки + " Waybill is empty!",
				ЭтотОбъект, "ImportWB[" + (СтрокаImportWB.НомерСтроки-1) + "].Waybill", , Отказ);
		КонецЕсли;

	КонецЦикла;
	
	// проверим, что Import WB не повторяются
	Если ImportWB.Количество() > 0 Тогда 
		
		СтруктураОтбора = Новый Структура("WBField");
		МассивImportWB = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ImportWB, "WBField");
		Для Каждого ЭлементМассива из МассивImportWB Цикл 
			
			СтруктураОтбора.WBField = ЭлементМассива;
			
			МассивСтрок = ImportWB.НайтиСтроки(СтруктураОтбора);
			Если МассивСтрок.Количество() > 1 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"'" + ЭлементМассива + "' specified more than once in current MOT!",
					ЭтотОбъект, "ImportWB[" + (МассивСтрок[0].НомерСтроки-1) + "].WBField", , Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры