
Перем ТекущийСтатус;

Перем мЭтоВозврат Экспорт;
Перем мЭтоСубмит Экспорт;
Перем мЭтоАкцепт Экспорт;
Перем мТихаяЗапись Экспорт;

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если мТихаяЗапись Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	ТекущийСтатус = РегистрыСведений.СтатусыРеестров.ТекущийСтатусРеестра(Ссылка);
	ДнейВСтатусе  = РегистрыСведений.СтатусыРеестров.КоличествоДнейВТекущемСтатусе(Ссылка);	
	
	НеПроверяемые = Новый Массив;
	// причину возврата будем проверять в форме т.к. специфический случай
	НеПроверяемые.Добавить("ПричиныВозврата");
	
	Если ТекущийСтатус = Неопределено или ТекущийСтатус = Перечисления.СтатусыРеестров.Registered Тогда
		
		НеПроверяемые.Добавить("ПричиныНесоблюденияСроковБиллинг");
		
		Если ЗначениеЗаполнено(ДатаПолученияОтПодрядчика) И ДнейВСтатусе < 5 Тогда
			НеПроверяемые.Добавить("ПричиныНесоблюденияСроков");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаФинализации) Тогда		
			НеПроверяемые.Добавить("СпециалистБиллинга");
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.Finished Тогда
		
		НеПроверяемые.Добавить("ПричиныНесоблюденияСроков");
		НеПроверяемые.Добавить("ПричиныНесоблюденияСроковБиллинг");
		
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator
		Или ТекущийСтатус = Перечисления.СтатусыРеестров.Accepted Тогда
		
		НеПроверяемые.Добавить("ПричиныНесоблюденияСроков");
		
		ДнейВСтатусеБиллинг = 0;
		ДатаОбработкиКоординатором = РегистрыСведений.СтатусыРеестровLog.ДатаЗавершенияОбработкиКоординатором(Ссылка);
		Если НЕ ДатаОбработкиКоординатором = Неопределено ТОгда
			ДнейВСтатусеБиллинг = (НачалоДня(ТекущаяДата()) - НачалоДня(ДатаОбработкиКоординатором)) / 86400;	
		КонецЕсли;
		
		Если ДнейВСтатусеБиллинг < 5 Тогда
			НеПроверяемые.Добавить("ПричиныНесоблюденияСроковБиллинг");
		КонецЕсли;
		
	КонецЕсли;
	
	Для каждого ТекРеквизит из НеПроверяемые Цикл
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти(ТекРеквизит));
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ Отказ Тогда
		
		Если ЭтоНовый()Тогда
			
			ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
			
			Наименование = Справочники.Реестры.СформироватьИдентификаторРеестра(ЭтотОбъект);
			
			// уведомления
			Если Координатор <> Пользователи.ТекущийПользователь() Тогда
				УведомитьОНазначении(Координатор, "Вы назначены координатором реестра");
			КонецЕсли;	

		КонецЕсли;
		
		// запишем список плательщиков
		ПлательщикиСписком = "";
		Для каждого ТекСтрока из Плательщики Цикл
			ПлательщикиСписком = ПлательщикиСписком + ?(ПустаяСтрока(ПлательщикиСписком), "", ", ") + СокрЛП(ТекСтрока.Плательщик);
		КонецЦикла;
		
		ПричиныСписком = "";
		Для каждого ТекСтрока из ПричиныНесоблюденияСроков Цикл
			ПричиныСписком = ПричиныСписком + ?(ПустаяСтрока(ПричиныСписком), "", ", ") + СокрЛП(ТекСтрока.Причина);
		КонецЦикла;
		
		ПричиныБиллингСписком = "";
		Для каждого ТекСтрока из ПричиныНесоблюденияСроковБиллинг Цикл
			ПричиныБиллингСписком = ПричиныБиллингСписком + ?(ПустаяСтрока(ПричиныБиллингСписком), "", ", ") + СокрЛП(ТекСтрока.Причина);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если НЕ Отказ Тогда
		
		НовыйСтатус = Неопределено;
		
		Если ТекущийСтатус = Неопределено И ДополнительныеСвойства.Свойство("ЭтоНовый") и ДополнительныеСвойства.ЭтоНовый Тогда
			НовыйСтатус = РегистрыСведений.СтатусыРеестров.ПеревестиВСледующийСтатус(Ссылка);
		КонецЕсли;
		// просто запись не есть движение статуса. 
		Если мЭтоСубмит или мЭтоВозврат или мЭтоАкцепт Тогда
			// Фиксируем статус
			Если ТекущийСтатус = Неопределено или (мЭтоСубмит и ЗначениеЗаполнено(ДатаФинализации)) или мЭтоАкцепт Тогда
				НовыйСтатус = РегистрыСведений.СтатусыРеестров.ПеревестиВСледующийСтатус(Ссылка);
			ИначеЕсли мЭтоВозврат Тогда
				НовыйСтатус = РегистрыСведений.СтатусыРеестров.ПеревестиВПредыдущийСтатус(Ссылка);
			КонецЕсли;
		КонецЕсли;
		
		// уведомления
				
		// уведомить координатора о том, что назначен ответственным по e-mail
		Если НовыйСтатус = Неопределено Тогда
			// Если просто записали реестр с изменением полей
			Если Координатор <> Ссылка.Координатор Тогда
				УведомитьОНазначении(Координатор, "Вы назначены координатором реестра");	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СпециалистБиллинга) И СпециалистБиллинга <> Ссылка.СпециалистБиллинга Тогда
				УведомитьОНазначении(СпециалистБиллинга, "Вы назначены на работу с реестром");	
			КонецЕсли;
			
			// раз статус не изменился, то уведомлять некого и незачем. 
			Возврат;
		КонецЕсли;
				
		// если submit, то уведомить биллинг-специалиста по e-mail
		Если НовыйСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator Тогда
			УведомитьОНазначении(СпециалистБиллинга, "Вы назначены на работу с реестром");	
		КонецЕсли;
		
		// если submit и смена биллинг специалиста, то уведомить его по e-mail
		Если НовыйСтатус = Перечисления.СтатусыРеестров.Registered И ЗначениеЗаполнено(ПричинаВозврата) Тогда
			УведомитьОНазначении(Координатор, "Реестр возвращен с причиной " + Строка(ПричинаВозврата));	
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Реестр возвращен координатору с причиной " + Строка(ПричинаВозврата));
		КонецЕсли;
		
		Если НовыйСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator Тогда
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Обработано координатором");
		ИначеЕсли НовыйСтатус = Перечисления.СтатусыРеестров.Accepted Тогда
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Реестр принят в работу");	
		ИначеЕсли НовыйСтатус = Перечисления.СтатусыРеестров.Finished Тогда
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Работа с реестром завершена");
			Док = Справочники.Реестры.СоздатьДокументRentalCosts(Ссылка);
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Создан документ " + Строка(Док));
			Док = Справочники.Реестры.СоздатьДокументAPInvoice(Ссылка);
			Справочники.Реестры.ЗаписатьЛогиПринудительно(Ссылка, "Создан документ " + Строка(Док));

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДатаФинализации = Неопределено;
	ДатаРегистрации = Неопределено;
	
	ПериодОказанияУслугНачало 	 = Неопределено;
	ПериодОказанияУслугОкончание = Неопределено;
	
	Наименование = "";
	
КонецПроцедуры

Процедура УведомитьОНазначении(Пользователь, Сообщение)
	
	Адрес = Пользователь.EMail;
	
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	РГСофт.ЗарегистрироватьПочтовоеСообщение(Адрес, Наименование, Сообщение);
	
КонецПроцедуры

////////////////////////

мЭтоВозврат  = Ложь;
мЭтоСубмит   = Ложь;
мЭтоАкцепт   = Ложь;
мТихаяЗапись = Ложь;
