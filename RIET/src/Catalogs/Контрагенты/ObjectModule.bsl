Перем мОснование;

Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

// Функция возвращает результат запроса по справочнику контрагентов с заданным головным контрагентом
//
// Параметры:
//  ГоловнойКонтрагент - заданный головной контрагент
//
// Возвращаемое значение:
//  Результат - результат работы запроса
// 
Функция ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(ГоловнойКонтрагент) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнойКонтрагент", ГоловнойКонтрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|
	|ГДЕ
	|	Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
	|   и Контрагенты.ГоловнойКонтрагент <> Контрагенты.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)

	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
		ЭтотОбъект.ОсновнойДоговорКонтрагента = Неопределено;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)
	
	Перем мСсылкаНового;

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа И Проверено И Не Ответственный = ПараметрыСеанса.ТекущийПользователь Тогда
		Сообщить("Этот элемент закрыт для изменения.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПроверитьЗаполнениеРеквизитов(Отказ);
	  		
	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент <> Ссылка Тогда

		Если Не ОбщегоНазначения.ЗначениеНеЗаполнено(ГоловнойКонтрагент.ГоловнойКонтрагент) И ГоловнойКонтрагент.ГоловнойКонтрагент <> ГоловнойКонтрагент Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Контрагент "+СокрЛП(ГоловнойКонтрагент)+" не может быть выбран головным, 
							|так как для него уже был назначен головной контрагент "+СокрЛП(ГоловнойКонтрагент.ГоловнойКонтрагент)+"!");
			Отказ = Истина;
			Возврат;
		Иначе

			// надо проверить, что если указываем головного контрагента, то этот элемент уже не был установлен
			// в качестве головного у другого контрагента.
			ВыборкаПоГоловномуКонтрагенту = ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(Ссылка).Выбрать();
			Если ВыборкаПоГоловномуКонтрагенту.Количество() <> 0 Тогда

				СообщениеОНевозможностиЗаписи = "Контрагент "+СокрЛП(ЭтотОбъект)+" не может иметь головного контрагента!
												|Этот контрагент уже установлен головным для: ";
				Пока ВыборкаПоГоловномуКонтрагенту.Следующий() Цикл
					СообщениеОНевозможностиЗаписи = СообщениеОНевозможностиЗаписи + Символы.ПС + СокрЛП(ВыборкаПоГоловномуКонтрагенту.Контрагент);
				КонецЦикла;

				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОНевозможностиЗаписи);
				Отказ = Истина;
				Возврат;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтактныеЛица.Ссылка КАК КонтЛицо
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|
	|ГДЕ
	|	КонтактныеЛица.ОбъектВладелец = &Ссылка";
	ВыборкаКонтЛиц = Запрос.Выполнить().Выбрать();

	Пока ВыборкаКонтЛиц.Следующий() Цикл

		КонтЛицо = ВыборкаКонтЛиц.КонтЛицо.ПолучитьОбъект();
		КонтЛицо.УстановитьПометкуУдаления(ПометкаУдаления);
		КонтЛицо.Записать();

	КонецЦикла;
	
	ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
	НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель, мСсылкаНового);
	
	// { РГ-Софт Пахоменков А. 20.01.2015 ПроверкаКонтрагентов
	ПроверкаИННКПП();
	// } РГ-Софт Пахоменков А. 20.01.2015

КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Организации") Тогда

		Наименование           = Основание.Наименование;
		ЮрФизЛицо              = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		НаименованиеПолное     = Основание.НаименованиеПолное;
		ОсновнойБанковскийСчет = Основание.ОсновнойБанковскийСчет;
		ИНН                    = Основание.ИНН;
		КПП                    = Основание.КПП;
		КодПоОКПО              = Основание.КодПоОКПО;
		мОснование             = Основание;

	КонецЕсли;

КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
				
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры
  
Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(НаименованиеПолное)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не заполнено поле ""Полное наименование""!",
			ЭтотОбъект, "НаименованиеПолное");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(DescriptionFull)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не заполнено поле ""Description""!",
			ЭтотОбъект, "DescriptionFull");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(LawsonID)) ИЛИ НЕ ЗначениеЗаполнено(КонтрагентLawson) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не заполнено поле ""Lawson ID""!",
			ЭтотОбъект, "LawsonID");
	КонецЕсли;
	
	ТекстСообщения = "";
	Если ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо И НЕ ПустаяСтрока(ИНН) 
		И НЕ ИННСоответствуетТребованиям(ИНН, ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,
		ЭтотОбъект,
		"ИНН");
	КонецЕсли;
	
	Если ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо И НЕ ПустаяСтрока(КПП) 
		И НЕ КППСоответствуетТребованиям(КПП, ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,
		ЭтотОбъект,
		"ИНН");
	КонецЕсли;

КонецПроцедуры

Функция ИННСоответствуетТребованиям(Знач ИНН, ТекстСообщения) 

	СоответствуетТребованиям = Истина;
	ТекстСообщения = "";

	ИНН      = СокрЛП(ИНН);
	ДлинаИНН = СтрДлина(ИНН);

	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИНН) Тогда
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'ИНН должен состоять только из цифр.'");
	КонецЕсли;

	Если  ДлинаИНН <> 10 Тогда
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = ТекстСообщения + ?(ЗначениеЗаполнено(ТекстСообщения), Символы.ПС, "")
		+ НСтр("ru = 'ИНН юридического лица должен состоять из 10 цифр.'");
	КонецЕсли;
	
	Если СоответствуетТребованиям Тогда
		
		КонтрольнаяСумма = 0;
		
		Для Н = 1 По 9 Цикл
			
			Если Н = 1 Тогда
				Множитель = 2;
			ИначеЕсли Н = 2 Тогда
				Множитель = 4;
			ИначеЕсли Н = 3 Тогда
				Множитель = 10;
			ИначеЕсли Н = 4 Тогда
				Множитель = 3;
			ИначеЕсли Н = 5 Тогда
				Множитель = 5;
			ИначеЕсли Н = 6 Тогда
				Множитель = 9;
			ИначеЕсли Н = 7 Тогда
				Множитель = 4;
			ИначеЕсли Н = 8 Тогда
				Множитель = 6;
			ИначеЕсли Н = 9 Тогда
				Множитель = 8;
			КонецЕсли;
			
			Цифра = Число(Сред(ИНН, Н, 1));
			КонтрольнаяСумма = КонтрольнаяСумма + Цифра * Множитель;
			
		КонецЦикла;
		
		КонтрольныйРазряд = (КонтрольнаяСумма %11) %10;
		
		Если КонтрольныйРазряд <> Число(Сред(ИНН, 10, 1)) Тогда
			СоответствуетТребованиям = Ложь;
			ТекстСообщения = ТекстСообщения + ?(ЗначениеЗаполнено(ТекстСообщения), Символы.ПС, "")
			+ НСтр("ru = 'Контрольное число для ИНН не совпадает с рассчитанным.'");
		КонецЕсли;
		
	КонецЕсли;

	Возврат СоответствуетТребованиям;

КонецФункции 

Функция КППСоответствуетТребованиям(Знач КПП, ТекстСообщения) 

	СоответствуетТребованиям = Истина;
	ТекстСообщения           = "";

	КПП      = СокрЛП(КПП);
	ДлинаКПП = СтрДлина(КПП);

	Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КПП) Тогда
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'КПП должен состоять только из цифр.'");
	КонецЕсли;

	Если ДлинаКПП <> 9 Тогда
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = ТекстСообщения + ?(ЗначениеЗаполнено(ТекстСообщения), Символы.ПС, "") +
			НСтр("ru = 'КПП должен состоять из 9 цифр.'");
	КонецЕсли;

	Возврат СоответствуетТребованиям;

КонецФункции 

Процедура ПроверкаИННКПП() Экспорт
	
	ПараметрыПередачи = Новый Структура;     		
	ПараметрыПередачи.Вставить("СтранаРегистрации",         СтранаРегистрации);
	ПараметрыПередачи.Вставить("ИНН",                       ИНН);
	ПараметрыПередачи.Вставить("КПП",                       КПП);
	ПараметрыПередачи.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	ПараметрыПередачи.Вставить("ОбособленноеПодразделение", ОбособленноеПодразделение);
	ПараметрыПередачи.Вставить("ПроверитьИНН",              Истина);
	ПараметрыПередачи.Вставить("ПроверитьКПП",              Истина);
	ПараметрыПередачи.Вставить("ЦветВыделенияНекорректногоЗначение", 	ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой);
	
	ВозвращенныеЗначение = ОбщегоНазначенияБПКлиентСервер.ПроверитьКорректностьИННКПП(ПараметрыПередачи);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВозвращенныеЗначение);
	
КонецПроцедуры