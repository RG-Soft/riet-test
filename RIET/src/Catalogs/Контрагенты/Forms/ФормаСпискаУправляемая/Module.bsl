////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// { РГ-Софт Пахоменков А. 20.01.2015 ПроверкаКонтрагентов
	Список.Параметры.УстановитьЗначениеПараметра(
		"СимволПС", Символы.ПС);
		
	Состояния = Новый Массив;
	Состояния.Добавить(Перечисления.СостоянияСуществованияКонтрагента.КППНеСоотвествуетИНН);
	Состояния.Добавить(Перечисления.СостоянияСуществованияКонтрагента.ОтсутствуетВРеестре);
	Состояния.Добавить(Перечисления.СостоянияСуществованияКонтрагента.ПрекратилДеятельность);
		
	Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
	
	Список.Параметры.УстановитьЗначениеПараметра("КППНеСоотвествуетИНН", Строка(Перечисления.СостоянияСуществованияКонтрагента.КППНеСоотвествуетИНН));
	Список.Параметры.УстановитьЗначениеПараметра("ОтсутствуетВРеестре", Строка(Перечисления.СостоянияСуществованияКонтрагента.ОтсутствуетВРеестре));
	Список.Параметры.УстановитьЗначениеПараметра("ПрекратилДеятельность", Строка(Перечисления.СостоянияСуществованияКонтрагента.ПрекратилДеятельность));
	
	//МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Контрагенты);
	//Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	ИспользованиеПроверкиВозможно = ПроверкаКонтрагентовВызовСервера.ИспользованиеПроверкиВозможно();
	Список.Параметры.УстановитьЗначениеПараметра("ИспользованиеПроверкиВозможно", ИспользованиеПроверкиВозможно);
	// } РГ-Софт Пахоменков А. 20.01.2015

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ОткрытьСтаруюФормуСписка(Команда)
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаСписка");
	
	//ЭтаФорма.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события нажатие по кнопке Отчет командной панели ДействияФормы.
//
&НаКлиенте
Процедура Отчет(Команда)

	Если Элементы.Список.ТекущиеДанные <> Неопределено И НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
		Если Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда     			
			Предупреждение("Нельзя формировать отчет по группе!");
			Возврат;  			
		Иначе         			
			//Отчет = Отчеты.ОтчетПоДаннымКонтрагента.Создать();
			//Отчет.КонтрагентОтчета = Элементы.Список.ТекущиеДанные.Ссылка;
			//Отчет.ДатаОтчета = ТекущаяДата();  			
			//ФормаОтчета = Отчет.ПолучитьФорму();			                            
			//Отчет.СформироватьОтчет(ФормаОтчета.ЭлементыФормы.ПолеТабличногоДокумента);   			
			//ФормаОтчета.Открыть();     		
		КонецЕсли;
	КонецЕсли;      
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступаПользователейКоВсемуСправочнику(Команда)
	НастройкаПравДоступа.РедактироватьПраваДоступа(ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"));
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступаПользователейКТекущемуЭлементу(Команда)
	Если Не Элементы.Список.ТекущиеДанные = Неопределено Тогда
		НастройкаПравДоступа.РедактироватьПраваДоступа(Элементы.Список.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура rgsДействиеИнтеграцияСERM(Команда)
	ОткрытьФорму("Обработка.rgsИнтеграцияСERM.Форма.Форма");
КонецПроцедуры

