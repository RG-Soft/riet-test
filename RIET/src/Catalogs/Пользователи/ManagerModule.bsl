#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	//НеРедактируемыеРеквизиты.Добавить("Служебный");
	//НеРедактируемыеРеквизиты.Добавить("ИдентификаторПользователяИБ");
	//НеРедактируемыеРеквизиты.Добавить("ИдентификаторПользователяСервиса");
	//НеРедактируемыеРеквизиты.Добавить("СвойстваПользователяИБ");
	//
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если НЕ Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
	
	Если НЕ Параметры.Отбор.Свойство("Служебный") Тогда
		Параметры.Отбор.Вставить("Служебный", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПоEmail(Email) Экспорт
	
	// Возвращает ссылку, найденную по e-mail
	// Отсекает помеченные на удаление
	// Если найдено несколько - возращает Неопределено
	// Рекомендуется вызывать из модуля с повторным использованием значений
	
	Возврат РГСофт.НайтиСсылку("Справочник", "Пользователи", "EMail", Email); 
	
КонецФункции

Функция СоздатьTrackerПоEmail(Email) Экспорт
	
	// Создает трекера по e-mail адресу
	// Создает как элемент справочника, так и пользователя ИБ
	// Возвращает ссылку на созданного пользователя
	// В случае ошибок - выбрасывает исключения
	
	ПозицияРазделителя = СтрНайти(Email, "@");
	Если ПозицияРазделителя = 0 Тогда
		ВызватьИсключение "Incorrect email address """ + Email + """: failed to find symbol @!";	
	КонецЕсли;
	
	Alias = Сред(Email, 1, ПозицияРазделителя-1);
	Alias = СокрЛП(Alias);
	
	// Нам нужно гарантированно создать пользователя и пользователя ИБ, поэтому будем делать в транзакции 
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	           		
	// Пользователь ИБ
	ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	ПользовательИБ.АутентификацияОС = Истина;
	ПользовательИБ.АутентификацияСтандартная = Ложь;
	ПользовательИБ.Имя = Alias;
	ПользовательИБ.ПоказыватьВСпискеВыбора = Ложь;
	ПользовательИБ.ПолноеИмя = Alias;
	ПользовательИБ.ПользовательОС = "\\DIR\" + Alias;
	ПользовательИБ.РежимЗапуска = РежимЗапускаКлиентскогоПриложения.УправляемоеПриложение;
	ПользовательИБ.Роли.Добавить(Метаданные.Роли.ImportExportTracker);
	ПользовательИБ.Язык = Метаданные.Языки.Английский;
	ПользовательИБ.Записать();
	
	// Элемент справочника
	ПользовательОбъект = Справочники.Пользователи.СоздатьЭлемент();
	ПользовательОбъект.Код = Alias;
	ПользовательОбъект.Наименование = Alias;
	ПользовательОбъект.EMail = Email;
	ПользовательОбъект.Родитель = ПолучитьГруппуTrackers();
	ПользовательОбъект.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Возврат ПользовательОбъект.Ссылка;
	
КонецФункции

Функция ПолучитьГруппуTrackers() Экспорт
	
	Возврат Справочники.Пользователи.НайтиПоКоду("Import tracking");
	
КонецФункции

#КонецОбласти
