
//////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизитыБезДополнительныхДанных();
	
	ПроверитьЗаполнениеРеквизитов(Отказ);
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////

Процедура ДозаполнитьРеквизитыБезДополнительныхДанных()
	
	РГСофтКлиентСервер.УстановитьЗначение(Код, СокрЛП(Код));
	РГСофтКлиентСервер.УстановитьЗначение(Наименование, СокрЛП(Наименование));
	РГСофтКлиентСервер.УстановитьЗначение(TaxCode, СокрЛП(TaxCode));
	
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(EMailBoxes, "EMailBox");
	ОбщегоНазначения.ОчиститьТаблицуОтСтрокСПустымиРеквизитами(EMailBoxes, "MOT,EMailBox");
	НовыйEMailBoxesList = "";
	Для Каждого СтрокаТЧ Из EMailBoxes Цикл
		НовыйEMailBoxesList = НовыйEMailBoxesList + СокрЛП(СтрокаТЧ.MOT) + " - " + СтрокаТЧ.EMailBox + "; ";
	КонецЦикла;
	РГСофтКлиентСервер.УстановитьЗначение(EMailBoxesList, СокрЛП(НовыйEMailBoxesList));
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Code"" is empty!",
			ЭтотОбъект, "Код", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Name"" is empty!",
			ЭтотОбъект, "Наименование", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(TaxCode) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Tax code"" is empty!",
			ЭтотОбъект, "TaxCode", , Отказ);	
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из EMailBoxes Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.MOT) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаТЧ.НомерСтроки + ": ""MOT"" is empty!",
				ЭтотОбъект, "EMailBoxes[" + (СтрокаТЧ.НомерСтроки-1) + "].MOT", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.EMailBox) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаТЧ.НомерСтроки + ": ""EMail box"" is empty!",
				ЭтотОбъект, "EMailBoxes[" + (СтрокаТЧ.НомерСтроки-1) + "].EMailBox", , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из LegalDocuments Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.DocumentType) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаТЧ.НомерСтроки + ": ""Document type"" is empty!",
				ЭтотОбъект, "LegalDocuments[" + (СтрокаТЧ.НомерСтроки-1) + "].DocumentType", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ParentCompany) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаТЧ.НомерСтроки + ": ""Parent company"" is empty!",
				ЭтотОбъект, "LegalDocuments[" + (СтрокаТЧ.НомерСтроки-1) + "].ParentCompany", , Отказ);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ExpiryDate) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"In line " + СтрокаТЧ.НомерСтроки + ": ""Expiry date"" is empty!",
				ЭтотОбъект, "LegalDocuments[" + (СтрокаТЧ.НомерСтроки-1) + "].ExpiryDate", , Отказ);
		КонецЕсли;

	КонецЦикла;
	
	// проверим, что сочетание Document type и Parent company не повторяется
	Если LegalDocuments.Количество() > 0 Тогда 
		
		СтруктураОтбора = Новый Структура("DocumentType,ParentCompany");
		ТЗDocType_Company = LegalDocuments.Выгрузить(, "DocumentType,ParentCompany");
		ТЗDocType_Company.Свернуть("DocumentType,ParentCompany");
		
		Для Каждого СтрокаТЗ из ТЗDocType_Company Цикл 
			
			СтруктураОтбора.DocumentType = СтрокаТЗ.DocumentType;
			СтруктураОтбора.ParentCompany = СтрокаТЗ.ParentCompany;
			
			МассивСтрок = LegalDocuments.НайтиСтроки(СтруктураОтбора);
			Если МассивСтрок.Количество() > 1 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"Document type '" + СокрЛП(СтрокаТЗ.DocumentType) + "' specified more than once for parent company '" 
					+ СокрЛП(СтрокаТЗ.ParentCompany) + "'!",
					ЭтотОбъект, "LegalDocuments[" + (МассивСтрок[0].НомерСтроки-1) + "].DocumentType", , Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	
КонецПроцедуры
