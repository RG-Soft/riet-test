
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МассивОтбора") = Истина Тогда
		
		Для каждого ЭлементМассиваОтбора Из Параметры.МассивОтбора Цикл
			
			ЭлементОтбораДанных = Список.Отбор.Элементы.Добавить(ЭлементМассиваОтбора.ТипОтбора);
			ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ЭлементМассиваОтбора.ЛевоеЗначение);
			ЭлементОтбораДанных.Использование  = ?(ЭлементМассиваОтбора.Свойство("Использовать"), ЭлементМассиваОтбора.Использовать, Истина);
			ЭлементОтбораДанных.ВидСравнения   = ЭлементМассиваОтбора.ВидСравнения;
			ЭлементОтбораДанных.ПравоеЗначение = ЭлементМассиваОтбора.ПравоеЗначение;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Если Параметры.Свойство("СтруктураНастройки") Тогда
		
		СтруктураНастройки = Параметры.СтруктураНастройки;
		Если СтруктураНастройки.Имя = "ВыборИзInvoice" Тогда
			НастроитьДляВыбораИзInvoice(СтруктураНастройки);
		ИначеЕсли СтруктураНастройки.Имя = "ВыборИзGood" Тогда
			НастроитьДляВыбораИзGood(Отказ, СтруктураНастройки);
		ИначеЕсли СтруктураНастройки.Имя = "ВыборИзManualItem" Тогда
			НастроитьДляВыбораИзManualItem(Отказ, СтруктураНастройки);
		ИначеЕсли СтруктураНастройки.Имя = "ОтборДляInventoryПоступление" Тогда
			НастроитьДляВыбораИзInventoryПоступления(СтруктураНастройки);
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Отбор.Вставить("ПометкаУдаления", Ложь);
	
	// { RGS AFokin 13.09.2018 23:59:59 - S-I-0005710
	Если Параметры.Свойство("СписокДляОтбора") Тогда
		НастроитьСписокСОтбором(Параметры.СписокДляОтбора);
	КонецЕсли;	
	// } RGS AFokin 13.09.2018 23:59:59 - S-I-0005710
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзInvoice(СтруктураНастройки)
	
	Отбор = Параметры.Отбор;
	
	Если СтруктураНастройки.Свойство("Дата") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Владелец.ДатаЗаявкиНаЗакупку",
			СтруктураНастройки.Дата,
			ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,
			,
			Истина);
		
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("SoldTo") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Владелец.БОРГ.Компания",
			СтруктураНастройки.SoldTo,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина);
			
	КонецЕсли; 	
		
	Если СтруктураНастройки.Свойство("Currency") Тогда
		Отбор.Вставить("Валюта", СтруктураНастройки.Currency);
	КонецЕсли; 		
	
	Если СтруктураНастройки.Свойство("PONo") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Владелец.Код",
			СтруктураНастройки.PONo,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина);
			
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("PartNo") Тогда
		Отбор.Вставить("КодПоставщика", СтруктураНастройки.PartNo);
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("Qty") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Количество",
			СтруктураНастройки.Qty,
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			,
			Истина);
			
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("UOM") Тогда
		Отбор.Вставить("ЕдиницаИзмерения", СтруктураНастройки.UOM);
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("Description") Тогда
		
		ПравоеЗначение = Лев(СтруктураНастройки.Description, 4);
		ПравоеЗначение = СокрЛП(ПравоеЗначение);
		
		Если ЗначениеЗаполнено(ПравоеЗначение) Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор,
				"ОписаниеНоменклатуры",
				ПравоеЗначение,
				ВидСравненияКомпоновкиДанных.Содержит,
				,
				Истина);
			
		КонецЕсли; 
			
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Владелец.ПометкаУдаления",
		Ложь,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзGood(Отказ, СтруктураНастройки)
	
	Отбор = Параметры.Отбор;
			
	Если СтруктураНастройки.Свойство("PONo") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Владелец.Код",
			СтруктураНастройки.PONo,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина);
			
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("PartNo") Тогда
		Отбор.Вставить("КодПоставщика", СтруктураНастройки.PartNo);
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("Qty") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор,
			"Количество",
			СтруктураНастройки.Qty,
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			,
			Истина);
			
	КонецЕсли; 
	
	Если СтруктураНастройки.Свойство("UOM") Тогда
		Отбор.Вставить("ЕдиницаИзмерения", СтруктураНастройки.UOM);
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"Владелец.ПометкаУдаления",
		Ложь,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзManualItem(Отказ, СтруктураНастройки)
	
	Отбор = Параметры.Отбор;	 
	
	Если СтруктураНастройки.Свойство("PartNo") Тогда
		Отбор.Вставить("КодПоставщика", СтруктураНастройки.PartNo);
	КонецЕсли; 
	 	
КонецПроцедуры

&НаСервере
Процедура НастроитьДляВыбораИзInventoryПоступления(СтруктураНастройки)
	
	Если СтруктураНастройки.Свойство("Good") Тогда
		КодПоставщика = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтруктураНастройки.Good, "Код");
		КодПоставщика = СокрЛП(КодПоставщика);
		Параметры.Отбор.Вставить("КодПоставщика", КодПоставщика);
	КонецЕсли;
	
КонецПроцедуры

// { RGS AFokin 13.09.2018 23:59:59 - S-I-0005710
&НаСервере
Процедура НастроитьСписокСОтбором(МассивНомеров)
	
	СтрокиИнвойса = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("МассивНомеров", МассивНомеров);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СтрокиИнвойса.СтрокаЗаявкиНаЗакупку.Код, Неопределено) КАК Код
	|ИЗ
	|	Справочник.СтрокиИнвойса КАК СтрокиИнвойса
	|ГДЕ
	|	СтрокиИнвойса.Инвойс.Номер В (&МассивНомеров)";	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПодходящиеInvoices = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Код");
		
		СписокПодходящихInvoices = Новый СписокЗначений;
		СписокПодходящихInvoices.ЗагрузитьЗначения(ПодходящиеInvoices);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор,"Код",ВидСравненияКомпоновкиДанных.ВСписке,СписокПодходящихInvoices,,Истина);
	КонецЕсли;
	
КонецПроцедуры
// } RGS AFokin 13.09.2018 23:59:59 - S-I-0005710

