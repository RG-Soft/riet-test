
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CustomsСервер.ЗаполнитьModification(ТекущийОбъект);
	// { RGS AArsentev 23.07.2017 S-I-0005680
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыЗаписи.Вставить("GL", Объект.Ссылка.GL_From_Segment );	
	// } RGS AArsentev 23.07.2017 S-I-0005680
	// { RGS DKazanskiy 11.12.2018 13:58:11 - S-I-0006451
		ПараметрыЗаписи.Вставить("RS", Объект.Ссылка.Restock );	
	// } RGS DKazanskiy 11.12.2018 13:58:11 - S-I-0006451
	
	КонецЕсли;
КонецПроцедуры

//-> RG-Soft VIvanov 2015/02/18
&НаКлиенте
Процедура КостЦентрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Дата", ПолучитьДатуЗаявки(Объект.Владелец));
	СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.КостЦентр);
	ФормаВыбора = ПолучитьФорму("Справочник.КостЦентры.Форма.ФормаВыбораИзРегистра", СтруктураПараметров, Элемент);
	ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КостЦентрАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПолученияДанных.Вставить("Дата", ПолучитьДатуЗаявки(Объект.Владелец));
		//ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.КостЦентры"), Параметры);
		ДанныеВыбора = РГСофт.ПолучитьДанныеВыбораКостЦентров(ПараметрыПолученияДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КостЦентрОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыПолученияДанных.Вставить("Дата", ПолучитьДатуЗаявки(Объект.Владелец));
		//ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.КостЦентры"), Параметры);
		ДанныеВыбора = РГСофт.ПолучитьДанныеВыбораКостЦентров(ПараметрыПолученияДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДатуЗаявки(Владелец)
	
	Возврат Владелец.ДатаЗаявкиНаЗакупку;	
	
КонецФункции
//<- RG-Soft VIvanov

// { RGS AArsentev 23.07.2017 S-I-0005680
&НаКлиенте
Процедура GL_From_SegmentПриИзменении(Элемент)
	Если Объект.GL_From_Segment Тогда
		Объект.GL_Date = ТекущаяДата();
	Иначе
		Объект.GL_Date = Неопределено;
	КонецЕсли;
КонецПроцедуры // } RGS AArsentev 23.07.2017 S-I-0005680

// { RGS AArsentev 23.07.2017 S-I-0005680
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если (ПараметрыЗаписи.Свойство("RS") И (Объект.Restock <> ПараметрыЗаписи.RS)) Тогда
		
		// оповещаем доки в любом случае
		Оповестить("ИзменилсяRS_PoLine", ПолучитьМассивDOC(Объект.Ссылка));
			//ОкнаКлиентскогоПриложения = ПолучитьОкна();
			//Для каждого ОкноКлиентскогоПриложения Из ОкнаКлиентскогоПриложения Цикл
			//	Если ОкноКлиентскогоПриложения.Основное Тогда
			//		ОкноКлиентскогоПриложения.Активизировать();
			//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("PO Lines were successfully updated");
			//		Прервать;
			//	КонецЕсли;
			//КонецЦикла;
		
	КонецЕсли;
	
	Если (ПараметрыЗаписи.Свойство("GL") И Объект.GL_From_Segment <> ПараметрыЗаписи.GL)Тогда
		
		// оповещаем доки в любом случае
		Оповестить("ИзменилсяGL_PoLine");
		
		ТекстСообщения = ПроставитьGL_в_DOCs();
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			ОкнаКлиентскогоПриложения = ПолучитьОкна();
			Для каждого ОкноКлиентскогоПриложения Из ОкнаКлиентскогоПриложения Цикл
				Если ОкноКлиентскогоПриложения.Основное Тогда
					ОкноКлиентскогоПриложения.Активизировать();
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// } RGS AArsentev 23.07.2017 S-I-0005680



// { RGS AArsentev 23.07.2017 S-I-0005680
&НаСервере
Функция ПроставитьGL_в_DOCs()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка КАК DOC_ссылка,
	|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка.GL_FromSegment КАК DOC_GL
	|ИЗ
	|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтрокиИнвойса КАК СтрокиИнвойса
	|		ПО КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс = СтрокиИнвойса.Инвойс
	|ГДЕ
	|	СтрокиИнвойса.СтрокаЗаявкиНаЗакупку.Ссылка = &Ссылка
	|	И СтрокиИнвойса.Классификатор = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказа.E)
	// { RGS ASeryakov, 30.10.2018 14:00:00 S-I-0006237
	//|	И КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка.Дата >= &ДатаНачалаДействия
	// } RGS ASeryakov 30.10.2018 14:00:00 S-I-0006237
	|
	|СГРУППИРОВАТЬ ПО
	|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка,
	|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка.GL_FromSegment";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	// { RGS ASeryakov, 30.10.2018 14:00:00 S-I-0006237
	//Запрос.УстановитьПараметр("ДатаНачалаДействия", Дата("25.07.2018 00:00:00"));
	// } RGS ASeryakov 30.10.2018 14:00:00 S-I-0006237
	Результат = Запрос.Выполнить().Выбрать();
	ТекстСообщения = "";
	Пока Результат.Следующий() Цикл
		
		Если Результат.DOC_GL <> Объект.GL_From_Segment Тогда
			Если Объект.GL_From_Segment Тогда
				ВсеGL = ПроверитьGLПоСтрокам(Результат.DOC_ссылка);
				Если Не ВсеGL Тогда
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			Док = Результат.DOC_ссылка.ПолучитьОбъект();
			Док.GL_FromSegment = Объект.GL_From_Segment;
			
			Попытка
				Док.Записать();
				ТекстСообщения = ?(ЗначениеЗаполнено(ТекстСообщения), ТекстСообщения + "
				|Changed 'GL from segment' in " + Док,
				"Changed 'GL from segment' in " + Док);
			Исключение
				ТекстСообщения = ?(ЗначениеЗаполнено(ТекстСообщения), ТекстСообщения + "
				|Not changed 'GL from segment' in " + Док,
				"Not changed 'GL from segment' in " + Док);
			КонецПопытки
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
КонецФункции // } RGS AArsentev 23.07.2017 S-I-0005680

// { RGS AArsentev 23.07.2017 S-I-0005680
Функция ПроверитьGLПоСтрокам(DOC)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(СтрокиИнвойса.СтрокаЗаявкиНаЗакупку.GL_From_Segment, ЛОЖЬ) КАК GL,
	|	СтрокиИнвойса.СтрокаЗаявкиНаЗакупку КАК PoLine
	|ИЗ
	|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтрокиИнвойса КАК СтрокиИнвойса
	|		ПО КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс = СтрокиИнвойса.Инвойс
	|ГДЕ
	|	СтрокиИнвойса.Классификатор = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказа.E)
	|	И КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка = &DOC";
	Запрос.УстановитьПараметр("DOC", DOC);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.GL Тогда
				Возврат Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Возврат Истина;
	КонецЕсли;
	
КонецФункции// } RGS AArsentev 23.07.2017 S-I-0005680

// { RGS DKazanskiy 11.12.2018 13:58:11 - S-I-0006451

&НаСервереБезКонтекста
Функция ПолучитьМассивDOC(POLine)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Ссылка КАК DOC_ссылка
	|ИЗ
	|	Документ.КонсолидированныйПакетЗаявокНаПеревозку.Инвойсы КАК КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтрокиИнвойса КАК СтрокиИнвойса
	|		ПО КонсолидированныйПакетЗаявокНаПеревозкуИнвойсы.Инвойс = СтрокиИнвойса.Инвойс
	|			И (СтрокиИнвойса.СтрокаЗаявкиНаЗакупку.Ссылка = &Ссылка)";

	Запрос.УстановитьПараметр("Ссылка", POLine);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("DOC_ссылка");
	
КонецФункции

&НаКлиенте
Процедура RestockПриИзменении(Элемент)
		
	Если Объект.Restock Тогда
		Объект.Restock_Date = ТекущаяДата();
	Иначе
		Объект.Restock_Date = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма, Объект)
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаRestock.Видимость = (Объект.Классификатор = ПредопределенноеЗначение("Перечисление.ТипыЗаказа.E"));
	Элементы.ГруппаRestock.Доступность = НЕ Форма.ЭтоБрокер;
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторПриИзменении(Элемент)
	
	Если Объект.Классификатор <> ПредопределенноеЗначение("Перечисление.ТипыЗаказа.E") Тогда
		Объект.Restock = Неопределено;
		Объект.Restock_Date = Неопределено;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтоБрокер = CustomsСервер.ЭтоБрокер();
	УправлениеВидимостью(ЭтаФорма, Объект);
	
	Если Объект.Ссылка.Пустая() и ЗначениеЗаполнено(Объект.Владелец) Тогда
		Объект.Status = Справочники.СтрокиЗаявкиНаЗакупку.ПолучитьСтатусDOC(Объект.Владелец);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если (ПараметрыЗаписи.Свойство("RS") И (Объект.Restock <> ПараметрыЗаписи.RS)) Тогда
		// если есть ресток, то надо найти все DOC, в которых есть эта POline и статус отличается. И перезаписать, чтобы статус обновился. 
		Документы.КонсолидированныйПакетЗаявокНаПеревозку.ОбновитьСтатусПоPOLineRestock(Объект.Ссылка, Объект.Restock);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Владелец) И НЕ ЗначениеЗаполнено(Объект.Status) Тогда
		Объект.Status = Справочники.СтрокиЗаявкиНаЗакупку.ПолучитьСтатусDOC(Объект.Владелец);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
КонецПроцедуры
// } RGS DKazanskiy 11.12.2018 13:58:21 - S-I-0006451

