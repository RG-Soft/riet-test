
///////////////////////////////////////////////////////////////////////////////////////////////
// ПРИ КОПИРОВАНИИ

Процедура ПриКопировании(ОбъектКопирования)
	
	РГСофт.ОчиститьCreationModification(ЭтотОбъект);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизиты();	
	
	ПроверитьЗаполнениеРеквизитов(Отказ);
		
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ДозаполнитьРеквизиты()
	
	Код = СокрЛП(Код);
	Наименование = СокрЛП(Наименование);
	Address1 = СокрЛП(Address1);
	Address2 = СокрЛП(Address2);
	Address3 = СокрЛП(Address3);
	CityLocation = СокрЛП(CityLocation);
	Country = СокрЛП(Country);
	
	TMSID = СокрЛП(TMSID);
	InTMS = ЗначениеЗаполнено(TMSID);
		
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(EMailBoxes, "EMailBox");
	ОбщегоНазначения.ОчиститьТаблицуОтСтрокСПустымиРеквизитами(EMailBoxes, "EMailBox");
	МассивEMailBoxes = EMailBoxes.ВыгрузитьКолонку("EMailBox");
	НовыйEMailBoxesList = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивEMailBoxes, ", ");	
	РГСофтКлиентСервер.УстановитьЗначение(EMailBoxesList, НовыйEMailBoxesList);
	
	Если ЭтоНовый() Тогда
		РГСофт.ЗаполнитьCreation(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Код)) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Code' is empty!",
			ЭтотОбъект, "Код", , Отказ);	
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Name' is empty!",
			ЭтотОбъект, "Наименование", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Address1) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Address1' is empty!",
			ЭтотОбъект, "Address 1", , Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Country) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"'Country' is empty!",
			ЭтотОбъект, "Country", , Отказ);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(TMSID) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("TMSID", TMSID);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ConsignTo.Представление
			|ИЗ
			|	Справочник.ConsignTo КАК ConsignTo
			|ГДЕ
			|	ConsignTo.TMSID = &TMSID
			|	И НЕ ConsignTo.ПометкаУдаления
			|	И ConsignTo.Ссылка <> &Ссылка";
			
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"TMS ID '" + TMSID + "' is already used in Consign-to '" + СокрЛП(Выборка.Представление) + "'!",
				ЭтотОбъект, "TMSID", , Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
