
///////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА ЗАПОЛНЕНИЯ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипЗнчДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипЗнчДанныхЗаполнения = Тип("Структура") Тогда	
		ДанныеЗаполнения.Свойство("Country", Country);	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Country) Тогда	
		Country = ImportExportСервер.ПолучитьCountryПользователя(ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////
// ПЕРЕД ЗАПИСЬЮ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьРеквизитыБезДополнительныхДанных();
	
	ПоместитьДополнительныеДанныеВДополнительныеСвойстваПередЗаписью();
	
	ПроверитьЗаполнениеРеквизитов(Отказ, ДополнительныеСвойства.ВыборкаДублей);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////

Процедура ДозаполнитьРеквизитыБезДополнительныхДанных()
	
	РГСофтКлиентСервер.УстановитьЗначение(Код, СформироватьКод());
	РГСофтКлиентСервер.УстановитьЗначение(Value, СокрЛП(Value));
	РГСофтКлиентСервер.УстановитьЗначение(Reason, СокрЛП(Reason));
	
	Если ЭтоНовый() Тогда
		CreatedBy = ПараметрыСеанса.ТекущийПользователь;
		CreationDate = ТекущаяДата();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ModifiedBy) Тогда
		ModifiedBy = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ModificationDate) Тогда
		ModificationDate = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьКод()
		
	НовыйКод = "" + Field + " = ";
	
	Если Field = Перечисления.FieldsForRulesOfBlacklist.ОписаниеНоменклатуры Тогда
		НовыйКод = НовыйКод + "*";
	КонецЕсли; 
	
	НовыйКод = НовыйКод + Value;
	
	Если Field = Перечисления.FieldsForRulesOfBlacklist.ОписаниеНоменклатуры Тогда
		НовыйКод = НовыйКод + "*";
	КонецЕсли;
	
	Возврат НовыйКод;
	
КонецФункции 


///////////////////////////////////////////////////////////////////////////////////////

Процедура ПоместитьДополнительныеДанныеВДополнительныеСвойстваПередЗаписью()
	
	СтруктураТекстов = Новый Структура;
	СтруктураПараметров = Новый Структура;
	
	Если НЕ ПометкаУдаления Тогда
		
		Если ЗначениеЗаполнено(СокрЛП(Код)) И ЗначениеЗаполнено(Country) Тогда
			
			СтруктураПараметров.Вставить("Ссылка", Ссылка);
			СтруктураПараметров.Вставить("Код", Код);
			СтруктураПараметров.Вставить("Country", Country);
			СтруктураТекстов.Вставить("Дубли",
				"ВЫБРАТЬ
				|	RulesOfBlacklist.Ссылка,
				|	RulesOfBlacklist.Представление
				|ИЗ
				|	Справочник.RulesOfBlacklist КАК RulesOfBlacklist
				|ГДЕ
				|	RulesOfBlacklist.Ссылка <> &Ссылка
				|	И RulesOfBlacklist.Код = &Код
				|	И RulesOfBlacklist.Country = &Country");
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураРезультатов = РГСофт.ПолучитьСтруктуруРезультатовТекстовЗапросов(СтруктураТекстов, СтруктураПараметров);
	
	ДополнительныеСвойства.Вставить("ВыборкаДублей", Неопределено);
	Если СтруктураРезультатов.Свойство("Дубли") Тогда
		ДополнительныеСвойства.ВыборкаДублей = СтруктураРезультатов.Дубли.Выбрать();
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеРеквизитов(Отказ, ВыборкаДублей)
	
	Если ПометкаУдаления ИЛИ ЭтоГруппа Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Country) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Country"" is empty!",
			ЭтотОбъект, "Country", , Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) И ЗначениеЗаполнено(Country) Тогда
		
		Пока ВыборкаДублей.Следующий() Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"There is already Rule """ + СокрЛП(ВыборкаДублей.Представление) + """ for Country """ + Country + """!",
				ВыборкаДублей.Ссылка, , , Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Field) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Field"" is empty!",
			ЭтотОбъект, "Field", , Отказ);	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Value) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Value"" is empty!",
			ЭтотОбъект, "Value", , Отказ);	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Type) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Type"" is empty!",
			ЭтотОбъект, "Type", , Отказ);	
	КонецЕсли;

	Если ЗначениеЗаполнено(Type)
		И Type <> Перечисления.TypesOfRulesOfBlacklist.Allowed
		И НЕ ЗначениеЗаполнено(Reason) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"""Reason"" is empty!",
			ЭтотОбъект, "Reason", , Отказ);	
	КонецЕсли;
	
КонецПроцедуры

