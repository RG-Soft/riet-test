
&НаСервереБезКонтекста
Функция ОтработатьРезультатНаСервере(СтруктураРезультата)
	
	Возврат (Справочники.СканированныеДокументыДляПередачиВЭлектронномВиде.ЗагрузитьИзВнешнегоИсточникаПоСтруктуреРезультатаВыбора(СтруктураРезультата) <> Неопределено);

КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ЗагрузитьИзВнешнегоИсточника(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзКаталога(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзКаталогаЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзКаталогаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзКаталогаПоддерживаетсяРасширениеЗавершение", ЭтотОбъект);
	КонтекстЭДОКлиент.ПоддерживаетсяИспользованиеРасширенияРаботыСФайлами(ОписаниеОповещения, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзКаталогаПоддерживаетсяРасширениеЗавершение(Результат, ДополнительныеПараметры) Экспорт	
	
	ПоддерживаетсяИспользованиеРасширенияРаботыСФайлами = Результат;
	
	Если НЕ ПоддерживаетсяИспользованиеРасширенияРаботыСФайлами Тогда
		//расширение работы с файлами не установлено
		Сообщить("Для загрузки из каталога требуется подключить расширение работы с файлами.", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;	
	
	ЗагрузитьИзВнешнегоИсточника(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзВнешнегоИсточника(РежимВыбораИзКаталога)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИдентификаторФормыВладельца", УникальныйИдентификатор);
	ПараметрыФормы.Вставить("РежимВыбораИзКаталога", РежимВыбораИзКаталога);
	
	//Описание оповещения
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзВнешнегоИсточникаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.СканированныеДокументыДляПередачиВЭлектронномВиде.Форма.ФормаЗагрузкаДокументовИзФайлаОбмена", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзВнешнегоИсточникаЗавершение(СтуктураРезультат, ДополнительныеПараметры) Экспорт
	
	Если СтуктураРезультат <> Неопределено Тогда
		Если ОтработатьРезультатНаСервере(СтуктураРезультат) Тогда
			ПоказатьПредупреждение(, ВернутьСтр("ru = 'Выбранные документы успешно загружены.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		
        Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрСервер");
        Модуль.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
		
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		
        Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
        Модуль.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
		
    КонецЕсли;
 
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
 
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ТехнологияСервиса.ИнформационныйЦентр") Тогда
		
        Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
        Модуль.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
		
    КонецЕсли;
 
КонецПроцедуры


