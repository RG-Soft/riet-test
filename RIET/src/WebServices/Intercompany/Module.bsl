
#Область ОбработчикиВебСервиса

Функция PostDocument(СтруктураПараметровXDTO)
	
	Ответ = Новый Структура("Отказ, ТекстОшибки", Ложь, "");
	
	НачатьТранзакцию();
	
	МассивДокументов = СериализаторXDTO.ПрочитатьXDTO(СтруктураПараметровXDTO);
	Для каждого ТекДокСтруктура Из МассивДокументов Цикл
		
		Документ = КонтрольПроведенияСервер.НайтиДокумент(ТекДокСтруктура);
		СтатусУтверждения = НастройкаПравДоступа.ПолучитьСтатусУтверждения(Документ.Ссылка);
		Если СтатусУтверждения = Перечисления.СтатусыУтвержденияОбъектов.Утверждена Тогда
			Продолжить;
		КонецЕсли;
		Если Документ = Неопределено Тогда
			Ответ.Отказ = Истина;
			Ответ.ТекстОшибки = "Не найден документ";
			ОтменитьТранзакцию();
			Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
		КонецЕсли;
	
		Попытка
			ДокументОбъект = Документ.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("КонтрольПроведенияРазрешеноПроведение");
			//{RGS AFokin 04.05.2017 23:59:59 - если проведение инициированно пользователем
			// с полными правами, проводим без проверки прав и дат запрета редактирования.
			////ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеИзМодуляКонтроля");
			//ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Если ТекДокСтруктура.ПользовательСПолнымиПравами Тогда
				//УстановитьПривилегированныйРежим(Истина);
				//ДокументОбъект.ОбменДанными.Загрузка = Истина;				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Иначе	
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			КонецЕсли;	
			//}RGS AFokin 04.05.2017 23:59:59 
		Исключение
			Ответ.Отказ = Истина;
			//Ответ.ТекстОшибки = ОписаниеОшибки();
			Ответ.ТекстОшибки = "Ошибка при попытке проведении документа в базе SLI!!!" + Символы.ПС + "Для детализации информации нажмите кнопку ""ICO: Проверка проведения"".";
			ОтменитьТранзакцию();
			Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
		КонецПопытки;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
	
КонецФункции

Функция UndoPosting(СтруктураПараметровXDTO)
	
	Ответ = Новый Структура("Отказ, ТекстОшибки", Ложь, "");
	
	НачатьТранзакцию();
	
	МассивДокументов = СериализаторXDTO.ПрочитатьXDTO(СтруктураПараметровXDTO);
	
	Для каждого ТекДокСтруктура Из МассивДокументов Цикл
		Документ = КонтрольПроведенияСервер.НайтиДокумент(ТекДокСтруктура);
		Если Документ = Неопределено Тогда
			Ответ.Отказ = Истина;
			Ответ.ТекстОшибки = "Не найден документ";
			ОтменитьТранзакцию();
			Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
		КонецЕсли;
	
		Попытка
			ДокументОбъект = Документ.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("КонтрольПроведенияРазрешеноПроведение");
			//{RGS AFokin 04.05.2017 23:59:59
			// если отмена проведения инициированно пользователем
			// с полными правами, отменяем проведение без проверки прав и дат запрета редактирования.
			////ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеИзМодуляКонтроля");
			//ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Если ТекДокСтруктура.ПользовательСПолнымиПравами Тогда
				//УстановитьПривилегированныйРежим(Истина);
				//ДокументОбъект.ОбменДанными.Загрузка = Истина;				
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе	
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;	
			//}RGS AFokin 04.05.2017 23:59:59 
		Исключение
			Ответ.Отказ = Истина;
			Ответ.ТекстОшибки = "Ошибка при попытке отмены проведения документа в базе SLI!!!";
			ОтменитьТранзакцию();
			Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
		КонецПопытки;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
	
КонецФункции

Функция GetDocumentData(СтруктураПараметровXDTO)
	
	Ответ = Новый Структура;
	
	Ответ.Вставить("Успех", Истина);
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
	
КонецФункции

Функция GetDetailsDocument(Document)
	// Вставить содержимое обработчика.
КонецФункции

Функция CancelDocument(Document)
	// Вставить содержимое обработчика.
КонецФункции

Функция ErrorMessage(СтруктураПараметровXDTO)
	
	Ответ = Новый Структура("Отказ, ТекстОшибки", Ложь, "");
	МассивДокументов = СериализаторXDTO.ПрочитатьXDTO(СтруктураПараметровXDTO);
	
	Для каждого ТекДокСтруктура Из МассивДокументов Цикл
		Документ = КонтрольПроведенияСервер.НайтиДокумент(ТекДокСтруктура);
		Если Документ = Неопределено Тогда
			Ответ.Отказ = Истина;
			Ответ.ТекстОшибки = "Документ не найден. Запись в историю статусов документов Ico НЕ УДАЛАСЬ!!!";
			Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
		КонецЕсли;
		СтатусСостоянияДокументаIco = КонтрольПроведенияСервер.СтатусСостоянияДокументаIco(ТекДокСтруктура.СтатусСостоянияДокументаIco);
		КонтрольПроведенияСервер.СформироватьЗаписьrgsИсторияСтатусовДокументовIco(
			Документ, СтатусСостоянияДокументаIco, ТекДокСтруктура.Пользователь, ТекДокСтруктура.СообщениеОбОшибке, ТекДокСтруктура.Ошибка);
	КонецЦикла;	
	Возврат СериализаторXDTO.ЗаписатьXDTO(Ответ);
	
КонецФункции
	
#КонецОбласти
