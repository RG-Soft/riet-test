
Процедура ОтразитьНеПринимаемыеРасходы(Проводка, СчетУчетаНепринимаемыхРасходов)
	
	Проводка.КоличествоДт = 0;
	Проводка.СчетДт     =  СчетУчетаНепринимаемыхРасходов;
	Проводка.СубконтоДт.Очистить();	
	Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
	
КонецПроцедуры

Процедура ОтразитьНеПринимаемыеДоходы(Проводка)
	
	Проводка.КоличествоКт = 0;
	Проводка.СчетКт     =  Неопределено;//ПланыСчетов.Налоговый.ДоходыНеУчитываемые;
	Проводка.СубконтоКт.Очистить();	
	Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;
	
КонецПроцедуры

Функция ПолучитьПрименениеПБУ18 (Организация, Период, КэшУчПолитики)
	
		Если КэшУчПолитики.Количество() = 0 Тогда
			ПоддержкаПБУ18 = ОбщегоНазначения.ПрименениеПБУ18(Организация, Период);
			КэшУчПолитики.Вставить(Период, ПоддержкаПБУ18);
		Иначе ПоддержкаПБУ18 = КэшУчПолитики.Получить(Период);
			Если ПоддержкаПБУ18 = Неопределено Тогда
				ПоддержкаПБУ18 = ОбщегоНазначения.ПрименениеПБУ18(Организация, Период);
				КэшУчПолитики.Вставить(Период, ПоддержкаПБУ18);
			КонецЕсли;
		КонецЕсли;
	Возврат ПоддержкаПБУ18;	
	
КонецФункции

// Обработчик события "ПередЗаписью".
// Проверяет возможность изменения записей регистра.
// Замещает пустные значения субконто составного типа значением Неопределено.
// Проверяет и устанавливает вид учета.
// Отрабатывает ПБУ 18/02.
//
Процедура ПередЗаписью(Отказ)
		
	Записи = Неопределено;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	КэшУчПолитики = Новый Соответствие;
	
	Для Каждого Проводка Из ЭтотОбъект Цикл
		
		// Приведение пустых значений субконто составного типа.
		Для Каждого Субконто Из Проводка.СубконтоДт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
			   И ОбщегоНазначения.ЗначениеНеЗаполнено(Субконто.Значение) 
			   И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоДт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			Если Субконто.Ключ.ТипЗначения.Типы().Количество() > 1
			   И ОбщегоНазначения.ЗначениеНеЗаполнено(Субконто.Значение) 
			   И НЕ (Субконто.Значение = Неопределено) Тогда
				Проводка.СубконтоКт.Вставить(Субконто.Ключ, Неопределено);
			КонецЕсли;
		КонецЦикла;
		
		ПоддержкаПБУ18 = ПолучитьПрименениеПБУ18(Проводка.Организация, Проводка.Период, КэшУчПолитики);
		
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.ВидУчетаДт) ИЛИ ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.ВидУчетаКт)  Тогда
			
			ВидУчетаДт = Проводка.ВидУчетаДт;
			ВидУчетаКт = Проводка.ВидУчетаКт;
			
			НалоговыйУчет.ВидУчетаПоПБУ18(Проводка, , ПоддержкаПБУ18);
			
			Если (НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВидУчетаДт)) И
				(НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.СчетДт)) Тогда
				Проводка.ВидУчетаДт = ВидУчетаДт;
			КонецЕсли;		
			
			Если (НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВидУчетаКт)) И
				(НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.СчетКт))  Тогда
				Проводка.ВидУчетаКт = ВидУчетаКт;
			КонецЕсли;
		КонецЕсли;
		
		Если Не Проводка.СчетКт = ПланыСчетов.Налоговый.ПустаяСсылка() И Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ПрочиеДоходы) Тогда
			ОтразитьНеПринимаемыеДоходы = НалоговыйУчет.ОпределитьНеПринимаемыеДоходыРасходы(Проводка);
		Иначе
			ОтразитьНеПринимаемыеДоходы = Ложь;
		КонецЕсли;	
		
		Если  ТипЗнч(ЭтотОбъект.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ОперацияБух") Или
			  Проводка.ВидУчетаКт <> Перечисления.ВидыУчетаПоПБУ18.НУ Или
			  Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Или
			  (ТипЗнч(ЭтотОбъект.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ЗакрытиеМесяца")
			     И (ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.СубконтоКт.РасходыБудущихПериодов)
				   И ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.СубконтоКт.ОсновныеСредства) 
		           И ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.СубконтоКт.НематериальныеАктивы))) Тогда
				   
				   ОтразитьНеПринимаемыеРасходы = Ложь;
			
		Иначе 
			ОтразитьНеПринимаемыеРасходы = НалоговыйУчет.ОпределитьНеПринимаемыеДоходыРасходы(Проводка);
			
		КонецЕсли;
		
		Если ОтразитьНеПринимаемыеРасходы Тогда 
			Если  ПоддержкаПБУ18 Тогда
				ПроводкаПоНеПринимаемымРасходам = ЭтотОбъект.Добавить();
				ПроводкаПоНеПринимаемымРасходам.Организация = Проводка.Организация;
				ПроводкаПоНеПринимаемымРасходам.Период      = Проводка.Период;
				ПроводкаПоНеПринимаемымРасходам.Содержание  = Проводка.Содержание;
				ПроводкаПоНеПринимаемымРасходам.Сумма       = Проводка.Сумма;
			Иначе
				ПроводкаПоНеПринимаемымРасходам = Проводка;
			КонецЕсли;
			
				Если Проводка.СчетДт = ПланыСчетов.Налоговый.ВнереализационныеРасходы Или Проводка.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.ВнереализационныеРасходы) Тогда
					СчетУчетаНепринимаемыхРасходов     =   Неопределено;//ПланыСчетов.Налоговый.ВнереализационныеРасходыНеУчитываемые;
				ИначеЕсли Проводка.СчетДт = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда Или Проводка.СчетКт = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда Тогда				
					СчетУчетаНепринимаемыхРасходов     =  ПланыСчетов.Налоговый.ВыплатыВпользуФизЛицПоП_1_48;
				Иначе
					СчетУчетаНепринимаемыхРасходов     =  ПланыСчетов.Налоговый.ДругиеВыплатыПоП_1_48;
				КонецЕсли;
				
			ОтразитьНеПринимаемыеРасходы(ПроводкаПоНеПринимаемымРасходам, СчетУчетаНепринимаемыхРасходов);
		КонецЕсли;
		
		Если ОтразитьНеПринимаемыеДоходы Тогда 
			Если  ПоддержкаПБУ18 Тогда
				ПроводкаПоНеПринимаемымРасходам = ЭтотОбъект.Добавить();
				ПроводкаПоНеПринимаемымРасходам.Организация = Проводка.Организация;
				ПроводкаПоНеПринимаемымРасходам.Период      = Проводка.Период;
				ПроводкаПоНеПринимаемымРасходам.Содержание  = Проводка.Содержание;
				ПроводкаПоНеПринимаемымРасходам.Сумма       = Проводка.Сумма;
			Иначе
				ПроводкаПоНеПринимаемымРасходам = Проводка;
			КонецЕсли;
			
			ОтразитьНеПринимаемыеДоходы(ПроводкаПоНеПринимаемымРасходам);
		КонецЕсли;

		Если  Не ПоддержкаПБУ18 И ((Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР Или 
			                        Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР Или 
									Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР Или 
									Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР)) Тогда
			Сообщить("Для организации " + Проводка.Организация + " не применяется ПБУ 18/02, проведение по виду учета ""ПР"" и ""ВР"" некорректно");
		КонецЕсли;
	
		//заполнение реквизита ПодразделениеОрганизации по умолчанию
		//добавил Трефиленков Дмитрий, РГ-Софт
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.ПодразделениеОрганизацииДт) Тогда
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", Отбор.Регистратор.Значение.Метаданные()) Тогда
				Проводка.ПодразделениеОрганизацииДт = Отбор.Регистратор.Значение.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(Проводка.ПодразделениеОрганизацииКт) Тогда
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", Отбор.Регистратор.Значение.Метаданные()) Тогда
				Проводка.ПодразделениеОрганизацииКт = Отбор.Регистратор.Значение.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
		
		//Если (ЗначениеЗаполнено(Проводка.СчетДт) И Проводка.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("01"))) и (Не ЗначениеЗаполнено(Проводка.СчетКт) или Не Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("01"))) Тогда
		//	Если Записи = Неопределено Тогда
		//		Записи = Отбор.Регистратор.Значение.ПолучитьОбъект().Движения.СтоимостьОСНалоговыйУчет;
		//	КонецЕсли;
		//	Запись = Записи.ДобавитьПриход();
		//	Запись.ОсновноеСредство = Проводка.СубконтоДт.ОсновныеСредства;
		//	Запись.Подразделение = Проводка.ПодразделениеОрганизацииДт;
		//	Запись.Период = Проводка.Период;
		//	Запись.Сумма = Проводка.Сумма;
		//КонецЕсли;
		//Если (ЗначениеЗаполнено(Проводка.СчетКт) И Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("01"))) и (Не ЗначениеЗаполнено(Проводка.СчетДт) или Не Проводка.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("01"))) Тогда
		//	Если Записи = Неопределено Тогда
		//		Записи = Отбор.Регистратор.Значение.ПолучитьОбъект().Движения.СтоимостьОСНалоговыйУчет;
		//	КонецЕсли;
		//	Запись = Записи.ДобавитьРасход();
		//	Запись.ОсновноеСредство = Проводка.СубконтоКт.ОсновныеСредства;
		//	Запись.Подразделение = Проводка.ПодразделениеОрганизацииКт;
		//	Запись.Период = Проводка.Период;
		//	Запись.Сумма = Проводка.Сумма;
		//КонецЕсли;
		//Если ЗначениеЗаполнено(Проводка.СчетДт) И Проводка.СчетДт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("КВ")) Тогда
		//	Если Записи = Неопределено Тогда
		//		Записи = Отбор.Регистратор.Значение.ПолучитьОбъект().Движения.СтоимостьОСНалоговыйУчет;
		//	КонецЕсли;
		//	Запись = Записи.ДобавитьПриход();
		//	Запись.ОсновноеСредство = Проводка.СубконтоДт.ОсновныеСредства;
		//	Запись.Подразделение = Проводка.ПодразделениеОрганизацииДт;
		//	Запись.Период = Проводка.Период;
		//	Запись.СуммаКВ = Проводка.Сумма;
		//КонецЕсли;
		//Если ЗначениеЗаполнено(Проводка.СчетКт) И Проводка.СчетКт.ПринадлежитЭлементу(ПланыСчетов.Налоговый.НайтиПоКоду("КВ")) Тогда
		//	Если Записи = Неопределено Тогда
		//		Записи = Отбор.Регистратор.Значение.ПолучитьОбъект().Движения.СтоимостьОСНалоговыйУчет;
		//	КонецЕсли;
		//	Запись = Записи.ДобавитьРасход();
		//	Запись.ОсновноеСредство = Проводка.СубконтоКт.ОсновныеСредства;
		//	Запись.Подразделение = Проводка.ПодразделениеОрганизацииКт;
		//	Запись.Период = Проводка.Период;
		//	Запись.СуммаКВ = Проводка.Сумма;
		//КонецЕсли;
		
	КонецЦикла;
	
	Если Записи <> Неопределено Тогда
		Записи.Записать();
	КонецЕсли;
	
КонецПроцедуры
