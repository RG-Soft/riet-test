 
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Files xls (*.xls)|*.xls|Files xlsx (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Need to select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	            	
	ЗаполнитьТаблицуLocationsИзФайлаXLS(Отказ, FullPath);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Состояние("Creating / updating TMS locations...");
	СоздатьИЗаполнитьWarehouses(Отказ);
	
	Если Отказ Тогда
		Предупреждение("Some locations were not loaded due to errors.
			|See them on the right pane.", 60);
	Иначе
		Предупреждение("Locations were successfully loaded.", 60);	
	КонецЕсли;
	
КонецПроцедуры
                      
&НаКлиенте
Процедура ЗаполнитьТаблицуLocationsИзФайлаXLS(Отказ, ПолноеИмяXLSФайла)
	
	Excel = Неопределено;
	Workbooks = Неопределено;
	Worksheet = Неопределено;
	
	Состояние("Opening Excel...");
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить("Failed to open Excel!
			|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
		Отказ = Истина;
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		
		Состояние("Opening file with Excel...");
		Workbooks = Excel.Workbooks;
		Попытка
			Workbook = Workbooks.Open(ПолноеИмяXLSФайла, , Истина);
		Исключение
			Excel.Quit();
			Сообщить("Failed to open file with Excel!
				|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Состояние("Opening Excel sheet...");
		Попытка
			WorkSheet = Workbook.Worksheets(1);
		Исключение
			Сообщить("Failed to open First sheet!
				|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
		
	Попытка
		ЗаполнитьТаблицуLocationsИзWorksheet(Worksheet);
	Исключение
		Сообщить("Failed to read file:
			|" + ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
	
	Состояние("Closing file...");
	Если Workbook <> Неопределено Тогда
		
		Попытка
			Workbook.Close(False);
		Исключение
			Сообщить("Failed to close Excel Workbook!
				|" + ОписаниеОшибки());
		КонецПопытки;
			
	КонецЕсли;
	
	Если Workbooks <> Неопределено Тогда
		
		Попытка
			Workbooks.Close();
		Исключение
			Сообщить("Failed to close Excel Workbooks!
				|" + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Если Excel <> Неопределено Тогда
		
		Состояние("Closing Excel...");
		Попытка
			Excel.Quit();
		Исключение
			Сообщить("Failed to close Excel!
				|" + ОписаниеОшибки());
		КонецПопытки;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуLocationsИзWorksheet(Worksheet) 
	
	ТаблицаLocations.Очистить();
		
	Состояние("Reading file...");	
	
	// перебираем все заполненные строки файла 
	НомерСтроки = 2;
	Пока Истина Цикл
		
		ЗначениеЯчейки = СокрЛП(WorkSheet.Cells(НомерСтроки, 1).Text);
		
		//проверяем, если ячейка пустая - считаем, что последняя строка
		Если Не ЗначениеЗаполнено(ЗначениеЯчейки) Тогда 
			Прервать;
		КонецЕсли;
		
		//добавляем строку Таблицы и пытаемся заполнить	
		НоваяСтрокаТаблицы = ТаблицаLocations.Добавить();
		
		НоваяСтрокаТаблицы.TMSID = ЗначениеЯчейки;
		Если Лев(НоваяСтрокаТаблицы.TMSID, 4) = "SLB." Тогда
			НоваяСтрокаТаблицы.TMSID = Сред(НоваяСтрокаТаблицы.TMSID, 5);
		КонецЕсли;
		
		НоваяСтрокаТаблицы.НомерСтрокиФайла = НомерСтроки;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;  
			
КонецПроцедуры
  
&НаСервере
Процедура СоздатьИЗаполнитьWarehouses(Отказ) 

	ТаблицаWarehousesБазы = ПолучитьТаблицуWarehousesБазы();
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Для Каждого Стр из ТаблицаLocations Цикл 
		
		СправочникОбъект = Неопределено;
		
		СтрокаWarehouseБазы = ТаблицаWarehousesБазы.Найти(Стр.TMSID, "Код");
		
		//Если не нашли - добавляем
		Если СтрокаWarehouseБазы = Неопределено Тогда           
			
			СправочникОбъект = Справочники.Warehouses.СоздатьЭлемент();
			СправочникОбъект.Код = Стр.TMSID;     
			
		//Если нашли и не стоит признак InTMS - обновляем
		Иначе  
			
			Если НЕ СтрокаWarehouseБазы.InTMS Тогда
				СправочникОбъект = СтрокаWarehouseБазы.Ссылка.ПолучитьОбъект();
			КонецЕсли;
                 						
		КонецЕсли; 	
              				
		Если СправочникОбъект <> Неопределено Тогда
									
			СправочникОбъект.InTMS = Истина;
			СправочникОбъект.ОбменДанными.Загрузка = Истина;
			СправочникОбъект.CreatedBy = ТекущийПользователь;
			СправочникОбъект.CreationDate = ТекущаяДата();
			
			Попытка	
				СправочникОбъект.Записать();							
			Исключение
				Сообщить("Failed to save Location in file's line №"+ Стр.НомерСтрокиФайла +"! See errors above.
					|" + ОписаниеОшибки());
				Отказ = Истина;
		 	КонецПопытки;
			    							
		КонецЕсли;
			
	КонецЦикла;
	
	Справочники.Warehouses.ОбновитьTMSLocations();

КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуWarehousesБазы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Warehouses.Ссылка,
		|	ВЫРАЗИТЬ(Warehouses.Код КАК СТРОКА(50)) КАК Код,
		|	Warehouses.InTMS
		|ИЗ
		|	Справочник.Warehouses КАК Warehouses
		|ГДЕ
		|	НЕ Warehouses.ПометкаУдаления";
		
	ТаблицаWarehouses = Запрос.Выполнить().Выгрузить();
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(ТаблицаWarehouses, "Код");
	ТаблицаWarehouses.Индексы.Добавить("Код");
	
	Возврат ТаблицаWarehouses;
		
КонецФункции
