
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Files xls (*.xls)|*.xls|Files xlsx (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

#Если не ВебКлиент Тогда
&НаКлиенте
Процедура Load(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	 
	Состояние("Loading file...");
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	БылиОшибки = Ложь;
	
	МассивLocalParcels = ПолучитьМассивLocalParcelsИзФайла(БылиОшибки, FullPath);
	
	Если Не БылиОшибки Тогда
		СоздатьTrip(БылиОшибки, МассивLocalParcels);
	КонецЕсли;
	
	Если БылиОшибки Тогда 
		Предупреждение("There were errors during Pre-alert loading.
			|See them on the right pane.", 60);	
	Иначе 	
		Предупреждение("Success.");
 	КонецЕсли;
    			
КонецПроцедуры

       
&НаКлиенте
Функция ПолучитьМассивLocalParcelsИзФайла(БылиОшибки, FullPath)
	
	Файл = Новый Файл(FullPath);
	ПолноеИмяФайла = Неопределено;
	РасширениеФайла = НРег(Файл.Расширение);
	
	Если РасширениеФайла = ".xls" или РасширениеФайла = ".xlsx" Тогда
		ПолноеИмяФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
		КопироватьФайл(FullPath, ПолноеИмяФайла);
	КонецЕсли;
	       			
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			Сообщить(ОписаниеОшибки());
			БылиОшибки = Истина;
		КонецПопытки;
	КонецПопытки;
		
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	ЛистЭксель = rs.Fields("TABLE_NAME").Value;
	
	sqlString = "select * from [" + ЛистЭксель + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
	   	 	
	СвойстваСтруктуры = "ParcelNo,ImportLocal";
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	
	МассивParcelNos = Новый Массив;
	
	НомерСтроки = 0;
	Пока rs.EOF = 0 Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		Если НомерСтроки = 3 Тогда 
			
			СтруктураИменИНомеровКолонок = ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, БылиОшибки);
			
			Если БылиОшибки Тогда 
				Прервать;
			КонецЕсли;
			
			rs.MoveNext();
			Продолжить;
			
		ИначеЕсли НомерСтроки > 3 Тогда
			
			//добавляем значение каждой ячейки файла в структуру значений
			Для Каждого ЭлементСтруктуры из СтруктураИменИНомеровКолонок Цикл 
				
				ЗначениеЯчейки = rs.Fields(ЭлементСтруктуры.Значение-1).Value;
				СтруктураЗначенийСтроки[ЭлементСтруктуры.Ключ] = ЗначениеЯчейки;
				
			КонецЦикла;
			
			СтруктураЗначенийСтроки.ParcelNo = СокрЛП(СтруктураЗначенийСтроки.ParcelNo);
			СтруктураЗначенийСтроки.ImportLocal = СокрЛП(СтруктураЗначенийСтроки.ImportLocal);
			
			Если Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.ParcelNo) Тогда 
				Прервать;
			КонецЕсли;
			
			//Если Не ЗначениеЗаполнено(ДатаTrip) И ЗначениеЗаполнено(СтруктураЗначенийСтроки.Дата) Тогда 
			//	ДатаTrip = СтруктураЗначенийСтроки.Дата;
			//КонецЕсли;
			
			//можно идентифицировать импортные грузы по значению OIES в колонке «Клиент Документ Но. Приемки». Все остальное получается не импорт.
			Если СтруктураЗначенийСтроки.ImportLocal = "OIES" Тогда 
				rs.MoveNext();
				Продолжить;
			КонецЕсли;
			
			//В столбце СН Грузоместа (Mjr) все серийные номера грузомест начинающиеся с «W» являются «реальными», например - W14078793, W14078808. 
			//Все остальные являются «виртуальными».
			Если Лев(СтруктураЗначенийСтроки.ParcelNo, 1) <> "W" Тогда
				rs.MoveNext();
				Продолжить;
			КонецЕсли;
			
			//добавим ParcelNo
			Если МассивParcelNos.Найти(СтруктураЗначенийСтроки.ParcelNo) = Неопределено Тогда 
				МассивParcelNos.Добавить(СтруктураЗначенийСтроки.ParcelNo);
			КонецЕсли; 
			
		КонецЕсли;
		
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	//проверим, что есть локальные парсели
	Если МассивParcelNos.Количество() = 0 Тогда 
		Сообщить("Failed to find local parcels in current file!");
		БылиОшибки = Истина;
	КонецЕсли;
		
	//проверим, что все локальные парсели уже загружены
	МассивParcels = ПолучитьМассивParcels(БылиОшибки, МассивParcelNos);
	
	УдалитьФайлы(ПолноеИмяФайла);
	
	Возврат МассивParcels;
	
КонецФункции

#КонецЕсли

&НаСервереБезКонтекста
Функция ПолучитьМассивParcels(БылиОшибки, МассивParcelNos)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивParcelNos", МассивParcelNos);

	Запрос.Текст = "ВЫБРАТЬ
	               |	Parcels.Ссылка КАК Parcel,
	               |	ВЫРАЗИТЬ(Parcels.Код КАК СТРОКА(30)) КАК ParcelNo
	               |ИЗ
	               |	Справочник.Parcels КАК Parcels
	               |ГДЕ
	               |	ВЫРАЗИТЬ(Parcels.Код КАК СТРОКА(30)) В (&МассивParcelNos)
	               |	И Parcels.Проверен";
	
	ТЗParcels = Запрос.Выполнить().Выгрузить();
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(ТЗParcels, "ParcelNo");
	
	МассивParcels = Новый Массив;
	Для Каждого ParcelNo из МассивParcelNos Цикл 
				
		СтрокаParcel = ТЗParcels.Найти(ParcelNo, "ParcelNo");
		
		Если СтрокаParcel = Неопределено Тогда 
			Сообщить("Failed to find local parcel no. '" + ParcelNo + "'!");
			БылиОшибки = Истина;
			Продолжить;	
		КонецЕсли;
		
		Если МассивParcels.Найти(СтрокаParcel.Parcel) = Неопределено Тогда 
			МассивParcels.Добавить(СтрокаParcel.Parcel);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивParcels;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, БылиОшибки)
	
	СтруктураКолонокИИндексов = Новый Структура(СвойстваСтруктуры);
	
	НомерКолонки = 1;
	Для Каждого Field из rs.Fields Цикл 
		
		ТекстЯчейки = СокрЛП(Field.Value);
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли; 
		
		Если ТекстЯчейки = "СН Грузоместа (Mjr)" Тогда
			СтруктураКолонокИИндексов.ParcelNo = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Клиент Документ Но. Приемки" Тогда
			СтруктураКолонокИИндексов.ImportLocal = НомерКолонки;
		КонецЕсли;   
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Для Каждого КлючИЗначение Из СтруктураКолонокИИндексов Цикл
		
		Если КлючИЗначение.Значение = Неопределено Тогда
			Сообщить("Необходимо проверить наличие колонки с данными '" + КлючИЗначение.Ключ + "'!");
			БылиОшибки = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураКолонокИИндексов;
	
КонецФункции

&НаКлиенте
Процедура СоздатьTrip(БылиОшибки, МассивLocalParcels) 
	                  		     	
	//НовыйTrip = Документы.Trip.СоздатьДокумент();
	//
	//НовыйTrip.WarehouseFrom = Справочники.Warehouses.НайтиПоКоду("RUS_MJRM");
	//Если Не ЗначениеЗаполнено(НовыйTrip.WarehouseFrom) Тогда
	//	ТекстОшибок = ТекстОшибок + "Failed to find warehouse by code 'RUS_MJRM'!";
	//иначе
	//	НовыйTrip.ServiceProvider = Справочники.ServiceProviders.НайтиПоРеквизиту("DefaultWarehouse", НовыйTrip.WarehouseFrom);
	//	Если Не ЗначениеЗаполнено(НовыйTrip.ServiceProvider) Тогда
	//		ТекстОшибок = ТекстОшибок + "Failed to find Service provider by default warehouse '" + СокрЛП(НовыйTrip.WarehouseFrom) + "'!";
	//	КонецЕсли;
	//КонецЕсли;
	//
	//НовыйTrip.Equipment = Справочники.Equipments.НайтиПоНаименованию("Truck");
	//НовыйTrip.Draft = ДатаTrip;
	//НовыйTrip.ETD = ДатаTrip;
	//
	//НовыйTrip.Parcels.ЗагрузитьКолонку(МассивLocalParcels, "Parcel");

	//НовыйTrip.Записать();
		
	// откроем форму Trip
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", Новый Структура("МассивParcels", МассивLocalParcels));
	
	ОткрытьФорму("Документ.Trip.ФормаОбъекта", СтруктураПараметров, ЭтаФорма, Истина);
	    	
КонецПроцедуры


