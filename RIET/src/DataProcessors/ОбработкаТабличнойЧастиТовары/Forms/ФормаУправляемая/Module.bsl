
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

 &НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность И НЕ ПеренестиВДокумент И Объект.Товары.Количество() > 0 Тогда
		
		ОтветНаВопрос = Вопрос(ВернутьСтр("ru = 'Перенести изменения в документ?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ПеренестиВДокумент = Истина;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииФормыНаСервере();

	Если ПеренестиВДокумент Тогда
		
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("ИдентификаторВызывающейФормы", 					ВладелецФормы.УникальныйИдентификатор);
		ПараметрОповещения.Вставить("АдресОбработаннойТабличнойЧастиТоварыВХранилище", 	АдресХранилищаТовары);
		
		Оповестить("ОбработанаТабличнаяЧастьТовары", ПараметрОповещения, ВладелецФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииТекущегоДействия();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.АдресХранилищаТовары) Тогда
		ТекстСообщения = ВернутьСтр("ru='Непосредственное открытие обработки редактирования списка ""Товары"" не предусмотрено. 
				|Для открытия обработки можно воспользоваться командой ""Изменить"" в формах документов'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	//заполним реквизиты формы из переданных параметров
	СписокСвойств = "АдресХранилищаТовары, ЗаполнятьЦеныПоПокупке, ДокументСсылка, ДокументДата, ДокументОрганизация,
		|ДокументВалюта, ДокументКурс, ДокументКратность, ДокументСуммаВключаетНДС, ДокументТипЦен, ДокументСклад";
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаТовары);
	Объект.Товары.Загрузить(ТаблицаТоваров);
	
	//Установим пометку и заполним номер строки документа
	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		СтрокаТабличнойЧасти.Пометка 				= Истина;
		СтрокаТабличнойЧасти.НомерСтрокиДокумента 	= СтрокаТабличнойЧасти.НомерСтроки;
	КонецЦикла;
	
	ИмяТаблицы = "Товары";
	
	ПодготовитьФормуНаСервере(); 	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТекущееДействиеПриИзменении(Элемент)

	// Установим элементы формы в зависимости от выбранного действия
	ПриИзмененииТекущегоДействия();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Товары

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)

	Модифицированность = Истина;
	ОбновитьИтоги(ЭтаФорма);	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элементы.Товары.ТекущиеДанные.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыСтроки = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, СуммаНДС,
		|НомерГТД, СтранаПроисхождения, ЕдиницаИзмерения, Коэффициент");
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, СтрокаТабличнойЧасти);		
	
	НоменклатураПриИзмененииНаСервере(ПараметрыСтроки);
	
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ПараметрыСтроки);
	
	РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	СтрокаТабличнойЧасти.Коэффициент = 1;

КонецПроцедуры  

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС);
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(СтрокаТабличнойЧасти);
	Если ПоказыватьСуммуНДС Тогда
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
		ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	Если ПоказыватьСуммуНДС Тогда
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
		ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаНДСПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)

	Если ТекущееДействие = "ДобавитьИзДокумента" Тогда   		
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияДокумент) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указан документ, из которого добавляются строки списка'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияДокумент");
			Возврат;
		КонецЕсли;
		
		ДобавитьДанныеИзДокумента(ВариантЗначенияДокумент);
		
	ИначеЕсли ТекущееДействие = "РаспределитьСуммуПоСуммам" Тогда    	
	
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияЧислоСумма) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указана сумма распределения! Распределение невозможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияЧислоСумма");
			Возврат;
		КонецЕсли;
		
		РаспределитьСуммуПоКолонке("Сумма", ВариантЗначенияЧислоСумма);
		
	ИначеЕсли ТекущееДействие = "РаспределитьСуммуПоКоличеству" Тогда 		
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияЧислоСумма) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указана сумма распределения! Распределение невозможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияЧислоСумма");
			Возврат;
		КонецЕсли;
		
		РаспределитьСуммуПоКолонке("Количество", ВариантЗначенияЧислоСумма);
		
	ИначеЕсли ТекущееДействие = "ИзменитьЦеныНаПроцент" Тогда    
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияЧислоПроцент) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указан процент'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияЧислоПроцент");
			Возврат;
		КонецЕсли;
		
		ИзменитьЦенуНаПроцент(ВариантЗначенияЧислоПроцент);
		
	ИначеЕсли ТекущееДействие = "ОкруглитьЦеныДо" Тогда
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияПорядокОкругления) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указан порядок округления'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияПорядокОкругления");
			Возврат;
		КонецЕсли;
		
		ОкруглитьЦену(ВариантЗначенияПорядокОкругления);
			
	ИначеЕсли ТекущееДействие = "УстановитьСтавкуНДС" Тогда
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияСтавкаНДС) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указана ставка НДС'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияСтавкаНДС");
			Возврат;
		КонецЕсли;
		
		УстановитьСтавкуНДС(ВариантЗначенияСтавкаНДС);
		
	ИначеЕсли ТекущееДействие = "УстановитьНомерГТД" Тогда
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияНомерГТД) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указан номер ГТД'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияНомерГТД");
			Возврат;
		КонецЕсли;
		
		УстановитьНомерГТД(ВариантЗначенияНомерГТД);
		
	ИначеЕсли ТекущееДействие = "УстановитьСтрануПроисхождения" Тогда
		
		Если НЕ ЗначениеЗаполнено(ВариантЗначенияСтранаПроисхождения) Тогда
			ТекстСообщения = ВернутьСтр("ru = 'Не указана страна происхождения'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ВариантЗначенияСтранаПроисхождения");
			Возврат;
		КонецЕсли;
		
		УстановитьСтрануПроисхождения(ВариантЗначенияСтранаПроисхождения);
		
	Иначе
		
		ТекстСообщения = ВернутьСтр("ru = 'Действие не обрабатывается обработкой!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)

	УстановитьПометкуВСтрокахТабличнойЧасти(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)

	УстановитьПометкуВСтрокахТабличнойЧасти(Ложь);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Операции с формой и элементами формы

&НаКлиенте
Процедура ПриИзмененииТекущегоДействия()

	Если ТекущееДействие = "ДобавитьИзДокумента" Тогда     			
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияДокумент;
		ВариантЗначенияДокумент = Неопределено;
		
	ИначеЕсли ТекущееДействие = "РаспределитьСуммуПоСуммам" Тогда      	
	
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияЧислоСумма;
		ВариантЗначенияЧислоСумма = Неопределено;
		  
	ИначеЕсли ТекущееДействие = "РаспределитьСуммуПоКоличеству" Тогда         
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияЧислоСумма;
		ВариантЗначенияЧислоСумма = Неопределено;
		
	ИначеЕсли ТекущееДействие = "ИзменитьЦеныНаПроцент" Тогда       
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияЧислоПроцент;
		ВариантЗначенияЧислоПроцент = Неопределено;
		
	ИначеЕсли ТекущееДействие = "ОкруглитьЦеныДо" Тогда
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияПорядокОкругления;
		ВариантЗначенияПорядокОкругления = ПорядокОругленияПоУмолчанию;
			
	ИначеЕсли ТекущееДействие = "УстановитьСтавкуНДС" Тогда
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияСтавкаНДС;
		ВариантЗначенияСтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС18");
		
	ИначеЕсли ТекущееДействие = "УстановитьНомерГТД" Тогда
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияНомерГТД;
		ВариантЗначенияНомерГТД = Неопределено;

		
	ИначеЕсли ТекущееДействие = "УстановитьСтрануПроисхождения" Тогда
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияСтранаПроисхождения;
		ВариантЗначенияСтранаПроисхождения = Неопределено;
		
	Иначе          
		
		Элементы.ГруппаСтраницыПоляВводаВариантаЗначения.ТекущаяСтраница = Элементы.ГруппаПолеВводаВариантаЗначенияПустаяСтраница;
		
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Процедура ПодготовитьФормуНаСервере()

   	ИнициализироватьРеквизитыФормы();
	СформироватьСписокДействий(Элементы.ТекущееДействие.СписокВыбора);

	//загрузим текущее действие из сохраненных настроек
	ТекущееДействие = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ОбработкаТабличнойЧастиТекущееДействие");
	Если Элементы.ТекущееДействие.СписокВыбора.НайтиПоЗначению(ТекущееДействие) = Неопределено Тогда
		ТекущееДействие = Элементы.ТекущееДействие.СписокВыбора[0].Значение;
	КонецЕсли;
	
	УстановитьЗаголовкиКолонок();
	ЗаполнитьДобавленныеКолонкиТаблиц();
	ЗаполнитьОграниченияТипаПолейВводаВариантаЗначения();
	
	Элементы.ГруппаПодвал.Видимость = ПоказыватьСуммуНДС;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ОбновитьИтоги(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОграниченияТипаПолейВводаВариантаЗначения()

	// В случае добавления из документа должны выбираться только документы с таб. частью "Товары",
	// в которой есть реквизиты "Номенклатура", "Количество".
	
	МассивНужныхТипов = Новый Массив();
	
	Для Каждого Документ Из Метаданные.Документы Цикл
		
		Если Документ.ТабличныеЧасти.Найти(ИмяТаблицы) <> Неопределено Тогда
			Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Номенклатура", Документ, ИмяТаблицы)
				И ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Количество",  Документ, ИмяТаблицы) Тогда
				МассивНужныхТипов.Добавить(Тип("ДокументСсылка." + Документ.Имя));
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ВариантЗначенияДокумент.ОграничениеТипа = Новый ОписаниеТипов(МассивНужныхТипов);

КонецПроцедуры 

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	ПеренестиВДокумент = Ложь;

	ДокументМетаданные = ДокументСсылка.Метаданные();
	
	ВалютаРегламентированногоУчета 	= SalesBookСервер.ПолучитьВалютуРегламентированногоУчета();
	
	ОбрабатыватьПоТипуЦен = ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", ДокументМетаданные);
	Если ЗначениеЗаполнено(ДокументСклад) Тогда
		ДокументТипЦенРозничнойТорговли = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументСклад, "ТипЦенРозничнойТорговли");
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокументТипЦен) Тогда
		ПорядокОругленияПоУмолчанию = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументТипЦен, "ПорядокОкругления");	
	Иначе
		ПорядокОругленияПоУмолчанию = Перечисления.ПорядкиОкругления.Окр0_01;
	КонецЕсли;
		
	ПоказыватьКоличество 			= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Количество", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьЦену 					= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Цена", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьСумму 				= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Сумма", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьСтавкуНДС 			= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьСуммуНДС 				= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьВалюту 				= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Валюта", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьНомерГТД 				= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("НомерГТД", 
													ДокументМетаданные, ИмяТаблицы);
	ПоказыватьСтрануПроисхождения	= ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтранаПроисхождения", 
													ДокументМетаданные, ИмяТаблицы);
													
	Если ЗначениеЗаполнено(ДокументСклад) Тогда
		ТипСклада = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументСклад, "ТипСклада");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиКолонок()
	
	Если ПоказыватьСуммуНДС Тогда
		ЗаголовокЦена 	= ?(ДокументСуммаВключаетНДС, ВернутьСтр("ru='Цена с НДС'"), ВернутьСтр("ru='Цена без НДС'"));
		ЗаголовокСумма 	= ?(ДокументСуммаВключаетНДС, ВернутьСтр("ru='Сумма с НДС'"), ВернутьСтр("ru='Сумма без НДС'"));
	Иначе
		ЗаголовокЦена   = ВернутьСтр("ru='Цена'");
		ЗаголовокСумма	= ВернутьСтр("ru='Сумма'");
	КонецЕсли;
	
	Элементы.ТоварыЦена.Заголовок 	= ЗаголовокЦена;
	Элементы.ТоварыСумма.Заголовок 	= ЗаголовокСумма;
	
КонецПроцедуры



///////////////////////////////////////////////////////////////////////////////
// Обработчики действий обработки

&НаСервере
Процедура ДобавитьДанныеИзДокумента(ДокументИсточник)

	Если НЕ ЗначениеЗаполнено(ДокументИсточник) Тогда
		Возврат;
	КонецЕсли; 
	
	МетаданныеДокументаИсточника 	= ДокументИсточник.Метаданные();
	
	// получим валюту документа-источника
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокументаИсточника) Тогда 
		ВалютаДокументаИсточника 	= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "ВалютаДокумента");
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("КурсДокумента", МетаданныеДокументаИсточника) Тогда
			КурсДокументаИсточника		= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "КурсДокумента");
			КратностьДокументаИсточника	= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "КратностьДокумента");
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("КурсВзаиморасчетов", МетаданныеДокументаИсточника) Тогда
			КурсДокументаИсточника		= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "КурсВзаиморасчетов");
			КратностьДокументаИсточника	= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "КратностьВзаиморасчетов");
		Иначе
			КурсДокументаИсточника		= 0;
			КратностьДокументаИсточника	= 1;
		КонецЕсли;
	Иначе
		ВалютаДокументаИсточника 	= ВалютаРегламентированногоУчета; 
		КурсДокументаИсточника		= 1;
		КратностьДокументаИсточника	= 1;
	КонецЕсли;
	
	// получим пометку СуммаВключаетНДС документа-источника
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокументаИсточника) Тогда 
		СуммаВключаетНДСИсточника	= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументИсточник, "СуммаВключаетНДС");
	Иначе
		СуммаВключаетНДСИсточника 	= Ложь;	
	КонецЕсли;
	
	// получим табличную часть "Товары" документа-источника
	ТекстПолей = "";
	РеквизитыТоваровИсточника = МетаданныеДокументаИсточника.ТабличныеЧасти.Товары.Реквизиты;
	СтруктураРеквизитов = ПолучитьСтруктуруОбрабатываемыхРеквизитовТабличнойЧасти(РеквизитыТоваровИсточника); 
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ИмяПоля   = ?(ЗначениеЗаполнено(КлючИЗначение.Значение), СокрЛП(КлючИЗначение.Значение), СокрЛП(КлючИЗначение.Ключ));
		Псевдоним = СокрЛП(КлючИЗначение.Ключ);
		ТекстПолей  = ТекстПолей + ?(ПустаяСтрока(ТекстПолей), "", ",") + "
			|	" + ИмяПоля + " КАК " + Псевдоним;
	КонецЦикла;
 	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ТекстПолей
	|ИЗ
	|	&ТабличнаяЧастьТоварыДокументаИсточника КАК ПсевдонимТовары
	|ГДЕ
	|	ПсевдонимТовары.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПолей", ТекстПолей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТабличнаяЧастьТоварыДокументаИсточника", 
													МетаданныеДокументаИсточника.ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТоваровДокумента = РезультатЗапроса.Выгрузить();

	// добавим полученную таблицу в табличную часть обработки
	Для Каждого СтрокаТовара ИЗ ТаблицаТоваровДокумента Цикл
		
		// Ищем добавляемую позицию в существующей таблице по номенклатуре и по цене, в случае, когда цена видима.
		// Если найдем - увеличим количество; не найдем - добавим новую строку.
		СтруктураОтбора = Новый Структура("Номенклатура");
		СтруктураОтбора.Номенклатура  = СтрокаТовара.Номенклатура;
		
		// пересчитаем цену строки документа-источника под параметры обработки для корректности отбора
		// высчитанное значение и будет значением цены в случае добавления новой строки обработки 
		НоваяЦенаСтроки = 0;
		Если СтруктураРеквизитов.Свойство("Цена") И ПоказыватьЦену Тогда
			
			Если ПоказыватьВалюту И СтруктураРеквизитов.Свойство("Валюта") И ЗначениеЗаполнено(СтрокаТовара.Валюта) Тогда
				ВалютаПересчета 	= СтрокаТовара.Валюта;
				КурсПересчета		= 0;
				КратностьПересчета 	= 1;
			ИначеЕсли ЗначениеЗаполнено(ДокументВалюта) Тогда
				ВалютаПересчета 	= ДокументВалюта;	
				КурсПересчета		= ДокументКурс;
				КратностьПересчета 	= ДокументКратность;
			Иначе
				ВалютаПересчета 	= ВалютаРегламентированногоУчета;
				КурсПересчета		= 1;
				КратностьПересчета 	= 1;
			КонецЕсли;
			
			Если СтруктураРеквизитов.Свойство("Валюта") И ЗначениеЗаполнено(СтрокаТовара.Валюта) Тогда
				ВалютаЦены			= СтрокаТовара.Валюта;
				КурсЦены			= 0;
				КратностьЦены 		= 1;
			ИначеЕсли ЗначениеЗаполнено(ВалютаДокументаИсточника) Тогда
				ВалютаЦены 			= ВалютаДокументаИсточника;
				КурсЦены			= КурсДокументаИсточника;
				КратностьЦены 		= КратностьДокументаИсточника;
			Иначе
				ВалютаЦены 			= ВалютаРегламентированногоУчета;
				КурсЦены			= 1;
				КратностьЦены 		= 1;
			КонецЕсли;
			
			Цена = ПолучитьЦенуПослеПересчета(СтрокаТовара.Цена, ВалютаЦены, ВалютаПересчета, ДокументДата, 
					КурсЦены, КурсПересчета, КратностьЦены, КратностьПересчета);
					
			Если СтруктураРеквизитов.Свойство("СтавкаНДС") Тогда
						
				НоваяЦенаСтроки = ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(Цена,
						СуммаВключаетНДСИсточника,
						ДокументСуммаВключаетНДС,
						УчетНДС.ПолучитьСтавкуНДС(СтрокаТовара.СтавкаНДС));
						
			Иначе
				
				НоваяЦенаСтроки = Цена;
						
			КонецЕсли;
					
			НоваяЦенаСтроки = Окр(НоваяЦенаСтроки, 2);					

			СтруктураОтбора.Вставить("Цена", НоваяЦенаСтроки);	
			
		КонецЕсли;
		
		// производим поиск строк по структуре отбора
		СтрокаТабличнойЧасти = ОбработкаТабличныхЧастейКлиентСервер.НайтиСтрокуТабЧасти(Объект, ИмяТаблицы, СтруктураОтбора);
		Если НЕ СтрокаТабличнойЧасти = Неопределено Тогда
			
			// Нашли, увеличиваем количество в первой найденной строке
			СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + СтрокаТовара.Количество;
			
			// Рассчитаем связанные реквизиты табличной части.
			РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС);
			
		Иначе
			
			// добавляем новую строку.
			НоваяСтрока = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовара);
			
			// новые строки будут по умолчанию помечены.
			НоваяСтрока.Пометка = Истина;
			
			// пересчитаем связанные реквизиты табличной части.
			
			Если ПоказыватьКоличество Тогда
				
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения) Тогда
	            	НоваяСтрока.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НоваяСтрока.Номенклатура, "ЕдиницаИзмерения"); 
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.Коэффициент) Тогда
					НоваяСтрока.Коэффициент = 1;	
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПоказыватьНомерГТД ИЛИ ПоказыватьСтрануПроисхождения Тогда
				
				SalesBookСервер.ЗаполнитьНомерГТДИСтрануПроисхождения(НоваяСтрока, ИмяТаблицы, ДокументСсылка.Метаданные());
				
			КонецЕсли;
			
			Если ПоказыватьСтавкуНДС Тогда
				
				ПараметрыОбъекта = Новый Структура("Дата, Организация", ДокументДата, ДокументОрганизация);
				ЗаполнитьСтавкуНДСТабЧасти(НоваяСтрока, ПараметрыОбъекта, ИмяТаблицы, ДокументСсылка.Метаданные());
				
			КонецЕсли;
			
			Если ПоказыватьВалюту Тогда
				
				Если СтруктураРеквизитов.Свойство("Валюта") И ЗначениеЗаполнено(СтрокаТовара.Валюта) Тогда
					НоваяСтрока.Валюта = СтрокаТовара.Валюта;
				ИначеЕсли ЗначениеЗаполнено(ВалютаДокументаИсточника) Тогда
					НоваяСтрока.Валюта = ВалютаДокументаИсточника;	
				Иначе
					НоваяСтрока.Валюта = ВалютаРегламентированногоУчета;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПоказыватьЦену Тогда
				
				НоваяСтрока.Цена = НоваяЦенаСтроки;
				
			КонецЕсли;
			
			РассчитатьСуммыСтрокиТабличнойЧасти(НоваяСтрока, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОкруглитьЦену(ПорядокОкругленияЦены)

	Если НЕ ЗначениеЗаполнено(ПорядокОкругленияЦены) Тогда
		Возврат;
	КонецЕсли; 

	Если ЗначениеЗаполнено(ДокументТипЦен) Тогда
		ОкруглятьВБольшуюСторону = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокументТипЦен, "ОкруглятьВБольшуюСторону");
	Иначе
		ОкруглятьВБольшуюСторону = Истина;
	КонецЕсли;

	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда
			
			СтрокаТабличнойЧасти.Цена = Обработки.ОбработкаТабличнойЧастиТовары.ОкруглитьЦену(СтрокаТабличнойЧасти.Цена, 
														ПорядокОкругленияЦены, ОкруглятьВБольшуюСторону); 
			
			//// пересчитаем связанные реквизиты.
			РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС)
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры
  
&НаСервере
Процедура ИзменитьЦенуНаПроцент(ПроцентИзменения)

	Если НЕ ЗначениеЗаполнено(ПроцентИзменения) Тогда
		Возврат;
	КонецЕсли; 

	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда
			
			СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Цена * (100 + ПроцентИзменения) / 100;
			
			// пересчитаем связанные реквизиты.
			РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, ДокументСуммаВключаетНДС)
			
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры 

&НаСервере
Процедура РаспределитьСуммуПоКолонке(ИмяКолонки, СуммаРаспределения)
	
	Если НЕ ЗначениеЗаполнено(СуммаРаспределения) Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ (ИмяКолонки = "Количество" ИЛИ ИмяКолонки = "Сумма") Тогда
		Возврат;
	КонецЕсли; 
	
	// Посчитаем общую сумму помеченных позиций
	ОбщаяСумма = 0;
	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		Если СтрокаТабличнойЧасти.Пометка Тогда
			ОбщаяСумма = ОбщаяСумма + СтрокаТабличнойЧасти[ИмяКолонки];
		КонецЕсли; 
	КонецЦикла; 
	
	Если ОбщаяСумма = 0 Тогда
		РГСофтКлиентСервер.СообщитьОбОшибке(ВернутьСтр("ru = 'Общая сумма помеченных строк нулевая! 
																	|Распределение невозможно'"));
		Возврат;
	КонецЕсли; 
		
	// Распределение
	СтрокаМаксимальнойСуммы = Неопределено;  // На эту строку будем относить остаток после распределения (ошибки округления)
	МаксимальнаяСумма       = 0; 			 // Значение максимальной суммы.
	НепогашеннаяСумма       = СуммаРаспределения;
	
	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда

			Дельта = СуммаРаспределения * СтрокаТабличнойЧасти[ИмяКолонки] / ОбщаяСумма;
			
			// Если Дельта по модулю оказалась больше, чем осталось погасить
			Если Дельта < 0 Тогда
				Дельта = Макс(НепогашеннаяСумма, Дельта)
			Иначе
				Дельта = Мин(НепогашеннаяСумма, Дельта)
			КонецЕсли; 

			// Проверим текущую сумму на максимум.
			Если СтрокаТабличнойЧасти.Сумма > МаксимальнаяСумма  Тогда
				МаксимальнаяСумма       = СтрокаТабличнойЧасти.Сумма;
				СтрокаМаксимальнойСуммы = СтрокаТабличнойЧасти;
			КонецЕсли;

			// Увеличиваем значение и запоминаем старое.
			ТекущаяСумма             	= СтрокаТабличнойЧасти.Сумма;
			СтрокаТабличнойЧасти.Сумма 	= СтрокаТабличнойЧасти.Сумма + Дельта;
			
			// Остаток нераспределенной суммы надо уменьшать на значение реального изменения
			НепогашеннаяСумма = НепогашеннаяСумма - (СтрокаТабличнойЧасти.Сумма - ТекущаяСумма);

			// Пересчитываем связанные реквизиты.
			ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(СтрокаТабличнойЧасти);
			Если ПоказыватьСуммуНДС Тогда
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
				ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;  
		
	// Если что-то осталось, относим на строку с максимальной суммой.
	Если НепогашеннаяСумма > 0 И СтрокаМаксимальнойСуммы <> Неопределено Тогда

		СтрокаМаксимальнойСуммы.Сумма = СтрокаМаксимальнойСуммы.Сумма + НепогашеннаяСумма;
		ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(СтрокаМаксимальнойСуммы);
		Если ПоказыватьСуммуНДС Тогда
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаМаксимальнойСуммы, ДокументСуммаВключаетНДС);
			ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаМаксимальнойСуммы, ДокументСуммаВключаетНДС);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтавкуНДС(НоваяСтавкаНДС)

	Если НЕ ЗначениеЗаполнено(НоваяСтавкаНДС) Тогда
		Возврат;
	КонецЕсли; 

	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда
			
			СтрокаТабличнойЧасти.СтавкаНДС = НоваяСтавкаНДС;
			
			// Пересчитываем связанные реквизиты.
			Если ПоказыватьСуммуНДС Тогда
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
				ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура УстановитьНомерГТД(НовыйНомерГТД)

	Если НЕ ЗначениеЗаполнено(НовыйНомерГТД) Тогда
		Возврат;
	КонецЕсли; 

	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда
			СтрокаТабличнойЧасти.НомерГТД = НовыйНомерГТД;
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура УстановитьСтрануПроисхождения(НоваяСтранаПроисхождения)

	Если НЕ ЗначениеЗаполнено(НоваяСтранаПроисхождения) Тогда
		Возврат;
	КонецЕсли; 

	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		Если СтрокаТабличнойЧасти.Пометка Тогда
			СтрокаТабличнойЧасти.СтранаПроисхождения = НоваяСтранаПроисхождения;
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// Прочие операции

&НаСервере
Процедура СформироватьСписокДействий(СписокДействий)

	// Заполним список возможных действий с табличной частью.
	СписокДействий.Очистить();

	СписокДействий.Добавить("ДобавитьИзДокумента",						ВернутьСтр("ru = 'Добавить из документа'"));
	
	Если ПоказыватьЦену Тогда
		СписокДействий.Добавить("ИзменитьЦеныНаПроцент",				ВернутьСтр("ru = 'Изменить цены на %'"));
	КонецЕсли;
	   	
	Если ПоказыватьСумму Тогда
		СписокДействий.Добавить("РаспределитьСуммуПоСуммам", 			ВернутьСтр("ru = 'Распределить сумму по суммам'"));
		СписокДействий.Добавить("РаспределитьСуммуПоКоличеству", 		ВернутьСтр("ru = 'Распределить сумму по количеству'"));
	КонецЕсли;
	
	Если ПоказыватьЦену И ОбрабатыватьПоТипуЦен Тогда
		СписокДействий.Добавить("ОкруглитьЦеныДо", 						ВернутьСтр("ru = 'Округлить цены до'"));
	КонецЕсли;
	    		
	Если ПоказыватьСтавкуНДС Тогда
		СписокДействий.Добавить("УстановитьСтавкуНДС", 					ВернутьСтр("ru = 'Установить ставку НДС'"));
	КонецЕсли;
	
	Если ПоказыватьНомерГТД Тогда
		СписокДействий.Добавить("УстановитьНомерГТД", 					ВернутьСтр("ru = 'Установить номер ГТД'"));
	КонецЕсли;
	
	Если ПоказыватьСтрануПроисхождения Тогда
		СписокДействий.Добавить("УстановитьСтрануПроисхождения", 		ВернутьСтр("ru = 'Установить страну происхождения'"));
	КонецЕсли;

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьСуммыСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ПоказыватьСуммуНДС, СуммаВключаетНДС)

	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);

	Если ПоказыватьСуммуНДС Тогда
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
		ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС)

	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦенуПослеПересчета(Знач Цена, Знач ВалютаНач, Знач ВалютаКон, Знач ДатаПересчета, 
	Знач КурсНач = Неопределено, Знач КурсКон = Неопределено, Знач КратностьНач = Неопределено, Знач КратностьКон = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(КурсНач) Тогда 		
		КурсКратностьНач 	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаНач, ДатаПересчета);
		КурсНач 			= КурсКратностьНач.Курс;
		КратностьНач 		= КурсКратностьНач.Кратность;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(КурсКон) Тогда
		КурсКратностьКон 	= ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаКон, ДатаПересчета);
		КурсКон 			= КурсКратностьКон.Курс;
		КратностьКон		= КурсКратностьКон.Кратность;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Цена, ВалютаНач, ВалютаКон,
		КурсНач, КурсКон, КратностьНач, КратностьКон);
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруОбрабатываемыхРеквизитовТабличнойЧасти(РеквизитыТабличнойЧасти)

	//ключ - псевдоним в запросе, значение - имя реквизита
	СтруктураРеквизитов = Новый Структура;
	
	СтруктураРеквизитов.Вставить("Номенклатура", 	"Номенклатура");
	СтруктураРеквизитов.Вставить("Количество", 		"Количество");
	
	Если РеквизитыТабличнойЧасти.Найти("ЕдиницаИзмерения") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить("ЕдиницаИзмерения", "ЕдиницаИзмерения");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("Коэффициент") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить("Коэффициент", "Коэффициент");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("Цена") <> Неопределено Тогда
		СтруктураРеквизитов.Вставить("Цена", "Цена");
	КонецЕсли;
	   		
	Если РеквизитыТабличнойЧасти.Найти("Сумма")  <> Неопределено И ПоказыватьСумму Тогда
		СтруктураРеквизитов.Вставить("Сумма", "Сумма");
	КонецЕсли;
		
	Если РеквизитыТабличнойЧасти.Найти("СтавкаНДС")  <> Неопределено И ПоказыватьСтавкуНДС Тогда
		СтруктураРеквизитов.Вставить("СтавкаНДС", "СтавкаНДС");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("СуммаНДС")  <> Неопределено И ПоказыватьСуммуНДС Тогда
		СтруктураРеквизитов.Вставить("СуммаНДС", "СуммаНДС");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("СтранаПроисхождения")  <> Неопределено И ПоказыватьСтрануПроисхождения Тогда
		СтруктураРеквизитов.Вставить("СтранаПроисхождения", "СтранаПроисхождения");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("НомерГТД")  <> Неопределено И ПоказыватьНомерГТД Тогда
		СтруктураРеквизитов.Вставить("НомерГТД", "НомерГТД");
	КонецЕсли;
	
	Если РеквизитыТабличнойЧасти.Найти("Валюта")  <> Неопределено И ПоказыватьВалюту Тогда
		СтруктураРеквизитов.Вставить("Валюта", "Валюта");
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;

КонецФункции 
 
&НаСервере
Процедура УстановитьПометкуВСтрокахТабличнойЧасти(НоваяПометка)

	Для Каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		СтрокаТабличнойЧасти.Пометка = НоваяПометка;
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()

	Если ПоказыватьСуммуНДС Тогда
		Для Каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
			ПересчитатьВсегоСтрокиТабличнойЧасти(СтрокаТабличнойЧасти, ДокументСуммаВключаетНДС);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)

	Если Форма.ПоказыватьСуммуНДС Тогда
		Форма.ИтогиВсего = Форма.Объект.Товары.Итог("Всего");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере(ПараметрыСтроки)

	МетаданныеДокумента = ДокументСсылка.Метаданные();

	Если ПоказыватьСтавкуНДС Тогда
		ПараметрыОбъекта = Новый Структура("Дата, Организация", ДокументДата, ДокументОрганизация);
		ЗаполнитьСтавкуНДСТабЧасти(ПараметрыСтроки, ПараметрыОбъекта, ИмяТаблицы, МетаданныеДокумента);
	КонецЕсли;
	       
	Если ПоказыватьНомерГТД ИЛИ ПоказыватьСтрануПроисхождения Тогда
		SalesBookСервер.ЗаполнитьНомерГТДИСтрануПроисхождения(ПараметрыСтроки, ИмяТаблицы, МетаданныеДокумента);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПриЗакрытииФормыНаСервере()

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбработкаТабличнойЧастиТекущееДействие", , ТекущееДействие);

	Если ПеренестиВДокумент Тогда
		ТаблицаТовары = СформироватьТаблицуДляПереносаВДокумент();
		ПоместитьВоВременноеХранилище(ТаблицаТовары, АдресХранилищаТовары);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуДляПереносаВДокумент()

	ТаблицаОбработки = Объект.Товары.Выгрузить();
	
	ТаблицаДокумента = ПолучитьИзВременногоХранилища(АдресХранилищаТовары);
	
	// удалим не помеченные строки таблицы, так как их не нужно передавать обратно в документ
	НайденныеСтроки = ТаблицаОбработки.НайтиСтроки(Новый Структура("Пометка", Ложь));
	Для Каждого Строка Из НайденныеСтроки Цикл
		ТаблицаОбработки.Удалить(Строка);
	КонецЦикла;
		
	// Создадим структуру, которая будет содержать имена колонок присутствующих в 
	// документе, но не присутствующих в ТЧ обработки. 
	СтруктураНовыхКолонок = Новый Структура;
	
	Для Каждого КолонкаТаблицыДокумента Из ТаблицаДокумента.Колонки Цикл
		
		// Если колонка есть в таблице документа, но ее нет в таблице, выгруженной
		// из обработке и нет в структуре новых колонок, тогда добавим ее в таблицу
		// и в структуру
		Если ТаблицаОбработки.Колонки.Найти(КолонкаТаблицыДокумента.Имя) = Неопределено
			И НЕ СтруктураНовыхКолонок.Свойство(КолонкаТаблицыДокумента.Имя) Тогда
			ТаблицаОбработки.Колонки.Добавить(КолонкаТаблицыДокумента.Имя);
			СтруктураНовыхКолонок.Вставить(КолонкаТаблицыДокумента.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	// Идем по строкам табличной части и обрабатываем строки, в которых заполнен
	// реквизит НомерДокумента. Эти строки были выгружены из документа.
	Для каждого СтрокаТаблицы Из ТаблицаОбработки Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.НомерСтрокиДокумента) Тогда
			
			// Если номер строки заполнен, находим соответствующую строку в табличной 
			// части документа
			СтрокаТаблицыДокумента = ТаблицаДокумента[СтрокаТаблицы.НомерСтрокиДокумента - 1];

			// Во избежание проблем с подчиненными реквизитами, строка ТЧ обработки 
			// считается соответствующей строке ТЧ документа, только в том случае,если
			// номенклатура не изменилась. Если номенклатура в строке изменилась, 
			// считается, что это новая строка.
			Если СтрокаТаблицыДокумента.Номенклатура = СтрокаТаблицы.Номенклатура Тогда
				
				// Теперь пройдем по колонкам структуры новых колонок
				Для Каждого НоваяКолонкаТаблицы Из СтруктураНовыхКолонок Цикл
					СтрокаТаблицы[НоваяКолонкаТаблицы.Ключ] = СтрокаТаблицыДокумента[НоваяКолонкаТаблицы.Ключ];
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаОбработки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента) Экспорт
	
	Если НЕ ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Номенклатура", МетаданныеДокумента, ИмяТабличнойЧасти)
		ИЛИ НЕ ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.Номенклатура")
		ИЛИ НЕ ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СтрокаТабличнойЧасти.СтавкаНДС = ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтрокаТабличнойЧасти.Номенклатура, "СтавкаНДС");

КонецПроцедуры




 