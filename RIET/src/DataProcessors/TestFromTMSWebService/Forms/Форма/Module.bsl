
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "XML files|*.xml";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ СЕРВИСА

&НаКлиенте
Процедура Call(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"No file selected!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
		
	// Поместим файл во временное хранилище
	АдресФайла = Неопределено;
	ПоместитьФайл(АдресФайла, FullPath,, Ложь, УникальныйИдентификатор);

	ОтветТекстовымДокументом = CallНаСервере(АдресФайла, TestProd, PlannedShipmentTransmission);
	
	ОтветТекстовымДокументом.Показать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция CallНаСервере(АдресФайла, TestProd, PlannedShipmentTransmission)
	
	Сообщить("Создание WS определений...");	
	Если TestProd = 1 Тогда
		АдресWSDL = "http://ru0149app35.dir.slb.com/RIETWebServices/ws/FromTMS.1cws?wsdl";
	Иначе
		АдресWSDL = "http://ru0149app35.dir.slb.com/RIETWebServicesTEST/ws/FromTMS.1cws?wsdl";
	КонецЕсли;
	Определения = Новый WSОпределения(АдресWSDL, "WebServices", "1122334455");
	
	Сообщить("Создание WS прокси...");
	Прокси = Новый WSПрокси(Определения, TMSСервер.ПолучитьURIПространстваИменTMSLite(), "FromTMS", "FromTMSSoap");
	Прокси.Пользователь = "WebServices";
	Прокси.Пароль = "1122334455";
	
	Сообщить("Подготовка к вызову веб-сервиса...");
	Transmission = ПолучитьTransmission(PlannedShipmentTransmission, АдресФайла, Прокси.ФабрикаXDTO);
	Если Transmission = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщить("Вызов веб-сервиса...");
	Ответ = Прокси.PushPlannedShipment(Transmission);	
	
	Возврат XDTOОбъектТекстовымДокументом(Прокси.ФабрикаXDTO, Ответ);
		   	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьTransmission(PlannedShipmentTransmission, АдресФайла, ИспользуемаяФабрикаXDTO)
	
	// Сохраним переданные данные во временный файл
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ПолноеИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанные.Записать(ПолноеИмяВременногоФайла);
	
	Если PlannedShipmentTransmission = 1 Тогда
		
		Transmission = Неопределено;
		
		Попытка	
			Transmission = ПолучитьОбъектXDTOИзXML(ПолноеИмяВременногоФайла, ИспользуемаяФабрикаXDTO, "Transmission");			
		Исключение
			Сообщить("Failed to load transmission from XML:
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Попытка
			УдалитьФайлы(ПолноеИмяВременногоФайла);
		Исключение
			Сообщить("Failed to delete temporary file " + ПолноеИмяВременногоФайла + ":
				|" + ОписаниеОшибки());
		КонецПопытки;	
		
	Иначе
	
		PlannedShipment = Неопределено;
		
		Попытка	
			PlannedShipment = ПолучитьОбъектXDTOИзXML(ПолноеИмяВременногоФайла, ИспользуемаяФабрикаXDTO, "PlannedShipment");			
		Исключение
			Сообщить("Failed to load planned shipment from XML:
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Попытка
			УдалитьФайлы(ПолноеИмяВременногоФайла);
		Исключение
			Сообщить("Failed to delete temporary file " + ПолноеИмяВременногоФайла + ":
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Если PlannedShipment = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		URIПространстваИмен = TMSСервер.ПолучитьURIПространстваИменTMSLite();
		
		Transmission = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "Transmission");

		Transmission.TransmissionHeader = "fake";
		
		Transmission.TransmissionBody = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "TransmissionBody");
		
		Transmission.TransmissionBody.GLogXMLElement = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "GLogXMLElement");
		
		Transmission.TransmissionBody.GLogXMLElement.PlannedShipment = PlannedShipment;
		
	КонецЕсли;
			
	Возврат Transmission;
		
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОбъектXDTOИзXML(ПутьКФайлу, ИспользуемаяФабрикаXDTO, ИмяТипа)
	 		
	ТипОбъекта = ИспользуемаяФабрикаXDTO.Тип(TMSСервер.ПолучитьURIПространстваИменTMSLite(), ИмяТипа);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПутьКФайлу);
	
	ОбъектXDTO = Неопределено;
	Попытка
		ОбъектXDTO = ИспользуемаяФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъекта);
	Исключение
		Сообщить("Failed to read xml:
			|" + ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		ЧтениеXML.Закрыть();
	Исключение
		Сообщить("Failed to close xml:
			|" + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат ОбъектXDTO;
	
КонецФункции

&НаСервереБезКонтекста
Функция XDTOОбъектТекстовымДокументом(ИспользуемаяФабрикаXDTO, XDTOОбъект)
	
	ПолноеИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПолноеИмяВременногоФайла);	
	ИспользуемаяФабрикаXDTO.ЗаписатьXML(ЗаписьXML, XDTOОбъект);	
	ЗаписьXML.Закрыть();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПолноеИмяВременногоФайла);
	
	УдалитьФайлы(ПолноеИмяВременногоФайла);
	
	Возврат ТекстовыйДокумент;
		
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////
// ВЫЗОВ СЕРВИСА

&НаКлиенте
Процедура CallTransOrder(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"No file selected!",
			, "Объект", "FullPath");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Поместим файл во временное хранилище
	АдресФайла = Неопределено;
	ПоместитьФайл(АдресФайла, FullPath,, Ложь, УникальныйИдентификатор);
	
	ОтветТекстовымДокументом = CallTransOrderНаСервере(АдресФайла, TestProd, TransOrderTransmission);
	
	ОтветТекстовымДокументом.Показать();
	                 	
КонецПроцедуры

&НаСервереБезКонтекста
Функция CallTransOrderНаСервере(АдресФайла, TestProd, TransOrderTransmission)
	
	Сообщить("Создание WS определений...");	
	Если TestProd = 1 Тогда
		АдресWSDL = "http://ru0149app35.dir.slb.com/RIETWebServices/ws/FromTMS.1cws?wsdl";
	Иначе
		АдресWSDL = "http://ru0149app35.dir.slb.com/RIETWebServicesTEST/ws/FromTMS.1cws?wsdl";
	КонецЕсли;
	Определения = Новый WSОпределения(АдресWSDL, "WebServices", "1122334455");
	
	Сообщить("Создание WS прокси...");
	Прокси = Новый WSПрокси(Определения, TMSСервер.ПолучитьURIПространстваИменTMSLite(), "FromTMS", "FromTMSSoap");
	Прокси.Пользователь = "WebServices";
	Прокси.Пароль = "1122334455";
	
	Сообщить("Подготовка к вызову веб-сервиса...");
	Transmission = ПолучитьTransOrderTransmission(TransOrderTransmission, АдресФайла, Прокси.ФабрикаXDTO);
	Если Transmission = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщить("Вызов веб-сервиса...");
	Ответ = Прокси.PushTransOrder(Transmission);	
	
	Возврат XDTOОбъектТекстовымДокументом(Прокси.ФабрикаXDTO, Ответ);
		   	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьTransOrderTransmission(TransOrderTransmission, АдресФайла, ИспользуемаяФабрикаXDTO)
	
	// Сохраним переданные данные во временный файл
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ПолноеИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанные.Записать(ПолноеИмяВременногоФайла);
	
	Если TransOrderTransmission = 1 Тогда
		
		Transmission = Неопределено;
		
		Попытка	
			Transmission = ПолучитьОбъектXDTOИзXML(ПолноеИмяВременногоФайла, ИспользуемаяФабрикаXDTO, "Transmission");			
		Исключение
			Сообщить("Failed to load transmission from XML:
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Попытка
			УдалитьФайлы(ПолноеИмяВременногоФайла);
		Исключение
			Сообщить("Failed to delete temporary file " + ПолноеИмяВременногоФайла + ":
				|" + ОписаниеОшибки());
		КонецПопытки;	
		
	Иначе
	
		TransOrder = Неопределено;
		
		Попытка	
			TransOrder = ПолучитьОбъектXDTOИзXML(ПолноеИмяВременногоФайла, ИспользуемаяФабрикаXDTO, "TransOrder");			
		Исключение
			Сообщить("Failed to load TransOrder from XML:
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Попытка
			УдалитьФайлы(ПолноеИмяВременногоФайла);
		Исключение
			Сообщить("Failed to delete temporary file " + ПолноеИмяВременногоФайла + ":
				|" + ОписаниеОшибки());
		КонецПопытки;
		
		Если TransOrder = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		URIПространстваИмен = TMSСервер.ПолучитьURIПространстваИменTMSLite();
		
		Transmission = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "Transmission");

		Transmission.TransmissionHeader = "fake";
		
		Transmission.TransmissionBody = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "TransmissionBody");
		
		Transmission.TransmissionBody.GLogXMLElement = TMSСервер.ПолучитьОбъектXDTO(ИспользуемаяФабрикаXDTO, URIПространстваИмен, "GLogXMLElement");
		
		Transmission.TransmissionBody.GLogXMLElement.TransOrder = TransOrder;
		
	КонецЕсли;
			
	Возврат Transmission;
		
КонецФункции



