&НаКлиенте
Перем СоответствиеСинонимовИимен;

//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	ЗаполнитьСписокЛистовЭкселяИНомераКолонок();
	ЗаполнитьПараметрыСтруктурыФайлаПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыСтруктурыФайлаПоУмолчанию()
	
	FirstRowOfData = 2;
	LastRowOfData = 0;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	ЗаполнитьСписокЛистовЭкселяИНомераКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Files xlsx (*.xlsx)|*.xlsx|Files xls (*.xls)|*.xls";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокЛистовЭкселяИНомераКолонок()
	
	Sheet = "";
	СписокЛистов = Новый Массив;
	Если ЗначениеЗаполнено(FullPath) Тогда
		Connection = Новый COMОбъект("ADODB.Connection");
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
		Попытка 
			Connection.Open(СтрокаПодключения);	
		Исключение
			Попытка
				СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
				Connection.Open(СтрокаПодключения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		rs = Новый COMObject("ADODB.RecordSet");
		rs.ActiveConnection = Connection;
		rs = Connection.OpenSchema(20);
		Пока rs.EOF() = 0 Цикл
			Если rs.Fields("TABLE_NAME").Value <> "_xlnm#_FilterDatabase" Тогда
				СписокЛистов.Добавить(rs.Fields("TABLE_NAME").Value);
			КонецЕсли;
			rs.MoveNext();
		КонецЦикла;
		rs.Close();
		Если СписокЛистов.Количество()>0 Тогда
			Sheet = СписокЛистов[0];
			sqlString = "Select top 1 * from [" + Sheet + "]";
			rs.Open(sqlString);
			ЗаполнитьНомераКолонок(rs);
			rs.Close();
		Конецесли;
		Connection.Close();
	КонецЕсли;
	Элементы.Sheet.СписокВыбора.ЗагрузитьЗначения(СписокЛистов);
	Если СписокЛистов.Количество() = 1 Или СписокЛистов.Количество() = 0 Тогда
		Элементы.Sheet.КнопкаСпискаВыбора = Ложь;
	Иначе
		Элементы.Sheet.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура SheetПриИзменении(Элемент)
	
	СписокЛистов = Новый Массив;
	Если ЗначениеЗаполнено(FullPath) Тогда
		Connection = Новый COMОбъект("ADODB.Connection");
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
		Попытка 
			Connection.Open(СтрокаПодключения);	
		Исключение
			Попытка
				СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
				Connection.Open(СтрокаПодключения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		rs = Новый COMObject("ADODB.RecordSet");
		rs.ActiveConnection = Connection;
		sqlString = "select top 1 * from [" + Sheet + "]";
		rs.Open(sqlString);
		ЗаполнитьНомераКолонок(rs);
		rs.Close();
		Connection.Close();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераКолонок(rs)
	
	Если rs.EOF <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для ТекИндекс = 0 По rs.Fields.Count - 1 Цикл
		
		ИмяРеквизита = Неопределено;
		ИмяКолонки = СокрЛП(rs.Fields(ТекИндекс).Value);
		
		Для Каждого КлючИЗначение из СоответствиеСинонимовИимен Цикл 
			Если КлючИЗначение.Значение = ИмяКолонки Тогда 
				ИмяРеквизита = КлючИЗначение.Ключ;
				Прервать;
			КонецЕсли;  
		КонецЦикла;
		
		Если ИмяРеквизита <> Неопределено Тогда
			ЭтотОбъект[ИмяРеквизита] = ТекИндекс + 1;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	         	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Need to select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ВсеПоляУказаны() Тогда 
		Возврат;
	КонецЕсли;
		
	Отказ = Ложь;

		
	ЗаполнитьТаблицуДанныхИзФайлаXLS(Отказ, FullPath);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Состояние("Loading data...");
	ЗаполнитьПолучателейКС();
	    		
КонецПроцедуры

&НаКлиенте
Функция ВсеПоляУказаны()
	
	ВсеПоляУказаны = Истина;
	      		
	Если ColumnAUCode = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn 'AU Code'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если ColumnSubSubSegment = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn 'SubSubSegment'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если ColumnDFMName = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn 'DFM name'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	  	
	Возврат ВсеПоляУказаны;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуДанныхИзФайлаXLS(Отказ, ПолноеИмяXLSФайла)
	
	// Открываем файл
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		// если подключение не удалось, то пытаемся подключиться к файлу через Microsoft.Jet.OLEDB.4.0
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	//rs.MoveFirst(); // Станем на 1 закладку
	sqlString = "select * from [" + Sheet + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
	
	// пропуск заголока
	rs.Move(FirstRowOfData - 1);
	
	АвтоОпределениеКонца = LastRowOfData = 0;
	
	ТаблицаДанных.Очистить();
	
	//запоняем таб.документ пока не кончатся строки
	
	НомерСтроки = FirstRowOfData;
	
	Пока rs.EOF = 0 Цикл
		
		БылиОшибки = Ложь;

		AUCode = СокрЛП(rs.Fields(ColumnAUCode - 1).Value);
		
		Если Не ЗначениеЗаполнено(AUCode) Тогда 
			Сообщить("In line " + НомерСтроки + " AU code is empty!");
			БылиОшибки = Истина;
		КонецЕсли;
		
		Пока СтрДлина(AUCode) < 7 Цикл 
			AUCode = "0" + AUCode;
		КонецЦикла;
		
		SubSubSegment = СокрЛП(rs.Fields(ColumnSubSubSegment - 1).Value);
		
		Если Не ЗначениеЗаполнено(SubSubSegment) Тогда 
			Сообщить("In line " + НомерСтроки + " SubSubSegment is empty!");
			БылиОшибки = Истина;
		КонецЕсли;

		DFMName = СокрЛП(rs.Fields(ColumnDFMName - 1).Value);
		
		Если Не ЗначениеЗаполнено(DFMName) Тогда 
			Сообщить("In line " + НомерСтроки + " DFM name is empty!");
			БылиОшибки = Истина;
		КонецЕсли;

		Если БылиОшибки Тогда 
			НомерСтроки = НомерСтроки + 1;
			rs.MoveNext();
			Продолжить;
		КонецЕсли;

		СтрокаТЗ = ТаблицаДанных.Добавить();
		СтрокаТЗ.AUCode = AUCode;
		СтрокаТЗ.SubSubSegment = SubSubSegment;
		СтрокаТЗ.DFMName = DFMName;
		
		НомерСтроки = НомерСтроки + 1;
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейКС() 
	
	ЕстьОшибки = Ложь;
	
	Для Каждого Стр из ТаблицаДанных Цикл 
		
		SubSubSegment = Неопределено;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Сегменты.Ссылка КАК SubSubSegment
		|ИЗ
		|	Справочник.Сегменты КАК Сегменты
		|ГДЕ
		|	Сегменты.Код = &Код
		|	И Сегменты.Родитель <> ЗНАЧЕНИЕ(справочник.Сегменты.ПустаяСсылка)
		|	И НЕ Сегменты.ЭтоГруппа";
		
		Запрос.УстановитьПараметр("Код", Стр.SubSubSegment);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл  
			
			SubSubSegment = Выборка.SubSubSegment;
			
			МенеджерЗаписи = РегистрыСведений.AUsSubSubSegmentsDFMName.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.AUCode = Стр.AUCode;
			МенеджерЗаписи.SubSubSegment = SubSubSegment;
			МенеджерЗаписи.DFMName = Стр.DFMName;			
			
			Попытка
				МенеджерЗаписи.Записать();
			Исключение
				Сообщить("Failed to save DFM name for AU Code <" + Стр.AUCode + "> and SubSubSegment <" + SubSubSegment + ">:" 
				+ ОписаниеОшибки());
				ЕстьОшибки = Истина;
			КонецПопытки;
			
		КонецЦикла;
		
		Если SubSubSegment = Неопределено Тогда 
			
			Сообщить("Failed to find SubSubSegment by code <" + СокрЛП(Стр.SubSubSegment) + ">.");
			ЕстьОшибки = Истина;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Если ЕстьОшибки Тогда
		Сообщить("File was loaded with errors.");
	Иначе
		Сообщить("File was successfully loaded.");	
	КонецЕсли;
	
КонецПроцедуры

СоответствиеСинонимовИимен = Новый Соответствие;
СоответствиеСинонимовИимен.Вставить("ColumnAUCode", "Accounting Unit");
СоответствиеСинонимовИимен.Вставить("ColumnSubSubSegment", "SubSubSegment");
СоответствиеСинонимовИимен.Вставить("ColumnDFMName", "DFM name");


