
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Файлы xls (*.xls)|*.xls|Файлы xlsx (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

#Если не ВебКлиент Тогда
&НаКлиенте
Процедура Load(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	 
	Состояние("File loading...");
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	
	Файл = Новый Файл(FullPath);
	ПолноеИмяXLSФайла = Неопределено;
	РасширениеФайла = НРег(Файл.Расширение);
	
	Если РасширениеФайла = ".xls" или РасширениеФайла = ".xlsx" Тогда
		
		ПолноеИмяXLSФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
		КопироватьФайл(FullPath, ПолноеИмяXLSФайла);
		
	КонецЕсли; 
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяXLSФайла);
	АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	  	
	ЗагрузитьДанныеНаСервере(АдресФайла, РасширениеФайла);
	
	УдалитьФайлы(ПолноеИмяXLSФайла);
	
	Сообщить("File was successfully loaded.");
	
КонецПроцедуры

#КонецЕсли

&НаСервере
Процедура ЗагрузитьДанныеНаСервере(АдресФайла, РасширениеФайла)
	
	ПолноеИмяXLSФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(ПолноеИмяXLSФайла);

	ЗагрузитьДанныеИзФайла(ПолноеИмяXLSФайла);
		
КонецПроцедуры


//загрузка AU из Excel-файла 
&НаСервере
Процедура ЗагрузитьДанныеИзФайла(ПолноеИмяФайла) Экспорт 
	
	ТекстОшибок = "";
	
	МассивСтруктурAU = ПолучитьМассивСтруктурAUИзФайла(ТекстОшибок, ПолноеИмяФайла);
	
	Если ПустаяСтрока(ТекстОшибок) Тогда
		ЗагрузитьAU(ТекстОшибок, МассивСтруктурAU);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибок) Тогда 
		РГСофт.СообщитьИЗалоггировать(
			"В ходе загрузки AU_master.xls возникли ошибки!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ТекстОшибок + ОписаниеОшибки());
	КонецЕсли;
		
КонецПроцедуры
     
&НаСервере
Функция ПолучитьМассивСтруктурAUИзФайла(ТекстОшибок, ПолноеИмяФайла)
	
	МассивСтруктурAU = Новый Массив;
		
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ТекстОшибок = ТекстОшибок + ОписаниеОшибки();
		КонецПопытки;
	КонецПопытки;
		
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	ЛистЭксель = rs.Fields("TABLE_NAME").Value;
	
	sqlString = "select * from [" + ЛистЭксель + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
 
	// { RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665 - Добавил SubGeomarket
	СвойстваСтруктуры = "AccountingUnit,Description,Location,Segment,SubSegment,SsubSegment,AstActivity,Company,Area,Geomarket,SubGeomarket";
	// } RGS AArsentev 6/23/2016 12:50:20 PM - S-I-0001665
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	
	CompanyForLoading = Константы.FiscalParentCompany.Получить();
	CompanyNo = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(CompanyForLoading, "CompanyNo")); 
	
	НомерСтроки = 0;
	Пока rs.EOF = 0 Цикл
		
		НомерСтроки = НомерСтроки + 1;
						
		Если НомерСтроки = 1 Тогда 
			
			СтруктураИменИНомеровКолонок = ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок);
			
			Если Не ПустаяСтрока(ТекстОшибок) Тогда 
				Прервать;
			КонецЕсли;
			
			rs.MoveNext();
			Продолжить;
			
		КонецЕсли;
		
		//добавляем значение каждой ячейки файла в структуру значений
		Для Каждого ЭлементСтруктуры из СтруктураИменИНомеровКолонок Цикл 
			
			ЗначениеЯчейки = rs.Fields(ЭлементСтруктуры.Значение-1).Value;
			СтруктураЗначенийСтроки[ЭлементСтруктуры.Ключ] = ЗначениеЯчейки;
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.AccountingUnit) Тогда 
			Прервать;
		КонецЕсли;
		
		// { RGS LFedotova 24.07.2017 15:44:39 - вопрос SLI-0007313
		//Если СтруктураЗначенийСтроки.Company <> CompanyNo ИЛИ СтруктураЗначенийСтроки.Area <> "RCA" 
		Если СтруктураЗначенийСтроки.Company <> CompanyNo ИЛИ СтруктураЗначенийСтроки.Area <> "RUS" 
		// } RGS LFedotova 24.07.2017 15:45:08 - вопрос SLI-0007313
			ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.Segment)
			ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSegment)
			ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SsubSegment) Тогда
			rs.MoveNext();
			Продолжить;
		КонецЕсли;
		         		
		
		//добавляем новую структуру и пытаемся заполнить	
		Попытка
			
			СтруктураAU = Новый Структура(СвойстваСтруктуры);
			
			Для Каждого ЭлементСтруктурыЗначений из СтруктураЗначенийСтроки Цикл 
				СтруктураAU[ЭлементСтруктурыЗначений.Ключ] = ЭлементСтруктурыЗначений.Значение;	
			КонецЦикла;
			
			СтруктураAU.Вставить("НомерСтрокиФайла", НомерСтроки);
			
			МассивСтруктурAU.Добавить(СтруктураAU);
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
			|не удалось загрузить данные в строке №" + НомерСтроки + " в колонке '" + ЭлементСтруктурыЗначений.Ключ + "'!";
		КонецПопытки;
		
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	Возврат МассивСтруктурAU;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок)
	
	СтруктураКолонокИИндексов = Новый Структура(СвойстваСтруктуры);
	
	НомерКолонки = 1;
	Для Каждого Field из rs.Fields Цикл 
		
		ТекстЯчейки = СокрЛП(Field.Value);
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли; 
		
		Если ТекстЯчейки = "Accounting Unit" Тогда
			СтруктураКолонокИИндексов.AccountingUnit = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Description" Тогда
			СтруктураКолонокИИндексов.Description = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Location" Тогда
			СтруктураКолонокИИндексов.Location = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Segment" Тогда
			СтруктураКолонокИИндексов.Segment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SubSegment" или ТекстЯчейки = "Sub Segment" Тогда
			СтруктураКолонокИИндексов.SubSegment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SubSubSegment" или ТекстЯчейки = "SsubSegment" или ТекстЯчейки = "Ssub Segment" Тогда
			СтруктураКолонокИИндексов.SsubSegment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "AstActivity" Тогда
			СтруктураКолонокИИндексов.AstActivity = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Company" Тогда
			СтруктураКолонокИИндексов.Company = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Area" Тогда
			СтруктураКолонокИИндексов.Area = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Geomarket" Тогда
			СтруктураКолонокИИндексов.Geomarket = НомерКолонки;
			// { RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
		ИначеЕсли ТекстЯчейки = "Sub Geomarket" Тогда
			СтруктураКолонокИИндексов.SubGeomarket = НомерКолонки;
			// } RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
      	КонецЕсли;   
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Для Каждого КлючИЗначение Из СтруктураКолонокИИндексов Цикл
		
		Если КлючИЗначение.Значение = Неопределено Тогда
			ТекстОшибок = ТекстОшибок + "
			|необходимо проверить наличие колонки с данными '" + КлючИЗначение.Ключ + "'!";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураКолонокИИндексов;
	
КонецФункции
	
&НаСервере
Процедура ЗагрузитьAU(ТекстОшибок, МассивСтруктурAU) 
	                  		     	
	ТЗДанныхAU = ПолучитьДанныеДляЗаполненияAU(МассивСтруктурAU);
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(ТЗДанныхAU, "Код");
	
	Для Каждого СтруктураAU из МассивСтруктурAU Цикл 
		
		НачатьТранзакцию();
		
		Попытка
			//Ищем AU по коду. Если не нашли - создаем.
			Отбор = Новый Структура();
			Отбор.Вставить("Код",СтруктураAU.AccountingUnit);
			Строки = ТЗДанныхAU.НайтиСтроки(Отбор);	
			Для каждого СтрокаДанныхAU Из Строки Цикл
				AUОбъект = СтрокаДанныхAU.AU.ПолучитьОбъект();
				AUОбъект.Geomarket = Справочники.GeoMarkets.НайтиПоКоду(СтруктураAU.Geomarket);  
				AUОбъект.SubGeomarket = Справочники.GeoMarkets.НайтиПоКоду(СтруктураAU.SubGeomarket); 
				AUОбъект.ОбменДанными.Загрузка = Истина;
			    AUОбъект.Записать();
			КонецЦикла; 

			ЗафиксироватьТранзакцию();
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
				|не удалось записать Accounting Unit '"+ СтруктураAU.AccountingUnit + "' в строке №"+ СтруктураAU.НомерСтрокиФайла + ",
				|"+ ОписаниеОшибки();
				
			ОтменитьТранзакцию();
				
		КонецПопытки;   
		
	КонецЦикла; 	
		
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеДляЗаполненияAU(МассивСтруктурAU)
	
	Запрос = Новый Запрос;
	
	МассивКодов = Новый Массив;
	Для Каждого СтруктураAU из МассивСтруктурAU Цикл 
		МассивКодов.Добавить(СтруктураAU.AccountingUnit);
	КонецЦикла; 
	
    Запрос.УстановитьПараметр("МассивКодов", МассивКодов);

	//-> RG-Soft VIvanov 2015/02/18
	Запрос.Текст = "ВЫБРАТЬ
	               |	КостЦентры.Ссылка КАК AU,
	               |	КостЦентры.Код,
	               |	КостЦентры.Наименование,
	               |	КостЦентры.Сегмент,
	               |	КостЦентры.ПодразделениеОрганизации,
	               |	КостЦентры.DefaultActivity,
	               |	КостЦентры.SubSegment,
	               |	КостЦентры.Segment
	               |ИЗ
	               |	Справочник.КостЦентры КАК КостЦентры
	               |ГДЕ
	               |	НЕ КостЦентры.ПометкаУдаления
	               |	И КостЦентры.Код В(&МассивКодов)";
	        		
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(ТекущаяДата()));			   
	//<- RG-Soft VIvanov        		
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

&НаСервере
Функция ЗаполнитьAU(СтрокаДанныхAU, Стр)
	//Добавила Федотова Л., РГ-Софт, 28.04.16, вопрос SLI-0006427
	Перем Segment, SubSegment, SsubSegment;
	//
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Часть кода по изменению струкруры сегментов перенесла в общий модуль, 
	//чтобы можно было использовать при загрузке DSS
	//Федотова Л., РГ-Софт, 28.04.16, вопрос SLI-0006427
	РГСофт.ИзменитьСтруктуруСегментов(Стр, Segment, SubSegment, SsubSegment);
	
	//-> RG-Soft VIvanov 2015/02/18
	Если СтрокаДанныхAU = Неопределено Тогда 
		AUОбъект = Справочники.КостЦентры.СоздатьЭлемент();
		AUОбъект.ДополнительныеСвойства.Вставить("ЗагрузкаИзDSS", Истина);
	Иначе
		Если Segment <> СтрокаДанныхAU.Segment Или SubSegment <> СтрокаДанныхAU.SubSegment Или SsubSegment <> СтрокаДанныхAU.Сегмент Тогда
			AUОбъект = Справочники.КостЦентры.СоздатьЭлемент();
			AUОбъект.ДополнительныеСвойства.Вставить("ЗагрузкаИзDSS", Истина);
		Иначе
			AUОбъект = СтрокаДанныхAU.AU.ПолучитьОбъект();
		КонецЕсли;
	КонецЕсли;
			
	//Заполняем реквизиты в AU
	AUОбъект.Код                      = СокрЛП(Стр.AccountingUnit);
	AUОбъект.Наименование             = СокрЛП(Стр.Description);
	AUОбъект.DefaultActivity          = СокрЛП(Стр.AstActivity);
	//<- RG-Soft VIvanov
	     	
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Segment, Segment);
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubSegment, SubSegment);	
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Сегмент, SsubSegment);
	
	// ( RGS AArsentev 7/08/2016 16:23:48 PM - S-I-0001665
    ЗаполнитьИзФайла(AUОбъект, Стр);
	// } RGS AArsentev 7/08/2016 16:23:48 PM - S-I-0001665

	ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.НайтиПоКоду(СокрЛП(Стр.Location));
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.ПодразделениеОрганизации, ПодразделениеОрганизации);
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Non-critical error: не найдено подразделение организации '" + СокрЛП(Стр.Location) + "' в строке №" + Стр.НомерСтрокиФайла +"!");	
		НовоеПодразделение = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
		НовоеПодразделение.Код = СокрЛП(Стр.Location);
		НовоеПодразделение.Наименование = СокрЛП(Стр.Location);
		НовоеПодразделение.Владелец = Справочники.Организации.НайтиПоКоду("00001");
		НовоеПодразделение.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.ПодразделениеОрганизации, НовоеПодразделение.Ссылка);
	КонецЕсли;
	
	// { RGS LFedotova 23.09.2016 10:11:39 - вопрос SLI-0006775
	Geomarket = Справочники.GeoMarkets.НайтиПоКоду(СокрЛП(Стр.Geomarket));
	Если ЗначениеЗаполнено(Geomarket) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Geomarket, Geomarket);
	Иначе 
		NewGeomarket = Справочники.GeoMarkets.СоздатьГруппу();	
		NewGeomarket.Код = СокрЛП(Стр.Geomarket);
		NewGeomarket.Наименование = СокрЛП(Стр.Geomarket);
		NewGeomarket.Родитель = Справочники.GeoMarkets.НайтиПоКоду("RCA"); //Гео!
		NewGeomarket.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Geomarket, NewGeomarket.Ссылка);
	КонецЕсли;
	
	SubGeomarket = Справочники.GeoMarkets.НайтиПоКоду(СокрЛП(Стр.SubGeomarket));
	Если ЗначениеЗаполнено(SubGeomarket) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubGeomarket, SubGeomarket);
	Иначе 
		NewSubGeomarket = Справочники.GeoMarkets.СоздатьГруппу();	
		NewSubGeomarket.Код = СокрЛП(Стр.SubGeomarket);
		NewSubGeomarket.Наименование = СокрЛП(Стр.SubGeomarket);
		NewSubGeomarket.Родитель = Geomarket;
		NewSubGeomarket.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubGeomarket, NewSubGeomarket.Ссылка);
	КонецЕсли;
	// } RGS LFedotova 23.09.2016 10:12:40 - вопрос SLI-0006775
	
	Возврат AUОбъект;
	
КонецФункции


&НаСервере
Процедура ЗаполнитьИзФайла(AU, СтруктураAU)
	
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	GeoMarkets.Ссылка КАК СубГеомаркет,
	|	GeoMarkets.Родитель КАК Геомаркет
	|ИЗ
	|	Справочник.GeoMarkets КАК GeoMarkets
	|ГДЕ
	|	GeoMarkets.Ссылка.Код = &СубГеомаркет
	|	И GeoMarkets.Родитель.Код = &Геомаркет
	|	И GeoMarkets.ЭтоГруппа
	|	И GeoMarkets.Родитель.ЭтоГруппа";
	Запрос.УстановитьПараметр("СубГеомаркет", СокрЛП(СтруктураAU.SubGeomarket));
	Запрос.УстановитьПараметр("Геомаркет", СокрЛП(СтруктураAU.Geomarket));
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 1 тогда
		Если  Результат[0].Геомаркет.Родитель.Родитель = Справочники.GeoMarkets.ПустаяСсылка()  тогда 
			Если Результат[0].СубГеомаркет.Родитель = Результат[0].Геомаркет тогда
				РГСофтКлиентСервер.УстановитьЗначение(AU.Geomarket, Результат[0].Геомаркет);
				РГСофтКлиентСервер.УстановитьЗначение(AU.SubGeomarket, Результат[0].СубГеомаркет);
			иначе
				РГСофтКлиентСервер.УстановитьЗначение(AU.Geomarket, Результат[0].СубГеомаркет.Родитель);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьФайлНаКлиенте(Команда)
	
	РГСофт.ЗагрузитьAccountingUnitsИзAU_master_клиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлНаСервере(Команда)
	
	ЗагрузитьФайлСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайлСервер()

	Обработки.AULoading.ЗагрузитьAccountingUnitsИзAU_master2();	
	
КонецПроцедуры // ()


