
//Производит загрузку Accounting units из excel-файла "AU_master" с hub'a 

//регламентное задание
Процедура ЗагрузитьAccountingUnitsИзAU_master(ВыбранныеНомераAU = Неопределено) Экспорт
	
	Если ВыбранныеНомераAU = Неопределено Тогда
	
		ВыбранныеНомераAU = Новый Массив;	
	
	КонецЕсли; 
	
	//http://www.hub.slb.com/display/index.do?id=id2501787
	//http://reports.lawson.slb.com/londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip
	//http://financereports.lawson.slb.com/londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//закомментировала
	//получим файл 
	СерверИсточник = "reports.lawson.slb.com";
	СтрокаПараметраПолучения = "londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip";
	//ОбработкаПолученияФайлов = Обработки.ПолучениеФайловИзИнтернета.Создать();
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	ВремКаталог = КаталогВременныхФайлов() + "tempAUs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог, "*.*");
	ИмяВходящегоФайла = "" + ВремКаталог + "\" + "AU_master.zip";
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//добавила
	//получим файл из Хранилища и запишем во временный каталог
	//Попытка
	//	ДвоичныеДанные = Справочники.СохраненныеНастройки.AU_master.ХранилищеНастроек.Получить();
	//	ДвоичныеДанные.Записать(ИмяВходящегоФайла);
	//Исключение
	//	РГСофт.СообщитьИЗалоггировать(
	//		"Не удалось получить файл AU_master.zip из временного хранилища",
	//		УровеньЖурналаРегистрации.Ошибка,
	//		Метаданные.Обработки.AULoading,
	//		Неопределено);
	//	УдалитьФайлы(ВремКаталог,"*.*");
	//	Возврат;
	//КонецПопытки;
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//закомментировала
	Если ЗапроситьФайлыССервера(СерверИсточник, СтрокаПараметраПолучения, ИмяВходящегоФайла) <> Истина Тогда
		РГСофт.СообщитьИЗалоггировать(
			"Не удалось скачать файл AU_master.zip",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	КонецЕсли; 
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	//разархивируем файл
	Попытка
		ZipЧтение = Новый ЧтениеZipФайла(ИмяВходящегоФайла);
		ЭлементZipФайла = ZipЧтение.Элементы[0];
	Исключение
		РГСофт.СообщитьИЗалоггировать("Не удалось разархивировать AU_master.zip!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ОписаниеОшибки());
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	КонецПопытки;
	
	// { RGS LFedotova 31.01.2018 13:48:34 - вопрос S-I-0004504
	//Если СтрНайти(ЭлементZipФайла.Имя, "xls") = 0 Тогда
	Если СтрНайти(ЭлементZipФайла.Имя, "csv") = 0 Тогда
		РГСофт.СообщитьИЗалоггировать("ZIP-файл AU_master.zip не содержит csv-file!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
		// { RGS LFedotova 31.01.2018 22:24:06 - вопрос S-I-0004504
		//УдалитьФайлы(ВремКаталог,"*.*");
		//Возврат;
		// } RGS LFedotova 31.01.2018 22:24:12 - вопрос S-I-0004504
	КонецЕсли;	
	ZipЧтение.Извлечь(ЭлементZipФайла, ВремКаталог, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
		
	ПолноеИмяФайла = ВремКаталог + "\" + ЭлементZipФайла.Имя;
	     		
	//загрузим файл
	// { RGS LFedotova 31.01.2018 22:26:14 - вопрос S-I-0004504
	ФайлЗагружен = Ложь;
	// } RGS LFedotova 31.01.2018 22:26:24 - вопрос S-I-0004504
	Попытка
	    ВыбранныеНомераAU = Новый Массив;
	// { RGS LFedotova 31.01.2018 22:26:14 - вопрос S-I-0004504
		//ЗагрузитьДанныеИзФайла(ПолноеИмяФайла,ВыбранныеНомераAU);
		ЗагрузитьДанныеИзФайла_csv(ПолноеИмяФайла,ВыбранныеНомераAU);
		ФайлЗагружен = Истина;
	// } RGS LFedotova 31.01.2018 22:26:24 - вопрос S-I-0004504
	Исключение
		РГСофт.СообщитьИЗалоггировать(
			"Не удалось загрузить файл AU_master.zip",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ОписаниеОшибки());
		КонецПопытки;
		
	// { RGS LFedotova 31.01.2018 22:26:14 - вопрос S-I-0004504
	Если НЕ ФайлЗагружен Тогда
		
		Если СтрНайти(ЭлементZipФайла.Имя, "xls") = 0 Тогда
			РГСофт.СообщитьИЗалоггировать("ZIP-файл AU_master.zip не содержит xls-file!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
			УдалитьФайлы(ВремКаталог,"*.*");
			Возврат;
		КонецЕсли;
		
		Попытка
		    ВыбранныеНомераAU = Новый Массив;
			ЗагрузитьДанныеИзФайла_xls(ПолноеИмяФайла,ВыбранныеНомераAU);
		Исключение
			РГСофт.СообщитьИЗалоггировать(
				"Не удалось загрузить файл AU_master.zip",
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Обработки.AULoading,
				Неопределено,
				ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли; 
	// } RGS LFedotova 31.01.2018 22:26:24 - вопрос S-I-0004504

	УдалитьФайлы(ВремКаталог,"*.*");
       	
КонецПроцедуры // ЗагрузитьAccountingUnitsИзAU_master()

//регламентное задание
Процедура ЗагрузитьAccountingUnitsИзAU_master2() Экспорт
	
	//http://www.hub.slb.com/display/index.do?id=id2501787
	//http://reports.lawson.slb.com/londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip
	//http://financereports.lawson.slb.com/londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//закомментировала
	//получим файл 
	//СерверИсточник = "reports.lawson.slb.com";
	//СтрокаПараметраПолучения = "londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip";
	//ОбработкаПолученияФайлов = Обработки.ПолучениеФайловИзИнтернета.Создать();
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	ВремКаталог = КаталогВременныхФайлов() + "tempAUs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог, "*.*");
	ИмяВходящегоФайла = "" + ВремКаталог + "\" + "AU_master.zip";
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//добавила
	//получим файл из Хранилища и запишем во временный каталог
	Попытка
		ДвоичныеДанные = Справочники.СохраненныеНастройки.AU_master.ХранилищеНастроек.Получить();
		ДвоичныеДанные.Записать(ИмяВходящегоФайла);
	Исключение
		РГСофт.СообщитьИЗалоггировать(
			"Не удалось получить файл AU_master.zip из временного хранилища",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	КонецПопытки;
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	// { RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	//закомментировала
	//Если ЗапроситьФайлыССервера(СерверИсточник, СтрокаПараметраПолучения, ИмяВходящегоФайла) <> Истина Тогда
	//	РГСофт.СообщитьИЗалоггировать(
	//		"Не удалось скачать файл AU_master.zip",
	//		УровеньЖурналаРегистрации.Ошибка,
	//		Метаданные.Обработки.AULoading,
	//		Неопределено);
	//	УдалитьФайлы(ВремКаталог,"*.*");
	//	Возврат;
	//КонецЕсли; 
	// } RGS LFedotova 13.03.2017 - вопрос SLI-0007202
	
	//разархивируем файл
	Попытка
		ZipЧтение = Новый ЧтениеZipФайла(ИмяВходящегоФайла);
		ЭлементZipФайла = ZipЧтение.Элементы[0];
	Исключение
		РГСофт.СообщитьИЗалоггировать("Не удалось разархивировать AU_master.zip!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ОписаниеОшибки());
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	КонецПопытки;
	
	// { RGS LFedotova 31.01.2018 13:48:34 - вопрос S-I-0004504
	//Если СтрНайти(ЭлементZipФайла.Имя, "xls") = 0 Тогда
	Если СтрНайти(ЭлементZipФайла.Имя, "csv") = 0 Тогда
		РГСофт.СообщитьИЗалоггировать("ZIP-файл AU_master.zip не содержит csv-file!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	ИначеЕсли СтрНайти(ЭлементZipФайла.Имя, "xls") = 0 Тогда
	// } RGS LFedotova 31.01.2018 13:49:05 - вопрос S-I-0004504 
		РГСофт.СообщитьИЗалоггировать("ZIP-файл AU_master.zip не содержит xls-file!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено);
		УдалитьФайлы(ВремКаталог,"*.*");
		Возврат;
	КонецЕсли;
		
	ZipЧтение.Извлечь(ЭлементZipФайла, ВремКаталог, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
		
	ПолноеИмяФайла = ВремКаталог + "\" + ЭлементZipФайла.Имя;
	     		
	//загрузим файл
	Попытка
	    ВыбранныеНомераAU = Новый Массив;
		//ЗагрузитьДанныеИзФайла(ПолноеИмяФайла,ВыбранныеНомераAU);
		ЗагрузитьДанныеИзФайла_csv(ПолноеИмяФайла,ВыбранныеНомераAU);
		//ЗагрузитьДанныеИзФайла_xls(ПолноеИмяФайла,ВыбранныеНомераAU);
	Исключение
		РГСофт.СообщитьИЗалоггировать(
			"Не удалось загрузить файл AU_master.zip",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ОписаниеОшибки());
	КонецПопытки;

	УдалитьФайлы(ВремКаталог,"*.*");
       	
КонецПроцедуры // ЗагрузитьAccountingUnitsИзAU_master()

// Функция получает файлы с сервера с указанными параметрами и сохраняет на диск
//
// Параметры:
//  HTTP - HTTPСоединение, если приходится использовать данную функцию в цикле, то тут передается
//         переменная с созданным в предыдущей итерации цикла HTTPСоединением
// СерверИсточникПараметр - Строка, сервер, с которого необходимо получить файлы
// СтрокаПараметраПолученияПараметр - Строка, адрес ресурса на сервере.
// ИмяВходящегоФайлаПараметр - Имя файла, в который помещаются данные полученного ресурса.
//
// Возвращаемое значение:
//  Булево - Успешно получены файлы или нет.
//
Функция ЗапроситьФайлыССервера(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр, HTTP = Неопределено)

	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;
	
	// { RGS LFedotova 10.03.2017 - вопрос SLI-0007201
	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
		//HTTP = Новый HTTPСоединение(СерверИсточник)
		HTTP = Новый HTTPСоединение(СерверИсточник, , , , , , , Истина);
	КонецЕсли; 
	
	Попытка
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции


// Функция получает файлы с сервера с указанными параметрами и сохраняет на диск
//
// Параметры:
//  HTTP - HTTPСоединение, если приходится использовать данную функцию в цикле, то тут передается
//         переменная с созданным в предыдущей итерации цикла HTTPСоединением
// СерверИсточникПараметр - Строка, сервер, с которого необходимо получить файлы
// СтрокаПараметраПолученияПараметр - Строка, адрес ресурса на сервере.
// ИмяВходящегоФайлаПараметр - Имя файла, в который помещаются данные полученного ресурса.
//
// Возвращаемое значение:
//  Булево - Успешно получены файлы или нет.
//
Функция ЗапроситьФайлыССервера2(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр, HTTP = Неопределено)

	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;
	
	// { RGS LFedotova 10.03.2017 - вопрос SLI-0007201
	//Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
	//	HTTP = Новый HTTPСоединение(СерверИсточник)
	//КонецЕсли; 
	//
	//Попытка
	//	HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
	//	Возврат Истина;
	//Исключение
	//	Возврат Ложь;
	//КонецПопытки;
	
	Попытка
        XMLHttp = Новый COMObject("Microsoft.XMLHTTP");
	Исключение
		Возврат Ложь;
		//Сообщить(Строка(ТекущаяДата()) + " Ошибка создания объекта 'Microsoft.XMLHTTP': " + ОписаниеОшибки());
    КонецПопытки;    
	//СерверИсточник = "reports.lawson.slb.com";
	//СтрокаПараметраПолучения = "londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip";
	//СсылкаЗапроса  = "http://" + СерверИсточник + "/" + СтрокаПараметраПолучения;
	СсылкаЗапроса  = "http://reports.lawson.slb.com/londonmis2/Lawson/MasterData/MasterDataTables/AU_MASTER.zip";
	Попытка
		XMLHttp.open("GET", СсылкаЗапроса, Ложь,"LFedotova","Ytghjnbd7!");
		//XMLHttp.open("GET", СсылкаЗапроса, Ложь,);
	Исключение
		Возврат Ложь;
		//Сообщить(Строка(ТекущаяДата()) + " Ошибка инициализации запроса HTTP: " + ОписаниеОшибки());
    КонецПопытки;
    
    //отправляем запрос
    Попытка
        XMLHttp.send();
	Исключение
		Возврат Ложь;
		//Сообщить(Строка(ТекущаяДата()) + " Ошибка отправки запроса HTTP: " + ОписаниеОшибки());
    Конецпопытки;
    
    //проверка и обработка ответа
	Если XMLHttp.status = 200 тогда
	    Ответ = XMLHttp.responsetext;
	    //1 - Успех
	    //-1 - Отказ
	    //Текст - ТекстОшибки
	    //Сообщить(Ответ);
	Иначе
		Возврат Ложь;
		//Сообщить(Строка(ТекущаяДата()) + " Ошибка - статус: " + Строка(XMLHttp.StatusText));
	Конецесли;
    	
	s = Новый ComОбъект("ADODB.Stream");
	s.Mode = 3;
	s.Type = 1;
	s.Open();
	s.Write(XMLHttp.responseBody);
	//s.SaveToFile("D:\Temp\tempAUs\AU_MASTER.zip");
	s.SaveToFile(ИмяВходящегоФайла);
	s.Close();
	Возврат Истина;
	// } RGS LFedotova 10.03.2017 - вопрос SLI-0007201
	
КонецФункции


//загрузка AU из Excel-файла 
Процедура ЗагрузитьДанныеИзФайла_xls(ПолноеИмяФайла, ВыбранныеНомераAU) Экспорт 
	
	ТекстОшибок = "";
	
	МассивСтруктурAU = ПолучитьМассивСтруктурAUИзФайла_xls(ТекстОшибок, ПолноеИмяФайла, ВыбранныеНомераAU);
	
	Если ПустаяСтрока(ТекстОшибок) Тогда
		ЗагрузитьAU(ТекстОшибок, МассивСтруктурAU);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибок) Тогда 
		РГСофт.СообщитьИЗалоггировать(
			"В ходе загрузки AU_master.xls возникли ошибки!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ТекстОшибок + ОписаниеОшибки());
	КонецЕсли;
		
КонецПроцедуры
     
//загрузка AU из csv-файла 
Процедура ЗагрузитьДанныеИзФайла_csv(ПолноеИмяФайла, ВыбранныеНомераAU) Экспорт 
	
	ТекстОшибок = "";
	
	МассивСтруктурAU = ПолучитьМассивСтруктурAUИзФайла_csv(ТекстОшибок, ПолноеИмяФайла, ВыбранныеНомераAU);
	
	Если ПустаяСтрока(ТекстОшибок) Тогда
		ЗагрузитьAU(ТекстОшибок, МассивСтруктурAU);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибок) Тогда 
		РГСофт.СообщитьИЗалоггировать(
			"В ходе загрузки AU_master.xls возникли ошибки!",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Обработки.AULoading,
			Неопределено,
			ТекстОшибок + ОписаниеОшибки());
	КонецЕсли;
		
КонецПроцедуры
     
Функция ПолучитьМассивСтруктурAUИзФайла_xls(ТекстОшибок, ПолноеИмяФайла, ВыбранныеНомераAU)
	
	МассивСтруктурAU = Новый Массив;
		
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ТекстОшибок = ТекстОшибок + ОписаниеОшибки();
		КонецПопытки;
	КонецПопытки;
		
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	ЛистЭксель = rs.Fields("TABLE_NAME").Value;
	
	sqlString = "select * from [" + ЛистЭксель + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
 
	// { RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665 - Добавил SubGeomarket
	СвойстваСтруктуры = "AccountingUnit,Description,Location,Segment,SubSegment,SubSubSegment,AstActivity,Company,Area,Geomarket,SubGeomarket";
	// } RGS AArsentev 6/23/2016 12:50:20 PM - S-I-0001665
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	
	CompanyForLoading = Константы.FiscalParentCompany.Получить();
	CompanyNo = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(CompanyForLoading, "CompanyNo")); 
	
	НомерСтроки = 0;
	// { RGS LFedotova 21.02.2018 16:29:23 - вопрос S-I-0004686
	ТекНомерAU = "";
	// } RGS LFedotova 21.02.2018 16:29:31 - вопрос S-I-0004686 
	Пока rs.EOF = 0 Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
					
		Если НомерСтроки = 1 Тогда 
			
			СтруктураИменИНомеровКолонок = ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок);
			
			Если Не ПустаяСтрока(ТекстОшибок) Тогда 
				Прервать;
			КонецЕсли;
			
			rs.MoveNext();
			Продолжить;
			
		КонецЕсли;
		
		//добавляем значение каждой ячейки файла в структуру значений
		Для Каждого ЭлементСтруктуры из СтруктураИменИНомеровКолонок Цикл 
			
			ЗначениеЯчейки = rs.Fields(ЭлементСтруктуры.Значение-1).Value;
			СтруктураЗначенийСтроки[ЭлементСтруктуры.Ключ] = ЗначениеЯчейки;
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.AccountingUnit) Тогда 
			Прервать;
		КонецЕсли;
		
		
		Если ВыбранныеНомераAU.Количество() > 0 Тогда
			Если ВыбранныеНомераAU.Найти(СтруктураЗначенийСтроки.AccountingUnit) = Неопределено
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.Segment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSegment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSubSegment) Тогда
				rs.MoveNext();
				Продолжить;
			КонецЕсли;
		Иначе
			// { RGS LFedotova 21.02.2018 12:29:51 - вопрос S-I-0004686
			//// { RGS LFedotova 24.07.2017 15:44:39 - вопрос SLI-0007313
			////Если СтруктураЗначенийСтроки.Company <> CompanyNo ИЛИ СтруктураЗначенийСтроки.Area <> "RCA" 
			//Если СтруктураЗначенийСтроки.Company <> CompanyNo ИЛИ СтруктураЗначенийСтроки.Area <> "RUS" 
			//// } RGS LFedotova 24.07.2017 15:45:08 - вопрос SLI-0007313
			Если СтруктураЗначенийСтроки.Area <> "RUS" 
			// } RGS LFedotova 21.02.2018 12:32:17 - вопрос S-I-0004686 
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.Segment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSegment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSubSegment) Тогда
				rs.MoveNext();
				Продолжить;
			КонецЕсли;
			// { RGS LFedotova 21.02.2018 14:50:01 - вопрос S-I-0004686
			Если ТекНомерAU = СтруктураЗначенийСтроки.AccountingUnit Тогда
				rs.MoveNext();
				Продолжить;
			Иначе	
				ТекНомерAU = СтруктураЗначенийСтроки.AccountingUnit;
			КонецЕсли; 
			// } RGS LFedotova 21.02.2018 16:27:57 - вопрос S-I-0004686
		КонецЕсли;
		         		
		
		//добавляем новую структуру и пытаемся заполнить	
		Попытка
			
			СтруктураAU = Новый Структура(СвойстваСтруктуры);
			
			Для Каждого ЭлементСтруктурыЗначений из СтруктураЗначенийСтроки Цикл 
				СтруктураAU[ЭлементСтруктурыЗначений.Ключ] = ЭлементСтруктурыЗначений.Значение;	
			КонецЦикла;
			
			СтруктураAU.Вставить("НомерСтрокиФайла", НомерСтроки);
			
			МассивСтруктурAU.Добавить(СтруктураAU);
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
			|не удалось загрузить данные в строке №" + НомерСтроки + " в колонке '" + ЭлементСтруктурыЗначений.Ключ + "'!";
		КонецПопытки;
		
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	Возврат МассивСтруктурAU;
	
КонецФункции

// { RGS LFedotova 31.01.2018 17:44:29 - вопрос S-I-0004504
Функция ПолучитьМассивСтруктурAUИзФайла_csv(ТекстОшибок, ПолноеИмяФайла, ВыбранныеНомераAU)
	
	МассивСтруктурAU = Новый Массив;
	
	ЗагружаемыйФайл = Новый Файл(ПолноеИмяФайла);
	
	ФайлСхемы = Новый ТекстовыйДокумент;
	ФайлСхемы.ДобавитьСтроку("["+ ЗагружаемыйФайл.Имя +"]" 
	+ Символы.ПС + "DecimalSymbol=."
	+ Символы.ПС + "MaxScanRows=0"
	+ Символы.ПС + "Format=CSVDelimited");
	ФайлСхемы.Записать(ЗагружаемыйФайл.Путь + "schema.ini", КодировкаТекста.OEM);
	
	SQLЗапрос = "SELECT *
	|FROM " + ЗагружаемыйФайл.Имя;
	
	Connection = Новый COMОбъект("ADODB.Connection");
	
	Recordset = Новый COMОбъект("ADODB.Recordset"); 
	
	//Создаем коннект
	Попытка
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ЗагружаемыйФайл.Путь + ";Extended Properties=""text;HDR=YES;IMEX=1;""";
		Connection.Open(СтрокаПодключения);
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ЗагружаемыйФайл.Путь + ";Extended Properties=""text;HDR=YES;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ВызватьИсключение "Невозможно открыть соединение!" + ОписаниеОшибки();
		КонецПопытки;		
	КонецПопытки;
	
	Recordset = Connection.Execute(SQLЗапрос);
	ТЗ = Новый ТаблицаЗначений;
	КолонкиТЗ = ТЗ.Колонки;
	СоответствиеПолей = Новый Соответствие;
	
	Fields = Recordset.Fields;
	КоличествоКолонок = Fields.Count();
	Для Сч = 0 По КоличествоКолонок - 1  Цикл  
	
		Поле = Fields.Item(Сч);
		ИмяПоля = УдалитьНеКорректныеСимволы(Поле.Name);
		СоответствиеПолей[ИмяПоля] = Поле;
		КолонкиТЗ.Добавить(ИмяПоля);
	
	КонецЦикла;
	
	Recordset.MoveFirst();
	Пока НЕ Recordset.EOF Цикл
		
		НоваяСтрока = ТЗ.Добавить();
		Для каждого ТекЭлемент Из СоответствиеПолей Цикл
		
			НоваяСтрока[ТекЭлемент.Ключ] = СокрЛП(ТекЭлемент.Значение.Value);
		
		КонецЦикла;
		
		Recordset.MoveNext();
		
	КонецЦикла;
	
	RecordSet.Close(); 
	Connection.Close();
	
	СвойстваСтруктуры = "AccountingUnit,Description,Location,Segment,SubSegment,SubSubSegment,AstActivity,Company,Area,Geomarket,SubGeomarket";
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	
	CompanyForLoading = Константы.FiscalParentCompany.Получить();
	CompanyNo = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(CompanyForLoading, "CompanyNo")); 
	
	НомерСтроки = 0;
	// { RGS LFedotova 21.02.2018 20:38:58 - вопрос S-I-0004686
	ТекНомерAU = "";
	// } RGS LFedotova 21.02.2018 20:39:18 - вопрос S-I-0004686 
	Для каждого Строка Из ТЗ Цикл
		
		НомерСтроки = НомерСтроки + 1;
						
		//добавляем значение каждой ячейки файла в структуру значений
		Для Каждого Колонка из ТЗ.Колонки Цикл 
			
			Если Колонка.Имя = "Active" ИЛИ Колонка.Имя = "Country" 
				ИЛИ Колонка.Имя = "MgtCty" ИЛИ Колонка.Имя = "ProductGroup" Тогда
				Продолжить;
			КонецЕсли;
			
			// { RGS LFedotova 28.08.2018 21:18:28 - вопрос S-I-0005907
			Если СтруктураЗначенийСтроки.Свойство(Колонка.Имя) Тогда
			// } RGS LFedotova 28.08.2018 21:20:27 - вопрос S-I-0005907 
				СтруктураЗначенийСтроки[Колонка.Имя] = Строка[Колонка.Имя];
			// { RGS LFedotova 28.08.2018 21:18:28 - вопрос S-I-0005907
			КонецЕсли;
			// } RGS LFedotova 28.08.2018 21:20:27 - вопрос S-I-0005907 
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.AccountingUnit) Тогда 
			Прервать;
		КонецЕсли;
		
		Если ВыбранныеНомераAU.Количество() > 0 Тогда
			Если ВыбранныеНомераAU.Найти(СтруктураЗначенийСтроки.AccountingUnit) = Неопределено
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.Segment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSegment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSubSegment) Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			// { RGS LFedotova 21.02.2018 12:35:14 - вопрос S-I-0004686
			//Если СтруктураЗначенийСтроки.Company <> CompanyNo ИЛИ СтруктураЗначенийСтроки.Area <> "RUS" 
			Если СтруктураЗначенийСтроки.Area <> "RUS" 
			// } RGS LFedotova 21.02.2018 12:35:18 - вопрос S-I-0004686
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.Segment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSegment)
				ИЛИ Не ЗначениеЗаполнено(СтруктураЗначенийСтроки.SubSubSegment) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		// { RGS LFedotova 21.02.2018 20:36:24 - вопрос S-I-0004686
		Если ТекНомерAU = СтруктураЗначенийСтроки.AccountingUnit Тогда
			Продолжить;
		Иначе	
			ТекНомерAU = СтруктураЗначенийСтроки.AccountingUnit;
		КонецЕсли; 
		// } RGS LFedotova 21.02.2018 20:36:45 - вопрос S-I-0004686 
		
		//добавляем новую структуру и пытаемся заполнить	
		Попытка
			
			СтруктураAU = Новый Структура(СвойстваСтруктуры);
			
			Для Каждого ЭлементСтруктурыЗначений из СтруктураЗначенийСтроки Цикл 
				СтруктураAU[ЭлементСтруктурыЗначений.Ключ] = ЭлементСтруктурыЗначений.Значение;	
			КонецЦикла;
			
			СтруктураAU.Вставить("НомерСтрокиФайла", НомерСтроки);
			
			МассивСтруктурAU.Добавить(СтруктураAU);
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
			|не удалось загрузить данные в строке №" + НомерСтроки + " в колонке '" + ЭлементСтруктурыЗначений.Ключ + "'!";
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат МассивСтруктурAU;
	
КонецФункции

Функция УдалитьНеКорректныеСимволы(Знач Строчка)
	
	Строчка = СтрЗаменить(Строчка, " ", "");
	Строчка = СтрЗаменить(Строчка, "#", "");
	Строчка = СтрЗаменить(Строчка, "/", "");
	Строчка = СтрЗаменить(Строчка, "\", "");
	Строчка = СтрЗаменить(Строчка, ".", "");
	
	Возврат Строчка;

КонецФункции
// } RGS LFedotova 31.01.2018 17:44:42 - вопрос S-I-0004504 

Функция ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок)
	
	СтруктураКолонокИИндексов = Новый Структура(СвойстваСтруктуры);
	
	НомерКолонки = 1;
	Для Каждого Field из rs.Fields Цикл 
		
		ТекстЯчейки = СокрЛП(Field.Value);
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли; 
		
		Если ТекстЯчейки = "Accounting Unit" Тогда
			СтруктураКолонокИИндексов.AccountingUnit = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Description" Тогда
			СтруктураКолонокИИндексов.Description = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Location" Тогда
			СтруктураКолонокИИндексов.Location = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "Segment" Тогда
			СтруктураКолонокИИндексов.Segment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SubSegment" или ТекстЯчейки = "Sub Segment" Тогда
			СтруктураКолонокИИндексов.SubSegment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SubSubSegment" или ТекстЯчейки = "SsubSegment" или ТекстЯчейки = "Ssub Segment" Тогда
			СтруктураКолонокИИндексов.SubSubSegment = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "AstActivity" Тогда
			СтруктураКолонокИИндексов.AstActivity = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Company" Тогда
			СтруктураКолонокИИндексов.Company = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Area" Тогда
			СтруктураКолонокИИндексов.Area = НомерКолонки;
      	ИначеЕсли ТекстЯчейки = "Geomarket" Тогда
			СтруктураКолонокИИндексов.Geomarket = НомерКолонки;
			// { RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
		ИначеЕсли ТекстЯчейки = "Sub Geomarket" Тогда
			СтруктураКолонокИИндексов.SubGeomarket = НомерКолонки;
			// } RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
      	КонецЕсли;   
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Для Каждого КлючИЗначение Из СтруктураКолонокИИндексов Цикл
		
		Если КлючИЗначение.Значение = Неопределено Тогда
			ТекстОшибок = ТекстОшибок + "
			|необходимо проверить наличие колонки с данными '" + КлючИЗначение.Ключ + "'!";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураКолонокИИндексов;
	
КонецФункции


//	Соответствие реквизитов справочника Кост-центры и колонок в файле следующее:
//  Код - Accounting Unit
//  Наименование - Description
//  Segment    - Segment (ищется по коду, если не найден, создается новый)
//  SubSegment - SubSegment (ищется по коду, если не найден, создается новый)
//  Сегмент    - SubSubSegment (ищется по коду, если не найден, создается новый)
//  Подразделение организации - Location (ищется по коду)
//  Default activity - AstActivity
Процедура ЗагрузитьAU(ТекстОшибок, МассивСтруктурAU) 
	                  		     	
	ТЗДанныхAU = ПолучитьДанныеДляЗаполненияAU(МассивСтруктурAU);
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(ТЗДанныхAU, "Код");
	
	Для Каждого СтруктураAU из МассивСтруктурAU Цикл 
		
		НачатьТранзакцию();
		
		Попытка
			//Ищем AU по коду. Если не нашли - создаем.
			СтрокаДанныхAU = ТЗДанныхAU.Найти(СтруктураAU.AccountingUnit, "Код");
						
			AUОбъект = ЗаполнитьAU(СтрокаДанныхAU, СтруктураAU);
			 						
			//-> RG-Soft VIvanov 2015/02/18
			Если AUОбъект.ЭтоНовый() Тогда
				
				// { RGS LFedotova 21.02.2018 23:45:11 - вопрос S-I-0004697
				//Проверим, был ли AU с таким же кодом и таким же набором сегмента, субсегмента и субсегмента
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	КостЦентры.Ссылка
				|ИЗ
				|	Справочник.КостЦентры КАК КостЦентры
				|ГДЕ
				|	КостЦентры.Segment = &Segment
				|	И КостЦентры.SubSegment = &SubSegment
				|	И КостЦентры.Сегмент = &Сегмент
				|	И КостЦентры.Код = &Код";
				
				Запрос.УстановитьПараметр("Segment", AUОбъект.Segment);
				Запрос.УстановитьПараметр("SubSegment", AUОбъект.SubSegment);
				Запрос.УстановитьПараметр("Сегмент", AUОбъект.Сегмент);
				Запрос.УстановитьПараметр("Код", AUОбъект.Код);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Если ВыборкаДетальныеЗаписи.Следующий() Тогда
					
					//Проверим, является ли запись с этим AU последней в регистре сегментов кост-центров,
					//и если не последняя, то добавим запись в регистр сегментов кост-центров
					
					Запрос1 = Новый Запрос;
					Запрос1.Текст = 
					"ВЫБРАТЬ
					|	СегментыКостЦентровСрезПоследних.КостЦентр
					|ИЗ
					|	РегистрСведений.СегментыКостЦентров.СрезПоследних КАК СегментыКостЦентровСрезПоследних
					|ГДЕ
					|	СегментыКостЦентровСрезПоследних.Код = &Код";
					
					Запрос1.УстановитьПараметр("Код", AUОбъект.Код);
					
					РезультатЗапроса1 = Запрос1.Выполнить();
					
					ВыборкаДетальныеЗаписи1 = РезультатЗапроса1.Выбрать();
					
					НаборЗаписей = РегистрыСведений.СегментыКостЦентров.СоздатьНаборЗаписей();
					Если ВыборкаДетальныеЗаписи1.Следующий() Тогда
						//Если НЕ ВыборкаДетальныеЗаписи1.КостЦентр = ВыборкаДетальныеЗаписи.Ссылка  Тогда
						НаборЗаписей.Отбор.Период.Установить(НачалоМесяца(ТекущаяДата()));
						НаборЗаписей.Отбор.Код.Установить(AUОбъект.Код);
						НаборЗаписей.Прочитать();
						НоваяЗапись = НаборЗаписей.Добавить();
						НоваяЗапись.Период = НачалоМесяца(ТекущаяДата());
						НоваяЗапись.Код = AUОбъект.Код;
						НоваяЗапись.КостЦентр = ВыборкаДетальныеЗаписи.Ссылка;
						//КонецЕсли; 
					Иначе
						НаборЗаписей.Отбор.Код.Установить(AUОбъект.Код);
						НоваяЗапись = НаборЗаписей.Добавить();
						НоваяЗапись.Период = '1980.01.01';
						НоваяЗапись.Код = AUОбъект.Код;
						НоваяЗапись.КостЦентр = ВыборкаДетальныеЗаписи.Ссылка;
					КонецЕсли;
					НаборЗаписей.Записать();
					ЗафиксироватьТранзакцию();
					Продолжить;
				КонецЕсли;
				// } RGS LFedotova 21.02.2018 23:45:34 - вопрос S-I-0004697 

				AUОбъект.Записать();
				ЗаписьСегмента = РегистрыСведений.СегментыКостЦентров.СоздатьМенеджерЗаписи();
				Если СтрокаДанныхAU = Неопределено Тогда
					ЗаписьСегмента.Период = Дата("19800101000000");
					СтрокаДанныхAU = ТЗДанныхAU.Добавить();
					СтрокаДанныхAU.Код = AUОбъект.Код;
				Иначе
					ЗаписьСегмента.Период = НачалоМесяца(ТекущаяДата());
				КонецЕсли;
				СтрокаДанныхAU.AU = AUОбъект.Ссылка;
				СтрокаДанныхAU.Сегмент = AUОбъект.Сегмент;
				СтрокаДанныхAU.SubSegment = AUОбъект.SubSegment;
				СтрокаДанныхAU.Segment = AUОбъект.Segment;
				СтрокаДанныхAU.ПодразделениеОрганизации = AUОбъект.ПодразделениеОрганизации;
				СтрокаДанныхAU.DefaultActivity = AUОбъект.DefaultActivity;
				// { RGS LFedotova 08.08.2016 18:31:36 - вопрос SLI-0006640
				// после добавления двух строк ниже перестали загружаться AU?
				//Ошибка была в том, что в таблице значений ТЗДанныхAU не было колонок Geomarket и SubGeomarket
				//Внесла изменения в запрос в процедуре ПолучитьДанныеДляЗаполненияAU, чтобы эти поля появились
				// { RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
				СтрокаДанныхAU.Geomarket = AUОбъект.Geomarket; 
				СтрокаДанныхAU.SubGeomarket = AUОбъект.SubGeomarket; 
				// } RGS AArsentev 6/23/2016 12:49:48 PM - S-I-0001665
				// } RGS LFedotova 08.08.2016 18:31:59 - вопрос SLI-0006640
				ЗаписьСегмента.Код = AUОбъект.Код;
				ЗаписьСегмента.КостЦентр = AUОбъект.Ссылка;
				ЗаписьСегмента.Записать();
			Иначе
				AUОбъект.Записать();
			КонецЕсли;
			//<- RG-Soft VIvanov
			
			//пока только для RUL
			// { RGS LFedotova 21.02.2018 20:02:07 - вопрос S-I-0004686
			//Если Не ЗначениеЗаполнено(AUОбъект.TaxRegistration) И СтруктураAU.Geomarket = "RUL" Тогда     //Гео!
			Если Не ЗначениеЗаполнено(AUОбъект.TaxRegistration) И СтруктураAU.Geomarket = "RCA" Тогда     //Гео!
			// } RGS LFedotova 21.02.2018 20:03:29 - вопрос S-I-0004686
				Задачи.УниверсальнаяЗадача.СоздатьЗадачуДляЗаполненияTaxRegistration(AUОбъект.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
				|не удалось записать Accounting Unit '"+ СтруктураAU.AccountingUnit + "' в строке №"+ СтруктураAU.НомерСтрокиФайла + ",
				|"+ ОписаниеОшибки();
				
			ОтменитьТранзакцию();
				
		КонецПопытки;   
		
	КонецЦикла; 	
		
КонецПроцедуры

Функция ПолучитьДанныеДляЗаполненияAU(МассивСтруктурAU)
	
	Запрос = Новый Запрос;
	
	МассивКодов = Новый Массив;
	Для Каждого СтруктураAU из МассивСтруктурAU Цикл 
		МассивКодов.Добавить(СтруктураAU.AccountingUnit);
	КонецЦикла; 
	
    Запрос.УстановитьПараметр("МассивКодов", МассивКодов);

	//-> RG-Soft VIvanov 2015/02/18
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	КостЦентры.Ссылка КАК AU,
	//               |	КостЦентры.Код,
	//               |	КостЦентры.Наименование,
	//               |	КостЦентры.Сегмент,
	//               |	КостЦентры.ПодразделениеОрганизации,
	//               |	КостЦентры.DefaultActivity,
	//               |	КостЦентры.SubSegment,
	//               |	КостЦентры.Segment
	//               |ИЗ
	//               |	Справочник.КостЦентры КАК КостЦентры
	//               |ГДЕ
	//               |	НЕ КостЦентры.ПометкаУдаления
	//               |	И КостЦентры.Код В(&МассивКодов)";
	Запрос.Текст = "ВЫБРАТЬ
	               |	СегментыКостЦентровСрезПоследних.КостЦентр КАК AU,
	               |	СегментыКостЦентровСрезПоследних.Код,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.Наименование КАК Наименование,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.Сегмент КАК Сегмент,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.DefaultActivity КАК DefaultActivity,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.SubSegment КАК SubSegment,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.Segment КАК Segment,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.Geomarket КАК Geomarket,
	               |	СегментыКостЦентровСрезПоследних.КостЦентр.SubGeomarket КАК SubGeomarket
	               |ИЗ
	               |	РегистрСведений.СегментыКостЦентров.СрезПоследних(&Дата, ) КАК СегментыКостЦентровСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КостЦентры КАК КостЦентры
	               |		ПО СегментыКостЦентровСрезПоследних.КостЦентр = КостЦентры.Ссылка
	               |ГДЕ
	               |	СегментыКостЦентровСрезПоследних.Код В(&МассивКодов)";
	        		
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(ТекущаяДата()));			   
	//<- RG-Soft VIvanov        		
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

Функция ЗаполнитьAU(СтрокаДанныхAU, Стр)
	//Добавила Федотова Л., РГ-Софт, 28.04.16, вопрос SLI-0006427
	Перем Segment, SubSegment, SubSubSegment;
	//
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Часть кода по изменению струкруры сегментов перенесла в общий модуль, 
	//чтобы можно было использовать при загрузке DSS
	//Федотова Л., РГ-Софт, 28.04.16, вопрос SLI-0006427
	РГСофт.ИзменитьСтруктуруСегментов(Стр, Segment, SubSegment, SubSubSegment);
	
	//-> RG-Soft VIvanov 2015/02/18
	Если СтрокаДанныхAU = Неопределено Тогда 
		AUОбъект = Справочники.КостЦентры.СоздатьЭлемент();
		AUОбъект.ДополнительныеСвойства.Вставить("ЗагрузкаИзDSS", Истина);
	Иначе
		Если Segment <> СтрокаДанныхAU.Segment Или SubSegment <> СтрокаДанныхAU.SubSegment Или SubSubSegment <> СтрокаДанныхAU.Сегмент Тогда
			AUОбъект = Справочники.КостЦентры.СоздатьЭлемент();
			AUОбъект.ДополнительныеСвойства.Вставить("ЗагрузкаИзDSS", Истина);
		Иначе
			AUОбъект = СтрокаДанныхAU.AU.ПолучитьОбъект();
		КонецЕсли;
	КонецЕсли;
			
	//Заполняем реквизиты в AU
	AUОбъект.Код                      = СокрЛП(Стр.AccountingUnit);
	AUОбъект.Наименование             = СокрЛП(Стр.Description);
	AUОбъект.DefaultActivity          = СокрЛП(Стр.AstActivity);
	//<- RG-Soft VIvanov
	     	
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Segment, Segment);
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubSegment, SubSegment);	
	РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Сегмент, SubSubSegment);
	
	// ( RGS AArsentev 7/08/2016 16:23:48 PM - S-I-0001665
    ЗаполнитьИзФайла(AUОбъект, Стр);
	// } RGS AArsentev 7/08/2016 16:23:48 PM - S-I-0001665

	ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.НайтиПоКоду(СокрЛП(Стр.Location));
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.ПодразделениеОрганизации, ПодразделениеОрганизации);
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Non-critical error: не найдено подразделение организации '" + СокрЛП(Стр.Location) + "' в строке №" + Стр.НомерСтрокиФайла +"!");	
		НовоеПодразделение = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
		НовоеПодразделение.Код = СокрЛП(Стр.Location);
		НовоеПодразделение.Наименование = СокрЛП(Стр.Location);
		НовоеПодразделение.Владелец = Справочники.Организации.НайтиПоКоду("00001");
		НовоеПодразделение.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.ПодразделениеОрганизации, НовоеПодразделение.Ссылка);
	КонецЕсли;
	
	// { RGS LFedotova 23.09.2016 10:11:39 - вопрос SLI-0006775
	Geomarket = Справочники.GeoMarkets.НайтиПоКоду(СокрЛП(Стр.Geomarket));
	Если ЗначениеЗаполнено(Geomarket) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Geomarket, Geomarket);
	Иначе 
		NewGeomarket = Справочники.GeoMarkets.СоздатьГруппу();	
		NewGeomarket.Код = СокрЛП(Стр.Geomarket);
		NewGeomarket.Наименование = СокрЛП(Стр.Geomarket);
		NewGeomarket.Родитель = Справочники.GeoMarkets.НайтиПоКоду("RCA"); //Гео!
		NewGeomarket.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.Geomarket, NewGeomarket.Ссылка);
	КонецЕсли;
	
	SubGeomarket = Справочники.GeoMarkets.НайтиПоКоду(СокрЛП(Стр.SubGeomarket));
	Если ЗначениеЗаполнено(SubGeomarket) Тогда 
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubGeomarket, SubGeomarket);
	Иначе 
		NewSubGeomarket = Справочники.GeoMarkets.СоздатьГруппу();	
		NewSubGeomarket.Код = СокрЛП(Стр.SubGeomarket);
		NewSubGeomarket.Наименование = СокрЛП(Стр.SubGeomarket);
		NewSubGeomarket.Родитель = Geomarket;
		NewSubGeomarket.Записать();
		РГСофтКлиентСервер.УстановитьЗначение(AUОбъект.SubGeomarket, NewSubGeomarket.Ссылка);
	КонецЕсли;
	// } RGS LFedotova 23.09.2016 10:12:40 - вопрос SLI-0006775
	
	Возврат AUОбъект;
	
КонецФункции

Процедура ЗаполнитьИзФайла(AU, СтруктураAU)
	
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	GeoMarkets.Ссылка КАК СубГеомаркет,
	|	GeoMarkets.Родитель КАК Геомаркет
	|ИЗ
	|	Справочник.GeoMarkets КАК GeoMarkets
	|ГДЕ
	|	GeoMarkets.Ссылка.Код = &СубГеомаркет
	|	И GeoMarkets.Родитель.Код = &Геомаркет
	|	И GeoMarkets.ЭтоГруппа
	|	И GeoMarkets.Родитель.ЭтоГруппа";
	Запрос.УстановитьПараметр("СубГеомаркет", СокрЛП(СтруктураAU.SubGeomarket));
	Запрос.УстановитьПараметр("Геомаркет", СокрЛП(СтруктураAU.Geomarket));
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 1 тогда
		Если  Результат[0].Геомаркет.Родитель.Родитель = Справочники.GeoMarkets.ПустаяСсылка()  тогда 
			Если Результат[0].СубГеомаркет.Родитель = Результат[0].Геомаркет тогда
				РГСофтКлиентСервер.УстановитьЗначение(AU.Geomarket, Результат[0].Геомаркет);
				РГСофтКлиентСервер.УстановитьЗначение(AU.SubGeomarket, Результат[0].СубГеомаркет);
			иначе
				РГСофтКлиентСервер.УстановитьЗначение(AU.Geomarket, Результат[0].СубГеомаркет.Родитель);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры
