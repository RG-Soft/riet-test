Перем ТаблицаТНВЕД, ТекНомерСтроки;

//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА ФАЙЛА

&НаСервере
Функция ЗапуститьExcelИОткрытьФайл()
	
	// Открываем файл
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		// если подключение не удалось, то пытаемся подключиться к файлу через Microsoft.Jet.OLEDB.4.0
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	// Станем на 1 закладку
	sqlString = "select * from [" + ИмяЛиста + "]";
	rs.Close();
	rs.Open(sqlString);
	
	Возврат rs;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокЛистовЭкселя()
	
	ИмяЛиста = "";
	СписокЛистов = Новый Массив;
	
	//имя файла = адрес файла
	ФайлExel = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xls");
	ФайлExel.Записать(ИмяВременногоФайла);
	ИмяФайла = ИмяВременногоФайла;
	
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		Connection = Новый COMОбъект("ADODB.Connection");
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
		Попытка 
			Connection.Open(СтрокаПодключения);	
		Исключение
			Попытка
				СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
				Connection.Open(СтрокаПодключения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		rs = Новый COMObject("ADODB.RecordSet");
		rs.ActiveConnection = Connection;
		rs = Connection.OpenSchema(20);
		Пока rs.EOF() = 0 Цикл
			Если Найти(rs.Fields("TABLE_NAME").Value, "_FilterDatabase") = 0 Тогда
				СписокЛистов.Добавить(rs.Fields("TABLE_NAME").Value);
			КонецЕсли;
			rs.MoveNext();
		КонецЦикла;  
		rs.Close();
		Connection.Close();
	КонецЕсли;
	Элементы.ИмяЛиста.СписокВыбора.ЗагрузитьЗначения(СписокЛистов);
	Если СписокЛистов.Количество()>0 Тогда
		ИмяЛиста = СписокЛистов[0];
	Конецесли;		
	Если СписокЛистов.Количество() = 1 Или СписокЛистов.Количество() = 0 Тогда
		Элементы.ИмяЛиста.КнопкаСпискаВыбора = Ложь;
	Иначе
		Элементы.ИмяЛиста.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр = "Файлы Excel (*.xls;*.xlsx)|*.xls;*.xlsx";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла	= Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл для загрузки";
	
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ИмяФайлаКлиент = ВыбранныеФайлы[0];
		ДанныеФайла = Новый ДвоичныеДанные(ИмяФайлаКлиент);
		АдресВХранилище = ПоместитьВоВременноеХранилище(ДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
		ЗаполнитьСписокЛистовЭкселя();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(АдресВХранилище) Тогда
		Возврат;
	КонецЕсли;
	
	// открываем каталог который в настройках
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ИмяФайлаЗагрузки = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ДанныеФайла.Записать(ИмяФайлаЗагрузки);
	
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияПриложения", ЭтотОбъект);
	
	НачатьЗапускПриложения(Оп, ИмяФайлаЗагрузки,, Истина);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаСервере
Процедура ЗагрузитьДанныеИзФайлаНаСервере(МассивТекстовPDF)
	
	ТаблицаТНВЕД = Новый ТаблицаЗначений;
	ТаблицаТНВЕД.Колонки.Добавить("Код",Новый ОписаниеТипов("Строка"),"Текст");
	ТаблицаТНВЕД.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка"),"Текст");
	ТаблицаТНВЕД.Колонки.Добавить("ЕдИзм",Новый ОписаниеТипов("Строка"),"Текст");
	ТаблицаТНВЕД.Колонки.Добавить("Ставка",Новый ОписаниеТипов("Строка"),"Текст");
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();

	МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("pdftotext");
	Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	ФайлУтилиты1 	= КаталогВременныхФайлов + "pdftotext.exe";
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	УдалитьИзВременногоХранилища(Адрес);
	ДанныеХранилища.Записать(ФайлУтилиты1);
	
	МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("hstart");
	Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	ФайлУтилиты2 	= КаталогВременныхФайлов + "hstart.exe";
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	УдалитьИзВременногоХранилища(Адрес);
	ДанныеХранилища.Записать(ФайлУтилиты2);
	
	МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("xpdfrc");
	Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	ФайлУтилиты3 	= КаталогВременныхФайлов + "xpdfrc";
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	УдалитьИзВременногоХранилища(Адрес);
	ДанныеХранилища.Записать(ФайлУтилиты3);
	
	н = 0;
	МассивТекстов = Новый Массив;
	Для Каждого Элемент из МассивТекстовPDF Цикл
		
		н = н + 1;
		Если н = 77 Тогда
			н = н + 1;
		КонецЕсли;
		Если н < 10 тогда
			Группа = "0" + н;
		Иначе
			Группа = Строка(н);
		КонецЕсли;
		
		Файл = ПолучитьИзВременногоХранилища(Элемент);
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
		Файл.Записать(ИмяВременногоФайла);
		ИмяФайла = ИмяВременногоФайла;
		
		
		ТекстКоманды  = """" + КаталогВременныхФайлов + "hstart.exe"" /NOCONSOLE /WAIT ""pdftotext.exe -layout """ + ИмяФайла + """ """ + КаталогВременныхФайлов + "temp" + Группа +".txt""""";
		ЗапуститьПриложение(ТекстКоманды, КаталогВременныхФайлов, Истина);
		МассивТекстов.Добавить(КаталогВременныхФайлов + "temp" + Группа +".txt");
	КонецЦикла;
	
	ПолучитьКоды(МассивТекстов,ТаблицаТНВЕД);
	
	//ИмяФАйла = СформироватьExcel(ТаблицаТНВЕД);
	
	//ФайлДляЗагрузки = Новый Файл(ИмяФайла);
	//Если Не ФайлДляЗагрузки.Существует() Тогда
	//	ДД = ПолучитьИзВременногоХранилища(АдресВХранилище);
	//	ДД.Записать(ИмяФайла);
	//КонецЕсли;
	
	//Читаем файл
	//ЭкземплярExcel = ЗапуститьExcelИОткрытьФайл();
	//Если ЭкземплярExcel = Неопределено Тогда
	//	Сообщить("Ошибка открытия файла """ + ИмяФайла + """");
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	
	ДЗ = РеквизитФормыВЗначение("ДеревоКодов");
	
	//sqlString = "select * from [" + ИмяЛиста + "]";
	//ЭкземплярExcel.Close();
	//ЭкземплярExcel.Open(sqlString);
	//
	//ЭкземплярExcel.MoveFirst();
	//ЭкземплярExcel.Move(ПерваяСтрокаДанных - 1);
	//
	ТекУровеньДерева = Неопределено;
	ГлубинаУровня = 0;
	ПерваяСтрокаДанных = 1;
	НомерСтроки = ПерваяСтрокаДанных - 1;
	КолВо =  ТаблицаТНВЕД.Количество();
	НомерСтроки = 0;
	Пока НомерСтроки <= КолВо - 1 Цикл
		
		ТекКод = ТаблицаТНВЕД[НомерСтроки].Код;
		ТекНаименование = ТаблицаТНВЕД[НомерСтроки].Наименование;
		ТекЕдиницаИзмерения = ТаблицаТНВЕД[НомерСтроки].ЕдИзм;
		ТекСтавка = ТаблицаТНВЕД[НомерСтроки].Ставка;
		
		Если ПустаяСтрока(ТекКод) И Не СтрНачинаетсяС(ТекНаименование, "–") И Не СтрНачинаетсяС(ТекНаименование, "-") Тогда
			НомерСтроки = НомерСтроки + 1;
			Продолжить;
		КонецЕсли;
		
		Если Найти(Врег(ТекКод), "РАЗДЕЛ") > 0 Тогда // это раздел
			
			СтрокаРаздела = ДЗ.Строки.Добавить();
			СтрокаРаздела.Код = ТекКод;
			СтрокаРаздела.Наименование = ТекНаименование;
			СтрокаРаздела.НаименованиеБезИдентификаторовУровней = ТекНаименование;
			СтрокаРаздела.Rate = ТекСтавка;
			
			ТекУровеньДерева = СтрокаРаздела;
			
			
			НомерСтроки = НомерСтроки + 1;
			ГлубинаУровня = 0;
			Продолжить;
			
		Иначе
			
			ТекКод = СтрЗаменить(ТекКод, " ", "");
			
		КонецЕсли;
		
		Если СтрДлина(ТекКод) = 2 Тогда // это группа
			
			СтрокаГруппы = ТекУровеньДерева.Строки.Добавить();
			СтрокаГруппы.Код = ТекКод;
			СтрокаГруппы.Наименование = ТекНаименование;
			СтрокаГруппы.НаименованиеБезИдентификаторовУровней = ТекНаименование;
			СтрокаГруппы.ЕдиницаИзмерения = ТекЕдиницаИзмерения;
			СтрокаГруппы.Rate = ТекСтавка;
			
			ТекУровеньДерева = СтрокаГруппы;
			
			НомерСтроки = НомерСтроки + 1;
			ГлубинаУровня = 0;
			Продолжить;
			
		ИначеЕсли СтрДлина(ТекКод) >= 4 Тогда // это подгруппа
			
			СтрокаПодгруппы = ТекУровеньДерева.Строки.Добавить();
			СтрокаПодгруппы.Код = СтрЗаменить(СтрЗаменить(ТекКод, " ", ""), Символы.НПП, "");
			СтрокаПодгруппы.Наименование = ТекНаименование;
			СтрокаПодгруппы.НаименованиеБезИдентификаторовУровней = ТекНаименование;
			СтрокаПодгруппы.ЕдиницаИзмерения = ТекЕдиницаИзмерения;
			СтрокаПодгруппы.Rate = ТекСтавка;
			
			ТекУровеньДерева = СтрокаПодгруппы;
			
			НомерСтроки = НомерСтроки + 1;
			ГлубинаУровня = 0;
			//	Продолжить;
			
			//Иначе
			
			ЗаполнитьГруппу(ТекУровеньДерева, ГлубинаУровня);
			Если НомерСтроки >= ТаблицаТНВЕД.Количество() Тогда
				Продолжить
			КонецЕсли;
			ДлинаКода = СтрДлина(СокрЛП(СтрЗаменить(ТаблицаТНВЕД[НомерСтроки].Код, " ", "")));
			Если ДлинаКода = 2 Тогда
				ТекУровеньДерева = СтрокаРаздела;
			Иначе
				ТекУровеньДерева = СтрокаГруппы;
			КонецЕсли;
			
			//Иначе
			//	
			//	ЭкземплярExcel.MoveNext();
			//	НомерСтроки = НомерСтроки + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	;
	//ЭкземплярExcel.Close();
	//УдалитьФайлы(ИмяФайла);
	
	ЗначениеВРеквизитФормы(ДЗ, "ДеревоКодов");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппу(ТекУровеньДерева, ГлубинаУровня)
	
	Если НомерСтроки >= ТаблицаТНВЕД.Количество() Тогда
		Возврат
	КонецЕсли;
	
	ТекКод = СокрЛП(СтрЗаменить(ТаблицаТНВЕД[НомерСтроки].Код, " ", ""));
	ТекКод = СокрЛП(СтрЗаменить(ТекКод, Символы.НПП, ""));
	ТекНаименование = СокрЛП(ТаблицаТНВЕД[НомерСтроки].Наименование);
	ТекЕдиницаИзмерения = СокрЛП(ТаблицаТНВЕД[НомерСтроки].ЕдИзм);
	ТекСтавка = СокрЛП(ТаблицаТНВЕД[НомерСтроки].Ставка);
	
	Если ПустаяСтрока(ТекКод) И Не СтрНачинаетсяС(ТекНаименование, "–") И Не СтрНачинаетсяС(ТекНаименование, "-") Тогда
		НомерСтроки = НомерСтроки + 1;
		ЗаполнитьГруппу(ТекУровеньДерева, ГлубинаУровня);
	КонецЕсли;
	
	Если Не СтрНачинаетсяС(ТекНаименование, "–") И Не СтрНачинаетсяС(ТекНаименование, "-") Тогда
		ТекГлубинаУровня = 0;
		ТекНаименованиеКопия = ТекНаименование;
	Иначе
		ТекГлубинаУровня = 0;
		ТекНаименованиеКопия = ТекНаименование;
		Пока Лев(ТекНаименованиеКопия, 1) = "–" ИЛИ Лев(ТекНаименованиеКопия, 1) = "-" Цикл
			ТекГлубинаУровня = ТекГлубинаУровня + 1;
			ТекНаименованиеКопия = СокрЛП(Прав(ТекНаименованиеКопия, СтрДлина(ТекНаименованиеКопия) - 1));
		КонецЦикла;
	КонецЕсли;
	
	Если ТекГлубинаУровня = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекГлубинаУровня = ГлубинаУровня Тогда // если находимся на том же уровне, то добавляем строку
		Если Не ПустаяСтрока(ТекУровеньДерева.Наименование) Тогда
			НоваяСтрока = ТекУровеньДерева.Родитель.Строки.Добавить();
		Иначе
			НоваяСтрока = ТекУровеньДерева;
		КонецЕсли;
		НоваяСтрока.Код = ТекКод;
		НоваяСтрока.Наименование = ТекНаименование;
		НоваяСтрока.НаименованиеБезИдентификаторовУровней = ТекНаименованиеКопия;
		НоваяСтрока.ЕдиницаИзмерения = ТекЕдиницаИзмерения;
		НоваяСтрока.Rate = ТекСтавка;
		
		НомерСтроки = НомерСтроки + 1;
		ЗаполнитьГруппу(НоваяСтрока, ГлубинаУровня);
	ИначеЕсли ТекГлубинаУровня > ГлубинаУровня Тогда // надо спустится вниз
		НовыйУровень = ТекУровеньДерева.Строки.Добавить();
		ЗаполнитьГруппу(НовыйУровень, ГлубинаУровня + 1);
	Иначе // надо подняться вверх
		ЗаполнитьГруппу(ТекУровеньДерева.Родитель, ГлубинаУровня - 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзФайла(Команда)
	
	//Если ЗначениеЗаполнено(КаталогВременныхФайлов) Тогда
	//	i = 1;
	//	Пока i < 98 Цикл
	//		Если i = 77 Тогда
	//			i = i + 1;
	//			продолжить
	//		КонецЕсли;
	//		Если н < 10 тогда
	//			ГруппаPDF = "0" + н;
	//		Иначе
	//			ГруппаPDF = Строка(н);
	//		КонецЕсли;
	//		Источник = ПолучитьАдресИсточника(i);
	//		ИмяФайлаПриемника = КаталогВременныхФайлов + "ett"+ ГруппаPDF + ".pdf"; 
	//		КопироватьФайл(Источник, ИмяФайлаПриемника);
	//		i = i + 1;
	//	КонецЦикла;
	//Иначе
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран каталог временных файлов");
	//	Возврат
	//КонецЕсли;
	
	СсылкаНаСайт = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Pages/default.aspx";
	ДанныеHTML = ПолучитьТекстСайта(СсылкаНаСайт);
	Данные = ЧтениеHTMLФайла(ДанныеHTML);
	i = 0;
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	Для Каждого Строка Из Данные Цикл
		i = i + 1;
		Если i = 77 Тогда
			i = i + 1;
		КонецЕсли;
		Если i < 10 тогда
			ГруппаPDF = "0" + i;
		Иначе
			ГруппаPDF = Строка(i);
		КонецЕсли;
		Источник = "http://www.eurasiancommission.org" + Строка;
		ИмяФайлаПриемника = КаталогВременныхФайлов + "ett"+ ГруппаPDF + ".pdf"; 
		КопироватьФайл(Источник, ИмяФайлаПриемника);	
	КонецЦикла;
	
	
	ДеревоКодов.ПолучитьЭлементы().Очистить();
	МассивТекстов = Новый Массив;
	н = 0;
	Пока н < 97 Цикл
		н = н + 1;
		Если н = 77 Тогда
			продолжить
		КонецЕсли;
		Если н < 10 тогда
			Группа = "0" + н;
		Иначе
			Группа = Строка(н);
		КонецЕсли;
		
		ПутьКФайлу = КаталогВременныхФайлов + "ett"+ Группа +".pdf";
		ПутьКФайлуTXT = КаталогВременныхФайлов + "temp"+ Группа +".txt";
		//ТекстКоманды = """" + КаталогВременныхФайлов + "pdftotext.exe"" -layout """ + ПутьКФайлу + """ """ + КаталогВременныхФайлов + "temp" + Группа +".txt""";	
		//ЗапуститьПриложение(ТекстКоманды, КаталогВременныхФайлов,Истина);
		//Текст = Новый ЧтениеТекста(КаталогВременныхФайлов+"temp" + Группа + ".txt", КодировкаТекста.UTF8);
		//МассивТекстов.Добавить(Текст.Прочитать());
		
		ИмяФайлаСрокиДействияКлиент = ПутьКФайлу;
		ДанныеФайла = Новый ДвоичныеДанные(ИмяФайлаСрокиДействияКлиент);
		АдресВХранилище = ПоместитьВоВременноеХранилище(ДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
		МассивТекстов.Добавить(АдресВХранилище);

	КонецЦикла
	
	//WshShell = Новый COMОбъект("WScript.Shell");
	//WshShell.Run(ТекстКоманды, 5, 1);	 
	//ОбработатьПДФВТекст(ТекстКоманды, КаталогВременныхФайлов);	
	; 
	//КопироватьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	
	ЗагрузитьДанныеИзФайлаНаСервере(МассивТекстов);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ColumnCode = 1;
	ColumnDescription = 2;
	ColumnUOM = 3;
	
	ПерваяСтрокаДанных = 2;
	ПоследняяСтрокаДанных = 0;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА СТРУКТУРЫ СПРАВОЧНИКА

&НаСервере
Процедура ОбновитьСтруктуруСправочникаНаСервере()
	
	ИнициализироватьТаблицуКодов();
	ТЗ_Кодов = РеквизитФормыВЗначение("ТаблицаКодов");
	ТЗ_Кодов.Индексы.Добавить("Код");
	
	ДЗ = РеквизитФормыВЗначение("ДеревоКодов");
	
	НачатьТранзакцию();
	
	Для каждого СтрокаРаздела Из ДЗ.Строки Цикл
		
		ОбработатьЭлементСправочника(СтрокаРаздела, ТЗ_Кодов, Истина);
		
		Для каждого СтрокаГруппы Из СтрокаРаздела.Строки Цикл
			
			ОбработатьЭлементСправочника(СтрокаГруппы, ТЗ_Кодов, , Истина);
			
			ОбработатьЧастьДерева(СтрокаГруппы, ТЗ_Кодов);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	ЗначениеВРеквизитФормы(ТЗ_Кодов, "ТаблицаКодов");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТаблицуКодов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	TNVEDCodes.Код,
	|	TNVEDCodes.Ссылка
	|ИЗ
	|	Справочник.TNVEDCodes КАК TNVEDCodes";
	
	НачатьТранзакцию();
	РезультатЗапроса = Запрос.Выполнить();
	ЗафиксироватьТранзакцию();
	
	Выборка = РезультатЗапроса.Выбрать();
	ТаблицаКодов.Очистить();
	Пока Выборка.Следующий() Цикл
		СтрокаСправочника = ТаблицаКодов.Добавить();
		СтрокаСправочника.Код = ВРЕГ(СокрЛП(Выборка.Код));
		СтрокаСправочника.Ссылка = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ОбработатьЭлементСправочника(СтрокаФайла, КэшСправочника, ЭтоРаздел = Ложь, ЭтоГруппа = Ложь, Префикс = "")
	
	Если ПустаяСтрока(СтрокаФайла.Код) И (СтрНачинаетсяС(СтрокаФайла.Наименование, "–") ИЛИ СтрНачинаетсяС(СтрокаФайла.Наименование, "-")) Тогда // префикс
		Возврат;
	КонецЕсли;
	
	// по логике работы алгоритма родителя мы всегда найдем
	Если СтрокаФайла.Родитель = Неопределено Тогда
		Родитель = Справочники.TNVEDCodes.ПустаяСсылка();
	Иначе
		Если ПустаяСтрока(Префикс) Тогда
			Родитель = КэшСправочника.Найти(ВРЕГ(СтрокаФайла.Родитель.Код), "Код").Ссылка;
		Иначе
			ТекУровень = СтрокаФайла.Родитель;
			Пока ПустаяСтрока(ТекУровень.Код) И (СтрНачинаетсяС(ТекУровень.Наименование, "–") ИЛИ СтрНачинаетсяС(ТекУровень.Наименование, "-")) Цикл
				ТекУровень = ТекУровень.Родитель;
			КонецЦикла;
			Родитель = КэшСправочника.Найти(ВРЕГ(ТекУровень.Код), "Код").Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаКэша = КэшСправочника.Найти(ВРЕГ(СтрокаФайла.Код), "Код");
	
	ЭтоПодгруппа = СтрДлина(СтрокаФайла.Код) < 10 ИЛИ ЭтоРаздел ИЛИ ЭтоГруппа;
	Если СтрокаКэша = Неопределено Тогда // не нашли элемент, надо создать
		Если ЭтоПодгруппа Тогда
			ТекОбъект = Справочники.TNVEDCodes.СоздатьГруппу();
		Иначе
			ТекОбъект = Справочники.TNVEDCodes.СоздатьЭлемент();
		КонецЕсли;
		ТекОбъект.Код = СтрокаФайла.Код;
	Иначе
		ТекОбъект = СтрокаКэша.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Если ЭтоРаздел Тогда
		Наименование = СтрокаФайла.Код + ". " + СтрокаФайла.НаименованиеБезИдентификаторовУровней;
	ИначеЕсли ЭтоГруппа Тогда
		Наименование = "Группа " + СтрокаФайла.Код + ". " + СтрокаФайла.НаименованиеБезИдентификаторовУровней;
	Иначе
		Наименование = СокрЛП(Префикс + " " + СтрокаФайла.НаименованиеБезИдентификаторовУровней);
	КонецЕсли;
	РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.ShortDescription, ?(ПустаяСтрока(Наименование), "<пусто>", Наименование));
	Если Не ЭтоПодгруппа Тогда
		РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.UOM, СтрокаФайла.ЕдиницаИзмерения);
		РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.Rate, СтрокаФайла.Rate);
	КонецЕсли;
	РГСофтКлиентСервер.УстановитьЗначение(ТекОбъект.Родитель, Родитель);
	
	//СтрокаКэша.Обработано = Истина;
	
	Если ТекОбъект.Модифицированность() Тогда
		ЭтоНовыйОбъект = ТекОбъект.ЭтоНовый();
		ТекОбъект.Записать();
		Если ЭтоНовыйОбъект Тогда
			// добавим в кэш
			НоваяСтрокаКэша = КэшСправочника.Добавить();
			НоваяСтрокаКэша.Код = СокрЛП(СтрокаФайла.Код);
			НоваяСтрокаКэша.Ссылка = ТекОбъект.Ссылка;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Create code " + ТекОбъект.Код);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Update code " + ТекОбъект.Код);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЧастьДерева(СтрокаДерева, КэшСправочника)
	
	Если ПустаяСтрока(СтрокаДерева.Код) И (СтрНачинаетсяС(СтрокаДерева.Наименование, "–") ИЛИ СтрНачинаетсяС(СтрокаДерева.Наименование, "-")) Тогда // префикс
		Префикс = СтрокаДерева.НаименованиеБезИдентификаторовУровней;
	Иначе
		Префикс = "";
	КонецЕсли;
	Для каждого ТекСтрока Из СтрокаДерева.Строки Цикл
		ОбработатьЭлементСправочника(ТекСтрока, КэшСправочника, , , Префикс);
		ОбработатьЧастьДерева(ТекСтрока, КэшСправочника);
	КонецЦикла;
	//Префикс = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтруктуруСправочника(Команда)
	ОбновитьСтруктуруСправочникаНаСервере();
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА СРОКОВ ДЕЙСТВИЯ

&НаСервере
Процедура ЗагрузитьДанныеИзФайлаTNVED4НаСервере()
	
	ДД = ПолучитьИзВременногоХранилища(АдресВХранилищеTNVED4);
	ИмяФайлаСрокиДействия = ПолучитьИмяВременногоФайла("txt");
	ДД.Записать(ИмяФайлаСрокиДействия);
	
	Текст = Новый ЧтениеТекста(ИмяФайлаСрокиДействия, КодировкаТекста.OEM);
	ТекСтрока = Текст.ПрочитатьСтроку();
	
	ТекКод = "";
	ТекНаименование = "";
	ТекДатаНачала = Неопределено;
	ТекДатаОкончания = Неопределено;
	
	Пока ТекСтрока <> Неопределено Цикл
		
		ТекСтрока = Текст.ПрочитатьСтроку();
		
		Если ПустаяСтрока(ТекСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПодстрок = СтрРазделить(ТекСтрока, "|", Истина);
		
		КодТНВЭД = МассивПодстрок[0] + МассивПодстрок[1] + МассивПодстрок[2];
		
		Наименование = МассивПодстрок[3];
		
		НачалоСрокаДействия = ПреобразоватьВДату(МассивПодстрок[4]);
		КонецСрокаДействия = ПреобразоватьВДату(МассивПодстрок[5]);
		
		Если ТекКод <> КодТНВЭД Тогда // начался новый код
			Если Не ПустаяСтрока(ТекКод) Тогда // запишем информацию по обработанному
				НоваяСтрока = ТаблицаСроковДействия.Добавить();
				НоваяСтрока.Код = ТекКод;
				НоваяСтрока.Наименование = ТекНаименование;
				НоваяСтрока.ДатаНачалаДействия = ТекДатаНачала;
				НоваяСтрока.ДатаОкончанияДействия = ТекДатаОкончания;
			КонецЕсли;
			ТекДатаНачала = НачалоСрокаДействия;
			ТекДатаОкончания = КонецСрокаДействия;
			ТекКод = КодТНВЭД;
			ТекНаименование = Наименование;
		Иначе
			// все тот же код, отследим даты
			Если КонецДня(ТекДатаОкончания) + 1 <> НачалоСрокаДействия Тогда
				ТекДатаНачала = НачалоСрокаДействия
			КонецЕсли;
			ТекДатаОкончания = КонецСрокаДействия;
		КонецЕсли;
		
	КонецЦикла;
	
	Текст.Закрыть();
	УдалитьФайлы(ИмяФайлаСрокиДействия);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПреобразоватьВДату(ДатаТекст)
	
	Если ПустаяСтрока(ДатаТекст) Тогда
		Возврат '00010101';
	КонецЕсли;
	
	МассивПодстрок = СтрРазделить(ДатаТекст, ".");
	Возврат Дата(МассивПодстрок[2] + МассивПодстрок[1] + МассивПодстрок[0]);
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьДанныеИзФайлаTNVED4(Команда)
	ЗагрузитьДанныеИзФайлаTNVED4НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаСрокиДействияКлиентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр = "Текстовые файлы (*.txt)|*.txt";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла	= Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл для загрузки";
	
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ИмяФайлаСрокиДействияНачалоВыбораЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаСрокиДействияНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ИмяФайлаСрокиДействияКлиент = ВыбранныеФайлы[0];
		ДанныеФайла = Новый ДвоичныеДанные(ИмяФайлаСрокиДействияКлиент);
		АдресВХранилищеTNVED4 = ПоместитьВоВременноеХранилище(ДанныеФайла, ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСрокиДействияНаСервере()
	
	Если ТаблицаКодов.Количество() = 0 Тогда
		ИнициализироватьТаблицуКодов();
	КонецЕсли;
	ТЗ_Кодов = РеквизитФормыВЗначение("ТаблицаКодов");
	ТЗ_Кодов.Индексы.Добавить("Код");
	
	Для каждого СтрокаСрокаДействия Из ТаблицаСроковДействия Цикл
		
		СтрокаТаблицыКодов = ТЗ_Кодов.Найти(СтрокаСрокаДействия.Код, "Код");
		
		Если СтрокаТаблицыКодов = Неопределено И (Не ЗначениеЗаполнено(СтрокаСрокаДействия.ДатаОкончанияДействия) ИЛИ СтрокаСрокаДействия.ДатаОкончанияДействия >= '20110101') Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден код " + СтрокаСрокаДействия.Код + ". Он будет добавлен в корень справочника.");
			НовыйЭлемент = Справочники.TNVEDCodes.СоздатьЭлемент();
			НовыйЭлемент.Код = СтрокаСрокаДействия.Код;
			НовыйЭлемент.ShortDescription = СтрокаСрокаДействия.Наименование;
			НовыйЭлемент.ДатаНачалаДействия = СтрокаСрокаДействия.ДатаНачалаДействия;
			НовыйЭлемент.ДатаОкончанияДействия = СтрокаСрокаДействия.ДатаОкончанияДействия;
			НовыйЭлемент.Записать();
			Продолжить;
		ИначеЕсли СтрокаТаблицыКодов = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекЭлемент = СтрокаТаблицыКодов.Ссылка.ПолучитьОбъект();
		ТекЭлемент.ДатаНачалаДействия = СтрокаСрокаДействия.ДатаНачалаДействия;
		ТекЭлемент.ДатаОкончанияДействия = СтрокаСрокаДействия.ДатаОкончанияДействия;
		ТекЭлемент.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСрокиДействия(Команда)
	ОбновитьСрокиДействияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	ЗапуститьПриложение("http://stat.gov.kz/faces/wcnav_externalId/classificatorsStat;jsessionid=gN40XRbZWz1TLgq7YYvkpZJ0hqwGbvqCRjSG7m8JRCfsGBrYKZMC!-273196516!-1626643393?lang=ru&_adf.ctrl-state=grg9ktmmn_4&_afrLoop=36822263858185656#%40%3F_afrLoop%3D36822263858185656%26lang%3Dru%26_adf.ctrl-state%3D17zlbtkutf_4");
КонецПроцедуры

&НаКлиенте
Процедура Декорация2Нажатие(Элемент)
	ЗапуститьПриложение("https://www.nalog.ru/rn77/program//5961290/");
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоды(МассивТекстов,ТаблицаТНВЕД)
	
	Если КаталогВременныхФайлов = "" Тогда
		Сообщить("Не выбран каталог временных файлов");
		НайденыОшибки = Истина;
	КонецЕсли;
	
	
	//МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("pdftotext");
	//Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	//ФайлУтилиты1 	= КаталогВременныхФайлов + "pdftotext.exe";
	//ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	//УдалитьИзВременногоХранилища(Адрес);
	//ДанныеХранилища.Записать(ФайлУтилиты1);
	//
	//МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("hstart");
	//Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	//ФайлУтилиты2 	= КаталогВременныхФайлов + "hstart.exe";
	//ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	//УдалитьИзВременногоХранилища(Адрес);
	//ДанныеХранилища.Записать(ФайлУтилиты2);
	//
	//МакетУтилиты 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("xpdfrc");
	//Адрес 			= ПоместитьВоВременноеХранилище(МакетУтилиты, Новый УникальныйИдентификатор);
	//ФайлУтилиты3 	= КаталогВременныхФайлов + "xpdfrc";
	//ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	//УдалитьИзВременногоХранилища(Адрес);
	//ДанныеХранилища.Записать(ФайлУтилиты3);
	н = 0;
	Для Каждого Элемент из МассивТекстов Цикл
		н = н + 1;
		ДобавитьРаздел(ТаблицаТНВЕД, н);
		Если н = 77 Тогда
			н = н + 1;
		КонецЕсли;
		Если н < 10 тогда
			Группа = "0" + н;
		Иначе
			Группа = Строка(н);
		КонецЕсли;
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код = Группа;
		НаименованиеГруппы = ПолучитьНаименованиеГруппы(н);
		СтрокаТЗ.Наименование = НаименованиеГруппы;
		
		
		//
		//ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett"+ Группа +"%2001.09.2013.pdf";
		//Если н = 36 Тогда
		//	ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett36%2001.09.2016.pdf";
		//ИначеЕсли н = 48 тогда
		//	ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett48%2001.09.2016.pdf";
		//ИначеЕсли н = 49 Тогда
		//	ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett49%2001.09.2016.pdf";
		//ИначеЕсли н = 52 Тогда
		//	ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett52%2001.09.2016.pdf";
		//ИначеЕсли н = 61 Тогда	
		//	ИмяФайлаИсточника = "http://www.eurasiancommission.org/ru/act/trade/catr/ett/Documents/ett61%2020.09.2015.pdf";
		//КонецЕсли;
		//ИмяФайлаПриемника = КаталогВременныхФайлов + "ett" + Группа + ".pdf"; 
		////КопироватьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
		//ПутьКФайлу = ИмяФайлаПриемника;		
		//н = н + 1;		   

		Текст = Новый ЧтениеТекста(Элемент, КодировкаТекста.UTF8);
		Стр = Текст.ПрочитатьСтроку();
		i = 0;
		к = 0;
		ид39 = 0;
		Пока Стр <> Неопределено Цикл
			//Сообщить(Стр); // Обрабатываем текст
			Стр = СтрЗаменить(Стр, "+ ", "");
			Если СтрЧислоВхождений(Стр," США)") = 1 Или i = 1 тогда
				Если СтрЧислоВхождений(Стр," США)") = 1 Тогда
					i = 1;
					Стр = Текст.ПрочитатьСтроку();
					Продолжить
				ИначеЕсли СтрЧислоВхождений(Стр," Ставка") = 1 Тогда
					i = 0;
					Стр = Текст.ПрочитатьСтроку();
					Продолжить
				КонецЕсли;
				
				Стр = СтрЗаменить(Стр,"", "–");
				Подстрока = Ложь;
				ЕстьНаименованиеСтавка = Ложь;
				ЕстьСтавка = Ложь;
				ЕстьНаименование = Ложь;
				Код = СокрЛП(Лев(Стр,13));
				ДлинаКода = 13;
				Если Код <> "" Тогда 
					Стр = СокрЛ(Стр);
					Код = СокрЛП(Лев(Стр,13));
					ДлинаКода = ТолькоЦифры(Код);
					Если ДлинаКода <> СтрДлина(Код) Тогда
						 Код = СокрЛП(Лев(Стр,ДлинаКода));
					КонецЕсли;		 
				КонецЕсли;			
				//Исключения
				//раздел 39
				Если Код = "3910 00 000" Тогда
					Если ид39 = 1 Тогда
						Код = "";
						ДлинаКода = 12;
					Иначе
						ид39 = 1;
					КонецЕсли;
				КонецЕсли;
				//Раздел 39
				//Раздел 57
				Если Код = "5703 90 200 9" Тогда
					СтрокаТЗ = ТаблицаТНВЕД.Добавить();
					СтрокаТЗ.Код = "5703 90 200 9";			
					СтрокаТЗ.Наименование = "– – – прочие";
					СтрокаТЗ.ЕдИзм = "м²";
					СтрокаТЗ.Ставка = "16,9, но не менее 0,469 евро за 1 м²";
					Стр = Текст.ПрочитатьСтроку();
					Стр = Текст.ПрочитатьСтроку();
					Продолжить
				КонецЕсли;
				//Раздел 57
				//Исключения
				ДлинаСтроки = СтрДлина(Стр);
				//КолВоПробеловВНачале = ПосчитатьПробелы(Сред(Стр, 15, ДлинаСтроки - 14));
				ОстатокСтроки = СокрЛП(Сред(Стр, ДлинаКода + 1, ДлинаСтроки - ДлинаКода));
				ОстатокСПробелами = Сред(Стр, ДлинаКода + 1, ДлинаСтроки - ДлинаКода);
				ЧислоСимволовНаименование = НайтиКонецБлока(СокрЛ(ОстатокСтроки));
				Наименование = СокрЛП(Лев(ОстатокСтроки, ЧислоСимволовНаименование));
				Если Код <> "" Тогда
					Если СокрЛП(Наименование) <> "" Тогда 
						СтрокаТЗ = ТаблицаТНВЕД.Добавить();
						к = к + 1;
					КонецЕсли;
				ИначеЕсли Лев(Наименование,1) = "–" Тогда                    
					СтрокаТЗ = ТаблицаТНВЕД.Добавить();
					к = к+ 1;
				КонецЕсли;
				Если Код = "" и Лев(Наименование,1) <> "–" Тогда
					Подстрока = Истина;
					Если СтрЧислоВхождений(СокрЛП(Стр), "   ") > 0 Тогда
						ЕстьНаименованиеСтавка = Истина
					ИначеЕсли Лев(ОстатокСПробелами, 21) = "                     " Тогда
						ЕстьСтавка = Истина;						
					Иначе
						ЕстьНаименование = Истина;
					КонецЕсли;
				КонецЕсли;
				Если НЕ Подстрока Тогда
					ОстатокСтрокиБезНаименования = СокрЛ(Сред(ОстатокСтроки,  ЧислоСимволовНаименование + 1, СтрДлина(ОстатокСтроки) - ЧислоСимволовНаименование));
					ЧислоСимволовЕдИзм = НайтиКонецБлока(ОстатокСтрокиБезНаименования);
					ЕдИзм = СокрЛП(Лев(ОстатокСтрокиБезНаименования, ЧислоСимволовЕдИзм));
					ОстатокСтрокиБезЕдИзм = СокрЛ(Сред(ОстатокСтрокиБезНаименования, ЧислоСимволовЕдИзм + 1, СтрДлина(ОстатокСтрокиБезНаименования) - ЧислоСимволовЕдИзм));
					Если ЧислоСимволовЕдИзм > 0 Тогда 
						Ставка = СокрЛП(ОстатокСтрокиБезЕдИзм);
					Иначе
						Ставка = "";
					КонецЕсли;				
					СтрокаТЗ.Код = Код;			
					СтрокаТЗ.Наименование = Наименование;
					СтрокаТЗ.ЕдИзм = СокрЛп(СтрокаТЗ.ЕдИзм + " " + ЕдИзм);
					СтрокаТЗ.Ставка = Ставка;
				Иначе
					Если к = 0 Тогда
						Стр = Текст.ПрочитатьСтроку();
						продолжить
					КонецЕсли;
					Если ЕстьНаименованиеСтавка Тогда
						Наименование = СтрЗаменить(СокрЛП(Стр), "       ", Символы.ПС);
						КолВоПереносов = СтрЧислоВхождений(Наименование, Символы.ПС);					
						ДопНаименование = СокрЛП(СтрПолучитьСтроку(Наименование, 1));
						ДопСтавка = СокрЛП(СтрПолучитьСтроку(Наименование, КолВоПереносов + 1));
						СтрокаТЗ.Наименование = СокрЛП(СтрокаТЗ.Наименование + " " + ДопНаименование);
						СтрокаТЗ.Ставка = СокрЛП(СтрокаТЗ.Ставка + " " + ДопСтавка);
					ИначеЕсли ЕстьСтавка Тогда
						СтрокаТЗ.Ставка = СокрЛП(СтрокаТЗ.Ставка + " " + Наименование);
					ИначеЕсли ЕстьНаименование Тогда
						СтрокаТЗ.Наименование = СокрЛП(СтрокаТЗ.Наименование + " " + Наименование);
					КонецЕсли;
				КонецЕсли;	
				
				Стр = Текст.ПрочитатьСтроку();	
				i = 1;			
			Иначе
				Стр = Текст.ПрочитатьСтроку();
			КонецЕсли;
		КонецЦикла;
		Текст.Закрыть();
		//УдалитьФайлы(КаталогВременныхФайлов + "temp.txt");
	КонецЦикла;	
	
	//УдалитьФайлы(КаталогВременныхФайлов + "pdftotext.exe");
	//УдалитьФайлы(КаталогВременныхФайлов + "hstart.exe");
	//УдалитьФайлы(КаталогВременныхФайлов + "xpdfrc");
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВременныхФайловНачалоВыбора(Элемент, СтандартнаяОбработка)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
	ДиалогОткрытия.Каталог = ""; 
	ДиалогОткрытия.МножественныйВыбор = Ложь; 
	ДиалогОткрытия.Заголовок = "Выберите каталог"; 
	
	Если ДиалогОткрытия.Выбрать() Тогда 
		КаталогВременныхФайлов = ДиалогОткрытия.Каталог + "\"; 
	КонецЕсли;
КонецПроцедуры

Функция ПосчитатьПробелы(Стр)
	
	Длина = СтрДлина(Стр);
	i = 0;
	Пока i < Длина Цикл		
		Если Сред(Стр,i,1) = " " Тогда		
			i = i + 1;
		Иначе
			Возврат i - 1
		КонецЕсли;	
	КонецЦикла;
	
КонецФункции

Функция НайтиКонецБлока(Стр)
	
	Длина = СтрДлина(Стр);
	i = 0;
	Пока i < Длина Цикл		
		Если Сред(Стр,i,2) <> "  " Тогда		
			i = i + 1;
		Иначе
			Возврат i - 1
		КонецЕсли;	
	КонецЦикла;
	Возврат i
	
КонецФункции

&НаКлиенте
Функция ОбработатьПДФВТекст(ТекстКоманды, КаталогВременныхФайлов)
	ЗапуститьПриложение(ТекстКоманды, КаталогВременныхФайлов);	
КонецФункции

Процедура ДобавитьРаздел(ТаблицаТНВЕД, н)
	Если н =1 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код = "РАЗДЕЛ I";
		СтрокаТЗ.Наименование = "Живые животные; продукты животного происхождения";
	ИначеЕсли н = 6 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ II";
		СтрокаТЗ.Наименование = "Продукты растительного происхождения";
	ИначеЕсли н = 15 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ III";
		СтрокаТЗ.Наименование = "Жиры и масла животного или растительного происхождения и продукты их расщепления; готовые пищевые жиры; воски животного или растительного происхождения";
	ИначеЕсли н = 16 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ IV";
		СтрокаТЗ.Наименование = "Готовые пищевые продукты; алкогольные и безалкогольные напитки и уксус; табак и его заменители";
	ИначеЕсли н = 25 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ V";
		СтрокаТЗ.Наименование = "Минеральные продукты";
	ИначеЕсли н = 28 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ VI";
		СтрокаТЗ.Наименование = "Продукция химической и связанных с ней отраслей промышленности";
	ИначеЕсли н = 39 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ VII";
		СтрокаТЗ.Наименование = "Пластмассы и изделия из них; каучук, резина и изделия из них";
	ИначеЕсли н = 41 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ VIII";
		СтрокаТЗ.Наименование = "Hеобработанные шкуры, выделанная кожа, натуральный мех и изделия из них; шорно-седельные изделия и упряжь; дорожные принадлежности, дамские сумки и аналогичные им товары; изделия из кишок животных (кроме волокна из фиброина шелкопряда)";
	ИначеЕсли н = 44 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ IX";
		СтрокаТЗ.Наименование = "Древесина и изделия из нее; древесный уголь; пробка и изделия из нее; изделия из соломы, альфы или из прочих материалов для плетения; корзиночные и другие плетеные изделия";
	ИначеЕсли н = 47 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ X";
		СтрокаТЗ.Наименование = "Масса из древесины или из других волокнистых целлюлозных материалов; регенерируемые бумага или картон (макулатура и отходы); бумага, картон и изделия из них";
	ИначеЕсли н = 50 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XI";
		СтрокаТЗ.Наименование = "Текстильные материалы и текстильные изделия";
	ИначеЕсли н = 64 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XII";
		СтрокаТЗ.Наименование = "Обувь, головные уборы, зонты, солнцезащитные зонты, трости, трости-сиденья, хлысты, кнуты и их части; обработанные перья и изделия из них; искусственные цветы; изделия из человеческого волоса";
	ИначеЕсли н = 68 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XIII";
		СтрокаТЗ.Наименование = "Изделия из камня, гипса, цемента, асбеста, слюды или аналогичных материалов; керамические изделия; стекло и изделия из него";
	ИначеЕсли н = 71 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XIV";
		СтрокаТЗ.Наименование = "Жемчуг природный или культивированный, драгоценные или полудрагоценные камни, драгоценные металлы, металлы, плакированные драгоценными металлами, и изделия из них; бижутерия; монеты";
	ИначеЕсли н = 72 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XV";
		СтрокаТЗ.Наименование = "Недрагоценные металлы и изделия из них";
	ИначеЕсли н = 84 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XVI";
		СтрокаТЗ.Наименование = "Машины, оборудование и механизмы; электротехническое оборудование; их части; звукозаписывающая и звуковоспроизводящая аппаратура, аппаратура для записи и воспроизведения телевизионного изображения и звука, их части и принадлежности";
	ИначеЕсли н = 86 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XVII";
		СтрокаТЗ.Наименование = "Средства наземного транспорта, летательные аппараты, плавучие средства и относящиеся к транспорту устройства и оборудование";
	ИначеЕсли н = 90 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XVIII";
		СтрокаТЗ.Наименование = "Инструменты и аппараты оптические, фотографические, кинематографические, измерительные, контрольные, прецизионные, медицинские или хирургические; часы всех видов; музыкальные инструменты; их части и принадлежности";
	ИначеЕсли н = 93 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XI";
		СтрокаТЗ.Наименование = "Оружие и боеприпасы; их части и принадлежности";
	ИначеЕсли н = 94 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XX";
		СтрокаТЗ.Наименование = "Разные промышленные товары";
	ИначеЕсли н = 97 Тогда
		СтрокаТЗ = ТаблицаТНВЕД.Добавить();
		СтрокаТЗ.Код ="РАЗДЕЛ XXI";
		СтрокаТЗ.Наименование = "Произведения искусства, предметы коллекционирования и антиквариат";
	КонецЕсли;
	
КонецПроцедуры

Функция ТолькоЦифры(Код)
	
	Цифры = "0123456789 []";
	СтрКоличество = СтрДлина(Код);
	Для Счетчик = 1 По СтрКоличество Цикл
		Если Найти(Цифры,Сред(Код,Счетчик,1)) = 0 Тогда
			Возврат Счетчик - 1;
		КонецЕсли;
	КонецЦикла;
	Возврат Счетчик - 1;
	
КонецФункции

Функция ПолучитьНаименованиеГруппы(н);
	
	Если н = 1 Тогда
		Группа = "Живые животные";
	ИначеЕсли н = 2 Тогда
		Группа = "Мясо и пищевые мясные субпродукты";
	ИначеЕсли н = 3 Тогда
		Группа = "Рыба и ракообразные, моллюски и прочие водные беспозвоночные";
	ИначеЕсли н = 4  Тогда
		Группа = "Молочная продукция; яйца птиц; мед натуральный; пищевые продукты животного происхождения, в другом месте не поименованные или не включенные";
	ИначеЕсли н = 5 Тогда
		Группа = "Продукты животного происхождения, в другом месте не поименованные или не включенные";
	ИначеЕсли н = 6 Тогда
		Группа = "Живые деревья и другие растения; луковицы, корни и прочие аналогичные части растений; срезанные цветы и декоративная зелень";
	ИначеЕсли н = 7 Тогда
		Группа = "Овощи и некоторые съедобные корнеплоды и клубнеплоды";
	ИначеЕсли н = 8 Тогда
		Группа = "Съедобные фрукты и орехи; кожура цитрусовых плодов или корки дынь";
	ИначеЕсли н = 9 Тогда
		Группа = "Кофе, чай, мате, или парагвайский чай, и пряности";
	ИначеЕсли н = 10 Тогда
		Группа = "Злаки";
	ИначеЕсли н = 11 Тогда
		Группа = "Продукция мукомольно-крупяной промышленности; солод; крахмалы; инулин; пшеничная клейковина";
	ИначеЕсли н = 12 Тогда
		Группа = "Масличные семена и плоды; прочие семена, плоды и зерно; лекарственные растения и растения для технических целей; солома и фураж";
	ИначеЕсли н = 13 Тогда
		Группа = "Шеллак природный неочищенный; камеди, смолы и прочие растительные соки и экстракты";
	ИначеЕсли н = 14 Тогда
		Группа = "Растительные материалы для изготовления плетеных изделий; прочие продукты растительного происхождения, в другом месте не поименованные или не включенные";
	ИначеЕсли н = 15 Тогда
		Группа = "Жиры и масла животного или растительного происхождения и продукты их расщепления; готовые пищевые жиры; воски животного или растительного происхождения";
	ИначеЕсли н = 16 Тогда
		Группа = "Готовые продукты из мяса, рыбы или ракообразных, моллюсков или прочих водных беспозвоночных";
	ИначеЕсли н = 17 Тогда
		Группа = "Сахар и кондитерские изделия из сахара";
	ИначеЕсли н = 18 Тогда
		Группа = "Какао и продукты из него";
	ИначеЕсли н = 19 Тогда
		Группа = "Готовые продукты из зерна злаков, муки, крахмала или молока; мучные кондитерские изделия";
	ИначеЕсли н = 20 Тогда
		Группа = "Продукты переработки овощей, фруктов, орехов или прочих частей растений";
	ИначеЕсли н = 21 Тогда
		Группа = "Разные пищевые продукты";
	ИначеЕсли н = 22 Тогда
		Группа = "Алкогольные и безалкогольные напитки и уксус";
	ИначеЕсли н = 23 Тогда
		Группа = "Остатки и отходы пищевой промышленности; готовые корма для животных";
	ИначеЕсли н = 24 Тогда
		Группа = "Табак и промышленные заменители табака";
	ИначеЕсли н = 25 Тогда
		Группа = "Соль; сера; земли и камень; штукатурные материалы, известь и цемент";
	ИначеЕсли н = 26 Тогда
		Группа = "Руды, шлак и зола";
	ИначеЕсли н = 27 Тогда
		Группа = "Топливо минеральное, нефть и продукты их перегонки; битуминозные вещества; воски минеральные";
	ИначеЕсли н = 28 Тогда
		Группа = "Продукты неорганической химии; соединения неорганические или органические драгоценных металлов, редкоземельных металлов, радиоактивных элементов или изотопов";
	ИначеЕсли н = 29 Тогда
		Группа = "Органические химические соединения";
	ИначеЕсли н = 30 Тогда
		Группа = "Фармацевтическая продукция";
	ИначеЕсли н = 31 Тогда
		Группа = "Удобрения";
	ИначеЕсли н = 32 Тогда
		Группа = "Экстракты дубильные или красильные; таннины и их производные; красители, пигменты и прочие красящие вещества; краски и лаки; шпатлевки и прочие мастики; полиграфическая краска, чернила, тушь";
	ИначеЕсли н = 33 Тогда
		Группа = "Эфирные масла и резиноиды; парфюмерные, косметические или туалетные средства";
	ИначеЕсли н = 34 Тогда
		Группа = "Мыло, поверхностно-активные органические вещества, моющие средства, смазочные материалы, искусственные и готовые воски, составы для чистки или полировки, свечи и аналогичные изделия, пасты для лепки, пластилин, зубоврачебный воск и зубоврачебные составы на основе гипса";
	ИначеЕсли н = 35 Тогда
		Группа = "Белковые вещества; модифицированные крахмалы; клеи; ферменты";
	ИначеЕсли н = 36 Тогда
		Группа = "Взрывчатые вещества; пиротехнические изделия; спички; пирофорные сплавы; некоторые горючие вещества";
	ИначеЕсли н = 37 Тогда
		Группа = "Фото- и кинотовары";
	ИначеЕсли н = 38 Тогда
		Группа = "Прочие химические продукты";
	ИначеЕсли н = 39 Тогда
		Группа = "Пластмассы и изделия из них";
	ИначеЕсли н = 40 Тогда
		Группа = "Каучук, резина и изделия из них";
	ИначеЕсли н = 41 Тогда
		Группа = "Hеобработанные шкуры (кроме натурального меха) и выделанная кожа";
	ИначеЕсли н = 42 Тогда
		Группа = "Изделия из кожи; шорно-седельные изделия и упряжь; дорожные принадлежности, дамские сумки и аналогичные им товары; изделия из кишок животных (кроме волокна из фиброина шелкопряда)";
	ИначеЕсли н = 43 Тогда
		Группа = "Натуральный и искусственный мех; изделия из него";
	ИначеЕсли н = 44 Тогда
		Группа = "Древесина и изделия из нее; древесный уголь";
	ИначеЕсли н = 45 Тогда
		Группа = "Пробка и изделия из нее";
	ИначеЕсли н = 46 Тогда
		Группа = "Изделия из соломы, альфы или прочих материалов для плетения; корзиночные изделия и плетеные изделия";
	ИначеЕсли н = 47 Тогда
		Группа = "Масса из древесины или из других волокнистых целлюлозных материалов; регенерируемые бумага или картон (макулатура и отходы)";
	ИначеЕсли н = 48 Тогда
		Группа = "Бумага и картон; изделия из бумажной массы, бумаги или картона";
	ИначеЕсли н = 49 Тогда
		Группа = "Печатные книги, газеты, репродукции и другие изделия полиграфической промышленности; рукописи, машинописные тексты и планы";
	ИначеЕсли н = 50 Тогда
		Группа = "Шелк";
	ИначеЕсли н = 51 Тогда
		Группа = "Шерсть, тонкий или грубый волос животных; пряжа и ткань, из конского волоса";
	ИначеЕсли н = 52 Тогда
		Группа = "Хлопок";
	ИначеЕсли н = 53 Тогда
		Группа = "Прочие растительные текстильные волокна; бумажная пряжа и ткани из бумажной пряжи";
	ИначеЕсли н = 54 Тогда
		Группа = "Химические нити; плоские и аналогичные нити из химических текстильных материалов";
	ИначеЕсли н = 55 Тогда
		Группа = "Химические волокна";
	ИначеЕсли н = 56 Тогда
		Группа = "Вата, войлок или фетр и нетканые материалы; специальная пряжа; бечевки, веревки, канаты и тросы и изделия из них";
	ИначеЕсли н = 57 Тогда
		Группа = "Ковры и прочие текстильные напольные покрытия";
	ИначеЕсли н = 58 Тогда
		Группа = "Специальные ткани; тафтинговые текстильные материалы; кружева; гобелены; отделочные материалы; вышивки";
	ИначеЕсли н = 59 Тогда
		Группа = "Текстильные материалы, пропитанные, с покрытием или дублированные; текстильные изделия технического назначения";
	ИначеЕсли н = 60 Тогда
		Группа = "Трикотажные полотна машинного или ручного вязания";
	ИначеЕсли н = 61 Тогда
		Группа = "Предметы одежды и принадлежности к одежде, трикотажные машинного или ручного вязания";
	ИначеЕсли н = 62 Тогда
		Группа = "Предметы одежды и принадлежности к одежде, кроме трикотажных машинного или ручного вязания";
	ИначеЕсли н = 63 Тогда
		Группа = "Прочие готовые текстильные изделия; наборы; одежда и текстильные изделия, бывшие в употреблении; тряпье";
	ИначеЕсли н = 64 Тогда
		Группа = "Обувь, гетры и аналогичные изделия; их детали";
	ИначеЕсли н = 65 Тогда
		Группа = "Головные уборы и их части";
	ИначеЕсли н = 66 Тогда
		Группа = "Зонты, солнцезащитные зонты, трости, трости-сиденья, хлысты, кнуты для верховой езды и их части";
	ИначеЕсли н = 67 Тогда
		Группа = "Обработанные перья и пух и изделия из перьев или пуха; искусственные цветы; изделия из человеческого волоса";
	ИначеЕсли н = 68 Тогда
		Группа = "Изделия из камня, гипса, цемента, асбеста, слюды или аналогичных материалов";
	ИначеЕсли н = 69 Тогда
		Группа = "Керамические изделия";
	ИначеЕсли н = 70 Тогда
		Группа = "Стекло и изделия из него";
	ИначеЕсли н = 71 Тогда
		Группа = "Жемчуг природный или культивированный, драгоценные или полудрагоценные камни, драгоценные металлы, металлы, плакированные драгоценными металлами, и изделия из них; бижутерия; монеты";
	ИначеЕсли н = 72 Тогда
		Группа = "Черные металлы";
	ИначеЕсли н = 73 Тогда
		Группа = "Изделия из черных металлов";
	ИначеЕсли н = 74 Тогда
		Группа = "Медь и изделия из нее";
	ИначеЕсли н = 75 Тогда
		Группа = "Никель и изделия из него";
	ИначеЕсли н = 76 Тогда
		Группа = "Алюминий и изделия из него";
	ИначеЕсли н = 78 Тогда
		Группа = "Свинец и изделия из него";
	ИначеЕсли н = 79 Тогда
		Группа = "Цинк и изделия из него";
	ИначеЕсли н = 80 Тогда
		Группа = "Олово и изделия из него";
	ИначеЕсли н = 81 Тогда
		Группа = "Прочие недрагоценные металлы; металлокерамика; изделия из них";
	ИначеЕсли н = 82 Тогда
		Группа = "Инструменты, приспособления, ножевые изделия, ложки и вилки из недрагоценных металлов; их части из недрагоценных металлов";
	ИначеЕсли н = 83 Тогда
		Группа = "Прочие изделия из недрагоценных металлов";
	ИначеЕсли н = 84 Тогда
		Группа = "Реакторы ядерные, котлы, оборудование и механические устройства; их части";
	ИначеЕсли н = 85 Тогда
		Группа = "Электрические машины и оборудование, их части; звукозаписывающая и звуковоспроизводящая аппаратура, аппаратура для записи и воспроизведения телевизионного изображения и звука, их части и принадлежности";
	ИначеЕсли н = 86 Тогда
		Группа = "Железнодорожные локомотивы или моторные вагоны трамвая, подвижной состав и их части; путевое оборудование и устройства для железных дорог или трамвайных путей и их части; механическое (включая электромеханическое) сигнальное оборудование всех видов";
	ИначеЕсли н = 87 Тогда
		Группа = "Средства наземного транспорта, кроме железнодорожного или трамвайного подвижного состава, и их части и принадлежности";
	ИначеЕсли н = 88 Тогда
		Группа = "Летательные аппараты, космические аппараты, и их части";
	ИначеЕсли н = 89 Тогда
		Группа = "Суда, лодки и плавучие конструкции";
	ИначеЕсли н = 90 Тогда
		Группа = "Инструменты и аппараты оптические, фотографические, кинематографические, измерительные, контрольные, прецизионные, медицинские или хирургические; их части и принадлежности";
	ИначеЕсли н = 91 Тогда
		Группа = "Часы всех видов и их части";
	ИначеЕсли н = 92 Тогда
		Группа = "Инструменты музыкальные; их части и принадлежности";
	ИначеЕсли н = 93 Тогда
		Группа = "Оружие и боеприпасы; их части и принадлежности";
	ИначеЕсли н = 94 Тогда
		Группа = "Мебель; постельные принадлежности, матрацы, основы матрацные, диванные подушки и аналогичные набивные принадлежности мебели; лампы и осветительное оборудование, в другом месте не поименованные или не включенные; световые вывески, световые таблички с именем или названием, или адресом и аналогичные изделия; сборные строительные конструкции";
	ИначеЕсли н = 95 Тогда
		Группа = "Игрушки, игры и спортивный инвентарь; их части и принадлежности";
	ИначеЕсли н = 96 Тогда
		Группа = "Разные готовые изделия";
	ИначеЕсли н = 97 Тогда
		Группа = "Произведения искусства, предметы коллекционирования и антиквариат";
	КонецЕсли;
	Возврат Группа 
	
КонецФункции

&НаСервере
Функция ПолучитьТекстСайта(Ссылка);
    ПолныйТекстСайта="";
    Сайт = Новый COMОбъект("InternetExplorer.Application");
    Сайт.Visible = Ложь;
    //Состояние("Подключение к " + Ссылка);
    Сайт.Navigate(Ссылка);
    Пока Сайт.ReadyState < 4 Цикл
    КонецЦикла;
    Попытка
        ПолныйТекстСайта = Сайт.Document.documentElement.innerHTML;
    Исключение
    КонецПопытки;
    
    Сайт.Quit();
    Возврат ПолныйТекстСайта;
КонецФункции


Функция ЧтениеHTMLФайла(ДанныеHTML)
	
	ЧтениеHTML1 = Новый ЧтениеHTML;
	ЧтениеHTML1.УстановитьСтроку(ДанныеHTML, "UTF8");    
	ПостроительDOM1 = Новый ПостроительDOM;
	ДокументHTML1 = ПостроительDOM1.Прочитать(ЧтениеHTML1);    
	ЭлементыDOM1 = ДокументHTML1.ПолучитьЭлементыПоИмени("a");     
	
	МассивСсылок = Новый Массив;
	
	Для Каждого ЭлементDOM1 Из ЭлементыDOM1 Цикл
		Если СтрЧислоВхождений(ЭлементDOM1.Гиперссылка, "/ru/act/trade/catr/ett/Documents/ett") = 1 Тогда
			МассивСсылок.Добавить(ЭлементDOM1.Гиперссылка)	
		КонецЕсли;
	КонецЦикла;   
	Возврат МассивСсылок
	
КонецФункции

