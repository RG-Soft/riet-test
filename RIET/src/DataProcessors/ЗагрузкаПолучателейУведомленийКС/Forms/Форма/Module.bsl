&НаКлиенте
Перем СоответствиеСинонимовИимен;

//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	ЗаполнитьСписокЛистовЭкселяИНомераКолонок();
	ЗаполнитьПараметрыСтруктурыФайлаПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыСтруктурыФайлаПоУмолчанию()
	
	FirstRowOfData = 2;
	LastRowOfData = 0;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	ЗаполнитьСписокЛистовЭкселяИНомераКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Files xlsx (*.xlsx)|*.xlsx|Files xls (*.xls)|*.xls";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокЛистовЭкселяИНомераКолонок()
	
	Sheet = "";
	СписокЛистов = Новый Массив;
	Если ЗначениеЗаполнено(FullPath) Тогда
		Connection = Новый COMОбъект("ADODB.Connection");
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
		Попытка 
			Connection.Open(СтрокаПодключения);	
		Исключение
			Попытка
				СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
				Connection.Open(СтрокаПодключения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		rs = Новый COMObject("ADODB.RecordSet");
		rs.ActiveConnection = Connection;
		rs = Connection.OpenSchema(20);
		Пока rs.EOF() = 0 Цикл
			Если rs.Fields("TABLE_NAME").Value <> "_xlnm#_FilterDatabase" Тогда
				СписокЛистов.Добавить(rs.Fields("TABLE_NAME").Value);
			КонецЕсли;
			rs.MoveNext();
		КонецЦикла;
		rs.Close();
		Если СписокЛистов.Количество()>0 Тогда
			Sheet = СписокЛистов[0];
			sqlString = "Select top 1 * from [" + Sheet + "]";
			rs.Open(sqlString);
			ЗаполнитьНомераКолонок(rs);
			rs.Close();
		Конецесли;
		Connection.Close();
	КонецЕсли;
	Элементы.Sheet.СписокВыбора.ЗагрузитьЗначения(СписокЛистов);
	Если СписокЛистов.Количество() = 1 Или СписокЛистов.Количество() = 0 Тогда
		Элементы.Sheet.КнопкаСпискаВыбора = Ложь;
	Иначе
		Элементы.Sheet.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура SheetПриИзменении(Элемент)
	
	СписокЛистов = Новый Массив;
	Если ЗначениеЗаполнено(FullPath) Тогда
		Connection = Новый COMОбъект("ADODB.Connection");
		СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
		Попытка 
			Connection.Open(СтрокаПодключения);	
		Исключение
			Попытка
				СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
				Connection.Open(СтрокаПодключения);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		rs = Новый COMObject("ADODB.RecordSet");
		rs.ActiveConnection = Connection;
		sqlString = "select top 1 * from [" + Sheet + "]";
		rs.Open(sqlString);
		ЗаполнитьНомераКолонок(rs);
		rs.Close();
		Connection.Close();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераКолонок(rs)
	
	Если rs.EOF <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для ТекИндекс = 0 По rs.Fields.Count - 1 Цикл
		
		ИмяРеквизита = Неопределено;
		ИмяКолонки = СокрЛП(rs.Fields(ТекИндекс).Value);
		
		Для Каждого КлючИЗначение из СоответствиеСинонимовИимен Цикл 
			Если КлючИЗначение.Значение = ИмяКолонки Тогда 
				ИмяРеквизита = КлючИЗначение.Ключ;
				Прервать;
			КонецЕсли;  
		КонецЦикла;
		
		Если ИмяРеквизита <> Неопределено Тогда
			ЭтотОбъект[ИмяРеквизита] = ТекИндекс + 1;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	         	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Need to select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ВсеПоляУказаны() Тогда 
		Возврат;
	КонецЕсли;
		
	Отказ = Ложь;

		
	ЗаполнитьТаблицуДанныхИзФайлаXLS(Отказ, FullPath);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Состояние("Loading data...");
	ЗаполнитьПолучателейКС();
	    		
КонецПроцедуры

&НаКлиенте
Функция ВсеПоляУказаны()
	
	ВсеПоляУказаны = Истина;
	      		
	Если ColumnAUCode = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn 'AU Code'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если Column1Level = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn '1 Level'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если Column2Level = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn '2 Level'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если Column3Level = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn '3 Level'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	Если Column4Level = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Need to specify the сolumn '4 Level'!");
		ВсеПоляУказаны = Ложь;
	КонецЕсли;
	
	//Если Column5Level = 0 Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		"Need to specify the сolumn '5 Level'!");
	//	ВсеПоляУказаны = Ложь;
	//КонецЕсли;
	
	
	Возврат ВсеПоляУказаны;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуДанныхИзФайлаXLS(Отказ, ПолноеИмяXLSФайла)
	
	// Открываем файл
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FullPath + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		// если подключение не удалось, то пытаемся подключиться к файлу через Microsoft.Jet.OLEDB.4.0
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + FullPath + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	//rs.MoveFirst(); // Станем на 1 закладку
	sqlString = "select * from [" + Sheet + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
	
	// пропуск заголока
	rs.Move(FirstRowOfData - 1);
	
	АвтоОпределениеКонца = LastRowOfData = 0;
	
	ТаблицаДанных.Очистить();
	
	ТекAU = Неопределено;
	
	//запоняем таб.документ пока не кончатся строки
	Пока rs.EOF = 0 Цикл
		
		НовыйAU = СокрЛП(rs.Fields(ColumnAUCode - 1).Value);

		Если ЗначениеЗаполнено(НовыйAU) И НовыйAU <> ТекAU Тогда 
			ТекAU = НовыйAU;
		КонецЕсли;
		
		Level1 = СокрЛП(rs.Fields(Column1Level - 1).Value);
		Level2 = СокрЛП(rs.Fields(Column2Level - 1).Value);
		Level3 = СокрЛП(rs.Fields(Column3Level - 1).Value);
		Level4 = СокрЛП(rs.Fields(Column4Level - 1).Value);
		//Level5 = СокрЛП(rs.Fields(Column5Level - 1).Value);
		
		Если СтрНайти(Level1, "@") > 0
			ИЛИ СтрНайти(Level2, "@") > 0
			ИЛИ СтрНайти(Level3, "@") > 0
			ИЛИ СтрНайти(Level4, "@") > 0 Тогда
			//ИЛИ СтрНайти(Level5, "@") > 0 Тогда 
			
			СтрокаТЗ = ТаблицаДанных.Добавить();
			СтрокаТЗ.AU = ТекAU;
			СтрокаТЗ.Level1 = Level1;
			СтрокаТЗ.Level2 = Level2;
			СтрокаТЗ.Level3 = Level3;
			СтрокаТЗ.Level4 = Level4;
			//СтрокаТЗ.Level5 = Level5;
			
		КонецЕсли;
		
		rs.MoveNext();
		     				
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейКС() 
	
	ЕстьОшибки = Ложь;

	Level1 = Справочники.УровниУведомленийКС.НайтиПоКоду("Level 1");
	Если Не ЗначениеЗаполнено(Level1) Тогда
		Сообщить("Не найден уровень уведомлений КС с кодом Level 1!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Level2 = Справочники.УровниУведомленийКС.НайтиПоКоду("Level 2");
	Если Не ЗначениеЗаполнено(Level2) Тогда
		Сообщить("Не найден уровень уведомлений КС с кодом Level 2!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Level3 = Справочники.УровниУведомленийКС.НайтиПоКоду("Level 3");
	Если Не ЗначениеЗаполнено(Level3) Тогда
		Сообщить("Не найден уровень уведомлений КС с кодом Level 3!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Level4 = Справочники.УровниУведомленийКС.НайтиПоКоду("Level 4");
	Если Не ЗначениеЗаполнено(Level4) Тогда
		Сообщить("Не найден уровень уведомлений КС с кодом Level 4!");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	//Level5 = Справочники.УровниУведомленийКС.НайтиПоКоду("Level 5");
	//Если Не ЗначениеЗаполнено(Level5) Тогда
	//	Сообщить("Не найден уровень уведомлений КС с кодом Level 5!");
	//	ЕстьОшибки = Истина;
	//КонецЕсли;
	
	ТЗ = ТаблицаДанных.Выгрузить();
	МассивAUs = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаДанных, "AU");
	
	СтруктураОтбораAU = Новый Структура("AU");
	// { RGS AArsentev SLI-0006756 05.09.2016 16:13:54 
	НачатьТранзакцию();
	
	НаборЗаписей = РегистрыСведений.AUsПолучателиУведомленийКС.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	// } RGS AArsentev SLI-0006756 05.09.2016 16:13:54
	Для Каждого AUCode из МассивAUs Цикл 
		
		AU = Неопределено;
		
		СтруктураОтбораAU.AU = AUCode;
		ТаблицаAU = ТЗ.Скопировать(СтруктураОтбораAU);
		
		МассивEmailsLevel1 = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаAU, "Level1");
		МассивEmailsLevel2 = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаAU, "Level2");
		МассивEmailsLevel3 = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаAU, "Level3");
		МассивEmailsLevel4 = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаAU, "Level4");
		//МассивEmailsLevel5 = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаAU, "Level5");
											
		
		AUCodeДляПоиска = AUCode;
		Пока СтрДлина(AUCodeДляПоиска) < 7 Цикл 
			AUCodeДляПоиска = "0" + AUCodeДляПоиска;
		КонецЦикла;	
		 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КостЦентры.Ссылка КАК AU
		|ИЗ
		|	Справочник.КостЦентры КАК КостЦентры
		|ГДЕ
		|	КостЦентры.Код = &Код
		|	И НЕ КостЦентры.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Код", AUCodeДляПоиска);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			AU = Выборка.AU;
			
			// { RGS AArsentev SLI-0006756 05.09.2016 16:13:54  							
			//НаборЗаписей = РегистрыСведений.AUsПолучателиУведомленийКС.СоздатьНаборЗаписей();
			//НаборЗаписей.Отбор.AU.Установить(AU);
			//НаборЗаписей.Прочитать();
			//НаборЗаписей.Очистить();
			// } RGS AArsentev SLI-0006756 05.09.2016 16:13:54
			
			// Level 1
			Если ЗначениеЗаполнено(Level1) Тогда 
				
				Для Каждого EmailLevel1 из МассивEmailsLevel1 Цикл
					
					Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(EmailLevel1) Тогда 
						
						Запись = НаборЗаписей.Добавить();
						Запись.AU = AU;
						Запись.УровеньУведомленийКС = Level1;
						Запись.Получатель = EmailLevel1;
						
					иначе
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						"Некорректный e-mail '" + EmailLevel1 + "' для AU " + AU + " Level 1!",
						, , , ЕстьОшибки);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Level 2
			Если ЗначениеЗаполнено(Level2) Тогда 
				
				Для Каждого EmailLevel2 из МассивEmailsLevel2 Цикл
					
					Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(EmailLevel2) Тогда 
						
						Запись = НаборЗаписей.Добавить();
						Запись.AU = AU;
						Запись.УровеньУведомленийКС = Level2;
						Запись.Получатель = EmailLevel2;
						
					иначе
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						"Некорректный e-mail '" + EmailLevel2 + "' для AU " + AU + " Level 2!",
						, , , ЕстьОшибки);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			// Level 3
			Если ЗначениеЗаполнено(Level3) Тогда 
				
				Для Каждого EmailLevel3 из МассивEmailsLevel3 Цикл
					
					Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(EmailLevel3) Тогда 
						
						Запись = НаборЗаписей.Добавить();
						Запись.AU = AU;
						Запись.УровеньУведомленийКС = Level3;
						Запись.Получатель = EmailLevel3;
						
					иначе
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						"Некорректный e-mail '" + EmailLevel3 + "' для AU " + AU + " Level 3!",
						, , , ЕстьОшибки);
						
					КонецЕсли;

				КонецЦикла;
				
			КонецЕсли;
			
			// Level 4
			Если ЗначениеЗаполнено(Level4) Тогда 
				          									
				Для Каждого EmailLevel4 из МассивEmailsLevel4 Цикл
					
					Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(EmailLevel4) Тогда 
						
						Запись = НаборЗаписей.Добавить();
						Запись.AU = AU;
						Запись.УровеньУведомленийКС = Level4;
						Запись.Получатель = EmailLevel4;
						
					иначе
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						"Некорректный e-mail '" + EmailLevel4 + "' для AU " + AU + " Level 4!",
						, , , ЕстьОшибки);
						
					КонецЕсли;
					
				КонецЦикла;
					  					
			КонецЕсли;
			
			//// Level 5
			//Если ЗначениеЗаполнено(Level5) Тогда 
			//	Для Каждого EmailLevel5 из МассивEmailsLevel5 Цикл
			//		Запись = НаборЗаписей.Добавить();
			//		Запись.AU = AU;
			//		Запись.УровеньУведомленийКС = Level5;
			//		Запись.Получатель = EmailLevel5;			
			//	КонецЦикла;
			//КонецЕсли;
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Сообщить("Failed to save ""Получатели КС"" for AU <" + AUCode + ">:" + ОписаниеОшибки());
				ЕстьОшибки = Истина;
			КонецПопытки;
			
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(AU) Тогда
			Сообщить("Failed to find AU by code <" + СокрЛП(AUCodeДляПоиска) + ">.");
			ЕстьОшибки = Истина;
		иначе
			//Сообщить("For AU <" + СокрЛП(AUCodeДляПоиска) + "> data was loaded.");
		КонецЕсли;
		
	КонецЦикла;	
	
	Если ЕстьОшибки Тогда
		// { RGS AArsentev SLI-0006756 05.09.2016 16:13:54
		ОтменитьТранзакцию();
		// } RGS AArsentev SLI-0006756 05.09.2016 16:13:54
		Сообщить("File was not loaded.");		
	Иначе
		// { RGS AArsentev SLI-0006756 05.09.2016 16:13:54
		ЗафиксироватьТранзакцию();
		// } RGS AArsentev SLI-0006756 05.09.2016 16:13:54
		Сообщить("File was successfully loaded.");	
	КонецЕсли;
		
КонецПроцедуры

СоответствиеСинонимовИимен = Новый Соответствие;
СоответствиеСинонимовИимен.Вставить("ColumnAUCode", "AU");
СоответствиеСинонимовИимен.Вставить("Column1Level", "1 level");
СоответствиеСинонимовИимен.Вставить("Column2Level", "2 level");
СоответствиеСинонимовИимен.Вставить("Column3Level", "3 level");
СоответствиеСинонимовИимен.Вставить("Column4Level", "4 level");
//СоответствиеСинонимовИимен.Вставить("Column5Level", "5 level");

