
//////////////////////////////////////////////////////////////
// Загрузка доп. полей PO lines из Excel-файла 

Процедура ЗагрузитьДанныеИзФайла(ПолноеИмяФайла) Экспорт 
	
	ТекстОшибок = "";
	
	МассивСтруктурPOLines = ПолучитьМассивСтруктурPOLinesИзФайла(ТекстОшибок, ПолноеИмяФайла);
	
	Если ПустаяСтрока(ТекстОшибок) Тогда
		ДозаполнитьPO(ТекстОшибок, МассивСтруктурPOLines);
	КонецЕсли;
	
	УдалитьФайлы(ПолноеИмяФайла);
	
	Если Не ПустаяСтрока(ТекстОшибок) Тогда 
		Сообщить(СокрЛП(ТекстОшибок + "
			|There were errors during loading GOLD Order status report!
			|See errors above."));
	иначе
		Сообщить("GOLD Order status report was successfully loaded.");	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМассивСтруктурPOLinesИзФайла(ТекстОшибок, ПолноеИмяФайла)
	
	МассивСтруктурPOLines = Новый Массив;
		
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ТекстОшибок = ТекстОшибок + ОписаниеОшибки();
		КонецПопытки;
	КонецПопытки;
		
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	ЛистЭксель = rs.Fields("TABLE_NAME").Value;
	
	sqlString = "select * from [" + ЛистЭксель + "]";
	rs.Close();
	rs.Open(sqlString);
	
	rs.MoveFirst();
	rs.MoveNext();
	
	СвойстваСтруктуры = "SWPS_PO,SWPS_PO_Line,Supplier_Promise_Date,Receipt_Date,DO,HTC,Urgent_Flag,
		|Status,Current_RDD,Supplier_Required_Date,Ship_TO,Shipto_Code,Country_of_Origin,Hub_1";
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	
	НомерСтроки = 1;
	Пока rs.EOF = 0 Цикл
		
		НомерСтроки = НомерСтроки + 1;
						
		Если НомерСтроки = 2 Тогда 
			
			СтруктураИменИНомеровКолонок = ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок);
			
			Если Не ПустаяСтрока(ТекстОшибок) Тогда 
				Прервать;
			КонецЕсли;
			
			rs.MoveNext();
			Продолжить;
			
		КонецЕсли;
		
		//добавляем значение каждой ячейки файла в структуру значений
		Для Каждого ЭлементСтруктуры из СтруктураИменИНомеровКолонок Цикл 
			
			ЗначениеЯчейки = rs.Fields(ЭлементСтруктуры.Значение-1).Value;
			СтруктураЗначенийСтроки[ЭлементСтруктуры.Ключ] = ЗначениеЯчейки;
			
		КонецЦикла;
		           				
		//добавляем новую структуру и пытаемся заполнить	
		Попытка
			
			СтруктураPOLine = Новый Структура(СвойстваСтруктуры);
			
			Для Каждого ЭлементСтруктурыЗначений из СтруктураЗначенийСтроки Цикл 
				СтруктураPOLine[ЭлементСтруктурыЗначений.Ключ] = ЭлементСтруктурыЗначений.Значение;	
			КонецЦикла;
			
			СтруктураPOLine.Вставить("НомерСтрокиФайла", НомерСтроки);
			
			МассивСтруктурPOLines.Добавить(СтруктураPOLine);
			
		Исключение
			ТекстОшибок = ТекстОшибок + "
			|filed to load data in line №" + НомерСтроки + " column '" + ЭлементСтруктурыЗначений.Ключ + "'!";
		КонецПопытки;
		
		rs.MoveNext();
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	Возврат МассивСтруктурPOLines;
	
КонецФункции

Функция ПолучитьСтруктуруИменИНомеровКолонок(rs, СвойстваСтруктуры, ТекстОшибок)
	
	СтруктураКолонокИИндексов = Новый Структура(СвойстваСтруктуры);
	
	НомерКолонки = 1;
	Для Каждого Field из rs.Fields Цикл 
		
		ТекстЯчейки = ВРег(СокрЛП(Field.Value));
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли; 
		     
		Если ТекстЯчейки = "SWPS PO" Тогда
			СтруктураКолонокИИндексов.SWPS_PO = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SWPS PO LINE" Тогда
			СтруктураКолонокИИндексов.SWPS_PO_Line = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SUPPLIER PROMISE DATE" Тогда
			СтруктураКолонокИИндексов.Supplier_Promise_Date = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "RECEIPT DATE" Тогда
			СтруктураКолонокИИндексов.Receipt_Date = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "DO" Тогда
			СтруктураКолонокИИндексов.DO = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "HTC" Тогда
			СтруктураКолонокИИндексов.HTC = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "URGENT FLAG" Тогда
			СтруктураКолонокИИндексов.Urgent_Flag = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "STATUS" Тогда
			СтруктураКолонокИИндексов.Status = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "CURRENT RDD" Тогда
			СтруктураКолонокИИндексов.Current_RDD = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SUPPLIER REQUIRED DATE" Тогда
			СтруктураКолонокИИндексов.Supplier_Required_Date = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SHIP TO" Тогда
			СтруктураКолонокИИндексов.Ship_TO = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SHIPTO CODE" Тогда
			СтруктураКолонокИИндексов.Shipto_Code = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "COUNTRY OF ORIGIN" Тогда
			СтруктураКолонокИИндексов.Country_of_Origin = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "HUB 1" Тогда
			СтруктураКолонокИИндексов.Hub_1 = НомерКолонки;
		КонецЕсли;   
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Для Каждого КлючИЗначение Из СтруктураКолонокИИндексов Цикл
		
		Если КлючИЗначение.Значение = Неопределено Тогда
			ТекстОшибок = ТекстОшибок + "
			|check column with data '" + КлючИЗначение.Ключ + "'!";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураКолонокИИндексов;
	
КонецФункции

Процедура ДозаполнитьPO(ТекстОшибок, МассивСтруктурPOLines) 
	                  		     	
	ТЗДанныхPOLines = ПолучитьДанныеДляЗаполненияPOLines(МассивСтруктурPOLines);
	РГСофтКлиентСервер.СокрЛПКолонокВТаблице(ТЗДанныхPOLines, "POCode");
	
	СтруктураОтбора = Новый Структура("POCode,POLineNumber");
	
	Для Каждого СтруктураPOLine из МассивСтруктурPOLines Цикл 
		
		СтруктураОтбора.POCode = СтруктураPOLine.SWPS_PO;
		СтруктураОтбора.POLineNumber = Число(СтруктураPOLine.SWPS_PO_Line);
		
		МассивСтрокДанныхPOLine = ТЗДанныхPOLines.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрокДанныхPOLine.Количество() = 0 Тогда
			ТекстОшибок = ТекстОшибок + "
			|Failed to find SWPS PO '" + СокрЛП(СтруктураPOLine.SWPS_PO) + "' line number " + СокрЛП(СтруктураPOLine.SWPS_PO_Line);
			Продолжить;
		КонецЕсли;
		
		СтрокаДанныхPOLine = МассивСтрокДанныхPOLine[0];
		
		POLineОбъект = СтрокаДанныхPOLine.POLine.ПолучитьОбъект();
		POОбъект = СтрокаДанныхPOLine.PO.ПолучитьОбъект();
		
		// PO
		
		РГСофтКлиентСервер.УстановитьЗначение(POОбъект.ShipTo, СтруктураPOLine.Ship_TO);
		РГСофтКлиентСервер.УстановитьЗначение(POОбъект.ShiptoCode, СтруктураPOLine.Shipto_Code);
		
		Если POОбъект.Модифицированность() Тогда 
			
			Попытка 
				POОбъект.Записать();
			Исключение
				ТекстОшибок = ТекстОшибок + "
				|Failed to save PO '" + СокрЛП(POОбъект) + "' 
				|"+ ОписаниеОшибки();                                    
			КонецПопытки;   
			
		КонецЕсли;

		// PO line
		
		Если Не ПустаяСтрока(СтруктураPOLine.Receipt_Date) Тогда 
			
			GOLDReceiptDate = ПолучитьДатуИзСтроки(СтруктураPOLine.Receipt_Date);
			Если GOLDReceiptDate = Неопределено Тогда 
				ТекстОшибок = ТекстОшибок + "
				|Failed to convert date '" + СокрЛП(СтруктураPOLine.Receipt_Date) + "'";                                    
			КонецЕсли;
						
			РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.GOLDReceiptDate, GOLDReceiptDate);
			
		КонецЕсли;
	
		Если Не ПустаяСтрока(СтруктураPOLine.Supplier_Promise_Date) Тогда 
			
			SupplierPromisedDate = ПолучитьДатуИзСтроки(СтруктураPOLine.Supplier_Promise_Date);
			Если SupplierPromisedDate = Неопределено Тогда 
				ТекстОшибок = ТекстОшибок + "
				|Failed to convert date '" + СокрЛП(СтруктураPOLine.Supplier_Promise_Date) + "'";                                    
			КонецЕсли;
						
			РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.SupplierPromisedDate, SupplierPromisedDate);
		
		КонецЕсли;
		
		Если Не ПустаяСтрока(СтруктураPOLine.Current_RDD) Тогда 
			
			CurrentRDD = ПолучитьДатуИзСтроки(СтруктураPOLine.Current_RDD);
			Если CurrentRDD = Неопределено Тогда 
				ТекстОшибок = ТекстОшибок + "
				|Failed to convert date '" + СокрЛП(СтруктураPOLine.Current_RDD) + "'";                                    
			КонецЕсли;
						
			РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.CurrentRDD, CurrentRDD);
		
		КонецЕсли;

		Если Не ПустаяСтрока(СтруктураPOLine.Supplier_Required_Date) Тогда 
			
			SupplierRequiredDate = ПолучитьДатуИзСтроки(СтруктураPOLine.Supplier_Required_Date);
			Если SupplierRequiredDate = Неопределено Тогда 
				ТекстОшибок = ТекстОшибок + "
				|Failed to convert date '" + СокрЛП(СтруктураPOLine.Supplier_Required_Date) + "'";                                    
			КонецЕсли;
						
			РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.SupplierRequiredDate, SupplierRequiredDate);
		
		КонецЕсли;
		
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.DONumber, СтруктураPOLine.DO);
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.HTC, СтруктураPOLine.HTC);
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.UrgentFlag, СтруктураPOLine.Urgent_Flag);
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.Status, СтруктураPOLine.Status);
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.CountryOfOrigin, СтруктураPOLine.Country_of_Origin);
		РГСофтКлиентСервер.УстановитьЗначение(POLineОбъект.Hub1, СтруктураPOLine.Hub_1);

		
		Если POLineОбъект.Модифицированность() Тогда 
			
			Попытка 
				POLineОбъект.Записать();
			Исключение
				ТекстОшибок = ТекстОшибок + "
				|Failed to save PO line '" + СокрЛП(POLineОбъект) + "' 
				|"+ ОписаниеОшибки();                                    
			КонецПопытки;   
			
		КонецЕсли;
		
	КонецЦикла; 	
		
КонецПроцедуры

Функция ПолучитьДанныеДляЗаполненияPOLines(МассивСтруктурPOLines)
	
	Запрос = Новый Запрос;
	
	МассивКодов = Новый Массив;
	Для Каждого СтруктураPOLine из МассивСтруктурPOLines Цикл 
		МассивКодов.Добавить(СтруктураPOLine.SWPS_PO);
	КонецЦикла; 
	
    Запрос.УстановитьПараметр("МассивКодов", МассивКодов);

	Запрос.Текст = "ВЫБРАТЬ
	               |	СтрокиЗаявкиНаЗакупку.НомерСтрокиЗаявкиНаЗакупку КАК POLineNumber,
	               |	СтрокиЗаявкиНаЗакупку.Владелец.Код КАК POCode,
	               |	СтрокиЗаявкиНаЗакупку.Ссылка КАК POLine,
	               |	СтрокиЗаявкиНаЗакупку.Владелец КАК PO
	               |ИЗ
	               |	Справочник.СтрокиЗаявкиНаЗакупку КАК СтрокиЗаявкиНаЗакупку
	               |ГДЕ
	               |	НЕ СтрокиЗаявкиНаЗакупку.ПометкаУдаления
	               |	И СтрокиЗаявкиНаЗакупку.Владелец.Код В(&МассивКодов)";
				   
	ТЗ = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр из ТЗ Цикл 
		Стр.POCode = ВРег(Стр.POCode);
	КонецЦикла;
	
	Возврат ТЗ;
		
КонецФункции

Функция ПолучитьДатуИзСтроки(Знач ДатаСтрока) Экспорт
	   	
	ДатаСтрока = СокрЛП(ДатаСтрока);
	
	ПозицияЗапятой = СтрНайти(ДатаСтрока, "-");
	     		
	ДеньСтрока = Лев(ДатаСтрока, ПозицияЗапятой - 1);	
	Попытка
		День = Число(ДеньСтрока);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	ОставшаясяСтрока = СокрЛ(Сред(ДатаСтрока, ПозицияЗапятой+1));
	
	МесяцСтрока = Лев(ОставшаясяСтрока, 3);
	Месяц = ImportExportСервер.ПолучитьНомерМесяцаИзСтроковогоПредставления(МесяцСтрока);
	Если Месяц = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ГодСтрока = Прав(ОставшаясяСтрока, 4);
	
	Попытка
		Год = Число(ГодСтрока);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
		   	
	Попытка
		ИтоговаяДата = Дата(Год, Месяц, День);
	Исключение
		Возврат Неопределено;
	КонецПопытки;

	Возврат ИтоговаяДата;
			
КонецФункции

