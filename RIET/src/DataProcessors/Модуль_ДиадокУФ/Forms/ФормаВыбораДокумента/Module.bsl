&НаКлиенте
Перем Document Экспорт;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбновитьСписокДокументов()
	
	Запрос= 						Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=	Новый МенеджерВременныхТаблиц;
	
	Если Параметры.Режим = "Сопоставление"
		И Лев(Параметры.Type, 7) = "Invoice" Тогда
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			
			если метаданные.документы.счетФактураПолученный.ТабличныеЧасти.найти("ВсегоПоДокументу") <> неопределено тогда 	
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Док.Контрагент КАК Контрагент,
			|	Док.Организация КАК Организация,
			|	Док.Ссылка КАК ДокументСсылка,
			|	Док.Дата КАК Дата,
			|	Док.Номер КАК Номер,
			|	Док.Дата КАК ДатаВходящегоДокумента,
			|	Док.Номер КАК НомерВходящегоДокумента,
			|	ТабличнаяЧастьВсегоПоДокументу.СуммаСНДС КАК Сумма
			|ПОМЕСТИТЬ Подзапрос
			|ИЗ
			|	Документ.СчетФактураПолученный КАК Док
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СчетФактураПолученныйВсегоПоДокументу.Ссылка КАК СчетФактураПолученный,
			|			СУММА(СчетФактураПолученныйВсегоПоДокументу.СуммаСНДС) КАК СуммаСНДС
			|		ИЗ
			|			Документ.СчетФактураПолученный.ВсегоПоДокументу КАК СчетФактураПолученныйВсегоПоДокументу
			|		
			|		СГРУППИРОВАТЬ ПО
			|			СчетФактураПолученныйВсегоПоДокументу.Ссылка) КАК ТабличнаяЧастьВсегоПоДокументу
			|		ПО Док.Ссылка = ТабличнаяЧастьВсегоПоДокументу.СчетФактураПолученный
			|ГДЕ
			|	Док.Контрагент В (&МассивКонтрагентов)
			|	И Док.Организация = &Организация
			|	И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
			Иначе 
				//нет ТЧ с суммами
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Док.Контрагент КАК Контрагент,
			|	Док.Организация КАК Организация,
			|	Док.Ссылка КАК ДокументСсылка,
			|	Док.Дата КАК Дата,
			|	Док.Номер КАК Номер,
			|	Док.Дата КАК ДатаВходящегоДокумента,
			|	Док.Номер КАК НомерВходящегоДокумента,
			|	0 КАК Сумма
			|ПОМЕСТИТЬ Подзапрос
			|ИЗ
			|	Документ.СчетФактураПолученный КАК Док
			|ГДЕ
			|	Док.Контрагент В (&МассивКонтрагентов)
			|	И Док.Организация = &Организация
			|	И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
			
			КонецЕсли;	
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда	
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	Док.Контрагент КАК Контрагент,
				|	Док.Организация КАК Организация,
				|	Док.Ссылка КАК ДокументСсылка,
				|	Док.Дата КАК Дата,
				|	Док.Номер КАК Номер,
				|	Док.СуммаДокумента КАК Сумма,
				|	Док.ДатаВходящегоДокумента,
				|	Док.НомерВходящегоДокумента
				|ПОМЕСТИТЬ Подзапрос
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Док
				|ГДЕ
				|	Док.Контрагент В (&МассивКонтрагентов)
				|	И Док.Организация = &Организация
				|	И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда	
			Запрос.Текст= 
				"ВЫБРАТЬ
				|	Док.Контрагент КАК Контрагент,
				|	Док.Организация КАК Организация,
				|	Док.Ссылка КАК ДокументСсылка,
				|	Док.Дата КАК Дата,
				|	Док.Номер КАК Номер,
				|	Док.СуммаДокумента КАК Сумма,
				|	Док.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
				|	Док.НомерПервичногоДокумента КАК НомерВходящегоДокумента
				|ПОМЕСТИТЬ Подзапрос
				|ИЗ
				|	Документ.СчетФактураПолученный КАК Док
				|ГДЕ
				|	Док.Контрагент В (&МассивКонтрагентов)
				|	И Док.Организация = &Организация
				|	И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
		КонецЕсли;
	Иначе
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	ЗапросДокументов.Контрагент,
			|	ЗапросДокументов.Организация,
			|	ЗапросДокументов.ДокументСсылка,
			|	ЗапросДокументов.Дата,
			|	ЗапросДокументов.Номер,
			|	ЗапросДокументов.Сумма,
			|	ЗапросДокументов.ДатаВходящегоДокумента,
			|	ЗапросДокументов.НомерВходящегоДокумента
			|ПОМЕСТИТЬ Подзапрос
			|ИЗ
			|	(ВЫБРАТЬ
			|		Док.Контрагент КАК Контрагент,
			|		Док.Организация КАК Организация,
			|		Док.Ссылка КАК ДокументСсылка,
			|		Док.Дата КАК Дата,
			|		Док.Номер КАК Номер,
			|		Док.СуммаДокумента КАК Сумма,
			|		Док.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|		Док.НомерВходящегоДокумента КАК НомерВходящегоДокумента
			|	ИЗ
			|		Документ.ПоступлениеТоваровУслуг КАК Док
			|	ГДЕ
			|		Док.Контрагент В (&МассивКонтрагентов)
			|		И Док.Организация = &Организация
			|		И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ВозвратТоваровОтКлиента.Контрагент,
			|		ВозвратТоваровОтКлиента.Организация,
			|		ВозвратТоваровОтКлиента.Ссылка,
			|		ВозвратТоваровОтКлиента.Дата,
			|		ВозвратТоваровОтКлиента.Номер,
			|		ВозвратТоваровОтКлиента.СуммаДокумента,
			|		"""",
			|		""""
			|	ИЗ
			|		Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
			|	ГДЕ
			|		ВозвратТоваровОтКлиента.Контрагент В (&МассивКонтрагентов)
			|		И ВозвратТоваровОтКлиента.Организация = &Организация
			|		И ВозвратТоваровОтКлиента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ПоступлениеУслугПрочихАктивов.Контрагент,
			|		ПоступлениеУслугПрочихАктивов.Организация,
			|		ПоступлениеУслугПрочихАктивов.Ссылка,
			|		ПоступлениеУслугПрочихАктивов.Дата,
			|		ПоступлениеУслугПрочихАктивов.Номер,
			|		ПоступлениеУслугПрочихАктивов.СуммаДокумента,
			|		ПоступлениеУслугПрочихАктивов.ДатаВходящегоДокумента,
			|		ПоступлениеУслугПрочихАктивов.НомерВходящегоДокумента
			|	ИЗ
			|		Документ.ПоступлениеУслугПрочихАктивов КАК ПоступлениеУслугПрочихАктивов
			|	ГДЕ
			|		ПоступлениеУслугПрочихАктивов.Контрагент В (&МассивКонтрагентов)
			|		И ПоступлениеУслугПрочихАктивов.Организация = &Организация
			|		И ПоступлениеУслугПрочихАктивов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК ЗапросДокументов";
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	ЗапросДокументов.Контрагент,
			|	ЗапросДокументов.Организация,
			|	ЗапросДокументов.ДокументСсылка,
			|	ЗапросДокументов.Дата,
			|	ЗапросДокументов.Номер,
			|	ЗапросДокументов.Сумма,
			|	ЗапросДокументов.ДатаВходящегоДокумента,
			|	ЗапросДокументов.НомерВходящегоДокумента
			|ПОМЕСТИТЬ Подзапрос
			|ИЗ
			|	(ВЫБРАТЬ
			|		Док.Контрагент КАК Контрагент,
			|		Док.Организация КАК Организация,
			|		Док.Ссылка КАК ДокументСсылка,
			|		Док.Дата КАК Дата,
			|		Док.Номер КАК Номер,
			|		Док.СуммаДокумента КАК Сумма,
			|		Док.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
			|		Док.НомерВходящегоДокумента КАК НомерВходящегоДокумента
			|	ИЗ
			|		Документ.ПоступлениеТоваровУслуг КАК Док
			|	ГДЕ
			|		Док.Контрагент В (&МассивКонтрагентов)
			|		И Док.Организация = &Организация
			|		И Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ВозвратТоваровОтПокупателя.Контрагент,
			|		ВозвратТоваровОтПокупателя.Организация,
			|		ВозвратТоваровОтПокупателя.Ссылка,
			|		ВозвратТоваровОтПокупателя.Дата,
			|		ВозвратТоваровОтПокупателя.Номер,
			|		ВозвратТоваровОтПокупателя.СуммаДокумента,
			|		"""",
			|		""""
			|	ИЗ
			|		Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
			|	ГДЕ
			|		ВозвратТоваровОтПокупателя.Контрагент В (&МассивКонтрагентов)
			|		И ВозвратТоваровОтПокупателя.Организация = &Организация
			|		И ВозвратТоваровОтПокупателя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ПоступлениеДопРасходов.Контрагент,
			|		ПоступлениеДопРасходов.Организация,
			|		ПоступлениеДопРасходов.Ссылка,
			|		ПоступлениеДопРасходов.Дата,
			|		ПоступлениеДопРасходов.Номер,
			|		ПоступлениеДопРасходов.СуммаДокумента,
			|		ПоступлениеДопРасходов.ДатаВходящегоДокумента,
			|		ПоступлениеДопРасходов.НомерВходящегоДокумента
			|	ИЗ
			|		Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
			|	ГДЕ
			|		ПоступлениеДопРасходов.Контрагент В (&МассивКонтрагентов)
			|		И ПоступлениеДопРасходов.Организация = &Организация
			|		И ПоступлениеДопРасходов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		СписаниеСРасчетногоСчета.Контрагент,
			|		СписаниеСРасчетногоСчета.Организация,
			|		СписаниеСРасчетногоСчета.Ссылка,
			|		СписаниеСРасчетногоСчета.Дата,
			|		СписаниеСРасчетногоСчета.Номер,
			|		СписаниеСРасчетногоСчета.СуммаДокумента,
			|		"""",
			|		""""
			|	ИЗ
			|		Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
			|	ГДЕ
			|		СписаниеСРасчетногоСчета.Контрагент В (&МассивКонтрагентов)
			|		И СписаниеСРасчетногоСчета.Организация = &Организация
			|		И СписаниеСРасчетногоСчета.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК ЗапросДокументов";
			
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
			
			Если Параметры.Type = "XmlAcceptanceCertificate" Тогда
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.СуммаДокумента КАК Сумма,
				|	Т.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
				|	Т.НомерПервичногоДокумента КАК НомерВходящегоДокумента
				|ПОМЕСТИТЬ Подзапрос
				|ИЗ
				|	Документ.ПоступлениеУслугРабот КАК Т
				|ГДЕ
				|	Т.Организация = &Организация
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Контрагент В(&МассивКонтрагентов)";
				
			Иначе
				
				Запрос.Текст= 
				"ВЫБРАТЬ
				|	Т.Контрагент КАК Контрагент,
				|	Т.Организация КАК Организация,
				|	Т.Ссылка КАК ДокументСсылка,
				|	Т.Дата КАК Дата,
				|	Т.Номер КАК Номер,
				|	Т.СуммаДокумента КАК Сумма,
				|	Т.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
				|	Т.НомерПервичногоДокумента КАК НомерВходящегоДокумента
				|ПОМЕСТИТЬ Подзапрос
				|ИЗ
				|	Документ.ПоступлениеМЗ КАК Т
				|ГДЕ
				|	Т.Организация = &Организация
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Контрагент В(&МассивКонтрагентов)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Т.Контрагент,
				|	Т.Организация,
				|	Т.Ссылка,
				|	Т.Дата,
				|	Т.Номер,
				|	Т.СуммаДокумента,
				|	Т.ДатаПервичногоДокумента,
				|	Т.НомерПервичногоДокумента
				|ИЗ
				|	Документ.ПоступлениеОС КАК Т
				|ГДЕ
				|	Т.Организация = &Организация
				|	И Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И Т.Контрагент В(&МассивКонтрагентов)";
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	МассивКонтрагентов=	МетодСервера(,"CounteragentBoxID_2_МассивКонтрагентов", Параметры.CounteragentBoxID);
	
	Запрос.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ДатаНачала", 		ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 		КонецДня(ДатаОкончания));
	
	Запрос.Выполнить();
	
	Запрос.Текст=	
	//{
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокОснования.Ссылка,
		|	ДокОснования.ДокументОснование
		|ПОМЕСТИТЬ ДокОснование
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокОснования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Подзапрос.Контрагент,
		|	Подзапрос.Организация,
		|	Подзапрос.ДокументСсылка,
		|	Подзапрос.Дата,
		|	Подзапрос.Номер,
		|	Подзапрос.Сумма,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДокОснование.ДокументОснование, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОснование,
		|	ЛОЖЬ КАК Пометка,
		|	ДополнительныеСведения.Значение КАК ЗначениеСвойства,
		|	Подзапрос.ДатаВходящегоДокумента,
		|	Подзапрос.НомерВходящегоДокумента
		|ИЗ
		|	Подзапрос КАК Подзапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокОснование КАК ДокОснование
		|		ПО Подзапрос.ДокументСсылка = ДокОснование.ДокументОснование
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДополнительныеСведения.Объект КАК Объект,
		|			ДополнительныеСведения.Значение КАК Значение
		|		ИЗ
		|			РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|		ГДЕ
		|			ДополнительныеСведения.Свойство.Наименование = &НаименованиеСвойства) КАК ДополнительныеСведения
		|		ПО Подзапрос.ДокументСсылка = ДополнительныеСведения.Объект";
	//}
	Запрос.УстановитьПараметр("НаименованиеСвойства", МетодСервера(,"ИдентификаторСвойстваИдентификаторДокументаВДиадок"));
	
	ТабДанные=	Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(ТабДанные, "ТабДокументов");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	Организация=	МетодСервера(,"BoxID_2_Организация", Параметры.BoxID);
	Контрагент=		МетодСервера(,"CounteragentBoxID_2_Контрагент", Параметры.CounteragentBoxID);
	
	ДатаНачала=		НачалоДня(Параметры.DocumentDate);
	ДатаОкончания=	КонецДня(Параметры.DocumentDate);
	
	ОбновитьСписокДокументов();
	
	АвтоЗаголовок=	Ложь;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		
		Если Параметры.Type = "Invoice" Тогда
			Заголовок=											"Укажите документ, который нужно сопоставить со счетом-фактурой";
			Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=	"Ввести новую счет-фактуру в 1С";
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" Тогда
			Заголовок=											"Укажите документ, который нужно сопоставить с накладной";
			Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=	"Ввести новую накладную в 1С";
		КонецЕсли;
		
		Элементы.КнопкаДействия.Заголовок=	"Сопоставить";
		
		Если НЕ Параметры.Total=Неопределено Тогда
			СуммаДокумента = Параметры.Total;	
		КонецЕсли;
				
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		
		Если Параметры.Type = "Invoice" Тогда
			Заголовок=		"Выберите основание для счета-фактуры";
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" Тогда
			Заголовок=		"Выберите основание для накладной";
		КонецЕсли;
		
		Элементы.КнопкаДействия.Заголовок=								"Выбрать основания";
		Элементы.ТаблицаДокументовПометка.Видимость=					Истина;
		Элементы.ТаблицаДокументовСнятьУстановитьПометки.Видимость=		Истина;
		Элементы.ТаблицаДокументовСнятьУстановитьПометки.Доступность=	Истина;
		Элементы.Декорация2.Картинка=									БиблиотекаКартинок.Сортировка;
		Элементы.НадписьВвестиНовыйДокумент1С.Заголовок=				"Сопоставить с документом 1С";
		
	КонецЕсли;
	
	ПараметрРежимДляУО=	Параметры.Режим;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовок()
	
	ШапкаЗаголовка=	"";
	Если Лев(Параметры.Type, 7) = "Invoice" Тогда
		Если Параметры.Режим = "Сопоставление" Тогда
			ШапкаЗаголовка=	"Счета-фактуры организации";
		ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
			ШапкаЗаголовка=	"Накладные организации";
		КонецЕсли;
	ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" Тогда
		ШапкаЗаголовка=	"Накладные организации";
	КонецЕсли;

	ПредставлениеПериода= 				МетодКлиента("Модуль_Клиент", "ПредставлениеПериодаДД", ДатаНачала, ДатаОкончания);
	Элементы.НадписьОтбор.Заголовок=	ШапкаЗаголовка + " " + СокрЛП(Организация) + " по контрагенту " + СокрЛП(Контрагент)
										+ ?(ЗначениеЗаполнено(ПредставлениеПериода), "(" + ПредставлениеПериода + ")", ПредставлениеПериода);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	ОбновитьЗаголовок();
	УправлениеВидимостью();
	
	ВыполнитьПозиционированиеТекущейСтрокиТаблицыДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()
	
	Если Лев(Параметры.Type, 7) = "Invoice"
		И НЕ Параметры.Type = "Invoice" Тогда
		Элементы.Декорация2.Видимость=						Ложь;
		Элементы.Декорация2.Доступность=					Ложь;
		Элементы.НадписьВвестиНовыйДокумент1С.Доступность=	Ложь;
		Элементы.НадписьВвестиНовыйДокумент1С.Доступность=	Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Параметры.Режим = "Сопоставление" Тогда
		ОбработатьДействиеФормы();
	Иначе
		ОткрытьДокумент1С();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("ДатаНачала"   , ДатаНачала);
	ПараметрыФормы.Вставить("ДатаОкончания", ДатаОкончания);
	
	МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыбораИнтервала", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораИнтервала");

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОткрытиеФормыВыбораИнтервала(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда 
		
		Если НЕ НачалоДня(РезультатЗакрытия.ДатаНачала) = НачалоДня(ДатаНачала)
			ИЛИ НЕ НачалоДня(РезультатЗакрытия.ДатаОкончания) = НачалоДня(ДатаОкончания) Тогда
			
			ДатаНачала=		РезультатЗакрытия.ДатаНачала;
			ДатаОкончания=	РезультатЗакрытия.ДатаОкончания;
			
			ОбновитьСписокДокументов();
			
		КонецЕсли;
		
		ОбновитьЗаголовок();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьДанныеДокумента(ДокументСсылка, DocumentDate, DocumentNumber)

	Возврат МетодСервера(,"ОбновитьДанныеДокумента", ДокументСсылка, DocumentDate, DocumentNumber);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьДействиеФормы()
	
	ТекДанные= Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ПоказатьПредупреждение(, "Выберите документ", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Возврат;
	КонецЕсли;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		Если НЕ ПустаяСтрока(ТекДанные.ЗначениеСвойства) Тогда
			ПоказатьПредупреждение(, "Данный документ сопоставлен с документом в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж, 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Режим = "Сопоставление" Тогда
		
		ДокСсылка=	ТекДанные.ДокументСсылка;
		
		СписокРазличающихсяРеквизитов = ПолучитьСписокРазличающихсяРеквизитов(ДокСсылка, Параметры.DocumentNumber, Параметры.DocumentDate);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументСсылка", 	ДокСсылка);
		ДополнительныеПараметры.Вставить("DocumentNumber", 	Параметры.DocumentNumber);
		ДополнительныеПараметры.Вставить("DocumentDate", 	Параметры.DocumentDate);
		ДополнительныеПараметры.Вставить("СписокРазличающихсяРеквизитов", СписокРазличающихсяРеквизитов);
		
		Если ЗначениеЗаполнено(СписокРазличающихсяРеквизитов) Тогда
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтаФорма, ДополнительныеПараметры),
							"Следующие реквизиты: "+СписокРазличающихсяРеквизитов+"
							|отличаются в электронном документе и документе 1С.
							|Обновить данные в документе 1С?", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
						
		Иначе 
			Параметры.Документ1С = ДокСсылка;
			ЭтаФорма.Закрыть(Параметры);
		КонецЕсли;
							
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		
		Для Каждого СтрокаТаблицы Из ТабДокументов Цикл
			Если СтрокаТаблицы.Пометка И НЕ СтрокаТаблицы.ЕстьОснование Тогда
				Параметры.СписокСсылокРНК.Добавить(СтрокаТаблицы.ДокументСсылка);
			КонецЕсли;
		КонецЦикла;
		
		ЭтаФорма.Закрыть(Параметры);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(РезультатЗапроса, ДополнительныеПараметры) Экспорт
	
	ДокСсылка = ДополнительныеПараметры.ДокументСсылка;
	
	Если РезультатЗапроса = КодВозвратаДиалога.Да Тогда
						
		Параметры.Документ1С = ДокСсылка;
		ЭтаФорма.Закрыть(Параметры);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРазличающихсяРеквизитов(ДокументСсылка, DocumentNumber, DocumentDate) Экспорт
	
	ВидДокумента= МетодСервера(,"ИмяТипаОбъекта", ДокументСсылка);
	
	Если 	ВидДокумента = "ПоступлениеТоваровУслуг"
		ИЛИ ВидДокумента = "ПоступлениеДопРасходов"
		ИЛИ ВидДокумента = "ПоступлениеУслугПрочихАктивов"
	Тогда
	
		ИмяПоляДатаВходящегоДокумента=  "ДатаВходящегоДокумента";
		ИмяПоляНомерВходящегоДокумента= "НомерВходящегоДокумента";
		
	ИначеЕсли 	ВидДокумента = "ПоступлениеМЗ" 
			ИЛИ ВидДокумента = "ПоступлениеУслугРабот"
			ИЛИ ВидДокумента = "ПоступлениеОС"
	Тогда
		
		ИмяПоляДатаВходящегоДокумента=  "ДатаПервичногоДокумента";
		ИмяПоляНомерВходящегоДокумента= "НомерПервичногоДокумента";
		
	ИначеЕсли ВидДокумента = "СчетФактураПолученный" Тогда
		
		Если Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "УТ11" Тогда
			ИмяПоляДатаВходящегоДокумента=  "Дата";
			ИмяПоляНомерВходящегоДокумента= "Номер";
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БП30" Тогда
			ИмяПоляДатаВходящегоДокумента=  "ДатаВходящегоДокумента";
			ИмяПоляНомерВходящегоДокумента= "НомерВходящегоДокумента";
		ИначеЕсли Объект.ПараметрыКлиентСервер.МаркерКонфигурации = "БГУ20" Тогда
			ИмяПоляДатаВходящегоДокумента=  "ДатаПервичногоДокумента";
			ИмяПоляНомерВходящегоДокумента= "НомерПервичногоДокумента";
		КонецЕсли;
		
	КонецЕсли;
	
	Результат=   "";
	Разделитель= "";
	
	Если НачалоДня(ДокументСсылка[ИмяПоляДатаВходящегоДокумента]) <> НачалоДня(DocumentDate) Тогда
		Результат= Результат + Разделитель + """Дата входящего документа""";
		Разделитель= ", ";
	КонецЕсли;
	
	Если СокрЛП(ДокументСсылка[ИмяПоляНомерВходящегоДокумента]) <> СокрЛП(DocumentNumber) Тогда
		Результат = Результат + Разделитель + """Номер входящего документа""";				
		Разделитель= ", ";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура ОткрытьДокумент1С()

	ТекущиеДанные=	Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МетодКлиента(,"ОткрытьФормуОбъектаИБ", ТекущиеДанные.ДокументСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	ОткрытьДокумент1С();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеФормы(Команда)
	
	ОбработатьДействиеФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкуПользователя(Наименование, Значение)
	
	МетодСервера(,"УстановитьНастройкуПользователя", Наименование, Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВвестиНовыйДокумент1СНажатие(Элемент)
	
	Если Параметры.Режим = "Сопоставление" Тогда
		Если Параметры.Type = "Invoice" Тогда
			УстановитьНастройкуПользователя("ДиадокСоздаватьСопоставлятьСчетаФактуры", "Создавать");
			Параметры.Режим=	"ВводСВыборомОснований";
			Закрыть(Параметры);
		ИначеЕсли Параметры.Type = "XmlTorg12" ИЛИ Параметры.Type = "XmlAcceptanceCertificate" Тогда
			Параметры.Режим=	"Ввод";
			Закрыть(Параметры);
		КонецЕсли;
	ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" Тогда
		Параметры.Режим=	"Сопоставление";
		Закрыть(Параметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ТаблицаДокументов.ТекущиеДанные = Неопределено Тогда
		Если Параметры.Режим = "Сопоставление" И ЗначениеЗаполнено(Элементы.ТаблицаДокументов.ТекущиеДанные.ЗначениеСвойства) Тогда
			Элементы.ДекорацияНадписьСопоставлен.Заголовок=	"Данный документ сопоставлен с документом в " + Платформа.ПараметрыКлиент.СловарьWL.КраткоеНаименованиеСистемыПредложныйПадеж;
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Истина;
		ИначеЕсли Параметры.Режим = "ВводСВыборомОснований" И Элементы.ТаблицаДокументов.ТекущиеДанные.ЕстьОснование Тогда
			Элементы.ДекорацияНадписьСопоставлен.Заголовок=	"На основании данного документа уже есть Счет-Фактура";
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Истина;
		Иначе
			Элементы.ДекорацияНадписьСопоставлен.Видимость=	Ложь;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкуИЗаголовокКнопкиПометки(Пометка)
	
	Если Пометка Тогда
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.УстановитьФлажки;
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Заголовок=	"Снять пометку со всех документов";
	Иначе
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.СнятьФлажки;
		Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Заголовок=	"Пометить все документы";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПометки(СбросПометок = Ложь)
	
	Если Элементы.ТаблицаДокументов.КоманднаяПанель.ПодчиненныеЭлементы.ТаблицаДокументовСнятьУстановитьПометки.Картинка= 	БиблиотекаКартинок.СнятьФлажки 
		И НЕ СбросПометок Тогда
		УстановитьКартинкуИЗаголовокКнопкиПометки(Истина);
		СнятьУстановитьПометки(Истина);
	Иначе
		УстановитьКартинкуИЗаголовокКнопкиПометки(Ложь);
		СнятьУстановитьПометки(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьУстановитьПометки(Пометка)
	
	Для Каждого СтрокаСпискаДокументов Из ТабДокументов Цикл
		Если Пометка Тогда
			Если НЕ СтрокаСпискаДокументов.ЕстьОснование Тогда
				СтрокаСпискаДокументов.Пометка=	Пометка;
			КонецЕсли;
		Иначе
			СтрокаСпискаДокументов.Пометка=	Пометка;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СнятьУстановитьПометкиКоманда(Команда)
	
	ОбработатьПометки();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПометкиДокументов()
	
	СтруктураИзменений=	Новый Структура;
	СтруктураИзменений.Вставить("НужноМенять", Ложь);
	СтруктураИзменений.Вставить("Вкл", Ложь);
	
	ТабДанные=	ТабДокументов.Выгрузить(, "Пометка");
	ТабДанные.Свернуть("Пометка");
	
	Если ТабДанные.Количество() = 1 Тогда
		СтруктураИзменений.Вставить("НужноМенять", Истина);
		СтрокаТаблицы=	ТабДанные.Получить(0);
		СтруктураИзменений.Вставить("Пометка", СтрокаТаблицы.Пометка);
	КонецЕсли;
	
	Возврат СтруктураИзменений;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаДокументовПометкаПриИзменении(Элемент)
	
	СтруктураИзменений=	ПроверитьПометкиДокументов();
	
	Если СтруктураИзменений.НужноМенять Тогда
		УстановитьКартинкуИЗаголовокКнопкиПометки(СтруктураИзменений.Пометка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПередНачаломИзменения(Элемент, Отказ)
	
	Если Элементы.ТаблицаДокументов.ТекущиеДанные.ЕстьОснование Тогда
		ПоказатьПредупреждение(, "На основании данного документа уже есть Счет-Фактура!", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Отказ=	Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписокДокументов();
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПозиционированиеТекущейСтрокиТаблицыДокументов()
	
	ТипДокумента = Параметры.Type;
	
	Если ТипДокумента = "XmlTorg12" ИЛИ ТипДокумента = "XmlAcceptanceCertificate" ИЛИ ТипДокумента = "Invoice" Тогда
		ОтборСтрок = Новый Структура("Сумма", СуммаДокумента);
		МассивНайденныеСтроки = ТабДокументов.НайтиСтроки(ОтборСтрок);
		Если МассивНайденныеСтроки.Количество() > 0 Тогда
	        ПерваяСтрокаКоллекции = МассивНайденныеСтроки[0];
			Идентификатор = ПерваяСтрокаКоллекции.ПолучитьИдентификатор();
			Элементы.ТаблицаДокументов.ТекущаяСтрока = Идентификатор;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
