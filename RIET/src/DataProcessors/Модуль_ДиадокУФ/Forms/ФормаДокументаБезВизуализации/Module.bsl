////////////////////////////////////////////////////////////////////////////////
//{ ПЕРЕМЕННЫЕ МОДУЛЯ
	
	&НаКлиенте
	Перем UserPermissions;
	&НаКлиенте
	Перем Organization Экспорт; 

	&НаКлиенте
	Перем МассивСсылокРНК Экспорт;
	&НаКлиенте
	Перем ПодходящаяСФ;
	
	&НаКлиенте
	Перем ЭДОбъект Экспорт; 
	
	&НаКлиенте
	Перем ПредставлениеСтатусаРоуминг, ПредставлениеСтатусаРоумингДетали;
	
//} ПЕРЕМЕННЫЕ МОДУЛЯ
////////////////////////////////////////////////////////////////////////////////

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
//{ СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

	&НаКлиенте
	Процедура СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибки) экспорт 
		
		ИДЯщика=	Прав(ТекстОшибки, СтрДлина(ТекстОшибки) - Найти(ТекстОшибки, "FNS reg message was not sent for box")-36);
		ИДЯщика= 	Лев(ИдЯщика, Найти(ИдЯщика, ".")-1);
		
		ПараметрыФормы=	Новый Структура();
		ПараметрыФормы.Вставить("OrganizationId",	ИДЯщика);
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаСообщенияОбОтсутствииРегистрацииФНС", ПараметрыФормы, ЭтаФорма);
		
	КонецПроцедуры 	
	
	&НаСервере
	Функция ПолучитьСвязаннуюОрганизацию(BoxID)
		
		Возврат МетодСервера(,"BoxID_2_Организация", BoxID);
		
	КонецФункции
	
	&НаКлиенте
	Процедура СообщениеОбОшибкеДиадок(текстОшибки) экспорт 
		
		ПоказатьПредупреждение(, МетодКлиента("Модуль_Клиент","СформироватьТекстОшибкиДиадок", ТекстОшибки), 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		
	конецПроцедуры	
	
	&НаКлиенте
	Процедура ОбновитьЭДОбъект()
		
		ЭДОбъект=	ЭДОбъект.Organization.GetDocumentById(ЭДОбъект.DocumentId);
		ПросмотрФормы();
		ОбновитьСтатусЭД();
		
		ПараметрыОповещения=	Новый Структура;
		ПараметрыОповещения.Вставить("BoxID", ЭДОбъект.OrganizationID);
		ПараметрыОповещения.Вставить("DocumentID", ЭДОбъект.DocumentID);
		
		МетодКлиента(,"ОповеститьФормы", "ИзменениеСтатусаДокументаДиадок", ПараметрыОповещения, ЭтаФорма);
		
	КонецПроцедуры
	
	&НаСервере
	Функция СформироватьТитулПолучателя(СтруктураПодписи, Type, DocumentDate) Экспорт
		Возврат МетодСервера(,"СформироватьТитулПолучателя", СтруктураПодписи, Type, DocumentDate);		
	КонецФункции	
	
	&НаКлиенте
	Процедура ОбновитьДокумент1С()
		
		Документ1С=	ПолучитьDocumentID_2_Документ(ЭДОбъект.DocumentID, ЭДОбъект.OrganizationID);
		
	КонецПроцедуры
	
	&НаСервере
	Функция ПолучитьDocumentID_2_Документ(DocumentID, BoxID)
		
		Возврат МетодСервера(,"DocumentID_2_Документ", DocumentID, BoxID);
		
	КонецФункции
	
	&НаСервере
	Процедура Установить_DocumentID_Для_Документ(Документ, DocumentID, BoxID, ИспользоватьИдентификаторСчета = Ложь)
		
		МетодСервера(,"Установить_DocumentID_Для_Документ", Документ, DocumentID, BoxID, ИспользоватьИдентификаторСчета);
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура СоздатьДокумент(Режим) Экспорт
		
		Если Режим = "Ввод" Тогда
			
			ПараметрыФормы=	Новый Структура;
			ПараметрыФормы.Вставить("BoxID", 				ЭДОбъект.OrganizationID);
			ПараметрыФормы.Вставить("DocumentID", 			ЭДОбъект.DocumentID);
			ПараметрыФормы.Вставить("DocumentType",			ЭДОбъект.type);
			ПараметрыФормы.Вставить("CounteragentBoxID",	ЭДОбъект.Counteragent.ID);
			ПараметрыФормы.Вставить("Контрагент", 			Контрагент);
			ПараметрыФормы.Вставить("Организация", 			Организация);
			
			МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВводаНакладной", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВводаНакладной");
			
		ИначеЕсли Режим = "Сопоставление" Тогда
			
			ПараметрыФормы=	Новый Структура;
			ПараметрыФормы.Вставить("BoxID", 				ЭДОбъект.OrganizationID);
			ПараметрыФормы.Вставить("DocumentID", 			ЭДОбъект.DocumentID);
			ПараметрыФормы.Вставить("Type", 				ЭДОбъект.Type);
			ПараметрыФормы.Вставить("CounteragentBoxID", 	ЭДОбъект.Counteragent.ID);
			ПараметрыФормы.Вставить("DocumentDate", 		ЭДОбъект.DocumentDate);
			ПараметрыФормы.Вставить("DocumentNumber", 		ЭДОбъект.DocumentNumber);
			ПараметрыФормы.Вставить("Total",				ЭДОбъект.Total);
			ПараметрыФормы.Вставить("Режим", 				Режим);
			ПараметрыФормы.Вставить("Контрагент", 			Контрагент);
			ПараметрыФормы.Вставить("Организация", 			Организация);
			
			МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыбораДокумента", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораДокумента");
			
		ИначеЕсли Режим = "ВводСВыборомОснований" Тогда
			
			ПараметрыФормы=	Новый Структура;
			ПараметрыФормы.Вставить("BoxID", 				ЭДОбъект.OrganizationID);
			ПараметрыФормы.Вставить("DocumentID", 			ЭДОбъект.DocumentID);
			ПараметрыФормы.Вставить("Type", 				ЭДОбъект.Type);
			ПараметрыФормы.Вставить("CounteragentBoxID",	ЭДОбъект.Counteragent.ID);
			ПараметрыФормы.Вставить("DocumentDate", 		ЭДОбъект.DocumentDate);
			ПараметрыФормы.Вставить("DocumentNumber", 		ЭДОбъект.DocumentNumber);
			ПараметрыФормы.Вставить("Режим", 				Режим);
			ПараметрыФормы.Вставить("Контрагент", 			Контрагент);
			ПараметрыФормы.Вставить("Организация", 			Организация);
			
			МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыбораДокумента", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораДокументаСОснованием");
			
		КонецЕсли;
		
	КонецПроцедуры
	
//} СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ УПРАВЛЕНИЕ ФОРМОЙ
	
	&НаСервере
	Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
		ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
		
		Организация=	МетодСервера(,"BoxID_2_Организация", Параметры.BoxID, Параметры.DepartmentKpp);
		Контрагент=		МетодСервера(,"CounteragentBoxID_2_Контрагент", Параметры.CounteragentBoxID);
		
		Параметры.Свойство("DepartmentId", DepartmentId);
		
		BoxID=					Параметры.BoxID;
		Документ1С=				Параметры.Документ1С;
		РасширениеФайлаДиадок=	Параметры.РасширениеФайлаДиадок;
		
		ЭтаФорма.Команды.ПерейтиВДиадок.Подсказка = "Перейти в " + МетодСервера(,"ПолучитьСловарь").НаименованиеСистемы;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПерейтиВДиадок(Команда)
		
		Если НЕ ЭдОбъект = Неопределено Тогда
			ПоказатьДокументВДиадоке(ЭдОбъект);
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПоказатьДокументВДиадоке(ДокументДиадока)
		
		МетодКлиента("Модуль_Клиент","ПоказатьДокументВДиадоке", ДокументДиадока.OrganizationId, ДокументДиадока.DocumentId);
		
	КонецПроцедуры 
	
	&НаКлиенте
	Функция ПоказатьКнопкуПерейтиВДиадок()
		
		Возврат НЕ ЭДОбъект = Неопределено;

	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуСтруктураПодчиненности()
		
		Возврат НЕ ЭДОбъект = Неопределено;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуОтправитьСвязанныеДокументы()
		
		Возврат НЕ ЭДОбъект = Неопределено И МетодКлиента("Модуль_Клиент","ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) = Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьГруппуКнопокПодписания(UserPermissions)
		
		Если (НЕ ЭДОбъект = Неопределено И ЭДОбъект.Direction = "Inbound")
			И (НЕ ЛЕВ(ЭДОбъект.Type, 7) = "Invoice" И НЕ ЭДОбъект.Type = "NonformalizedProforma")
			И ((ЭДОбъект.IsTest ИЛИ ЭДОбъект.Organization.AuthenticateType = "Certificate") И UserPermissions.CanSignIncomingDocuments)
			И (ЭДОбъект.Status = "InboundWaitingForRecipientSignature" 
			ИЛИ ЭДОбъект.Status = "InboundInvalidRecipientSignature"
			ИЛИ (ЭДОбъект.Type = "Nonformalized" И ЭДОбъект.Status ="InboundNoRecipientSignatureRequest"))
			И ЭДОбъект.RevocationStatus = "RevocationStatusNone" Тогда
			Возврат Истина;
		КонецЕсли;
						
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуОтменитьСопоставление()
		
		Если  НЕ ЭДОбъект = Неопределено
			И (ЭДОбъект.Direction = "Inbound" ИЛИ ЭДОбъект.Direction = "Outbound")
			И ЗначениеЗаполнено(Документ1С)
			И МетодКлиента("Модуль_Клиент","ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) = Ложь Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьГруппуКнопокСогласования(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено
			И UserPermissions.CanAddResolutions
			И (ЭДОбъект.Type = "XmlTorg12" 
			ИЛИ ЭДОбъект.Type = "XmlAcceptanceCertificate"
			ИЛИ ЭДОбъект.Type = "NonformalizedProforma"
			ИЛИ ЭДОбъект.Type = "Nonformalized") Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьГруппуКнопокПередачиНаСогласование(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено
			И UserPermissions.CanRequestResolutions
			И (ЭДОбъект.Type = "XmlTorg12" 
			ИЛИ ЭДОбъект.Type = "XmlAcceptanceCertificate"
			ИЛИ ЭДОбъект.Type = "NonformalizedProforma"
			ИЛИ ЭДОбъект.Type = "Nonformalized") Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуУдалить(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено
			И НЕ ЭДОбъект.IsDeleted 
			И (UserPermissions.CanSignIncomingDocuments) Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуСоздатьДокумент1С()
		
		Если НЕ ЭДОбъект = Неопределено И МетодКлиента("Модуль_Клиент","ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) = Ложь
			И НЕ ЗначениеЗаполнено(Документ1С) Тогда
			Возврат Истина
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Функция ПоказатьКнопкуЗапросаАннулирования(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено 
			И UserPermissions.CanSignIncomingDocuments 
			И ЭДОбъект.Organization.AuthenticateType = "Certificate" Тогда
			Если (ЭДОбъект.Status = "InboundWithRecipientSignature" 
				ИЛИ ЭДОбъект.Status = "InboundRecipientSignatureRequestRejected"
				ИЛИ ЭДОбъект.Status = "OutboundWithRecipientSignature" 
				ИЛИ ЭДОбъект.Status = "OutboundRecipientSignatureRequestRejected"
				ИЛИ ЭДОбъект.Status = "OutboundWaitingForRecipientSignature"
				ИЛИ ЭДОбъект.Status = "InboundFinished"
				ИЛИ ЭДОбъект.Status = "OutboundFinished"
				ИЛИ ЭДОбъект.Status = "Outbound"
				ИЛИ ЭДОбъект.Status = "Inbound")
				И (ЭДОбъект.RevocationStatus = "RevocationStatusNone"
				ИЛИ ЭДОбъект.RevocationStatus = "RevocationRejected") Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции

	&НаКлиенте
	Функция ПоказатьКнопкуАннулирования(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено Тогда
			Если UserPermissions.CanSignIncomingDocuments И ЭДОбъект.Organization.AuthenticateType = "Certificate" Тогда
				Если ЭДОбъект.RevocationStatus = "RequestsMyRevocation" Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции

	&НаКлиенте
	Функция ПоказатьКнопкуОтказаАннулирования(UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено Тогда
			Если UserPermissions.CanSignIncomingDocuments И ЭДОбъект.Organization.AuthenticateType = "Certificate" Тогда
				Если ЭДОбъект.RevocationStatus = "RequestsMyRevocation" Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции

	&НаКлиенте
	Функция ПоказатьКнопкуЗапросаУточнения(ЭДОбъект, UserPermissions)
		
		Если НЕ ЭДОбъект = Неопределено И МетодКлиента("Модуль_Клиент", "ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) = Ложь Тогда
			Если ЭДОбъект.Direction = "Inbound" Тогда
				Если (ЛЕВ(ЭДОбъект.Type, 7) = "Invoice" И ЭДОбъект.Organization.AuthenticateType = "Certificate")
					И (НЕ ЭДОбъект.Corrected 
					И НЕ ЭДОбъект.Revised 
					И НЕ ЭДОбъект.AmendmentRequested 
					И (ЭДОбъект.Status = "InboundFinished")) Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецФункции
	
	&НаКлиенте
	Процедура НастроитьКнопкиКоманднойПанели()
		
		Если НЕ ЭДОбъект = Неопределено Тогда
			UserPermissions = ЭДОбъект.Organization.GetUserPermissions();
		КонецЕсли;
	
		Если ПоказатьКнопкуПерейтиВДиадок() Тогда
			Элементы.КнопкаПерейтиВДиадок.Видимость=	Истина;
			Элементы.КнопкаПерейтиВДиадок.Доступность=	Истина;
		Иначе
			Элементы.КнопкаПерейтиВДиадок.Видимость=	Ложь;
			Элементы.КнопкаПерейтиВДиадок.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуСтруктураПодчиненности() Тогда
			Элементы.ФормаСтруктураПодчиненности.Видимость=		Истина;
			Элементы.ФормаСтруктураПодчиненности.Доступность=	Истина;
		Иначе
			Элементы.ФормаСтруктураПодчиненности.Видимость=		Ложь;
			Элементы.ФормаСтруктураПодчиненности.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуОтправитьСвязанныеДокументы() Тогда
			Элементы.КнопкаОтправитьСвязанныйДокумент.Видимость = Истина;
			Элементы.КнопкаОтправитьСвязанныйДокумент.Доступность = Истина;
		Иначе
			Элементы.КнопкаОтправитьСвязанныйДокумент.Видимость = Ложь;
			Элементы.КнопкаОтправитьСвязанныйДокумент.Доступность = Ложь;
		КонецЕсли;
		
		Если ПоказатьГруппуКнопокПодписания(UserPermissions) Тогда
			Элементы.ГруппаКнопокПодписания.Видимость=		Истина;
			Элементы.ГруппаКнопокПодписания.Доступность=	Истина;
		Иначе
			Элементы.ГруппаКнопокПодписания.Видимость=		Ложь;
			Элементы.ГруппаКнопокПодписания.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуОтменитьСопоставление() Тогда
			Элементы.КнопкаОтменитьСопоставление.Видимость=		Истина;
			Элементы.КнопкаОтменитьСопоставление.Доступность=	Истина;
		Иначе
			Элементы.КнопкаОтменитьСопоставление.Видимость=		Ложь;
			Элементы.КнопкаОтменитьСопоставление.Доступность=	Ложь;
		КонецЕсли;

		Если ПоказатьГруппуКнопокСогласования(UserPermissions) Тогда
			Элементы.ГруппаСогласование.Видимость=		Истина;
			Элементы.ГруппаСогласование.Доступность=	Истина;
		Иначе
			Элементы.ГруппаСогласование.Видимость=		Ложь;
			Элементы.ГруппаСогласование.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьГруппуКнопокПередачиНаСогласование(UserPermissions) Тогда
			Элементы.ГруппаПередачаНаСогласование.Видимость=	Истина;
			Элементы.ГруппаПередачаНаСогласование.Доступность=	Истина;
		Иначе
			Элементы.ГруппаПередачаНаСогласование.Видимость=	Ложь;
			Элементы.ГруппаПередачаНаСогласование.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуУдалить(UserPermissions) Тогда
			Элементы.КнопкаУдалить.Видимость=	Истина;
			Элементы.КнопкаУдалить.Доступность=	Истина;
		Иначе
			Элементы.КнопкаУдалить.Видимость=	Ложь;
			Элементы.КнопкаУдалить.Доступность=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуСоздатьДокумент1С() Тогда
			Элементы.КнопкаСоздатьДокумент1С.Видимость=	Истина;
		Иначе
			Элементы.КнопкаСоздатьДокумент1С.Видимость=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуЗапросаАннулирования(UserPermissions) Тогда
			Элементы.КнопкаЗапроситьАннулирование.Доступность=	Истина;
			Элементы.КнопкаЗапроситьАннулирование.Видимость=	Истина;
		Иначе
			Элементы.КнопкаЗапроситьАннулирование.Доступность=	Ложь;
			Элементы.КнопкаЗапроситьАннулирование.Видимость=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуАннулирования(UserPermissions) Тогда
			Элементы.КнопкаАннулировать.Доступность=	Истина;
			Элементы.КнопкаАннулировать.Видимость=		Истина;
		Иначе
			Элементы.КнопкаАннулировать.Доступность=	Ложь;
			Элементы.КнопкаАннулировать.Видимость=		Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуОтказаАннулирования(UserPermissions) Тогда
			Элементы.КнопкаОтказатьВАннулировании.Доступность=	Истина;
			Элементы.КнопкаОтказатьВАннулировании.Видимость=	Истина;
		Иначе
			Элементы.КнопкаОтказатьВАннулировании.Доступность=	Ложь;
			Элементы.КнопкаОтказатьВАннулировании.Видимость=	Ложь;
		КонецЕсли;
		
		Если ПоказатьКнопкуЗапросаУточнения(ЭДОбъект, UserPermissions) Тогда
			Элементы.КнопкаЗапроситьУточнение.Доступность=	Истина;
			Элементы.КнопкаЗапроситьУточнение.Видимость=	Истина;
		Иначе
			Элементы.КнопкаЗапроситьУточнение.Доступность=	Ложь;
			Элементы.КнопкаЗапроситьУточнение.Видимость=	Ложь;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура НастроитьЭлементыФормы()
		
		Если ЭДОбъект <> Неопределено Тогда
			
			Если ЭДОбъект.Direction = "Inbound" Тогда
				
				МассивСсылокРНК= МетодКлиента("Модуль_Клиент","ПолучитьМассивСсылокРНКПоСчетуФактуреПолученномуДиадок", ЭДОбъект);
				ПодходящаяСФ=	 МетодКлиента("Модуль_Клиент","ПолучитьПодходящуюСФ", МассивСсылокРНК);
				
				ПредставлениеКнопкиСоздать=	МетодКлиента("Модуль_Клиент","СформироватьПредставлениеКнопкиСоздатьДокументВ1С", Документ1С, ЭДОбъект, МассивСсылокРНК, ПодходящаяСФ);
				Если ЗначениеЗаполнено(ПредставлениеКнопкиСоздать) Тогда
					Элементы.КнопкаСоздатьДокумент1С.Заголовок=	ПредставлениеКнопкиСоздать;
				КонецЕсли;
				
			КонецЕсли;
			
			Если МетодКлиента("Модуль_Клиент","ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) Тогда
				Элементы.Номер.Видимость=	Ложь;
				Элементы.Сумма.Видимость=	Ложь;
			КонецЕсли; 
			
			Элементы.ДекорацияПодробно.Видимость= ЭДОбъект.Resolutions.Count > 0;
			
			Если ЗначениеЗаполнено(Документ1С) Тогда
				Элементы.ДокументВ1С.Заголовок= Новый ФорматированнаяСтрока(Строка(Документ1С),,,,ПолучитьНавигационнуюСсылку(Документ1С));
			КонецЕсли;
			
			Элементы.РамкаСтатуса.Видимость= Истина;

			ПредставлениеПодразделения=	?(ЭДОбъект.Department = Неопределено, "Головное подразделение", ЭДОбъект.Department.Name);
			
		Иначе
			
			Элементы.РамкаСтатуса.Видимость= Ложь;
			
		КонецЕсли;
		
		ЭтаФорма.Элементы.КнопкаПерейтиВДиадок.Заголовок = "Перейти в " + Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы;
				
	КонецПроцедуры
	
	&НаКлиенте
	Процедура УправлениеФормой()
		
		ОбновитьСтатусЭД();
		НастроитьЗаголовок();
		НастроитьКнопкиКоманднойПанели();
		НастроитьЭлементыФормы();
		
	КонецПроцедуры	 
	
	&НаКлиенте
	Функция ОбновитьСтатусЭД()
		
		Если НЕ ЭДОбъект = Неопределено Тогда
			
			ПредставлениеСтатуса=		 МетодКлиента("Модуль_Клиент","ПредставлениеСтатуса"			, ЭДОбъект);
			ПредставлениеСогласования=	 МетодКлиента("Модуль_Клиент","ПредставлениеСтатусаСогласования", ЭДОбъект);
			
			ПредставлениеСтатусаРоуминг= МетодКлиента("Модуль_Клиент","ПредставлениеСтатусаРоуминг"		, ЭДОбъект);
			ПредставлениеСтатусаРоумингДетали= ?(ЭДОбъект.RoamingNotificationStatus = "RoamingNotificationStatusError", ЭДОбъект.RoamingNotificationStatusDescription, "");
			
			СводныйСтатус= Новый Массив;
			Разделитель= "";
			
			Если НЕ ПустаяСтрока(ПредставлениеСтатуса) Тогда
				СводныйСтатус.Добавить(Разделитель);
				СводныйСтатус.Добавить(ПредставлениеСтатуса);
				Разделитель= " ";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПредставлениеСогласования) Тогда
				СводныйСтатус.Добавить(Разделитель);
				СводныйСтатус.Добавить(ПредставлениеСогласования);
				Разделитель= ". ";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПредставлениеСтатусаРоуминг) Тогда
				СводныйСтатус.Добавить(Разделитель);
				СводныйСтатус.Добавить(ПредставлениеСтатусаРоуминг);
				Разделитель= ". ";
			КонецЕсли;
			
			Элементы.СтатусДокумента.Заголовок=	Новый ФорматированнаяСтрока(СводныйСтатус); 
			
		Иначе
			
			Элементы.СтатусДокумента.Заголовок=	""; 
			
			ПредставлениеСтатусаРоуминг= 		"";
			ПредставлениеСтатусаРоумингДетали=  "";
			
		КонецЕсли;
		
	КонецФункции
	
	&НаКлиенте
	Процедура НастроитьЗаголовок()
		
		Заголовок=	МетодКлиента("Модуль_Клиент","ПредставлениеЭД", ЭДОбъект);
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПросмотрФормы()
		
		СтруктураПредставленияЭД=	МетодКлиента("Модуль_Клиент","ПолучитьСтруктуруПредставленияЭД", ЭДОбъект);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураПредставленияЭД);
		
		Если Дата<'20000101' тогда 
			дата = "";
		КонецЕсли;	
			
		ПоказыватьПанельПредупрежденияОСтаромФормате=
		ЛЕВ(ЭДОбъект.Type, 7) = "Invoice" И МетодКлиента("Модуль_ЛогикаПоведениеФорм","ПредупреждатьОСтаромФормате", ЭДОбъект.ConfirmationDate, ЭДОбъект.GetContent().InvoiceVersion);
		
		Если НЕ ПоказыватьПанельПредупрежденияОСтаромФормате Тогда
			Элементы.ГруппаПредупреждениеОНовомФормате.Видимость = Ложь;
		КонецЕсли;
				
		Элементы.FileName.Заголовок=	МетодКлиента("Модуль_Клиент","ПредставлениеЭД", ЭДОбъект);
		
		УправлениеФормой();
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПриОткрытии(Отказ)
		
		ПлатформаПриОткрытии(Отказ);
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация= МетодКлиента("Модуль_Клиент", "НайтиОрганизациюВИерархииОрганизацийDiadoc", BoxID, DepartmentId);
		КонецЕсли;
		
		Organization= Платформа.ПараметрыКлиент.КонтекстРаботаССерверомДиадок.DiadocConnection.GetOrganizationById(BoxID);
		
		ПросмотрФормы();
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПриЗакрытии()
		
		ПлатформаПриЗакрытии();
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура FileNameНажатие(Элемент, СтандартнаяОбработка)
		
		Если ЭДОбъект.HasCustomPrintForm = Ложь Тогда
			ИмяВременногоФайла=	ПолучитьИмяВременногоФайла(РасширениеФайлаДиадок);
			ЭДОбъект.SaveSenderContent(ИмяВременногоФайла);
		Иначе
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
			ЭДОбъект.GetPrintForm(ИмяВременногоФайла, 30);
		КонецЕсли;
		
		ЗапуститьПриложение(ИмяВременногоФайла);
		
	КонецПроцедуры
	
//} УПРАВЛЕНИЕ ФОРМОЙ И ОБРАБОТКА СОБЫТИЙ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ ОБРАБОТКА СОБЫТИЙ
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВыбораПодразделенияОрганизации(РезультатЗакрытия, ТекущийDepartmentId) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда 
			Если НЕ РезультатЗакрытия.DepartmentID = ТекущийDepartmentId Тогда
				
				ЭДОбъект.Move(РезультатЗакрытия.DepartmentID);
				
				ОбновитьЭДОбъект();
				
				ПараметрыОповещения=	Новый Структура;
				ПараметрыОповещения.Вставить("BoxID", 			ЭДОбъект.OrganizationID);
				ПараметрыОповещения.Вставить("DocumentId", 		ЭДОбъект.DocumentID);
				ПараметрыОповещения.Вставить("DepartmentName", 	?(ЭДОбъект.Department = Неопределено, "", ЭДОбъект.Department.Name));
				
				МетодКлиента(,"ОповеститьФормы", "ИзменениеПодразделения", ПараметрыОповещения);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВыбораПолучателя(ПараметрыОтправкиНаСогласование, ТекущиеДанные) Экспорт
		
		МетодКлиента("Модуль_Клиент","ОтправитьНаОбработку", ЭДОбъект, ПараметрыОтправкиНаСогласование);
		ОбновитьЭДОбъект();
		
	КонецПроцедуры

	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыПодписанияДокумента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Если РезультатЗакрытия.ДокументПодписан = Истина Тогда
				
				Попытка  
					
					Если МетодКлиента("Модуль_Клиент","ЭтоНеформализованныйДокументБезМетаданных", ЭДОбъект) Тогда
						ПодписатьВДиадоке(Истина, ЭДОбъект.OrganizationID, ЭДОбъект.documentID);
					Иначе
						
						ПараметрыТитулаПолучателя=	Новый Структура();
						ПараметрыТитулаПолучателя.Вставить("ДатаПолученияГруза", 	РезультатЗакрытия.ДатаПолученияГруза);
						ПараметрыТитулаПолучателя.Вставить("ФИОПодписанта", 		Лев(РезультатЗакрытия.ФИОПодписанта,100));
						ПараметрыТитулаПолучателя.Вставить("ДолжностьПодписанта", 	Лев(РезультатЗакрытия.ДолжностьПодписанта,50));
						ПараметрыТитулаПолучателя.Вставить("ИНН", 					ЭДОбъект.Organization.INN);
						
						BuyerTitleInfo=	СформироватьТитулПолучателя(ПараметрыТитулаПолучателя, ЭДОбъект.Type, ЭДОбъект.DocumentDate);
						ПодписатьВДиадоке(Истина, ЭДОбъект.OrganizationID, ЭДОбъект.documentID,, BuyerTitleInfo); 
						
					КонецЕсли;
					
					Элементы.ГруппаКнопокПодписания.Доступность=	Ложь;
					Элементы.ГруппаКнопокПодписания.Видимость= 		Истина;
					
					ОбновитьЭДОбъект();
					
				Исключение 
					
					ТекстОшибкиПодписания = ОписаниеОшибки();
					Если Найти(ТекстОшибкиПодписания, "FNS reg message was not sent for box") > 0 Тогда
						СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиПодписания);
					Иначе
						СообщениеОбОшибкеДиадок(ТекстОшибкиПодписания);
					КонецЕсли;
					
				КонецПопытки;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОтменитьСопоставление(РезультатВопроса, ДополнительныеПараметры) Экспорт
		
		Если РезультатВопроса = КодвозвратаДиалога.Да Тогда
			
			Установить_DocumentID_Для_Документ(Документ1С,,);
			Документ1С=	Неопределено;
			
			ОбновитьДокумент1С();
			ПросмотрФормы();
			
			ПараметрыОповещения=	Новый Структура;
			ПараметрыОповещения.Вставить("ТипСущности", "Документ");
			ПараметрыОповещения.Вставить("BoxID", ЭДОбъект.OrganizationID);
			ПараметрыОповещения.Вставить("DocumentID", ЭДОбъект.DocumentID);
			ПараметрыОповещения.Вставить("Документ1С", Документ1С);
			
			МетодКлиента(,"ОповеститьФормы", "ИзменениеСвязиДД1С", ПараметрыОповещения, ЭтаФорма);
			
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаЗапроситьУточнение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ЭДОбъект.SendCorrectionRequest(РезультатЗакрытия.Комментарий);
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиАннулирования = ОписаниеОшибки();
				Если Найти(ТекстОшибкиАннулирования, "FNS reg message was not sent for box")>0 Тогда
					СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиАннулирования);
				Иначе
					СообщениеОбОшибкеДиадок(ТекстОшибкиАннулирования);
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВводаНакладной(ПараметрыФормы, ДополнительныеПараметры) Экспорт
		
		Если НЕ ПараметрыФормы = Неопределено Тогда
			Если ЗначениеЗаполнено(ПараметрыФормы.Документ1С) Тогда
				ОбработчикСозданиеДокумента(ПараметрыФормы.Документ1С);
			Иначе
				СоздатьДокумент(ПараметрыФормы.Режим);
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВыбораДокумента(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Если ЗначениеЗаполнено(РезультатЗакрытия.Документ1С) Тогда
				ОбработчикСозданиеДокумента(РезультатЗакрытия.Документ1С);
			Иначе
				СоздатьДокумент(РезультатЗакрытия.Режим);
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыВыбораДокументаСОснованием(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если РезультатЗакрытия <> Неопределено Тогда
			Если РезультатЗакрытия.СписокСсылокРНК.Количество() > 0 Тогда
				МетодКлиента("Модуль_ЛогикаПоведениеФорм","СоздатьНовыйСчетФактуру", ЭтаФорма, Организация, Контрагент, ЭДОбъект, РезультатЗакрытия.СписокСсылокРНК.ВыгрузитьЗначения());
			Иначе
				СоздатьДокумент(РезультатЗакрытия.Режим);
			КонецЕсли;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикЗакрытиеФормыСФ(РезультатЗакрытия, ДокументОбъект) Экспорт
		
		Если ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
			ОбработчикСозданиеДокумента(ДокументОбъект.Ссылка);
		КонецЕсли;
		
		МассивСсылокРНК=	Новый Массив;
		
	КонецПроцедуры

	&НаКлиенте
	Процедура ОбработчикСозданиеДокумента(ДокументССылка) Экспорт
		
		Если ЗначениеЗаполнено(ДокументССылка) Тогда
			МетодКлиента("Модуль_Клиент","ОбработчикСозданиеДокумента", ДокументССылка, ЭДОбъект);
			ОбновитьДокумент1С();
			ПросмотрФормы();
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикУдалитьДокумент(РезультатВопроса, ДополнительныеПараметры) Экспорт
		
		Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
			
			ПараметрУдаляемогоДокумента=	Новый Структура();
			ПараметрУдаляемогоДокумента.Вставить("DocumentId", 	ЭДОбъект.DocumentId);
			ПараметрУдаляемогоДокумента.Вставить("BoxID", 		ЭДОбъект.Organization.Id);
			
			МассивДокументов=	Новый Массив();
			МассивДокументов.Добавить(ПараметрУдаляемогоДокумента);
			
			Если ЗначениеЗаполнено(Документ1С) Тогда
				Установить_DocumentID_Для_Документ(Документ1С, , , ЭДОбъект.Type = "NonformalizedProforma");
			КонецЕсли;
			
			Если НЕ ЭДОбъект.IsDeleted Тогда
				Попытка
					ЭДОбъект.Delete();
					ПоказатьПредупреждение(, "Документ " + МетодКлиента("Модуль_Клиент","ПредставлениеЭД", ЭДОбъект) + " перемещен в удаленные.", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
				Исключение
					
					Подробно=	ОписаниеОшибки();
					ОписаниеОшибки=	ОписаниеОшибки;
					Если Найти(ОписаниеОшибки, "is already delete") Тогда
						ОписаниеОшибки=	"Документ " + МетодКлиента("Модуль_Клиент","ПредставлениеЭД", ЭДОбъект) + " уже был удален.";
					Иначе
						ОписаниеОшибки=	"Ошибка удаления документа";
					КонецЕсли;
					
					ПараметрыФормы=	Новый Структура();
					ПараметрыФормы.Вставить("Заголовок", 		"Ошибка удаления");
					ПараметрыФормы.Вставить("ОписаниеОшибки", 	ОписаниеОшибки);
					ПараметрыФормы.Вставить("Подробности", 		Подробно);
					
					МетодКлиента(,"ОткрытьФормуОбработкиМодально", "Форма_ВыводОшибки", ПараметрыФормы, ЭтаФорма);
					
				КонецПопытки;
				
			КонецЕсли;
			
			ПросмотрФормы();
			МетодКлиента(,"ОповеститьФормы", "УдалениеДокументов", МассивДокументов);
			
		КонецЕсли;
		
	КонецПроцедуры

//} ОБРАБОТКА СОБЫТИЙ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ КОМАНДЫ
	
	&НаКлиенте
	Процедура Подписать(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПолучитьФИОПодписанта", Organization);
						
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("ФИО", 						ФИОПодписанта);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		ПараметрыФормы.Вставить("Организация", 				ПолучитьСвязаннуюОрганизацию(Organization.ID));
		ПараметрыФормы.Вставить("ЭДОбъектType", 			ЭдОбъект.Type);
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаПодписанияДокумента", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыПодписанияДокумента");
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОтказатьВПодписи(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПолучитьФИОПодписанта", Organization);
						
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		1);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаОтказаВПодписи");

	КонецПроцедуры
	
	&НаКлиенте
	Процедура Согласовать(Команда)
		
		ФИОПодписанта=	?(НЕ Organization.Certificate = Неопределено,  Organization.Certificate.Name, "");
		
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		2);
		ПараметрыФормы.Вставить("AuthenticateType", 		Organization.AuthenticateType);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаСогласовать");

	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОтказатьВСогласовании(Команда)
		
		ФИОПодписанта=	?(НЕ Organization.Certificate = Неопределено,  Organization.Certificate.Name, "");
		
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		3);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаОтказатьВСогласовании");

	КонецПроцедуры
	
	&НаКлиенте
	Процедура Удалить(Команда)
		
		Оповещение=	Новый ОписаниеОповещения("ОбработчикУдалитьДокумент", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Вы действительно хотите удалить документ?", РежимДиалогаВопрос.ДаНет, 120, КодВозвратаДиалога.Нет, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы, КодВозвратаДиалога.Нет);

	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОтменитьСопоставление(Команда)
		
		Оповещение=	Новый ОписаниеОповещения("ОбработчикОтменитьСопоставление", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Вы действительно хотите отменить сопоставление с документом 1С?", РежимДиалогаВопрос.ДаНет, 120, КодВозвратаДиалога.Нет, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы, КодВозвратаДиалога.Нет);

	КонецПроцедуры
	
	&НаКлиенте
	Процедура СтруктураПодчиненности(Команда)
		
		ПараметрыФормы=	Новый Структура("Режим", "СтруктураПодчиненности");
		
		ФормаСвязейДокументов= МетодКлиента(,"ПолучитьФормуОбработки", "ФормаСвязейДокументов", ПараметрыФормы, ЭтаФорма, СокрЛП(ЭДОбъект.DocumentID) + "/" + СокрЛП(ЭДОбъект.OrganizationID));
		ФормаСвязейДокументов.ЭДОбъект=		ЭДОбъект;
		ФормаСвязейДокументов.Organization=	Organization;
		
		ОткрытьФорму(ФормаСвязейДокументов);
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ДекорацияПодробноНажатие(Элемент)
		
		HTMLДокумент= МетодКлиента("Модуль_Клиент","СформироватьHTMLПредставлениеРезолюций", ЭДОбъект, Организация);
		ПараметрыФормы=	Новый Структура("HTMLДокумент",	HTMLДокумент);
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаВыводаHTMLДокумента", ПараметрыФормы, ЭтаФорма);

	КонецПроцедуры
	
	&НаКлиенте
	Процедура СтатусДокументаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
		
		Если НавигационнаяСсылкаФорматированнойСтроки = "RoamingNotificationStatusError" Тогда
			
			СтандартнаяОбработка= Ложь;
			
			Если НРег(Лев(ПредставлениеСтатусаРоуминг, 6)) = "ошибка" Тогда
				
				ПараметрыФормы= Новый Структура("Заголовок, ОписаниеОшибки, Подробности",
				ПредставлениеСтатусаРоуминг,
				ПредставлениеСтатусаРоуминг,
				ПредставлениеСтатусаРоумингДетали);
				
				МетодКлиента(,"ОткрытьФормуОбработкиМодально", "Форма_ВыводОшибки", ПараметрыФормы, ЭтаФорма);
				
			Иначе
				ОбновитьСтатусЭД();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПередатьНаСогласование(Команда)
		
		МетодКлиента("Модуль_Клиент","ОтправитьЭДОбъектНаСогласование", ЭтаФорма, ЭтаФорма, "ApprovementRequest", "ПередачаНаОбработку");
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПередатьНаПодписание(Команда)
		
		МетодКлиента("Модуль_Клиент","ОтправитьЭДОбъектНаСогласование", ЭтаФорма, ЭтаФорма, "SignatureRequest", "ПередачаНаОбработку");
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ЗапроситьАннулирование(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПолучитьФИОПодписанта", Organization);
						
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		5);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаЗапросАннулирования");

	КонецПроцедуры

	&НаКлиенте
	Процедура АннулироватьДокумент(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПолучитьФИОПодписанта", Organization);
		
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		1);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументуБезКомментария", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаАннулироватьДокумент");

	КонецПроцедуры

	&НаКлиенте
	Процедура ОтказатьВАннулировании(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок","ПолучитьФИОПодписанта", Organization);
				
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		6);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаОтказатьВАннулировании");

	КонецПроцедуры

	&НаКлиенте
	Процедура СоздатьДокумент1С(Команда)
		
		Если ЛЕВ(ЭДОбъект.Type, 7) = "Invoice"  Тогда
			
			Если ЗначениеЗаполнено(ПодходящаяСФ) Тогда
				ОбработчикСозданиеДокумента(ПодходящаяСФ);
			ИначеЕсли МассивСсылокРНК.Количество() > 0 И ЭДОбъект.Type = "Invoice" Тогда
				МетодКлиента("Модуль_ЛогикаПоведениеФорм","СоздатьНовыйСчетФактуру", ЭтаФорма, Организация, Контрагент, ЭДОбъект, МассивСсылокРНК);
			Иначе
				СоздатьДокумент("ВводСВыборомОснований");
			КонецЕсли;
			
		Иначе
			СоздатьДокумент("Ввод");
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ЗапроситьУточнение(Команда)
		
		ФИОПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок","ПолучитьФИОПодписанта", Organization);
		
		ПараметрыФормы=		Новый Структура;
		ПараметрыФормы.Вставить("РежимИспользования", 		7);
		ПараметрыФормы.Вставить("ПредставлениеДокумента", 	Заголовок);
		ПараметрыФормы.Вставить("ПредставлениеПодписи", 	Organization.Name+ ?(ПустаяСтрока(ФИОПодписанта), "", ", " + ФИОПодписанта));
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ФормаОтветаПоДокументу", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыОтветаЗапроситьУточнение");
		
	КонецПроцедуры
	
//} КОМАНДЫ
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//{ ИНТЕГРАЦИЯ
	
	&НаКлиенте
	Процедура ПодписатьВДиадоке(Подписать, BoxID, DocumentID, ТекстОтказа = "", СтруктураДляТитула = Неопределено)
		
		Если НЕ ЭДОбъект = Неопределено Тогда
			МетодКлиента("Модуль_Клиент","ПодписатьВДиадоке", ЭДОбъект, Подписать, BoxID, DocumentID, ТекстОтказа, СтруктураДляТитула);
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаОтказаВПодписи(РезультатЗакрытия, ТекущийDepartmentId) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ПодписатьВДиадоке(Ложь, ЭДОбъект.OrganizationID, ЭДОбъект.documentID, РезультатЗакрытия.Комментарий); 
				Элементы.ГруппаКнопокПодписания.Доступность=	Ложь;
				Элементы.ГруппаКнопокПодписания.Видимость= 		Истина;
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиПодписания = ОписаниеОшибки();
				Если Найти(ТекстОшибкиПодписания, "FNS reg message was not sent for box")>0 Тогда
					СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиПодписания);
				Иначе
					СообщениеОбОшибкеДиадок(ТекстОшибкиПодписания);
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаСогласовать(РезультатЗакрытия, ТекущийDepartmentId) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ЭДОбъект.Approve(РезультатЗакрытия.Комментарий);
				Элементы.ГруппаКнопокСогласования.Доступность=	Ложь;
				Элементы.ГруппаКнопокСогласования.Видимость= 	Истина;
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиПодписания=	ОписаниеОшибки();
				Если НЕ Найти(ТекстОшибкиПодписания, "Duplicate resolution") = 0 Тогда
					ПоказатьПредупреждение(, "Повторное согласование не возможно", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
					Возврат;
				ИначеЕсли НЕ Найти(ТекстОшибкиПодписания, "User cannot add resolution") = 0 Тогда
					ПоказатьПредупреждение(, "Вы не можете согласовать документ", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
					Возврат;
				КонецЕсли;
				СообщениеОбОшибкеДиадок(ТекстОшибкиПодписания);
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаОтказатьВСогласовании(РезультатЗакрытия, ТекущийDepartmentId) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ЭДОбъект.DisApprove(РезультатЗакрытия.Комментарий);
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиПодписания=	ОписаниеОшибки();
				Если НЕ Найти(ТекстОшибкиПодписания, "Duplicate resolution") = 0 Тогда
					ПоказатьПредупреждение(, "Повторный отказ в согласовании не возможен", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
					Возврат;
				ИначеЕсли НЕ Найти(ТекстОшибкиПодписания, "User cannot add resolution") = 0 Тогда
					ПоказатьПредупреждение(, "Вы не можете отказать в согласовании", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
					Возврат;
				КонецЕсли;
				СообщениеОбОшибкеДиадок(ТекстОшибкиПодписания);
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаЗапросАннулирования(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ЭДОбъект.SendRevocationRequest(РезультатЗакрытия.Комментарий);
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиАннулирования = ОписаниеОшибки();
				Если Найти(ТекстОшибкиАннулирования, "FNS reg message was not sent for box")>0 Тогда
					СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиАннулирования);
				Иначе
					СообщениеОбОшибкеДиадок(ТекстОшибкиАннулирования);
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаАннулироватьДокумент(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка  
				ЭДОбъект.AcceptRevocationRequest();
				ОбновитьЭДОбъект();
			Исключение 
				ТекстОшибкиАннулирования= ОписаниеОшибки();
				Если найти(ТекстОшибкиАннулирования, "FNS reg message was not sent for box")>0 тогда
					СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиАннулирования);
				Иначе 
					СообщениеОбОшибкеДиадок(ТекстОшибкиАннулирования);
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры

	&НаКлиенте
	Процедура ОбработчикОткрытиеФормыОтветаОтказатьВАннулировании(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
		Если НЕ РезультатЗакрытия = Неопределено Тогда
			Попытка
				ЭДОбъект.RejectRevocationRequest(РезультатЗакрытия.Комментарий);
				ОбновитьЭДОбъект();
			Исключение
				ТекстОшибкиАннулирования = ОписаниеОшибки();
				Если Найти(ТекстОшибкиАннулирования, "FNS reg message was not sent for box")>0 Тогда
					СообщитьОбОтсутствииРегистрацииВФНС(ТекстОшибкиАннулирования);
				Иначе
					СообщениеОбОшибкеДиадок(ТекстОшибкиАннулирования);
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПодразделениеНажатие(Элемент, СтандартнаяОбработка)
		
		СтандартнаяОбработка=	Ложь;
		
		ТекущийDepartmentId=	?(ЭДОбъект.Department = Неопределено, "", ЭДОбъект.Department.Id);
		
		ПараметрыФормы=	Новый Структура();
		ПараметрыФормы.Вставить("DepartmentId", 	ТекущийDepartmentId);
		ПараметрыФормы.Вставить("OrganizationId",	ЭДОбъект.Organization.Id);
		
		МетодКлиента(,"ОткрытьФормуОбработкиМодально", "ВыборПодразделенияОрганизации", ПараметрыФормы, ЭтаФорма, "ОбработчикОткрытиеФормыВыбораПодразделенияОрганизации", ТекущийDepartmentId);
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ОтправитьсвязанныйДокумент(Команда)

		Если ЗначениеЗаполнено(Контрагент)=Ложь тогда
			ПоказатьПредупреждение(, "С "+ЭДОбъект.Counteragent.Name+" не сопоставлено ни одной карточки контрагента в 1С", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
			возврат
		КонецЕсли;		
		
		ПараметрыФормы=	Новый Структура;
		ПараметрыФормы.Вставить("InitialDocumentID", ЭДОбъект.DocumentID);
		
		Форма_Выгрузка = МетодКлиента(,"ПолучитьФормуОбработки", "Форма_Выгрузка", ПараметрыФормы, ЭтаФорма, СокрЛП(ЭДОбъект.DocumentID) + "/" + СокрЛП(ЭДОбъект.OrganizationID));
		ОписаниеКонтрагента = Новый структура("Контрагент, CounteragentName, CounteragentID",  Контрагент,ЭДОбъект.Counteragent.Name, ЭДОбъект.Counteragent.ID);
		Форма_Выгрузка.НачатьВыгрузку(Новый Структура("Организация, ОписаниеКонтрагента", Организация, ОписаниеКонтрагента));

	КонецПроцедуры

	&НаКлиенте
	Процедура Декорация4Нажатие(Элемент)
		ТекстИнформацииОНовомФормате= МетодКлиента("Модуль_Клиент","ТекстИнформацииОНовомФормате");
		ПараметрыФормы= Новый Структура("HTMLДокумент", ТекстИнформацииОНовомФормате);
		МетодКлиента(,"ОткрытьФормуОбработки", "ФормаВыводаHTMLДокумента", ПараметрыФормы, ЭтаФорма);
	КонецПроцедуры

//} ИНТЕГРАЦИЯ
////////////////////////////////////////////////////////////////////////////////