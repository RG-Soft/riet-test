
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура SelectFile(Команда)
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	// Открывает диалог выбора файла
	// Сохраняет путь к выбранному файлу в реквизите формы
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	//Изменено РГ-Софт Зарецкая 26.11.2013
	//ДиалогВыбораФайла.Фильтр = "Файл txt|*.txt|Файл dat|*.dat";
	ДиалогВыбораФайла.Фильтр = "Файл txt|*.txt|Файл dat|*.dat|Файл htm|*.htm|Файл html|*.html";
	//Конец изменения
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		PathToFile = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;

КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	
	// Читает файл
	// Передает прочитанный текст на сервер для создания документов
	
	// Прочитаем файл
	Состояние("Reading file...");
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Попытка
		ТекстовыйДокумент.ТолькоПросмотр = Истина;
		ТекстовыйДокумент.Прочитать(PathToFile, "windows-1251");
	Исключение 
		Предупреждение("Failed to read file!
			|" + ОписаниеОшибки(), 60);
		Возврат;
	КонецПопытки;
	
	//Добавлено РГ-Софт Зарецкая 26.11.2013
	//Получим расширение файла
	Расширение = PathToFile;
	Позиция = СтрНайти(Расширение, ".");
	Пока Позиция > 0 Цикл
		Расширение = Прав(Расширение, СтрДлина(Расширение) - Позиция);
		Позиция = СтрНайти(Расширение, ".");
	КонецЦикла;
	Если Расширение = PathToFile Тогда
		Расширение = Неопределено;
	КонецЕсли;
	//Конец добавления
	
	// Уйдем на сервер для создания документов
	Состояние("Creating customs payments...");
	Отказ = Ложь;
	
	//Добавлено РГ-Софт Зарецкая 26.11.2013
	Если НЕ Расширение = Неопределено И (Расширение = "html" ИЛИ Расширение = "htm") Тогда
		ЗагрузитьИзВебДокумента(Отказ, ТекстовыйДокумент);
	Иначе
		//Конец добавления 
		ЗагрузитьИзТекстовогоДокумента(Отказ, ТекстовыйДокумент);
		//Добавлено РГ-Софт Зарецкая 26.11.2013
	КонецЕсли;
	//Конец добавления
	
	// Отобразим результаты
	Если Отказ Тогда 
		Предупреждение("Failed to load customs payments!
			|See errors on the right pain.",
			60);
	Иначе
		ПоказатьОповещениеПользователя("Success", , "Customs payments were successfully loaded");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТекстовогоДокумента(Отказ, ТекстовыйДокумент) Экспорт
	
	// Загружает документы из переданного текстового документа
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	КоличествоСтрок = ТекстовыйДокумент.КоличествоСтрок();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		Строка = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		ЗагрузитьИзСтроки(Отказ, Строка, НомерСтроки);	
				
	КонецЦикла;
	
	Если Отказ Тогда 
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзСтроки(Отказ, Строка, НомерСтроки)
	
	// Загружает документ из строки текстового документа
	
	// Internal transfer пропускаем
	Если СтрНайти(Строка, "INTERNAL TRANSFER") = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ПрефиксОшибки = "Line " + НомерСтроки + ": ";	
		
	СтруктураЯчеек = ПолучитьСтруктуруЯчеек(Строка, ПрефиксОшибки);
	
	Если СтруктураЯчеек = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СоздатьCustomsPayment(Отказ, СтруктураЯчеек, ПрефиксОшибки);
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЯчеек(Строка, ПрефиксОшибки) Экспорт
	
	// Получает структуру ячеек из текстовой строки
	
	МассивЯчеек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка, ";");
	
	Если МассивЯчеек.Количество() <> 15 Тогда
		Сообщить(ПрефиксОшибки + "found " + МассивЯчеек.Количество() + " cells, must be 15 cells!");
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураЯчеек = Новый Структура;
	
	СтруктураЯчеек.Вставить("Дата", СокрЛП(МассивЯчеек[0]));
	
	СтруктураЯчеек.Вставить("Номер", СокрЛП(МассивЯчеек[1]));
	
	//Счет и счет банка
	//не добавляем в структуру
		
	СтруктураЯчеек.Вставить("Валюта", СокрЛП(МассивЯчеек[4]));
	
	//три колонки до Типа проводки
	//не добавляем в структуру
	
	СтруктураЯчеек.Вставить("Описание", СокрЛП(МассивЯчеек[8]));
	
	//две колонки до Типа проводки
	//не добавляем в структуру
		
	СтруктураЯчеек.Вставить("ТипПроводки", СокрЛП(МассивЯчеек[11]));
		
	СтруктураЯчеек.Вставить("НомерБанковскогоСчета", СокрЛП(МассивЯчеек[12]));
		
    СтруктураЯчеек.Вставить("Сумма", СокрЛП(МассивЯчеек[14]));
	
	Возврат СтруктураЯчеек;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СоздатьCustomsPayment(Отказ, СтруктураЯчеек, ПрефиксОшибки)
	
	// Создает документ из структуры ячеек
	
	// Если валюта - не рубли - сообщаем об ошибке и выходим
	Если СтруктураЯчеек.Валюта <> "RUB"
		И СтруктураЯчеек.Валюта <> "RUR" Тогда
		
		Сообщить(ПрефиксОшибки + "unknown currency '" + СтруктураЯчеек.Валюта + "'!
			|Currency can be only RUB or RUR!");
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	СтруктураDescription = ПолучитьСтруктуруОписанияПлатежа(СтруктураЯчеек.Описание);
	Если СтруктураDescription = Неопределено Тогда
		Сообщить(ПрефиксОшибки + "unknown format of payment description '" + СтруктураЯчеек.Описание + "'!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	PaymentKind = СтруктураDescription.PaymentKind;
	
	// Bank account
	BankAccount = CustomsСерверПовтИсп.ПолучитьBankAccountПоКоду(СтруктураЯчеек.НомерБанковскогоСчета);
	Если НЕ ЗначениеЗаполнено(BankAccount) Тогда	
		Сообщить(ПрефиксОшибки + "failed to find Bank account by code '" + СтруктураЯчеек.НомерБанковскогоСчета + "'!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Customs
	Если Не ЗначениеЗаполнено(СтруктураDescription.CustCode) Тогда
		
		Сообщить(ПрефиксОшибки + "failed to find Customs code in description!");
		Отказ = Истина;
		
	Иначе
		
		CustCode = Лев(СтруктураDescription.CustCode, 5) + "000";
		Customs = CustomsСерверПовтИсп.ПолучитьCustomsПоКоду(CustCode);
		Если НЕ ЗначениеЗаполнено(Customs) Тогда			
			Сообщить(ПрефиксОшибки + "failed to find Customs by code '" + CustCode + "'!");
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;

	// Check no.
	CheckNo = СтруктураDescription.CheckNo;
	
	// Date
	ДатаТекст = СтрЗаменить(СтруктураЯчеек.Дата, "-", "");
	Попытка
		ДатаCustomsPayment = Дата(ДатаТекст);
	Исключение
	    Сообщить(ПрефиксОшибки + "failed to convert '" + СтруктураЯчеек.Дата + "' to customs payment date!");
		Отказ = Истина;
	КонецПопытки;

	// Если документ уже существует - пропустим его
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номер", СтруктураЯчеек.Номер);
	Запрос.УстановитьПараметр("PaymentKind", PaymentKind);
	Запрос.УстановитьПараметр("BankAccount", BankAccount);
	Запрос.УстановитьПараметр("Customs", Customs);
	Запрос.УстановитьПараметр("CheckNo", CheckNo);
    Запрос.УстановитьПараметр("Дата", ДатаCustomsPayment);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	CustomsPayment.Ссылка
		|ИЗ
		|	Документ.CustomsPayment КАК CustomsPayment
		|ГДЕ
		|	НЕ CustomsPayment.ПометкаУдаления
		|	И CustomsPayment.Номер = &Номер
		|	И CustomsPayment.PaymentKind = &PaymentKind
		|	И CustomsPayment.BankAccount = &BankAccount
		|	И CustomsPayment.Customs = &Customs
		|	И CustomsPayment.CheckNo = &CheckNo
		|	И CustomsPayment.Дата = &Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
		CustomsPaymentОбъект = Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		CustomsPaymentОбъект = Документы.CustomsPayment.СоздатьДокумент();
		CustomsPaymentОбъект.Номер = СтруктураЯчеек.Номер;
		CustomsPaymentОбъект.PaymentKind = PaymentKind;
		CustomsPaymentОбъект.BankAccount = BankAccount;
		CustomsPaymentОбъект.Customs = Customs;
		CustomsPaymentОбъект.CheckNo = CheckNo;
		CustomsPaymentОбъект.Дата = ДатаCustomsPayment;
	КонецЕсли;		     	
		     	        
	// Type of payment
	CustomsPaymentОбъект.TypeOfPayment = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(CustomsPaymentОбъект.BankAccount, "TypeOfPayment");
	Если CustomsPaymentОбъект.TypeOfPayment <> Перечисления.CustomsPaymentsTypes.Check Тогда
		Возврат;	
	КонецЕсли; 	
	
	// Description
	CustomsPaymentОбъект.Description = СтруктураЯчеек.Описание;
	   	 		
	// CCD ref.
	CustomsPaymentОбъект.CCDReference = СтруктураDescription.CCDReference;		

	// Customs card
	CustomsPaymentОбъект.CustomsCard = CustomsСерверПовтИсп.ПолучитьCustomsCardПоКоду(СтруктураDescription.CustomsCardNo);
	Если Не ЗначениеЗаполнено(CustomsPaymentОбъект.CustomsCard) Тогда 
		Сообщить(ПрефиксОшибки + "failed to find Customs card by no. '" + СтруктураDescription.CustomsCardNo + "'!");
		Отказ = Истина;
	КонецЕсли;
	    	
	// Sum
	Попытка
		CustomsPaymentОбъект.Sum = Число(СтруктураЯчеек.Сумма);
	Исключение 
		Сообщить(ПрефиксОшибки + "failed to convert '" + СтруктураЯчеек.Сумма + "' to customs payment sum!");
		Отказ = Истина;
	КонецПопытки;
	
	Если НЕ Отказ Тогда

		Попытка
			CustomsPaymentОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить("Failed to post '" + CustomsPaymentОбъект + "'!
				|" + ОписаниеОшибки());
			Отказ = Истина; 
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруОписанияПлатежа(Знач ОписаниеПлатежа)
	
	Ячейки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеПлатежа, "/");
	
	// Если в описании 13 ячеек - значит первой колонкой идет код валютной операции, значит все нужно сдвинуть на 1
	// Если в описании 12 ячеек - ничего сдвигать не надо
	// Если другое количество ячеек - это какая-то ошибка
	КоличествоЯчеек = Ячейки.Количество();
	Если КоличествоЯчеек = 12 Тогда
		Добавка = 0;
	ИначеЕсли КоличествоЯчеек = 13 Тогда
		Добавка = 1;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
		
	Структура = Новый Структура("CustomsCardNo, CustCode, CCDReference, CheckNo, PaymentKind");	
	Структура.CustomsCardNo = СокрЛП(Ячейки[0+Добавка]);
	Структура.CustCode      = СокрЛП(Ячейки[3+Добавка]);
	Структура.CCDReference  = СокрЛП(Ячейки[5+Добавка]);
	Структура.CheckNo       = СокрЛП(Ячейки[6+Добавка]);
	Структура.PaymentKind   = СокрЛП(Ячейки[9+Добавка]);
				
	Возврат Структура;
	
КонецФункции

&НаСервереБезКонтекста
//Добавлено РГ-Софт Зарецкая 26.11.2013
Процедура ЗагрузитьИзВебДокумента(Отказ, ТекстовыйДокумент) Экспорт
	
	// Загружает документы из переданного текстового документа
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	КоличествоСтрок = ТекстовыйДокумент.КоличествоСтрок();
	
	ЧитаемОписаниеОперации = Ложь;
	ЧитаемОписаниеПокупателя = Ложь;
	НомерКарты = "";
	Customs = "";
	Описание = "";
	Сумма = 0;
	ВалютуПрочитали = Ложь;
	Дата = Неопределено;
	ДатаПромежуточная = Неопределено;
	ЕстьДатаСверху = Ложь;
	ЧитаемНомерКарты = Ложь;
	
	//СоответствиеКлиентов = Новый Соответствие;
	//СоответствиеКлиентов.Вставить("KAZ AKTAU CUSTOMS POST AUEZHAY", 	"50700");
	//СоответствиеКлиентов.Вставить("KAZ AKTAU CUSTOMS CIERING CENTER", 	"50700");
	//СоответствиеКлиентов.Вставить("KAZ AKTAU CUSTOMS POST MORPORT", 	"50700");
	//СоответствиеКлиентов.Вставить("KAZ ATYRAU CUSTOMS POST ATYRAU", 	"50500");
	//СоответствиеКлиентов.Вставить("KAZ ATYRAU CENTRE CUSTOMS AK-ZHAYK", "50500");
	//СоответствиеКлиентов.Вставить("KAZ ATYRAU CUSTOMS AK- ZHAYK", 		"50500");
	//СоответствиеКлиентов.Вставить("KAZ ATYRAU ENERGETIC CUSTOMS POST", 	"50500");
	//СоответствиеКлиентов.Вставить("KAZ AKTOBE CUSTOMS CLEAR.CENTER", 	"50400");
	//СоответствиеКлиентов.Вставить("KAZ AKTOBE AUYE ZHAIY", 				"50400");
	//СоответствиеКлиентов.Вставить("KAZ URALSK CENTRAL DEPARTMENT", 		"51700");
	//СоответствиеКлиентов.Вставить("KAZ URALSK CUSTOMS POST ORAL", 		"51700");
	//СоответствиеКлиентов.Вставить("KAZ URALSK ENERGY CUSTOMS POST", 	"51700");
	//СоответствиеКлиентов.Вставить("KAZ ALMATY CUSTOMS POST ZHETYSU", 	"50200");
	//СоответствиеКлиентов.Вставить("KAZ ALMATY POST ZHETYSU 3", 			"50200");
	
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		Строка = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		ЗагрузитьИзСтрокиВеб(Отказ, Строка, НомерСтроки, ЧитаемНомерКарты, НомерКарты, ЧитаемОписаниеОперации, ЧитаемОписаниеПокупателя, Customs, Описание, Сумма, ВалютуПрочитали, Дата, ДатаПромежуточная, ЕстьДатаСверху);
		
	КонецЦикла;
	
	Если Отказ Тогда 
		ОтменитьТранзакцию();
		Сообщить("Failed to load customs payments!");
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
//Добавлено РГ-Софт Зарецкая 26.11.2013
Процедура ЗагрузитьИзСтрокиВеб(Отказ, Строка, НомерСтроки, ЧитаемНомерКарты, НомерКарты, ЧитаемОписаниеОперации, ЧитаемОписаниеПокупателя, Customs, Описание, Сумма, ВалютуПрочитали, Дата, ДатаПромежуточная, ЕстьДатаСверху)
	
	// Загружает документ из строки текстового документа
	ПрефиксОшибки = "Line " + НомерСтроки + ": ";	
	
	//Проверим, началась ли новая карта
	Если НомерКарты = "" Тогда 
		//Если СтрНайти(Строка, "Операции&nbsp;по&nbsp;карте") > 0 Тогда 
		Если СтрНайти(Строка, "Операции&nbsp;по") > 0 ИЛИ СтрНайти(Строка, "Операции по карте") > 0 ИЛИ СтрНайти(Строка, "Операции по") > 0 Тогда 
			Если НЕ СтрНайти(Строка,"</tt>")Тогда
				//Строка разбита на две
				ЧитаемНомерКарты = Истина;
			Иначе
				//Шаблон: <tt>4031-6708-0048-2148</tt>
				НомерКарты = Строка;
				ПозицияНачала = СтрНайти(НомерКарты, "<tt>");
				Пока ПозицияНачала > 0 Цикл
					НомерКарты = Прав(НомерКарты, СтрДлина(НомерКарты) - (ПозицияНачала+3));
					ПозицияНачала = СтрНайти(НомерКарты, "<tt>");
				КонецЦикла;
				ПозицияКонца = СтрНайти(НомерКарты,"</tt>");
				Если ПозицияКонца > 0 Тогда
					НомерКарты = Лев(НомерКарты, ПозицияКонца-1);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЧитаемНомерКарты Тогда
			НомерКарты = Строка;
			ПозицияНачала = СтрНайти(НомерКарты, "<tt>");
			Пока ПозицияНачала > 0 Цикл
				НомерКарты = Прав(НомерКарты, СтрДлина(НомерКарты) - (ПозицияНачала+3));
				ПозицияНачала = СтрНайти(НомерКарты, "<tt>");
			КонецЦикла;
			ПозицияКонца = СтрНайти(НомерКарты,"</tt>");
			Если ПозицияКонца > 0 Тогда
				НомерКарты = Лев(НомерКарты, ПозицияКонца-1);
			КонецЕсли;
			ЧитаемНомерКарты = Ложь;
		Иначе
			Возврат; //пустая строка
		КонецЕсли;
	Иначе
		Если НЕ ЧитаемОписаниеОперации Тогда
			//Проверим, описание ли сейчас идет
			Если СтрНайти(Строка, "Описание&nbsp;операции") ИЛИ СтрНайти(Строка, "Описание операции") Тогда
				ЧитаемОписаниеОперации = Истина;
			КонецЕсли;
			//ЧитаемОписаниеОперации = ?((Найти(Строка, "Описание&nbsp;операции")>0)ИЛИ(Найти(Строка, "Описание операции")>0),Истина,Ложь);
			Возврат;
		Иначе
			Если СтрНайти(Строка, "ВСЕГО&nbsp;по&nbsp;карте") ИЛИ СтрНайти(Строка, "ВСЕГО по") Тогда
				ЧитаемОписаниеОперации = Ложь;
			КонецЕсли;
			//ЧитаемОписаниеОперации = ?((Найти(Строка,"ВСЕГО&nbsp;по&nbsp;карте")>0)ИЛИ(Найти(Строка,"ВСЕГО по")>0), Ложь, Истина);//Закончили ли описание
			Если ЧитаемОписаниеОперации Тогда
				//Проверим, есть ли в строке необходимые данные
				Если Customs = "" ИЛИ ЧитаемОписаниеПокупателя Тогда
					
					Если НЕ ЧитаемОписаниеПокупателя И СтрНайти(Строка, "Покупка")>0 Тогда
						//Можем считывать покупателя
						ЧитаемОписаниеПокупателя = Истина;
					КонецЕсли;
					
					Если ЧитаемОписаниеПокупателя И СтрНайти(Строка, "tt") > 0 Тогда
						//<tt>Покупка&nbsp;KAZ&nbsp;AKTOBE&nbsp;CUSTOMS CLEAR.CENTER</tt>
						//!Может быть на нескольких строках!
						ОписаниеСтрока = Строка;
						ПозицияНачала = СтрНайти(ОписаниеСтрока, "<tt>");
						Если ПозицияНачала > 0 Тогда
							ОписаниеСтрока = Прав(ОписаниеСтрока, СтрДлина(ОписаниеСтрока) - (ПозицияНачала+3));
						КонецЕсли;
						ПозицияКонца = СтрНайти(ОписаниеСтрока,"</tt>");
						Если ПозицияКонца > 0 Тогда
							ОписаниеСтрока = Лев(ОписаниеСтрока, ПозицияКонца-1);
							ОписаниеСтрока = СтрЗаменить(ОписаниеСтрока, "&nbsp;"," ");
							CustomsСтрока = СтрЗаменить(ОписаниеСтрока, "Покупка","");//Уберем слово "Покупка"
							ОписаниеСтрока = СокрЛП(ОписаниеСтрока);
							CustomsСтрока = СокрЛП(CustomsСтрока);
							ЧитаемОписаниеПокупателя = Ложь;
						Иначе
							//режем до конца строки, оставшуюся часть добавляем второй строкой
						КонецЕсли;
						ОписаниеСтрока = СтрЗаменить(ОписаниеСтрока, "&nbsp;"," ");
						CustomsСтрока = СтрЗаменить(ОписаниеСтрока, "Покупка ","");//Уберем слово "Покупка"
						Описание = Описание + ОписаниеСтрока;
						Customs = Customs + CustomsСтрока;
					КонецЕсли;
				Иначе
					//Покупатель заполнен, считываем числовые данные
					Если Сумма = 0 Тогда
						//Не обработана сумма
						Если СтрНайти(Строка, "<tt>") > 0 Тогда
							//есть тег tt - будем считывать сумум
							СуммаСтрока = Строка;
							ПозицияНачала = СтрНайти(СуммаСтрока, "<tt>");
							Пока ПозицияНачала > 0 Цикл
								СуммаСтрока = Прав(СуммаСтрока, СтрДлина(СуммаСтрока) - (ПозицияНачала+3+1));//"+1" - убираем минус из строки
								ПозицияНачала = СтрНайти(СуммаСтрока, "<tt>");
							КонецЦикла;
							ПозицияКонца = СтрНайти(СуммаСтрока,"</tt>");
							Если ПозицияКонца > 0 Тогда
								СуммаСтрока = Лев(СуммаСтрока, ПозицияКонца-1);
							КонецЕсли;
							СуммаСтрока = СтрЗаменить(СуммаСтрока, "&nbsp;","");
							СуммаСтрока = СтрЗаменить(СуммаСтрока, " ","");
							Сумма = Число(СуммаСтрока);
						КонецЕсли;
					ИначеЕсли НЕ ВалютуПрочитали Тогда
						//Строка с валютой
						Если СтрНайти(Строка, "<tt>") > 0 Тогда
							//есть тег tt - будем считать, что валюту прочитали
							ВалютуПрочитали = Истина;
						КонецЕсли;
						Возврат;
					ИначеЕсли Дата = Неопределено Тогда
						//Строка с датой
						Если СтрНайти(Строка, "<tt>") > 0 Тогда
							ДатаСтрока = Строка;
							//есть тег tt - будем считывать дату
							ПозицияНачала = СтрНайти(ДатаСтрока, "<tt>");
							Пока ПозицияНачала > 0 Цикл
								ДатаСтрока = Прав(ДатаСтрока, СтрДлина(ДатаСтрока) - (ПозицияНачала+3));
								ПозицияНачала = СтрНайти(ДатаСтрока, "<tt>");
							КонецЦикла;
							ПозицияКонца = СтрНайти(ДатаСтрока,"</tt>");
							Если ПозицияКонца > 0 Тогда
								ДатаСтрока = Лев(ДатаСтрока, ПозицияКонца-1);
							КонецЕсли;
							Дата = ПреобразоватьДату(ДатаСтрока);//Шаблон:01/11/13
						КонецЕсли;
					Иначе
						Возврат; //пустая строка
					КонецЕсли;
				КонецЕсли;//Customs
			Иначе
				//Закончили карту
				НомерКарты = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Проверяем "выпрыгнувшую" дату
	Если НЕ ЕстьДатаСверху Тогда
		Если СтрНайти(Строка, "colspan=""30""") > 0 Тогда
			ЕстьДатаСверху = Истина;
		КонецЕсли;
	ИначеЕсли СтрНайти(Строка, "<tt>") > 0 Тогда
		ДатаПрСтрока = Строка;
		//есть тег tt - будем считывать дату
		ПозицияНачала = СтрНайти(ДатаПрСтрока, "<tt>");
		Пока ПозицияНачала > 0 Цикл
			ДатаПрСтрока = Прав(ДатаПрСтрока, СтрДлина(ДатаПрСтрока) - (ПозицияНачала+3));
			ПозицияНачала = СтрНайти(ДатаПрСтрока, "<tt>");
		КонецЦикла;
		ПозицияКонца = СтрНайти(ДатаПрСтрока,"</tt>");
		Если ПозицияКонца > 0 Тогда
			ДатаПрСтрока = Лев(ДатаПрСтрока, ПозицияКонца-1);
		КонецЕсли;
		ДатаПромежуточная = ПреобразоватьДату(ДатаПрСтрока);//Шаблон:01/11/13
		ЕстьДатаСверху = Ложь;
	КонецЕсли;
	
	Если НЕ ДатаПромежуточная = Неопределено И Дата = Неопределено Тогда
	    Дата = ДатаПромежуточная;
	КонецЕсли;
	
	//Формируем платежку
	Если ЗначениеЗаполнено(НомерКарты) И ЗначениеЗаполнено(Customs) И Сумма <> 0 И НЕ Дата = Неопределено Тогда
		СформироватьПлатежку(Отказ, НомерКарты, Customs, Описание, Сумма, Дата);
		//Обнулим данные по операции
		ВалютуПрочитали = Ложь;
		Сумма = 0;
		Дата = Неопределено;
		ДатаПромежуточная = Неопределено;
		Customs = "";
		Описание = "";
		ЕстьДатаСверху = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
//Добавлено РГ-Софт Зарецкая 26.11.2013
Функция ПреобразоватьДату(ДатаСтрока)

	МассивДаты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДатаСтрока, "/");
	Если МассивДаты.Количество() = 3 Тогда
	    Возврат Дата(2000+Число(МассивДаты[2]),Число(МассивДаты[1]),Число(МассивДаты[0]));
	Иначе
		Возврат Дата(1,1,1);
	КонецЕсли;

КонецФункции 

&НаСервереБезКонтекста
//Добавлено РГ-Софт Зарецкая 26.11.2013
Функция ПолучитьНомерДокумента(Знач НомерКарты)

	Если ЗначениеЗаполнено(НомерКарты) Тогда
		НомерКарты = Прав(НомерКарты,4);
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	CustomsPayment.Номер КАК Номер
		|ИЗ
		|	Документ.CustomsPayment КАК CustomsPayment
		|ГДЕ
		|	CustomsPayment.Номер ПОДОБНО &Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер УБЫВ";
		Запрос.УстановитьПараметр("Номер", НомерКарты+"-"+"%");
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			НомерПоследнегоДокумента = Число(Прав(ВыборкаДетальныеЗаписи.Номер,4))+1;
			НомерПоследнегоДокумента = Прав("000"+НомерПоследнегоДокумента,4);
			Возврат (НомерКарты + "-"+НомерПоследнегоДокумента);
		Иначе
			Возврат (НомерКарты + "-0001");
		КонецЕсли;
	Иначе
		Возврат "0000-0001";
	КонецЕсли;

КонецФункции 

&НаСервереБезКонтекста
//Добавлено РГ-Софт Зарецкая 26.11.2013
Функция ПроверитьНаличиеПлатежки(Customs,НомерКарты,Сумма,Дата)

	Если ЗначениеЗаполнено(Customs) И ЗначениеЗаполнено(НомерКарты) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	CustomsPayment.Ссылка,
		|	CustomsPayment.Номер
		|ИЗ
		|	Документ.CustomsPayment КАК CustomsPayment
		|ГДЕ
		|	CustomsPayment.Дата = &Дата
		|	И CustomsPayment.CustomsCard = &CustomsCard
		|	И CustomsPayment.Sum = &Sum
		|	И CustomsPayment.Customs = &Customs";
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("CustomsCard", НомерКарты);
		Запрос.УстановитьПараметр("Sum", Сумма);
		Запрос.УстановитьПараметр("Customs", Customs);
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.Номер;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции 

//Добавлено РГ-Софт Зарецкая 26.11.2013
&НаСервереБезКонтекста
Процедура СформироватьПлатежку(Отказ, НомерКарты, Customs, Описание, Сумма, Дата)
	
	CustomsДок = Справочники.Customs.ПолучитьПоNameForLoading(СокрЛП(Customs));
	CustomsCardДок = Справочники.CustomsCards.НайтиПоКоду(НомерКарты);
	
	//НайденаПлатежка = ПроверитьНаличиеПлатежки(CustomsДок,CustomsCardДок,Сумма,Дата);
	//Если НЕ НайденаПлатежка = Неопределено Тогда
	//	Сообщить("There is already Customs payment №"+НайденаПлатежка+" with:");
	//	//Сообщить("Customs: "+Customs);
	//	//Сообщить("CustomsCard: "+НомерКарты);
	//	//Сообщить("Date: "+Дата+"; "+);
	//	//Сообщить("Sum: "+Сумма+"; "+);
	//	//Сообщить("Description: "+Описание);
	//	Сообщить("Customs: "+Customs+"; "+"CustomsCard: "+НомерКарты+"; "+"Date: "+Дата+"; "+"Sum: "+Сумма+"; "+"Description: "+Описание);
	//	Возврат;
	//КонецЕсли;
	
	НовДокумент = Документы.CustomsPayment.СоздатьДокумент();
	НовДокумент.Customs = CustomsДок;
	НовДокумент.TypeOfPayment = Перечисления.CustomsPaymentsTypes.PaymentOrder;
	НовДокумент.BankAccount = Справочники.BankAccountsForCustomsPayments.НайтиПоКоду("n/a");
	
	НовДокумент.Дата = Дата;
	НовДокумент.Sum = Сумма;
	НовДокумент.Description = Описание;
	НовДокумент.CustomsCard = CustomsCardДок;
	НовДокумент.Номер = ПолучитьНомерДокумента(НомерКарты);
	
	//Проверим заполненность сами, т.к. у нас идет одна транзакция
	Если НЕ ЗначениеЗаполнено(НовДокумент.Номер) ИЛИ НЕ ЗначениеЗаполнено(CustomsДок) ИЛИ НЕ ЗначениеЗаполнено(CustomsCardДок) Тогда
		//Если не смогли найти карту по номеру или Customs по соответствию, документ записаться позволит, но не полностью заполнен. Откажемся от записи, т.к. не сможем отследить дубли
		Сообщить("Failed to create a document with:");
		//Сообщить("Customs: "+Customs);
		//Сообщить("CustomsCard: "+НомерКарты);
		//Сообщить("Date: "+Дата);
		//Сообщить("Sum: "+Сумма);
		//Сообщить("Description: "+Описание);
		Сообщить("Customs: "+Customs+"; "+"CustomsCard: "+НомерКарты+"; "+"Date: "+Дата+"; "+"Sum: "+Сумма+"; "+"Description: "+Описание);
		Если НЕ ЗначениеЗаполнено(НовДокумент.Номер) Тогда
			Сообщить("№ of document is empty!");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(CustomsДок) Тогда
			Сообщить("Customs is empty!");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(CustomsCardДок) Тогда
			Сообщить("Customs сard is empty!");
		КонецЕсли;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НовДокумент.Записать();
	//Сообщить("Created: CustomsPayment № "+ НовДокумент.Номер);
	
КонецПроцедуры


