
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьТаблицуПользователей()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПользователейПоПроекту.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.СписокПользователейПоПроекту(ГУИДПроекта)));
		УчастникиОбсуждения.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.ПолучитьСоставОбсуждающих(ГУИДВопроса)));
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставОбсуждающихВВопросеСервер(Результат)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ИсходящиеДанные = Новый Структура;
		ИсходящиеДанные.Вставить("УчастникиОбсуждения", УчастникиОбсуждения.Выгрузить());
		ИсходящиеДанные.Вставить("ГУИДВопроса", ГУИДВопроса);
		ИсходящиеДанныеСтрВн = ЗначениеВСтрокуВнутр(ИсходящиеДанные);
		Результат = Прокси.ОбновитьСоставПользователейВВопросе(ИсходящиеДанныеСтрВн);
	Исключение
		Результат = ОписаниеОшибки();
	КонецПопытки; 
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ГУИДПроекта = Параметры.ГУИДПроекта;
	ГУИДВопроса = Параметры.ГУИДВопроса;
	
	Объект.Пользователь = Параметры.Объект.Пользователь;
	Объект.Пароль		= Параметры.Объект.Пароль;
	Объект.АдресБазы 	= Параметры.Объект.АдресБазы;
   	ЗаполнитьТаблицуПользователей();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Неопределено;
	
	Если Модифицированность Тогда
		Если Не ПроверитьЗаполнениеПользователей(УчастникиОбсуждения, "УчастникиОбсуждения") Тогда
			Возврат;
		КонецЕсли; 
		ОбновитьСоставОбсуждающихВВопросеСервер(Результат);
	КонецЕсли; 
	
	ЭтаФорма.Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
// Проверка заполнения таблицы на клиенте.
// Параметры:
// Отказ  - параметр отказа,
// Таблица - таблица для проверки,
// НазваниеТаблицы - имя таблицы для проверки строкой. 
//
Функция ПроверитьЗаполнениеПользователей(Таблица, НазваниеТаблицы) 
	
	// Проверка незаполненных и повторяющихся пользователей.
	НомерСтроки = Таблица.Количество()-1;
	
	Пока  НомерСтроки >= 0 Цикл
		ТекущаяСтрока = Таблица.Получить(НомерСтроки);
		// Проверка заполнения значения.
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ИмяПользователя) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен пользователь!";
			Сообщение.Поле = НазваниеТаблицы + "[" + Формат(НомерСтроки, "ЧГ=0") + "].ИмяПользователя";
			Сообщение.Сообщить(); 
			Возврат Ложь;
		КонецЕсли;

		// Проверка наличия повторяющихся значений.
		НайденныеЗначения = Таблица.НайтиСтроки(Новый Структура("ИмяПользователя, СторонаПользователя", ТекущаяСтрока.ИмяПользователя, ТекущаяСтрока.СторонаПользователя));
		Если НайденныеЗначения.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Пользователь повторяется!";
			Сообщение.Поле = НазваниеТаблицы + "["  + Формат(НомерСтроки, "ЧГ=0") + "].ИмяПользователя";
			Сообщение.Сообщить(); 
			Возврат Ложь;
		КонецЕсли;
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаПользователейИмяПользователяНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Для Каждого ЭлСписка Из ТаблицаПользователейПоПроекту Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.ИмяПользователя, ЭлСписка.ИмяПользователя);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейИмяПользователяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Массив = ТаблицаПользователейПоПроекту.НайтиСтроки(Новый Структура("ИмяПользователя", ВыбранноеЗначение));
	Если Массив.Количество()>0 Тогда
		Элементы.ТаблицаПользователей.ТекущиеДанные.ГУИДПользователя = Массив[0].ГУИДПользователя;
	КонецЕсли; 
 	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ТаблицаПользователей.ТекущиеДанные.СторонаПользователя = "Отвечающий";
	КонецЕсли; 	
    	
   	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейПослеУдаления(Элемент)
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Модифицированность = Истина;
   		
КонецПроцедуры
