
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура запускает сервисные функции необходимые для создания вопроса
//
Функция ОтправитьСообщениеНаСервере(КодВопроса, СообщениеХТМЛ, СообщениеТекст)
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Возврат Прокси.ДобавитьСообщениеВВопрос31(ГУИДВопроса, СообщениеХТМЛ, СообщениеТекст, ТолькоДляСотрудниковТП);
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки; 
	
КонецФункции

&НаСервере
// Процедура получает данные для текста вопроса
//
Функция ПолучитьТекстОбсужденияВопроса()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ПараметрВхода = Новый Структура;
		ПараметрВхода.Вставить("ГУИДВопроса", ГУИДВопроса);
		ПараметрВхода.Вставить("ПоказатьПолностью", Истина);
		ТекстВопросаИзБазы = Прокси.ТекстВопросаНов(ЗначениеВСтрокуВнутр(ПараметрВхода), ПравоЗакрытияТекВопроса);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат "";
	КонецПопытки; 

	Возврат ТекстВопросаИзБазы;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСпискиУчастниковВопроса()
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаУчастниковОбсуждения = ЗначениеИзСтрокиВнутр(Прокси.ПолучитьТаблицуУчастниковОбсужденияВопроса(ГУИДВопроса));
	Исключение
		Сообщить(ОписаниеОшибки()); 
		Возврат;
	КонецПопытки; 
	
	ОтКого.Очистить();
	Кому.Очистить();
	СторонниеНаблюдатели.Очистить();
	Для Каждого СтрокаТЗ Из ТаблицаУчастниковОбсуждения Цикл
		Если СтрокаТЗ.СторонаПользователя = "Спрашивающий" Тогда
			ОтКого.Добавить(СтрокаТЗ.ИмяПользователя);
		КонецЕсли;
		Если СтрокаТЗ.СторонаПользователя = "Отвечающий" Тогда
			Кому.Добавить(СтрокаТЗ.ИмяПользователя);
		КонецЕсли; 
		Если СтрокаТЗ.СторонаПользователя = "Сторонний наблюдатель" Тогда
			СторонниеНаблюдатели.Добавить(СтрокаТЗ.ИмяПользователя);
		КонецЕсли;
	КонецЦикла; 
	
	Если СторонниеНаблюдатели.Количество() = 0  Тогда
		Элементы.СторонниеНаблюдатели.Видимость = Ложь;
	Иначе
		Элементы.СторонниеНаблюдатели.Видимость = Истина;
	КонецЕсли; 
	
	// ищем текущего пользователя в обсуждающих
	Массив = ТаблицаУчастниковОбсуждения.НайтиСтроки(Новый Структура("ГУИДПользователя", ГУИДТекПользователя));
	Если Массив.Количество()=0 Тогда
		Элементы.ГруппаНовогоСообщения.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
// Функция устанавливает признак закрытия вопроса
//
Функция ЗавершитьОбсуждениеВопросаСервер()
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Возврат Прокси.ЗавершитьОбсуждениеВопроса(КодВопроса);
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки; 
	
КонецФункции

&НаСервере
Процедура ОбновитьТаблицуФайлов()
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПрисоединенныеФайлы.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.ПолучитьТаблицуПрисоединенныхФайлов(ГУИДВопроса)));
		Элементы.ТолькоДляСотрудниковТП.Видимость = Прокси.ПолучитьВидимостьТП(ГУИДВопроса);
		ГУИДПроекта = Прокси.ПолучитьГУИДПроекта(ГУИДВопроса);
		ВидимостьРедактирует = Ложь;
		Для Каждого СтрокаТЗ Из ТаблицаПрисоединенныеФайлы Цикл
			Если СтрокаТЗ.Редактирует <> "" Тогда
				ВидимостьРедактирует = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		Элементы.ТаблицаПрисоединенныеФайлыРедактирует.Видимость = ВидимостьРедактирует;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Пользователь = Параметры.Пользователь;
	Объект.Пароль		= Параметры.Пароль;
	Объект.АдресБазы 	= Параметры.АдресБазы;
    КодВопроса			= Параметры.КодВопроса;
	ДатаВопроса			= Параметры.ДатаВопроса;
	Проект				= Параметры.Проект;
	ИсторияОбсуждения	= Параметры.ТекстФорума;
	ЭтаФорма.Заголовок	= Параметры.ТемаВопроса;
	ГУИДТекПользователя = Параметры.ГУИДТекПользователя;
	ГУИДВопроса			= Параметры.ГУИДВопроса;
	АвторВопроса		= Параметры.АвторВопроса;
	Приоритет			= Параметры.Приоритет;
	ТребуемаяДатаОтвета = Параметры.ТребуемаяДатаОтвета;
		
	Элементы.ЗавершитьОбсуждение.Видимость = Параметры.ПравоЗакрытияТекВопроса;
	ЗаполнитьСпискиУчастниковВопроса();
	Элементы.ГруппаПрисоединенныеФайлы.Видимость = Ложь;
	
	// присоединенные файлы
	ОбновитьТаблицуФайлов();
	Если Параметры.ВозможноДобавлениеСообщений = 3 Тогда
		Элементы.ГруппаНовогоСообщения.Видимость = Ложь;                                     		
	КонецЕсли; 
  
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
// Процедура запускает сервисные функции необходимые для создания вопроса
//
Процедура ДобавитьСообщение(Команда)
	
	СообщениеТекст = ТекстНовогоСообщения.ПолучитьТекст();
	СообщениеХТМЛ = "";
	ТекстНовогоСообщения.ПолучитьHTML(СообщениеХТМЛ, Новый Структура);
	
	// пустые сообщения не добавляем
	СообщениеДляПроверки = СтрЗаменить(СообщениеТекст, Символы.ПС, "");
	Если СообщениеДляПроверки = "" Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ОтправитьСообщениеНаСервере(КодВопроса, СообщениеХТМЛ, СообщениеТекст);
	Если ТипЗнч(Результат) <> Тип("Булево") Тогда
		Предупреждение(Результат);
		Возврат;
	ИначеЕсли Результат Тогда 
		ПоказатьОповещениеПользователя(,,  Символы.ПС + "Сообщение успешно добавлено");
		Оповестить("ОбновитьСписокВопросов");
	КонецЕсли; 
	
	ТекстНовогоСообщения.Удалить();
	ИсторияОбсуждения = ПолучитьТекстОбсужденияВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбсуждение(Команда)
	
	Ответ = Вопрос("После выполнения данной операции, добавление новых сообщений вопрос будет невозможно!" + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ОКОтмена);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Результат = ЗавершитьОбсуждениеВопросаСервер();
		Если ТипЗнч(Результат) <> Тип("Булево") Тогда
			Предупреждение(Результат);
			Возврат;
		Иначе
			ПоказатьОповещениеПользователя(,,  Символы.ПС + "Вопрос " + КодВопроса + " закрыт", );
			Оповестить("ОбновитьСписокВопросов");
			ЭтаФорма.Закрыть();
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформация(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ГУИДВопроса",	ГУИДВопроса);
	СтруктураПараметров.Вставить("Объект",		Объект);
	
   	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаКИ", СтруктураПараметров);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаКИ", СтруктураПараметров);
	КонецПопытки; 

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОрфографию(Команда)
	
	ТекстДляПроверки = ТекстНовогоСообщения.ПолучитьТекст();
	Структура = Новый Структура("ТекстДляПроверки", ТекстДляПроверки);
	Попытка
		ТекстХТМЛ = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПроверкиОрфографии", Структура);
	Исключение
		ТекстХТМЛ = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаПроверкиОрфографии", Структура);
	КонецПопытки; 

	Если ТекстХТМЛ <> Неопределено Тогда
		УстановитьПравильноеХТМЛ(ТекстХТМЛ);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПравильноеХТМЛ(ТекстХТМЛ)
	
	ТекстНовогоСообщения.УстановитьHTML(ТекстХТМЛ, Новый Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстВопроса(Команда)
	
	Элементы.Группа3.Видимость = Истина;
	Элементы.ГруппаПрисоединенныеФайлы.Видимость = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРИСОЕДИНЕННЫЕ ФАЙЛЫ

&НаКлиенте
Процедура ПрисоединенныеФайлы(Команда)
	
	Элементы.Группа3.Видимость = Ложь;
	Элементы.ГруппаПрисоединенныеФайлы.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
    АдресВременногоХранилищаФайла = "";
	ИмяФайла = "";
	Если НЕ ПоместитьФайл(АдресВременногоХранилищаФайла, ИмяФайла, ИмяФайла, Истина, УникальныйИдентификатор) Тогда
		Возврат;
	КонецЕсли; 
	Состояние("Загрузка файла на сервер..");
	
	// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	ОписаниеФайла = ПолучитьОписаниеФайла(ИмяФайла);
	// } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
		
	// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	//Если ПоместитьФайлыВПрисоединенные(ИмяФайла, АдресВременногоХранилищаФайла) Тогда
	Если ПоместитьФайлыВПрисоединенные(ОписаниеФайла, АдресВременногоХранилищаФайла) Тогда
	// } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
		ПоказатьОповещениеПользователя("Файл успешно добавлен в базу ""Монитора сопровождения 3.0""");
		ОбновитьТаблицуФайлов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеФайла(ИмяФайла)
	
	Структура = Новый Структура("Расширение, ИмяФайлаБезРасширения");
	
	СтрокиПути = РазложитьСтрокуПоТочкамИСлэшам(ИмяФайла);
	
	Если СтрокиПути.Количество() >= 2 Тогда
		Структура.Расширение = СтрокиПути[СтрокиПути.Количество()-1];
		Структура.ИмяФайлаБезРасширения = СтрокиПути[СтрокиПути.Количество()-2];
	Иначе
		ВызватьИсключение
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ВернутьСтр("ru = 'Ошибка при помещении файла в хранилище: %1'"),ИмяФайла);
	КонецЕсли;
    	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
// Функция раскладывает строку в массив строк, используя "./\" как разделитель
//
Функция РазложитьСтрокуПоТочкамИСлэшам(Знач Представление) Экспорт
	
	Перем ТекущаяПозиция;
	
	Фрагменты = Новый Массив;
	
	НачальнаяПозиция = 1;
	
	Для ТекущаяПозиция = 1 По СтрДлина(Представление) Цикл
		ТекущийСимвол = Сред(Представление, ТекущаяПозиция, 1);
		Если ТекущийСимвол = "." Или ТекущийСимвол = "/" Или ТекущийСимвол = "\" Тогда
			ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
			НачальнаяПозиция = ТекущаяПозиция + 1;
			Фрагменты.Добавить(ТекущийФрагмент);
		КонецЕсли;
	КонецЦикла;
	
	Если НачальнаяПозиция <> ТекущаяПозиция Тогда
		ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
		Фрагменты.Добавить(ТекущийФрагмент);
	КонецЕсли;
	
	Возврат Фрагменты;
	
КонецФункции

&НаСервере
Функция ПоместитьФайлыВПрисоединенные(ОписаниеФайла, АдресВременногоХранилищаФайла)

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.ПоместитьФайлВПрисоединенные(ГУИДВопроса, ОписаниеФайла.ИмяФайлаБезРасширения, ДвоичныеДанные.Размер(), ОписаниеФайла.Расширение, ДвоичныеДанные);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Если Результат <> "true" Тогда
		Если СтрНайти(Результат, "Файл с таким именем уже присутствует списке присоединенных файлов")<>0 Тогда
			Сообщить("Файл с таким именем уже присутствует списке присоединенных файлов!");
		Иначе 
			Сообщить(Результат);
		КонецЕсли; 
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции
 
&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено  Тогда
		Возврат;
	КонецЕсли; 
	Состояние("Загрузка файла с сервера..");
	АдресВоВременномХранилище = ПолучитьДанныеФайлаССервера(ТекСтрока.ГУИДФайла);
	Состояние("Загрузка файла завершена");
	Результат = ПолучитьФайл(АдресВоВременномХранилище,ТекСтрока.Наименование + "."+ТекСтрока.Расширение,Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеФайлаССервера(ГУИДФайла)
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ПолученныйФайл = ЗначениеИзСтрокиВнутр(Прокси.ПолучитьПрисоединенныйФайл(ГУИДФайла));
		Возврат ПоместитьВоВременноеХранилище(ПолученныйФайл);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки; 
 
КонецФункции
 
&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элемент.ТекущиеДанные;
	Если СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"ПрисоединенныеФайлы","")="Описание" Тогда
		Возврат;
	КонецЕсли; 
	Состояние("Загрузка файла с сервера..");
	АдресВоВременномХранилище = ПолучитьДанныеФайлаССервера(ТекСтрока.ГУИДФайла);
	Состояние("Загрузка файла завершена");
	Результат = ПолучитьФайл(АдресВоВременномХранилище,ТекСтрока.Наименование + "."+ТекСтрока.Расширение,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Предупреждение("Активизируйте строку с файлом");
		Возврат;
	КонецЕсли;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		Предупреждение("В настоящий момент данный файл редактируется пользователем " + Символы.ПС + ТекСтрока.Редактирует +  
						" и не может быть помечен на удаление.");
		Возврат;
	КонецЕсли; 
	Если ТекСтрока.ПометкаУдаленияФайла Тогда
		Если Вопрос("Снять пометку удаления с """ + ТекСтрока.Наименование + """?", РежимДиалогаВопрос.ДаНет)= КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
	ИНаче
		Если Вопрос("Установить пометку удаления на """ + ТекСтрока.Наименование + """?", РежимДиалогаВопрос.ДаНет)= КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
 
	УстановитьПометкуУдаленияСервер(ТекСтрока.ГУИДФайла, Не ТекСтрока.ПометкаУдаленияФайла);
	ОбновитьТаблицуФайлов();
	
КонецПроцедуры
 
&НаСервере
Процедура УстановитьПометкуУдаленияСервер(ГУИДФайла, ПометкаУдаления)
	
	Попытка
		Определение = Новый WSОпределения( Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль 		= Объект.Пароль; 
		Прокси.УстановитьПометкуУдаленияФайла(ГУИДФайла, ПометкаУдаления);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ЗаменитьИзФайлаНаДиске(Команда)

	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Предупреждение("Активизируйте строку с файлом");
		Возврат;
	КонецЕсли;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		Предупреждение("В настоящий момент данный файл редактируется пользователем " + Символы.ПС + ТекСтрока.Редактирует +
						" и не может быть изменен");
		Возврат;
	КонецЕсли; 
	Если Вопрос("Заменить присоединенный файл?", РежимДиалогаВопрос.ДаНет)= КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	АдресВременногоХранилищаФайла = "";
	ИмяФайла = "";
	Если НЕ ПоместитьФайл(АдресВременногоХранилищаФайла, ИмяФайла, ИмяФайла, Истина, УникальныйИдентификатор) Тогда
		Возврат;
	КонецЕсли; 
	ОбновитьФайлНаСервере(ТекСтрока.ГУИДФайла, ИмяФайла, АдресВременногоХранилищаФайла);
	ОбновитьТаблицуФайлов();
 
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлНаСервере(ГУИДФайла, ИмяФайла, АдресВременногоХранилищаФайла)
	
	Файл = Новый Файл(ИмяФайла);
	Размер = Файл.Размер();
	Расширение = Файл.Расширение;
	ИмяФайлаБезРасширения = Файл.ИмяБезРасширения;
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.ЗаменитьФайлВПрисоединенных(ГУИДФайла, ИмяФайлаБезРасширения, Размер, Расширение, ДвоичныеДанные);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Если Результат <> "true" Тогда
		Сообщить(Результат);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединенныеФайлыОписаниеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
		
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		Предупреждение("В настоящий момент данный файл редактируется пользователем " + Символы.ПС + ТекСтрока.Редактирует +
						" и не может быть изменен");
		ОбновитьТаблицуФайлов();		
		Возврат;
	КонецЕсли;
	
	УстановитьОписаниеФайла(ТекСтрока.ГУИДФайла, Текст);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОписаниеФайла(ГУИДФайла, ТекстОписания)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.УстановитьТекстОписанияФайла(ГУИДФайла, ТекстОписания);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
  	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСоставОбсуждающих(Команда)
	
	СтруктураДанных = Новый Структура("ГУИДПроекта, ГУИДВопроса, Объект", ГУИДПроекта, ГУИДВопроса, Объект);
	
	Попытка
		Результат = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаОбсуждающиеИзменение", СтруктураДанных);
	Исключение
	    Результат = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаОбсуждающиеИзменение", СтруктураДанных);
	КонецПопытки; 

	Если Результат<>Неопределено Тогда
		ПоказатьОповещениеПользователя(,,  Символы.ПС + Результат);
		ЗаполнитьСпискиУчастниковВопроса();
	КонецЕсли; 
		
КонецПроцедуры
 