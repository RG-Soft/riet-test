
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
// Функция проверяет заполнение настройки подключения
//
//  Возвращаемое значение:
//   Булево
//
Функция ПроверитьЗаполнениеРеквизитов()
	
	Если Не ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Возврат Ложь;
   	Иначе
		Возврат Истина;
   	КонецЕсли;
	
КонецФункции

&НаСервере
// Процедура выполняет необходимые действия для обновления
//
Процедура ОбновитьТаблицуВопросовСервер()
	
	ТаблицаВопросов.Очистить();	
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль;
		ИзБазы = Прокси.ВопросыПользователяНов21(Объект.ЗагружатьЗакрытыеОтмененныеВопросы, ТолькоМои, Объект.ГУИДТекПользователя, Объект.ИмяТекПользователя);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если СтрНайти(ТекстОшибки, "Аутентификация пользователя не выполнена")<>0 Тогда
			ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>пользователь с именем <EM>"+ 
													Объект.Пользователь +"</EM> не найден в базе данных ""Монитора сопровождения"" или пароль указан неверно!</FONT>");
		Иначе
			ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>"+ТекстОшибки+"</FONT>");
		КонецЕсли; 
		Возврат;
	КонецПопытки; 
		
	ТаблицаИзБазы = ЗначениеИзСтрокиВнутр(ИзБазы);
	ТаблицаВопросов.Загрузить(ТаблицаИзБазы);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТекстХТМЛДляВывода(ТекстВвода)
	
	ТекстВовзрата = "<HTML><HEAD><META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
					|<META name=GENERATOR content=""MSHTML 9.00.8112.16437""></HEAD><BODY>"
					+ ТекстВвода + "<BR></BODY></HTML>";
	Возврат ТекстВовзрата;
	
КонецФункции
 
&НаСервере
// Функция скачивает с интернет ресурса программу AMMYY
//
//  Возвращаемое значение:
//   Строка - адресс во временном хранилище
//
Функция СкачатьЭмиНаСервере()
	
	ФайлЭми = РеквизитФормыВЗначение("Объект").ПолучитьМакет("AMMYY");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлЭми);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

&НаСервере
// Функция устанавливает признак закрытия вопроса
//
Функция ЗавершитьОбсуждениеВопросаСервер(ГУИДВопроса)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl",  Объект.Пользователь,  Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Возврат Прокси.ЗавершитьОбсуждениеВопросаНов(ГУИДВопроса);
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки; 
	
КонецФункции

&НаСервере
// Процедура получает данные для текста вопроса
//
Процедура ПолучитьТекстОбсужденияВопроса(ГУИДВопроса, АдресБазы, Пользователь, Пароль, ПоказатьПолностью, ПравоЗакрытияТекВопроса)
	
	Попытка
		Определение = Новый WSОпределения(АдресБазы+"/ws/Tasks.1cws?wsdl", Пользователь, Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль = Пароль; 
		ПараметрВхода = Новый Структура;
		ПараметрВхода.Вставить("ГУИДВопроса", ГУИДВопроса);
		ПараметрВхода.Вставить("ПоказатьПолностью", ПоказатьПолностью);
		ТекстВопроса = Прокси.ТекстВопросаНов(ЗначениеВСтрокуВнутр(ПараметрВхода), ПравоЗакрытияТекВопроса);
		Если ОтображатьКонтакты Тогда
			ТаблицаКИ.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.ПолучитьТаблицуКИУчастниковОбсужденияВопроса(ГУИДВопроса)));
		КонецЕсли; 
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если СтрНайти(ТекстОшибки, "Аутентификация пользователя не выполнена")<>0 Тогда
			ТекстВопроса  = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>пользователь с именем <EM>" + 
													Пользователь + "</EM> не найден в базе данных ""Монитора сопровождения"" или пароль указан неверно!</FONT>");
		Иначе
			ТекстВопроса  = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>"+ТекстОшибки+"</FONT>");
		КонецЕсли;
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
// Процедура получает данные для текста вопроса
//
Функция ПолучитьПолныйТекстВопроса(ГУИДВопроса)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ПараметрВхода = Новый Структура;
		ПараметрВхода.Вставить("ГУИДВопроса", ГУИДВопроса);
		ПараметрВхода.Вставить("ПоказатьПолностью", Истина);
		ТекстВопросаИзБазы = Прокси.ТекстВопросаНов(ЗначениеВСтрокуВнутр(ПараметрВхода), ПравоЗакрытияТекВопроса);
	Исключение
		ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>"+ОписаниеОшибки()+"</FONT>");
		Возврат "";
	КонецПопытки; 
	
	Возврат ТекстВопросаИзБазы;
	
КонецФункции

&НаКлиенте
// Процедура обновляет таблицу вопросов
//
Процедура ОбновитьТаблицуВопросов()
	
	Состояние(,,"Выполняется обновление списка вопросов..", АдресКартинки2);
   	ОбновитьТаблицуВопросовСервер();
	ВосстановитьТекСтроку();
	Состояние(,,"Обновление списка вопросов завершено", АдресКартинки2);

КонецПроцедуры

&НаКлиенте
// Процедура активирует текущую строку таблицы вопросов
//
Процедура ВосстановитьТекСтроку()
	
	Структура = Новый Структура;
	Структура.Вставить("ГУИДВопроса", мТекСтрокаГУИД);
	МассивСтрок = ТаблицаВопросов.НайтиСтроки(Структура);
	
	Если МассивСтрок.Количество() = 0  Тогда
		НомерСтроки = Неопределено;
	Иначе
		НомерСтроки = МассивСтрок[0].ПолучитьИдентификатор();
	КонецЕсли;
	Элементы.ТаблицаВопросов.ТекущаяСтрока = НомерСтроки;
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняет необходимые действия для добавления сообщения в вопрос
//
Процедура ДобавитьКВопросуКлиент(Элемент)
	
	Структура = Новый Структура;
	Структура.Вставить("Пользователь",	Объект.Пользователь);
	Структура.Вставить("Пароль", 		Объект.Пароль);
	Структура.Вставить("АдресБазы",		Объект.АдресБазы);
	Структура.Вставить("ГУИДВопроса",	Элемент.ТекущиеДанные.ГУИДВопроса);
	Структура.Вставить("КодВопроса",	Элемент.ТекущиеДанные.Код);
	Структура.Вставить("Проект", 		Элемент.ТекущиеДанные.Проект);
	Структура.Вставить("ТемаВопроса", 	Элемент.ТекущиеДанные.Ссылка);
	Структура.Вставить("ДатаВопроса", 	Элемент.ТекущиеДанные.ДатаВопроса);
	Структура.Вставить("ПравоЗакрытияТекВопроса", 	ПравоЗакрытияТекВопроса);
	Структура.Вставить("ГУИДТекПользователя", 	Объект.ГУИДТекПользователя);
	Структура.Вставить("АвторВопроса", 	Элемент.ТекущиеДанные.АвторВопроса);
    Структура.Вставить("Приоритет", 	Элемент.ТекущиеДанные.Приоритет);
    Структура.Вставить("ТребуемаяДатаОтвета", 	Элемент.ТекущиеДанные.ТребуемаяДатаОтвета);
	Структура.Вставить("ТекстФорума",			ПолучитьПолныйТекстВопроса(Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса));
	Структура.Вставить("ВозможноДобавлениеСообщений",	Элемент.ТекущиеДанные.КартинкаСтатусаВопроса);
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаДобавленияСообщения", Структура, , Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаДобавленияСообщения", Структура, , Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса);
	КонецПопытки; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	АдресКартинки1 = ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("Объект").ПолучитьМакет("КартинкаПрелоадера1"), Новый УникальныйИдентификатор);
	АдресКартинки2 = Новый Картинка(РеквизитФормыВЗначение("Объект").ПолучитьМакет("КартинкаПрелоадера2"));

КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии(Отказ)
	
	ТолькоМои = Истина;
	ПоказатьПолностью = Истина;
	// Первое открытие
	Если Не ЗначениеЗаполнено(Объект.АдресБазы) Тогда
		// в этот параметр необходимо вписать адрес рабочей базы монитора
		// -----пример: Объект.АдресБазы = "http://89.188.108.154:6448/Monitor30"------
		Объект.АдресБазы = "http://89.188.108.154:6448/Monitor30";
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Объект.ОбновлятьАвтоматически = Ложь;
		Объект.ВремяОбновления = 60;
		Объект.ОтображатьТекстВопросаСЗадержкой = Истина;
		Объект.ВремяОбновленияТекстаВопроса = 0.8;
		ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4>Не заполнено имя пользователя! 
												  |<BR>(для ввода имени пользователя и пароля используйте команду <FONT color=#536ac2><U>Настройки</U></FONT>, расположенную в левом нижнем углу)</FONT>");
	КонецЕсли; 
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		Если Объект.ОбновлятьАвтоматически Тогда
			ПодключитьОбработчикОжидания("ОбновитьТаблицуВопросов", Объект.ВремяОбновления);
		КонецЕсли;
       	ОбновитьТаблицуВопросов();
	КонецЕсли;
	
	Элементы.ТаблицаКИ.Видимость = ОтображатьКонтакты;
	ЭтаФорма.Заголовок = "Монитор сопровождения " + Формат(ТекущаяДата(), "ДФ='dd ММММ yyyy'") + " г.";
	
КонецПроцедуры
 
&НаКлиенте
// Процедура - обработчик события "ОбработкаОповещения" формы
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокВопросов" Тогда
		ОбновитьТаблицуВопросовСервер();
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
// Процедура запускает сервисные механизмы обновления таблицы вопросов
//
Процедура Обновить(Команда)
	
	Если Не ПроверитьЗаполнениеРеквизитов()	Тогда
		Возврат;	
	КонецЕсли;
	ОбновитьТаблицуВопросов();	
	
КонецПроцедуры
 
&НаКлиенте
// Процедура запускает сервисные манизмы заврешения обсуждения
//
Процедура ЗавершитьОбсуждение(Команда)
	
	Если Элементы.ТаблицаВопросов.ТекущиеДанные = Неопределено Тогда
		Предупреждение("Необходимо активизировать вопрос в таблице вопросов!");
		Возврат;
	КонецЕсли; 

	Если Элементы.ТаблицаВопросов.ТекущиеДанные.КартинкаСтатусаВопроса = 3 Тогда
		Предупреждение("Обсуждение данного вопроса уже завершено!");
		Возврат;
	КонецЕсли;

	Если Не ПравоЗакрытияТекВопроса Тогда
		Предупреждение("Вы не можете завершить обсуждение данного вопроса," + Символы.ПС + "т.к. не являетесь в нем спрашивающим!");
		Возврат;
	КонецЕсли; 
	
	Ответ = Вопрос("После выполнения данной операции, добавление новых сообщений в вопрос будет невозможно!" + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ОКОтмена);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Результат = ЗавершитьОбсуждениеВопросаСервер(Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса);
		Если ТипЗнч(Результат) <> Тип("Булево") Тогда
			Предупреждение(Результат);
			Возврат;
		Иначе
			ПоказатьОповещениеПользователя(,,  Символы.ПС + "Вопрос " + Элементы.ТаблицаВопросов.ТекущиеДанные.Ссылка + " закрыт", );
			ОбновитьТаблицуВопросовСервер();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура запускает сервисные механизмы обновления таблицы вопросов
//
Процедура СоздатьВопрос(Команда)
	
	Если Не ПроверитьЗаполнениеРеквизитов()	Тогда
		Возврат;	
	КонецЕсли;                                                                       
	ЗапуститьПриложение(Объект.АдресБазы + "?&N=" + Объект.Пользователь + "&P=" + Объект.Пароль + "#e1cib/data/Справочник.Вопросы?ref='00000000000000000000000000000000'");
	
КонецПроцедуры

&НаКлиенте
// Процедура открывает окно
//
Процедура Настройки(Команда)
	
	ОткрытьФормуНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек()

	Структура = Новый Структура;
	Структура.Вставить("Пользователь",								Объект.Пользователь);
	Структура.Вставить("Пароль", 									Объект.Пароль);
	Структура.Вставить("АдресБазы",									Объект.АдресБазы);
	Структура.Вставить("ЗагружатьЗакрытыеОтмененныеВопросы",		Объект.ЗагружатьЗакрытыеОтмененныеВопросы);
	Структура.Вставить("ОбновлятьАвтоматически",					Объект.ОбновлятьАвтоматически);
	Структура.Вставить("ВремяОбновления",							Объект.ВремяОбновления);
	Структура.Вставить("ОтображатьТекстВопросаСЗадержкой",			Объект.ОтображатьТекстВопросаСЗадержкой);
    Структура.Вставить("ВремяОбновленияТекстаВопроса",				Объект.ВремяОбновленияТекстаВопроса);

	Попытка
		СтруктураВозврата = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаНастройки", Структура);
	Исключение
		СтруктураВозврата = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаНастройки", Структура);
	КонецПопытки; 
	
	Если СтруктураВозврата<>Неопределено Тогда
		Объект.Пользователь = СтруктураВозврата.Пользователь;
		Объект.Пароль = СтруктураВозврата.Пароль;
		Объект.АдресБазы = СтруктураВозврата.АдресБазы;
		Объект.ЗагружатьЗакрытыеОтмененныеВопросы = СтруктураВозврата.ЗагружатьЗакрытыеОтмененныеВопросы;
		Если СтруктураВозврата.ОбновлятьАвтоматически Тогда
			ПодключитьОбработчикОжидания("ОбновитьТаблицуВопросов", СтруктураВозврата.ВремяОбновления);
		Иначе
			ОтключитьОбработчикОжидания("ОбновитьТаблицуВопросов");
		КонецЕсли; 
		Объект.ОбновлятьАвтоматически = СтруктураВозврата.ОбновлятьАвтоматически;
		Объект.ВремяОбновления = СтруктураВозврата.ВремяОбновления;
		Объект.ОтображатьТекстВопросаСЗадержкой = СтруктураВозврата.ОтображатьТекстВопросаСЗадержкой;
		Объект.ВремяОбновленияТекстаВопроса = СтруктураВозврата.ВремяОбновленияТекстаВопроса;
		Если ПроверитьЗаполнениеРеквизитов() Тогда
			ОбновитьТаблицуВопросов();
		КонецЕсли; 
	КонецЕсли;  	

КонецПроцедуры
 
&НаКлиенте
// Процедура запускает сервисные механизмы обновления таблицы вопросов
//
Процедура ПерейтиВМонитор(Команда)
	
	Если Не ПроверитьЗаполнениеРеквизитов()	Тогда
		Возврат;	
	КонецЕсли;
	ЗапуститьПриложение(Объект.АдресБазы + "?&N=" + Объект.Пользователь + "&P=" + Объект.Пароль);
	
КонецПроцедуры

&НаКлиенте
// Процедура запускает сервисные механизмы создания новой заявки
//
Процедура СоздатьЗаявку(Команда)
	
	Если Не ПроверитьЗаполнениеРеквизитов()	Тогда
		Возврат;	
	КонецЕсли;                                                                       
	ЗапуститьПриложение(Объект.АдресБазы + "?&N=" + Объект.Пользователь + "&P=" + Объект.Пароль + "#e1cib/data/Документ.ЗаявкаНаВыполнениеРабот?ref='00000000000000000000000000000000'");

КонецПроцедуры

&НаКлиенте
// Процедура запускает интерфейс скачивания программы AMMYY
//
Процедура СкачатьAmmyyAdmin(Команда)
	
	АдресВоВременномХранилище = СкачатьЭмиНаСервере();
   	Результат = ПолучитьФайл(АдресВоВременномХранилище,"AMMYY.exe",Истина);
	
КонецПроцедуры

&НаКлиенте
// Процедура запускает сервисные механизмы создания нового вопроса
//
Процедура ЗадатьВопрос(Команда)
	
	Структура = Новый Структура;
	Структура.Вставить("Пользователь",	Объект.Пользователь);
	Структура.Вставить("Пароль", 		Объект.Пароль);
	Структура.Вставить("АдресБазы",		Объект.АдресБазы);
    Структура.Вставить("Объект",		Объект);
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаНовогоВопроса", Структура);
 	Исключение
	    ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаНовогоВопроса", Структура);
	КонецПопытки; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТаблицаВопросов"

&НаКлиенте
// Процедура - обработчик события "Выбор"
// табличной части "ТаблицаВопросов".
//
Процедура ТаблицаВопросовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ТаблицаВопросовРучнойСтатусВопроса" Тогда
		Возврат;
	КонецЕсли; 
	ДобавитьКВопросуКлиент(Элемент);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриАктивизацииСтроки"
// табличной части "ТаблицаВопросов".
//
Процедура ТаблицаВопросовПриАктивизацииСтроки(Элемент)
	
	Если Не ПроверитьЗаполнениеРеквизитов() Тогда
		Возврат;
	КонецЕсли; 
	
	ТекСтрока = Элементы.ТаблицаВопросов.ТекущиеДанные;
	Если ТекСтрока= Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.ОтображатьТекстВопросаСЗадержкой Тогда
		Если ТекСтрока.ГУИДВопроса <> мТекСтрокаГУИД  Тогда
			ТекстВопроса = "<HTML><HEAD><META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
							|<META name=GENERATOR content=""MSHTML 9.00.8112.16421""></HEAD>
							|<BODY><P align=center>&nbsp;</P><P align=center>&nbsp;</P><P align=center>&nbsp;</P>
							|<P align=center><IMG align=middle src='" + АдресКартинки1 + "'></P><P align=center>получение текста вопроса..</P></BODY></HTML>";	
		КонецЕсли; 
       	ПодключитьОбработчикОжидания("ОтобразитьВопросКлиент", Объект.ВремяОбновленияТекстаВопроса, Истина);
	Иначе
		ОтобразитьВопросКлиент();
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьВопросКлиент()
	
	ТекСтрока = Элементы.ТаблицаВопросов.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ТекСтрока.ГУИДВопроса <> мТекСтрокаГУИД  Тогда
			ПолучитьТекстОбсужденияВопроса(ТекСтрока.ГУИДВопроса, Объект.АдресБазы, Объект.Пользователь, Объект.Пароль,
															ПоказатьПолностью, ПравоЗакрытияТекВопроса);
			мТекСтрокаГУИД = ТекСтрока.ГУИДВопроса;
		КонецЕсли; 
	Иначе
		ТекстВопроса = ПолучитьТекстХТМЛДляВывода("");
	КонецЕсли; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ТолькоМоиПриИзменении(Элемент)
	
	ОбновитьТаблицуВопросов();	

КонецПроцедуры

&НаКлиенте
Процедура ТекстВопросаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПолностьюПриИзменении(Элемент)
	
	Если Элементы.ТаблицаВопросов.ТекущиеДанные<>Неопределено  Тогда
		ПолучитьТекстОбсужденияВопроса(Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса,
															Объект.АдресБазы, Объект.Пользователь, Объект.Пароль, ПоказатьПолностью, ПравоЗакрытияТекВопроса);
		мТекСтрокаГУИД = Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса;
	Иначе
		ТекстВопроса = ПолучитьТекстХТМЛДляВывода("");
	КонецЕсли; 
	НадписьСостояния = "";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СТАТУСЫ ВОПРОСОВ (ручные)

&НаКлиенте
Процедура ТаблицаВопросовРучнойСтатусВопросаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ТаблицаВопросов.ТекущиеДанные;
	Если ТекСтрока = Неопределено Или Не ЗначениеЗаполнено(ТекСтрока.ГУИДВопроса) Тогда
		Возврат;
	КонецЕсли; 
	
	Элемент.СписокВыбора.Очистить();
	СписокВыбора = ПолучитьСписокВыбораВопросов();
	СписокВыбора.СортироватьПоЗначению(); 
	Для Каждого ЭлСписка Из СписокВыбора Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВыбораВопросов()
	
	ИзБазы = Новый СписокЗначений;
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль;
		ИзБазы = Прокси.ПолучитьСписокСтатусовВопросов();
	Исключение

	КонецПопытки; 
		
	Возврат ЗначениеИзСтрокиВнутр(ИзБазы);
	
КонецФункции
 
&НаКлиенте
Процедура ТаблицаВопросовРучнойСтатусВопросаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТаблицаВопросов.ТекущиеДанные;
	Если ТекСтрока = Неопределено Или Не ЗначениеЗаполнено(ТекСтрока.ГУИДВопроса) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ОбновитьСтатусВопросаСервер(ТекСтрока.РучнойСтатусВопроса, ТекСтрока.ГУИДВопроса);
	ПоказатьОповещениеПользователя(,,Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьСтатусВопросаСервер(Статус, ГУИДВопроса)
	
	ИзБазы = "";
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль;
		ИзБазы = Прокси.ОбновитьСтатусВопроса(Статус, ГУИДВопроса);
	Исключение
	КонецПопытки; 
		
	Возврат ИзБазы;
	
КонецФункции 
    
&НаКлиенте
Процедура ОтображатьКонтактыПриИзменении(Элемент)
	
	Элементы.ТаблицаКИ.Видимость = ОтображатьКонтакты;
	Если ОтображатьКонтакты Тогда
		Если Элементы.ТаблицаВопросов.ТекущиеДанные<>Неопределено  Тогда
			ПолучитьТекстОбсужденияВопроса(Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса,
									Объект.АдресБазы, Объект.Пользователь, Объект.Пароль, ПоказатьПолностью, ПравоЗакрытияТекВопроса);
			мТекСтрокаГУИД = Элементы.ТаблицаВопросов.ТекущиеДанные.ГУИДВопроса;
		Иначе
			ТекстВопроса = ПолучитьТекстХТМЛДляВывода("");
		КонецЕсли; 
		НадписьСостояния = "";
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
// Процедура получает задачи пользователя
//
Функция ПолучитьЗадачиПользователяСервер()
	
	ТаблицаВопросов.Очистить();	
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль;
		ИзБазы = Прокси.ЗадачиПользователя();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Если СтрНайти(ТекстОшибки, "Аутентификация пользователя не выполнена")<>0 Тогда
			ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>пользователь с именем <EM>"+ 
													Объект.Пользователь +"</EM> не найден в базе данных ""Монитора сопровождения"" или пароль указан неверно!</FONT>");
		Иначе
			ТекстВопроса = ПолучитьТекстХТМЛДляВывода("<FONT size=4><FONT color=#ff0000>Ошибка:</FONT><BR>"+ТекстОшибки+"</FONT>");
		КонецЕсли; 
		Возврат Неопределено;
	КонецПопытки; 
		
	ТаблицаИзБазы = ЗначениеИзСтрокиВнутр(ИзБазы);
	Возврат ТаблицаИзБазы;
		
КонецФункции

// { RGS VChaplygin 24.09.2012 14:38:50 - добавим запрос задач
&НаКлиенте
Процедура ПолучитьЗадачиПользователя(Команда)
	
	ОткрытьЗначение(ПолучитьЗадачиПользователяСервер());
	
КонецПроцедуры // } RGS VChaplygin 24.09.2012 14:38:56 - добавим запрос задач


