////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
// Процедура запускает сервисные функции необходимые для создания вопроса
//
Процедура СоздатьВопрос(Команда)
	
	Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	СообщениеТекст = ТекстВопроса.ПолучитьТекст();
	Если СообщениеТекст = "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен текст вопроса!";
		Сообщение.Поле = "ТекстВопроса";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
  	Если ТаблицаПрикрепленныхФайлов.Количество()>0 Тогда
		Состояние("Передача информации на сервер..");
	КонецЕсли;
	Результат = СоздатьНовыйВопросНаСервере();
	Если Результат <> "true" Тогда
		Предупреждение(Результат);
	Иначе
		ПоказатьОповещениеПользователя(, , Символы.ПС+ВернутьСтр("ru = 'Вопрос успешно создан'"));
		Оповестить("ОбновитьСписокВопросов");
		ЭтаФорма.Закрыть();
   	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
// Процедура запускает сервисные функции необходимые для создания вопроса
//
Функция СоздатьНовыйВопросНаСервере()
		
	Попытка
		ДанныеДляВопроса = СобратьДанныеОВопросе();
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.СоздатьНовыйВопросНов31(ДанныеДляВопроса);
		Возврат Результат;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки; 

КонецФункции

&НаСервере
Функция СобратьДанныеОВопросе()
	
	СообщениеХТМЛ = "";
	ТекстВопроса.ПолучитьHTML(СообщениеХТМЛ, Новый Структура);
    СообщениеТекст = ТекстВопроса.ПолучитьТекст();

	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТемаВопроса", ТемаВопроса);
	СтруктураДанных.Вставить("СообщениеХТМЛ", СообщениеХТМЛ);
	СтруктураДанных.Вставить("СообщениеТекст", СообщениеТекст);
	СтруктураДанных.Вставить("ГУИДПроекта", ГУИДПроекта);
	СтруктураДанных.Вставить("ДатаВопроса", ДатаВопроса);
	СтруктураДанных.Вставить("Приоритет", Приоритет);
	СтруктураДанных.Вставить("ТребуемаяДатаОтвета", ТребуемаяДатаОтвета);
	СтруктураДанных.Вставить("ТаблицаУчастников", УчастникиОбсуждения.Выгрузить());
	Если ТаблицаПрикрепленныхФайлов.Количество()>0 Тогда
		МассивВложений = Новый Массив;
		Для Каждого ЭлементВложений Из ТаблицаПрикрепленныхФайлов Цикл
			СтруктураВложения = Новый Структура;
           	ДвоичныеДанные =  ПолучитьИзВременногоХранилища(ЭлементВложений.АдресВоВременномХранилище);
			СтруктураВложения.Вставить("Размер", ДвоичныеДанные.Размер());
			СтруктураВложения.Вставить("Расширение", ЭлементВложений.Расширение);
			СтруктураВложения.Вставить("ИмяБезРасширения", ЭлементВложений.ИмяБезРасширения);
			СтруктураВложения.Вставить("ДвоичныеДанные", ДвоичныеДанные);
			МассивВложений.Добавить(СтруктураВложения);			
		КонецЦикла; 
		СтруктураДанных.Вставить("МассивВложений", МассивВложений);
	КонецЕсли; 

	СтруктураДанныхСтрокой = ЗначениеВСтрокуВнутр(СтруктураДанных);
	Возврат СтруктураДанныхСтрокой;
	
КонецФункции
 
&НаСервере
Процедура ЗагрузитьТаблицу(ТаблицаПользователейВр)
	
	УчастникиОбсуждения.Загрузить(ТаблицаПользователейВр.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоставОбсуждающихПоУмолчанию(ГУИДПроекта)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль;
		
		СтрутураДанных = ЗначениеИзСтрокиВнутр(Прокси.СоставОбсуждающихПоУмолчанию21(ГУИДПроекта));
		УчастникиОбсуждения.Загрузить(СтрутураДанных.ТаблицаПользователей);
		УдалитьДублиТекПользователя();
		ТребуемаяДатаОтвета = ДатаВопроса + СтрутураДанных.СрокОтвета*24*60*60;
     	НоваяСтрока = УчастникиОбсуждения.Добавить();
		НоваяСтрока.ГУИДПользователя = ГУИДТекПользователя;
		НоваяСтрока.ИмяПользователя = ИмяТекПользователя;
        НоваяСтрока.СторонаПользователя = "Спрашивающий";
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДублиТекПользователя()
	
	Массив = УчастникиОбсуждения.НайтиСтроки(Новый Структура("ГУИДПользователя", ГУИДТекПользователя));
	Для Каждого ЭлементМассива Из Массив Цикл
		УчастникиОбсуждения.Удалить(ЭлементМассива);
	КонецЦикла; 
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьТаблицуПроектов()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/Tasks.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = Новый WSПрокси (Определение, "http://www.1c.ru/docmng", "ЗадачиПользователя", "ЗадачиПользователяSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПроектовПользователя.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.СписокПроектовПользователя()));
		Если ТаблицаПроектовПользователя.Количество() = 1 Тогда
			Объект.Проект = ТаблицаПроектовПользователя[0].НаименованиеПроекта;
			ГУИДПроекта = ТаблицаПроектовПользователя[0].ГУИДПроекта;
		КонецЕсли; 
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыФормы()
	
	ОтКого.Очистить();
	Кому.Очистить();
	СторонниеНаблюдатели.Очистить();
	Для Каждого ЭлСписка Из УчастникиОбсуждения Цикл
		Если ЭлСписка.СторонаПользователя = "Спрашивающий" Тогда
			ОтКого.Добавить(ЭлСписка.ИмяПользователя);
		КонецЕсли; 
		Если ЭлСписка.СторонаПользователя = "Отвечающий" Тогда
			Кому.Добавить(ЭлСписка.ИмяПользователя);
		КонецЕсли; 
		Если ЭлСписка.СторонаПользователя = "Сторонний наблюдатель" Тогда
			СторонниеНаблюдатели.Добавить(ЭлСписка.ИмяПользователя);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры
 
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Пользователь = Параметры.Пользователь;
	Объект.Пароль		= Параметры.Пароль;
	Объект.АдресБазы 	= Параметры.АдресБазы;
	ГУИДТекПользователя = Параметры.Объект.ГУИДТекПользователя;
	ИмяТекПользователя =  Параметры.Объект.ИмяТекПользователя;
	
	ДатаВопроса			= ТекущаяДата();
	Приоритет			= "Обычный";
	ЗаполнитьТаблицуПроектов();
	
	Если ГУИДПроекта<>"" Тогда
		ЗаполнитьСоставОбсуждающихПоУмолчанию(ГУИДПроекта);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьРеквизитыФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ И КОМАНД

 &НаКлиенте
Процедура ПроектНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элемент.СписокВыбора.Очистить();
	Для Каждого ЭлСписка Из ТаблицаПроектовПользователя Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.НаименованиеПроекта, ЭлСписка.НаименованиеПроекта);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПроектОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Массив = ТаблицаПроектовПользователя.НайтиСтроки(Новый Структура("НаименованиеПроекта", ВыбранноеЗначение));
	Если Массив.Количество()>0 Тогда
		ГУИДПроекта = Массив[0].ГУИДПроекта;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	ПроектДо = Проект;
	Если ПроектДо<>Объект.Проект Тогда
		ЗаполнитьСоставОбсуждающихПоУмолчанию(ГУИДПроекта);
		ЗаполнитьРеквизитыФормы();
	КонецЕсли; 
	Проект = Объект.Проект;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставОбсуждающих(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Проект) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен проект!";
		Сообщение.Поле = "Объект.Проект";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	СтруктураДанных = Новый Структура("ГУИДПроекта, Объект, УчастникиОбсуждения", ГУИДПроекта, Объект, УчастникиОбсуждения);
	
	Попытка
		ТаблицаПользователейВр = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаОбсуждающие", СтруктураДанных);
	Исключение
	    ТаблицаПользователейВр = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаОбсуждающие", СтруктураДанных);
	КонецПопытки; 
	
	Если ТаблицаПользователейВр<> Неопределено Тогда
		ЗагрузитьТаблицу(ТаблицаПользователейВр);
		ЗаполнитьРеквизитыФормы();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОрфографию(Команда)
	
	ТекстДляПроверки = ТекстВопроса.ПолучитьТекст();
	Структура = Новый Структура("ТекстДляПроверки", ТекстДляПроверки);
	Попытка
		ТекстХТМЛ = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПроверкиОрфографии", Структура);
	Исключение
		ТекстХТМЛ = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаПроверкиОрфографии", Структура);
	КонецПопытки; 

	Если ТекстХТМЛ <> Неопределено Тогда
		УстановитьПравильноеХТМЛ(ТекстХТМЛ);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПравильноеХТМЛ(ТекстХТМЛ)
	
	ТекстВопроса.УстановитьHTML(ТекстХТМЛ, Новый Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьФайлы(Команда)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТаблицаПрикрепленныхФайлов", ТаблицаПрикрепленныхФайлов);
	Попытка
		Результат = ОткрытьФормуМодально("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПрисоединенныхФайлов", СтруктураДанных);
	Исключение
	    Результат = ОткрытьФормуМодально("Обработка.rgsМониторСопровождения.Форма.ФормаПрисоединенныхФайлов", СтруктураДанных);
	КонецПопытки; 
	
	Если Результат <> Неопределено  Тогда
		ТаблицаПрикрепленныхФайлов.Очистить();
		Для Каждого Строка Из Результат Цикл
			НоваяСтрока = ТаблицаПрикрепленныхФайлов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры


 