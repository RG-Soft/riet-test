
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура SelectFile(Команда)
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	// Открывает диалог выбора файла
	// Сохраняет путь к выбранному файлу в реквизите формы
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр = "Файл txt|*.txt";
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		PathToFile = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;

КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	
	// Читает файл
	// Передает прочитанный текст на сервер для заполнения элементов справочника
	
	// Прочитаем файл
	Состояние("Reading file...");
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Попытка
		ТекстовыйДокумент.ТолькоПросмотр = Истина;
		ТекстовыйДокумент.Прочитать(PathToFile);
	Исключение 
		Предупреждение("Failed to read file!
			|" + ОписаниеОшибки(), 60);
		Возврат;
	КонецПопытки;
	
	// Уйдем на сервер для заполнения элементов справочника
	Состояние("Loading TMS Countries...");
	Отказ = Ложь;
	
	ЗагрузитьИзТекстовогоДокумента(Отказ, ТекстовыйДокумент);
	
	// Отобразим результаты
	Если Отказ Тогда 
		Предупреждение("Failed to load TMS Countries!
			|See errors on the right pain.",
			60);
	Иначе
		ПоказатьОповещениеПользователя("Success", , "TMS Countries were successfully loaded");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТекстовогоДокумента(Отказ, ТекстовыйДокумент) Экспорт
		
	КоличествоСтрок = ТекстовыйДокумент.КоличествоСтрок();
	
	СтруктураПозицийЯчеек = ПолучитьСтруктуруПозицийЯчеек(Отказ, ТекстовыйДокумент.ПолучитьСтроку(1));
	Если Отказ Тогда 
        Возврат;
	КонецЕсли;
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Для НомерСтроки = 2 По КоличествоСтрок Цикл
		
		Строка = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		СтруктураЯчеек = ПолучитьСтруктуруЯчеек(Строка, СтруктураПозицийЯчеек);
		
		ОбновитьCountriesHUBs(Отказ, СтруктураЯчеек);	
		
		Если Отказ Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруПозицийЯчеек(Отказ, Строка)
	
	// Получает структуру позиций ячеек из первой строки
	
	СтруктураПозицийЯчеек = Новый Структура("ID,CountryCode2,CountryName");
	                                                                         
	МассивЯчеек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка, Символы.Таб);
	
	Для Каждого ЭлементМассива из МассивЯчеек Цикл 
		СтруктураПозицийЯчеек.ID = МассивЯчеек.Найти("ID");
		СтруктураПозицийЯчеек.CountryCode2 = МассивЯчеек.Найти("Country Code 2");
		СтруктураПозицийЯчеек.CountryName = МассивЯчеек.Найти("Country Name");
	КонецЦикла;

	//проверим, что нашли все колонки
	Для Каждого КлючИЗначение из СтруктураПозицийЯчеек Цикл 
		
		Если КлючИЗначение.Значение = Неопределено Тогда 
			Сообщить("Could not find column '" + КлючИЗначение.Ключ + "' in the file!");
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураПозицийЯчеек;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЯчеек(Строка, СтруктураПозицийЯчеек)
	
	// Получает структуру ячеек из текстовой строки
	
	МассивЯчеек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка, Символы.Таб);
	           		
	СтруктураЯчеек = Новый Структура("ID,CountryCode2,CountryName");
	
	СтруктураЯчеек.ID = СокрЛП(МассивЯчеек[СтруктураПозицийЯчеек.ID]);
	
	СтруктураЯчеек.CountryCode2 = СокрЛП(МассивЯчеек[СтруктураПозицийЯчеек.CountryCode2]);
	
	СтруктураЯчеек.CountryName = СокрЛП(МассивЯчеек[СтруктураПозицийЯчеек.CountryName]);
	
	Возврат СтруктураЯчеек;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбновитьCountriesHUBs(Отказ, СтруктураЯчеек)
	
	CountryHUB = Справочники.CountriesHUBs.НайтиПоРеквизиту("TMSID", СтруктураЯчеек.ID);
	
	Если ЗначениеЗаполнено(CountryHUB) Тогда 
		CountryHUBОбъект = CountryHUB.ПолучитьОбъект();			
	Иначе	
		CountryHUBОбъект = Справочники.CountriesHUBs.СоздатьЭлемент();
		CountryHUBОбъект.TMSID = СтруктураЯчеек.ID;	
	КонецЕсли;
	
	УстановитьЗначение(CountryHUBОбъект.Код, СтруктураЯчеек.CountryCode2);
	РГСофтКлиентСервер.УстановитьЗначение(CountryHUBОбъект.Наименование, СтруктураЯчеек.CountryName);
	РГСофтКлиентСервер.УстановитьЗначение(CountryHUBОбъект.ПометкаУдаления, Ложь);
	
	Если CountryHUBОбъект.Модифицированность() Тогда
		
		Попытка	
			CountryHUBОбъект.Записать();							
		Исключение
			Сообщить("Failed to save TMS Country " + СтруктураЯчеек.ID +"! See errors above.
			|" + ОписаниеОшибки());
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
          	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗначение(Реквизит, Значение) 

	Если СокрЛП(Реквизит) <> Значение Тогда
		Реквизит = Значение;
	КонецЕсли;

КонецПроцедуры

