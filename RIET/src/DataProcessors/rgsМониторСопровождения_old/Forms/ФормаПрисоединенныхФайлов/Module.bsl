 
 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТаблицаПрикрепленныхФайлов") Тогда
		ТаблицаПрикрепленныхФайлов.Очистить();
		Для Каждого Строка Из Параметры.ТаблицаПрикрепленныхФайлов Цикл
			НоваяСтрока = ТаблицаПрикрепленныхФайлов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла; 
	КонецЕсли; 
	Если Параметры.Свойство("ИмяСобытия") Тогда
		ИмяСобытия = Параметры.ИмяСобытия;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрикрепленныхФайловПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
    АдресВременногоХранилищаФайла = "";
	ИмяФайла = "";
	Результат = ПоместитьФайл(АдресВременногоХранилищаФайла,ИмяФайла,ИмяФайла,Истина, Новый УникальныйИдентификатор);

	Если Результат Тогда
        Файл = Новый Файл(ИмяФайла);
        НоваяСтрока = ТаблицаПрикрепленныхФайлов.Добавить();
        ОписаниеФайла = ПолучитьОписаниеФайла(ИмяФайла);
        НоваяСтрока.Размер = 0;
        НоваяСтрока.Расширение = ОписаниеФайла.Расширение;
        НоваяСтрока.ИмяБезРасширения = ОписаниеФайла.ИмяФайлаБезРасширения;
        НоваяСтрока.ИмяФайла = ОписаниеФайла.ИмяФайлаБезРасширения;
        НоваяСтрока.АдресВоВременномХранилище = АдресВременногоХранилищаФайла;
        НоваяСтрока.ПутьКФайлу = ИмяФайла;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеФайла(ИмяФайла)
	
	Структура = Новый Структура("Расширение, ИмяФайлаБезРасширения");
	
	СтрокиПути = РазложитьСтрокуПоТочкамИСлэшам(ИмяФайла);
	
	Если СтрокиПути.Количество() >= 2 Тогда
		Структура.Расширение = СтрокиПути[СтрокиПути.Количество()-1];
		Структура.ИмяФайлаБезРасширения = СтрокиПути[СтрокиПути.Количество()-2];
	Иначе
		ВызватьИсключение
			ПодставитьПараметрыВСтроку(
				ВернутьСтр("ru = 'Ошибка при помещении файла в хранилище: %1'"),ИмяФайла);
	КонецЕсли;
    	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
// Подставляет параметры в строку. Максимально возможное число параметров - 9.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров
// начинается с единицы.
//
// Параметры
//  СтрокаПодстановки  – Строка – шаблон строки с параметрами (вхождениями вида "%ИмяПараметра").
// Параметр<n>         - Строка - параметр
// Возвращаемое значение:
//   Строка   – текстовая строка с подставленными параметрами
//
// Пример:
// Строка = ПодставитьПараметрыВСтроку(ВернутьСтр("ru='%1 пошел в %2'"), "Вася", "Зоопарк");
//
Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки,
	Знач Параметр1,	Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	Если СтрокаПодстановки = Неопределено ИЛИ СтрДлина(СтрокаПодстановки) = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	НачПозиция = 1;
	Позиция = 1;
	Пока Позиция <= СтрДлина(СтрокаПодстановки) Цикл
		СимволСтроки = Сред(СтрокаПодстановки, Позиция, 1);
		Если СимволСтроки <> "%" Тогда
			Позиция = Позиция + 1;
			Продолжить;
		КонецЕсли;
		Результат = Результат + Сред(СтрокаПодстановки, НачПозиция, Позиция - НачПозиция);
		Позиция = Позиция + 1;
		СимволСтроки = Сред(СтрокаПодстановки, Позиция, 1);
		
		Если СимволСтроки = "%" Тогда
			Позиция = Позиция + 1;
			НачПозиция = Позиция;
			Продолжить;
		КонецЕсли;
		
		Попытка
			НомерПараметра = Число(СимволСтроки);
		Исключение
			ВызватьИсключение ВернутьСтр("ru='Входная строка СтрокаПодстановки имеет неверный формат: %'" + СимволСтроки);
		КонецПопытки;
		
		Если СимволСтроки = "1" Тогда
			ЗначениеПараметра = Параметр1;
		ИначеЕсли СимволСтроки = "2" Тогда
			ЗначениеПараметра = Параметр2;
		ИначеЕсли СимволСтроки = "3" Тогда
			ЗначениеПараметра = Параметр3;
		ИначеЕсли СимволСтроки = "4" Тогда
			ЗначениеПараметра = Параметр4;
		ИначеЕсли СимволСтроки = "5" Тогда
			ЗначениеПараметра = Параметр5;
		ИначеЕсли СимволСтроки = "6" Тогда
			ЗначениеПараметра = Параметр6;
		ИначеЕсли СимволСтроки = "7" Тогда
			ЗначениеПараметра = Параметр7;
		ИначеЕсли СимволСтроки = "8" Тогда
			ЗначениеПараметра = Параметр8;
		ИначеЕсли СимволСтроки = "9" Тогда
			ЗначениеПараметра = Параметр9;
		Иначе
			ВызватьИсключение ВернутьСтр("ru='Входная строка СтрокаПодстановки имеет неверный формат: %'" + ЗначениеПараметра);
		КонецЕсли;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = "";
		Иначе
			ЗначениеПараметра = Строка(ЗначениеПараметра);
		КонецЕсли;
		Результат = Результат + ЗначениеПараметра;
		Позиция = Позиция + 1;
		НачПозиция = Позиция;
	
	КонецЦикла;
	
	Если (НачПозиция <= СтрДлина(СтрокаПодстановки)) Тогда
		Результат = Результат + Сред(СтрокаПодстановки, НачПозиция, СтрДлина(СтрокаПодстановки) - НачПозиция + 1);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
// Функция раскладывает строку в массив строк, используя "./\" как разделитель
//
Функция РазложитьСтрокуПоТочкамИСлэшам(Знач Представление) Экспорт
	
	Перем ТекущаяПозиция;
	
	Фрагменты = Новый Массив;
	
	НачальнаяПозиция = 1;
	
	Для ТекущаяПозиция = 1 По СтрДлина(Представление) Цикл
		ТекущийСимвол = Сред(Представление, ТекущаяПозиция, 1);
		Если ТекущийСимвол = "." Или ТекущийСимвол = "/" Или ТекущийСимвол = "\" Тогда
			ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
			НачальнаяПозиция = ТекущаяПозиция + 1;
			Фрагменты.Добавить(ТекущийФрагмент);
		КонецЕсли;
	КонецЦикла;
	
	Если НачальнаяПозиция <> ТекущаяПозиция Тогда
		ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
		Фрагменты.Добавить(ТекущийФрагмент);
	КонецЕсли;
	
	Возврат Фрагменты;
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьЗаполнениеТаблицы() Тогда
		Возврат;
	КонецЕсли;
	Если ИмяСобытия = "ФормаНовогоВопроса" Тогда
		Оповестить("ПрикрепилиФайлыФормаНовогоВопроса", ТаблицаПрикрепленныхФайлов, ЭтаФорма);
	ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы_Помощник" Тогда
		Оповестить("ПрикрепленныеФайлы_Помощник", ТаблицаПрикрепленныхФайлов, ЭтаФорма);		
	КонецЕсли;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеТаблицы()

	ЕстьОшибки = Ложь;
	// Проверка повторяющихся файлов.
	НомерСтроки = ТаблицаПрикрепленныхФайлов.Количество()-1;
	
	Пока НомерСтроки >= 0 Цикл
		ТекущаяСтрока = ТаблицаПрикрепленныхФайлов.Получить(НомерСтроки);
	   	НайденныеЗначения = ТаблицаПрикрепленныхФайлов.НайтиСтроки(Новый Структура("ИмяФайла", ТекущаяСтрока.ИмяФайла));
		Если НайденныеЗначения.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Файл повторяется!";
			Сообщение.Поле = "ТаблицаПрикрепленныхФайлов["+НомерСтроки+"].ИмяФайла";
			Сообщение.Сообщить();
			ЕстьОшибки = Истина;
		КонецЕсли;
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;

    Возврат ЕстьОшибки;
	
КонецФункции // ()


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры
 