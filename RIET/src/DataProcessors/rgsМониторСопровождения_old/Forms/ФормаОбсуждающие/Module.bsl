
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьТаблицуПользователей()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПользователейПоПроекту.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.СписокПользователейПоПроекту(ГУИДПроекта)));
		МассивПользователей = Новый Массив;
		Для Каждого Строка Из ТаблицаПользователейПоПроекту Цикл
			МассивПользователей.Добавить(Строка.ИмяПользователя);
		КонецЦикла;
		Элементы.ТаблицаПользователейИмяПользователя.СписокВыбора.ЗагрузитьЗначения(МассивПользователей);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УчастникиОбсуждения.Загрузить(Параметры.УчастникиОбсуждения.Выгрузить());
	ГУИДПроекта = Параметры.ГУИДПроекта;
	Объект.Пользователь = Параметры.Объект.Пользователь;
	Объект.Пароль		= Параметры.Объект.Пароль;
	Объект.АдресБазы 	= Параметры.Объект.АдресБазы;
   	ЗаполнитьТаблицуПользователей();
    ПроставлениеТП();
	Если Параметры.Свойство("ИмяСобытия") Тогда
		ИмяСобытия = Параметры.ИмяСобытия;
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнениеПользователей(УчастникиОбсуждения, "УчастникиОбсуждения") Тогда
		Возврат;
	КонецЕсли; 
	
	Если ИмяСобытия = "ОбсуждающиеНовогоВопроса" Тогда
		Оповестить("ОбсуждающиеНовогоВопроса", УчастникиОбсуждения, ЭтаФорма);
	КонецЕсли;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
// Проверка заполнения таблицы на клиенте.
// Параметры:
// Отказ  - параметр отказа,
// Таблица - таблица для проверки,
// НазваниеТаблицы - имя таблицы для проверки строкой. 
//
Функция ПроверитьЗаполнениеПользователей(Таблица, НазваниеТаблицы) 
	
	// Проверка незаполненных и повторяющихся пользователей.
	НомерСтроки = Таблица.Количество()-1;
	
	Пока  НомерСтроки >= 0 Цикл
		ТекущаяСтрока = Таблица.Получить(НомерСтроки);
		// Проверка заполнения значения.
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ИмяПользователя) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен пользователь!";
			Сообщение.Поле = НазваниеТаблицы + "[" + Формат(НомерСтроки, "ЧГ=0") + "].ИмяПользователя";
			Сообщение.Сообщить(); 
			Возврат Ложь;
		КонецЕсли;

		// Проверка наличия повторяющихся значений.
		НайденныеЗначения = Таблица.НайтиСтроки(Новый Структура("ИмяПользователя, СторонаПользователя", ТекущаяСтрока.ИмяПользователя, ТекущаяСтрока.СторонаПользователя));
		Если НайденныеЗначения.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Пользователь повторяется!";
			Сообщение.Поле = НазваниеТаблицы + "["  + Формат(НомерСтроки, "ЧГ=0") + "].ИмяПользователя";
			Сообщение.Сообщить(); 
			Возврат Ложь;
		КонецЕсли;
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаПользователейИмяПользователяНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Для Каждого ЭлСписка Из ТаблицаПользователейПоПроекту Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.ИмяПользователя, ЭлСписка.ИмяПользователя);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейИмяПользователяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Массив = ТаблицаПользователейПоПроекту.НайтиСтроки(Новый Структура("ИмяПользователя", ВыбранноеЗначение));
	Если Массив.Количество()>0 Тогда
		Элементы.ТаблицаПользователей.ТекущиеДанные.ГУИДПользователя = Массив[0].ГУИДПользователя;
	КонецЕсли; 
 	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ТаблицаПользователей.ТекущиеДанные.СторонаПользователя = "Отвечающий";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПроставлениеТП()

	Для каждого Строка Из УчастникиОбсуждения Цикл
	    Пар = Новый Структура();
		Пар.Вставить("ИмяПользователя", Строка.ИмяПользователя);
		СтрокаПроектов = ТаблицаПользователейПоПроекту.НайтиСтроки(Пар);
		Если СтрокаПроектов.Количество() = 1 Тогда
			Строка.ЯвляетсяСотрудникомПоддержки = СтрокаПроектов[0].ЯвляетсяСотрудникомПоддержки;
		КонецЕсли;	
	КонецЦикла; 	

КонецПроцедуры 


&НаКлиенте
Процедура ТаблицаПользователейПриИзменении(Элемент)
	ТекДанные = Элементы.ТаблицаПользователей.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		 Пар = Новый Структура();
		Пар.Вставить("ИмяПользователя", ТекДанные.ИмяПользователя);
		СтрокаПроектов = ТаблицаПользователейПоПроекту.НайтиСтроки(Пар);
		Если СтрокаПроектов.Количество() = 1 Тогда
			ТекДанные.ЯвляетсяСотрудникомПоддержки = СтрокаПроектов[0].ЯвляетсяСотрудникомПоддержки;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПрокси(Определение) Экспорт
	
	Возврат Новый WSПрокси (Определение, "RemoteConnect", "RemoteConnect", "RemoteConnectSoap");
	
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры

