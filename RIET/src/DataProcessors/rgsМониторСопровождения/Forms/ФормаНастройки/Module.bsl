&НаКлиенте
Перем ИндексСтроки Экспорт;
&НаКлиенте
Перем ИндексСтрокиОбщ Экспорт;

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере" формы
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Пользователь = Параметры.Пользователь;
	Объект.Пароль = Параметры.Пароль;
	Объект.АдресБазы = Параметры.АдресБазы;
	Объект.ЗагружатьЗакрытыеОтмененныеВопросы = Параметры.ЗагружатьЗакрытыеОтмененныеВопросы;
	Объект.ОбновлятьАвтоматически = Параметры.ОбновлятьАвтоматически;
	Объект.ВремяОбновления = Параметры.ВремяОбновления;
	Объект.ОтображатьТекстВопросаСЗадержкой = Параметры.ОтображатьТекстВопросаСЗадержкой;
	Объект.ВремяОбновленияТекстаВопроса = Параметры.ВремяОбновленияТекстаВопроса;
	Объект.ТолькоМои = Параметры.ТолькоМои;
	Объект.ПоказатьПолностью = Параметры.ПоказатьПолностью;
	Объект.ОтображатьКонтакты = Параметры.ОтображатьКонтакты;
	Объект.ИспользоватьПомощник = Параметры.ИспользоватьПомощник;
	
	// { RGS Лунякин Иван 27.10.2015 12:51:08 
	Администратор 		= Параметры.Администратор;
	ПроектБазы 	= Параметры.ПроектБазы;	 
	Элементы.ФормаИзменитьФорму.Видимость = Администратор;
	ЗаполнитьТаблицуОтбора(Параметры.ТаблицаОтбора); 
	//РГС Фёдорова 26.01.16  Изменена настройка видимости
	Элементы.ФормаСкопироватьНастройкиДругомуПользователю.Видимость = Ложь;
	// { RGS Козлов К.С. 08.02.2016 15:53:13
	//Элементы.ФормаРаботаСНастройками.Видимость = Администратор;
	Элементы.ФормаРаботаСНастройками.Видимость = Ложь;
	// } RGS Козлов К.С. 08.02.2016 15:53:13
	//РГС Фёдорова 26.01.16 Конец изменения
	ИспользоватьПроектБазы 			= НЕ ПустаяСтрока(ПроектБазы);
	Элементы.ПроектБазы.Доступность = НЕ ПустаяСтрока(ПроектБазы);
	
	Если ЗначениеЗаполнено(Объект.Пользователь) Тогда
		ЗаполнитьТаблицуПроектов();
	КонецЕсли; 
	
	
	
	// { RGS Лунякин Иван 03.11.2015 16:29:30 
	ПолучитьНастройкиФормы();
	// } RGS Лунякин Иван 03.11.2015 16:29:30   
	
	Элементы.ВремяОбновления.Доступность = Объект.ОбновлятьАвтоматически;
	
КонецПроцедуры

&НаКлиенте
// Процедура формирует структуру настроек
//
Процедура ОК(Команда)
	
	// Добавлено RG-Soft, Черноус Елизавета, 30.11.17
	ОбновитьОтборПоПроектуПривязанномуКБазеНаОсновеНастроекВМакете();
	// Конец добавления

	Структура = Новый Структура;
	Структура.Вставить("Пользователь", Объект.Пользователь);
	Структура.Вставить("Пароль", Объект.Пароль);
    Структура.Вставить("АдресБазы", Объект.АдресБазы);
	Структура.Вставить("ЗагружатьЗакрытыеОтмененныеВопросы", Объект.ЗагружатьЗакрытыеОтмененныеВопросы);
    Структура.Вставить("ВремяОбновления", Объект.ВремяОбновления);
    Структура.Вставить("ОбновлятьАвтоматически", Объект.ОбновлятьАвтоматически);
	Структура.Вставить("ОтображатьТекстВопросаСЗадержкой", Объект.ОтображатьТекстВопросаСЗадержкой);
    Структура.Вставить("ВремяОбновленияТекстаВопроса", Объект.ВремяОбновленияТекстаВопроса);
    Структура.Вставить("ТолькоМои", Объект.ТолькоМои);
	Структура.Вставить("ПоказатьПолностью", Объект.ПоказатьПолностью);
    Структура.Вставить("ОтображатьКонтакты", Объект.ОтображатьКонтакты);
	Структура.Вставить("ИспользоватьПомощник", Объект.ИспользоватьПомощник);
	
	// { RGS Лунякин Иван 27.10.2015 15:35:05 
	Структура.Вставить("ПроектБазы", ?(ИспользоватьПроектБазы, ПроектБазы, ""));
	// } RGS Лунякин Иван 27.10.2015 15:35:05
	
	//РГС Фёдорова 27.01.16 Добавлено сохранение настроек
	Структура.Вставить("СохраненныеНастройки", ПолучитьМассивСтруктурИзТЗОбъекта());
	//РГС Фёдорова 27.01.16 Конец добавлений
	
	// { RGS Козлов К.С. 08.02.2016 15:52:43
	//СохранитьНастройкиНаСервере();
	// } RGS Козлов К.С. 08.02.2016 15:52:43
	
	Оповестить("НастройкиИзменены",Структура, ЭтаФорма);
	
	Закрыть();

КонецПроцедуры

// Добавлено RG-Soft, Черноус Елизавета, 30.11.17
&НаСервере
Процедура ОбновитьОтборПоПроектуПривязанномуКБазеНаОсновеНастроекВМакете()
	 
	ПроектОтбора = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетНастроек").ПолучитьОбласть("ПроектОтбора").ТекущаяОбласть.Текст;
		
	Если (НЕ ПустаяСтрока(ПроектОтбора) И ПроектОтбора <> "<ПроектОтбора>") И НЕ ЗначениеЗаполнено(ПроектБазы) Тогда
	
		 ПроектБазы = ПроектОтбора;
		 ИспользоватьПроектБазы = Истина;
	
	КонецЕсли;	 
	
КонецПроцедуры
 // Конец добавления

&НаКлиенте
Процедура ОбновлятьАвтоматическиПриИзменении(Элемент)
	
	Элементы.ВремяОбновления.Доступность = Объект.ОбновлятьАвтоматически;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры


// { RGS Лунякин Иван 26.10.2015 13:24:48 
&НаСервере
Процедура ЗаполнитьТаблицуОтбора(Массив)
	ТЗ = ТаблицаОтбора.Выгрузить(); 
	Для каждого ЭлементМассива Из Массив Цикл
		СтрокаТЗ = Тз.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЗ, ЭлементМассива);
	КонецЦикла; 
	ТаблицаОтбора.Загрузить(ТЗ);
КонецПроцедуры

&НаСервере
Процедура ПолучитьНастройкиФормы()

   // УстановитьПривилегированныйРежим(Истина);
   // 
   // СтруктураНастроекФормы = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "НастройкаФорм");
   // Если СтруктураНастроекФормы <> Неопределено Тогда
   //    ХранилищеСистемныхНастроек.Сохранить(ЭтаФорма.ИмяФормы + "/НастройкиФормы",,СтруктураНастроекФормы);
   // КонецЕсли;
   // СтруктураНастроекОкна = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "НастройкаОкна");
   // Если СтруктураНастроекФормы <> Неопределено Тогда
   //    ХранилищеСистемныхНастроек.Сохранить(ЭтаФорма.ИмяФормы + "/НастройкиОкна",,СтруктураНастроекОкна);
   //КонецЕсли;
   //
   //УстановитьПривилегированныйРежим(Ложь);
   
   ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
   Если Параметры.Свойство("КлючНастройки") Тогда
		КлючНастройки = Параметры.КлючНастройки;
		Пользователь = "";
	Иначе
		Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
		КлючНастройки = "";
	КонецЕсли;
	ОбработкаОбъект.ПолучитьНастройкиФормы(ЭтаФорма, КлючНастройки);

КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСтруктурИзТЗ()
	ТЗ = ТаблицаОтбора.Выгрузить();
	МассивВозврата = Новый Массив;
	Для каждого СтрокаТЗ Из ТЗ Цикл
		СтруктураСтроки = Новый Структура; 
		Для каждого Колонка Из ТЗ.Колонки Цикл
			СтруктураСтроки.Вставить(Колонка.Имя, СтрокаТЗ[Колонка.Имя]);
		КонецЦикла;
	    МассивВозврата.Добавить(СтруктураСтроки);
	КонецЦикла; 
	
	Возврат МассивВозврата;
КонецФункции 

//РГС Фёдорова 27.01.16 Добавлена функция для сохранения настроек
&НаСервере
Функция ПолучитьМассивСтруктурИзТЗОбъекта()
	ТЗ = Объект.СохраненныеНастройки.Выгрузить();
	МассивВозврата = Новый Массив;
	Если ТЗ.Количество() <> 0 Тогда
		Для каждого СтрокаТЗ Из ТЗ Цикл
			СтруктураСтроки = Новый Структура; 
			Для каждого Колонка Из ТЗ.Колонки Цикл
				СтруктураСтроки.Вставить(Колонка.Имя, СтрокаТЗ[Колонка.Имя]);
			КонецЦикла;
			МассивВозврата.Добавить(СтруктураСтроки);
		КонецЦикла;
	Иначе
		ТЗ = Объект.СписокСуществующихНастроек.Выгрузить();
		Для каждого СтрокаТЗ Из ТЗ Цикл
			СтруктураСтроки = Новый Структура; 
			Для каждого Колонка Из ТЗ.Колонки Цикл
				СтруктураСтроки.Вставить(?(Колонка.Имя = "Представление","КлючНастроек",Колонка.Имя), СтрокаТЗ[Колонка.Имя]);
			КонецЦикла;
			МассивВозврата.Добавить(СтруктураСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивВозврата;
КонецФункции 
//РГС Фёдорова 27.01.16 Конец добавления

&НаСервере
Процедура СкопироватьНаСервере(ПользователиПриемник)
	
	МассивНастроекДляКопирования = ПолучитьМассивНастроек();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.СкопироватьНастройкиФорм(ПользователиПриемник, МассивНастроекДляКопирования,  ПроектБазы, ПолучитьМассивСтруктурИзТЗ(),ПолучитьМассивСтруктурИзТЗОбъекта(),"Настройки по умолчанию");
	 	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиДругомуПользователю()
	
	СписокПользователей = ПолучитьСиписокПользователей();
	
	Если СписокПользователей.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Невозможно скопировать настройки, так как в системе не заведен ни один пользователь.'; en = 'You can not copy the settings , since the system is not on any user.'"));
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокПользователей.НайтиПоЗначению(Объект.Пользователь);
	Если ЭлементСписка <> Неопределено Тогда
		СписокПользователей.Удалить(ЭлементСписка);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Администратор", Администратор);
	СтруктураПараметров.Вставить("СписокПользователей", СписокПользователей);
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаВыбораПользователей", СтруктураПараметров, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаВыбораПользователей", СтруктураПараметров, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСиписокПользователей()
	
	УстановитьПривилегированныйРежим(Истина);
	МассивПользователейИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	СписокПользователейИБ = Новый СписокЗначений;
	
	Для каждого ПользовательИБ Из МассивПользователейИБ Цикл
	    //Фёдорова
		СписокПользователейИБ.Добавить(ПользовательИБ.Имя);	
	
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СписокПользователейИБ;
	
КонецФункции // ()
 
&НаСервере
Функция ПолучитьМассивНастроек()

	Массив = Новый Массив;
	НаименованиеФормыНастроек = ЭтаФорма.ИмяФормы;
	Наименованиеобработки = ЛЕВ(НаименованиеФормыНастроек, СтрДлина(НаименованиеФормыНастроек) - 20);
	Массив.Добавить(Наименованиеобработки + "Форма.Форма");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаВопроса");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаВыбораТемыНовогоВопроса");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаДобавленияСообщения");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаКИ");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаКонтроляВерсий");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаНастройки");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаНовогоВопроса");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаОбсуждающие");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаОбсуждающиеИзменение");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаПомощникаВводаВопроса");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаПредупреждения");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаПрикрепленныхФайлов");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаПроверкиОрфографии");
	Массив.Добавить(Наименованиеобработки + "Форма.ФормаВводаПланФактЧасов");
	
	Возврат Массив;
	
КонецФункции // ()

&НаСервере
Функция ПолучитьНаименованиеОсновнойФормы()

	НаименованиеФормыНастроек = ЭтаФорма.ИмяФормы;
	Наименованиеобработки = ЛЕВ(НаименованиеФормыНастроек, СтрДлина(НаименованиеФормыНастроек) - 20);
	
	Возврат Наименованиеобработки + "Форма.Форма";
	
КонецФункции // ()
&НаКлиенте
Процедура ИспользоватьПроектБазыПриИзменении(Элемент)
	Элементы.ПроектБазы.Доступность = ИспользоватьПроектБазы;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПроектов()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси =  Новый WSПрокси (Определение, "RemoteConnect", "RemoteConnect", "RemoteConnectSoap");
		Прокси.Пользователь = Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПроектовПользователя.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.СписокПроектовПользователя()));
		Если ТаблицаПроектовПользователя.Количество() = 1 Тогда
			Объект.Проект = ТаблицаПроектовПользователя[0].НаименованиеПроекта;
			ГУИДПроекта = ТаблицаПроектовПользователя[0].ГУИДПроекта;
		КонецЕсли; 
		СписокПроектов = Новый Массив;
		Для Каждого Строка Из ТаблицаПроектовПользователя Цикл 
			СписокПроектов.Добавить(Строка.НаименованиеПроекта);
		КонецЦикла;
		Элементы.ПроектБазы.СписокВыбора.ЗагрузитьЗначения(СписокПроектов);

	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//РГС Фёдорова 27.01.16  Изменена настройка возврата формы с контрагентами
	Если ИмяСобытия = "ПользователиВыбраны" Тогда
		СкопироватьНаСервере(Параметр.ПользователиПриемник);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки скопированы'; en = 'Settings copied'"));
		СкопироватьНастройкуНаСервере(ИндексСтроки,Параметр.ПользователиПриемник);	
	ИначеЕсли ИмяСобытия = "ПользователиДобавлены" Тогда
		ДобавитьНастройкуНаСервере(Параметр.ПользователиПриемник);
	КонецЕсли;
	//РГС Фёдорова 27.01.16 Конец изменений
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если НастройкиБылиСкопированы Тогда
		Объект.Пользователь = "";
		Объект.Пароль 		= "";
		НастройкиБылиСкопированы = Ложь;
	КонецЕсли;
КонецПроцедуры

// } RGS Лунякин Иван 26.10.2015 13:24:48   

//РГС Фёдорова 26.01.16 Добавлен функционал для работы с настройками
&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	// { RGS Козлов К.С. 02.02.2016 13:56:30
	УстановитьПривилегированныйРежим(Истина);
	Отбор = Новый Структура;
	Отбор.Вставить("КлючОбъекта",ПолучитьНаименованиеОсновнойФормы()+ "/НастройкиФормы");
	ВыборкаПоОтбору = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	Пока ВыборкаПоОтбору.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаПоОтбору.Пользователь) ИЛИ Не ЗначениеЗаполнено(ВыборкаПоОтбору.КлючНастроек) Тогда
			Продолжить;
		КонецЕсли;
		СтруктураОтбора = Новый Структура("Пользователь,Представление",ВыборкаПоОтбору.Пользователь,ВыборкаПоОтбору.КлючНастроек);
		Если НЕ Объект.СписокСуществующихНастроек.НайтиСтроки(СтруктураОтбора).Количество() Тогда 
			ХранилищеСистемныхНастроек.Удалить(ВыборкаПоОтбору.КлючОбъекта,ВыборкаПоОтбору.КлючНастроек,ВыборкаПоОтбору.Пользователь);
			ХранилищеНастроекДанныхФорм.Удалить(ВыборкаПоОтбору.КлючОбъекта, ВыборкаПоОтбору.КлючНастроек, ВыборкаПоОтбору.Пользователь);
		КонецЕсли;
	КонецЦикла;
	// } RGS Козлов К.С. 02.02.2016 13:56:30	
	
	МассивНастроекДляКопирования = ПолучитьМассивНастроек();
	
	ФормаАдресат = МассивНастроекДляКопирования[0];
	
	Обработка = РеквизитФормыВЗначение("Объект");
	// { RGS Козлов К.С. 02.02.2016 13:46:48
	//СтруктураДанных = Обработка.ПолучитьСтруктуруДанныхФорм(ПроектБазы, ПолучитьМассивСтруктурИзТЗ(),ПолучитьМассивСтруктурИзТЗОбъекта());
	// } RGS Козлов К.С. 02.02.2016 13:46:48
	Для Каждого Строка Из Объект.СписокСуществующихНастроек Цикл
		НастройкиФормы = ХранилищеСистемныхНастроек.Загрузить(ФормаАдресат + "/НастройкиФормы", Строка.Представление,, "");		
		ХранилищеСистемныхНастроек.Сохранить(ФормаАдресат + "/НастройкиФормы",Строка.Представление ,НастройкиФормы,, Строка.Пользователь);
		ХранилищеСистемныхНастроек.Сохранить(ФормаАдресат + "/НастройкиОкна",Строка.Представление ,НастройкиФормы,, Строка.Пользователь);
		ХранилищеНастроекДанныхФорм.Сохранить(ФормаАдресат, Строка.Представление,НастройкиФормы,,Строка.Пользователь);
		ХранилищеНастроекДанныхФорм.Сохранить(ФормаАдресат + "/НастройкиФормы", Строка.Представление,НастройкиФормы,,Строка.Пользователь);
		Строка.Настройки = ЗначениеВСтрокуВнутр(НастройкиФормы);
	КонецЦикла;
	
	ЗначениеВДанныеФормы(Обработка.СохраненныеНастройки,Объект.СохраненныеНастройки);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСНастройкамиКнопка()
	
	Если Элементы.Группа3.ТекущаяСтраница = Элементы.ГруппаРаботСНастройками Тогда 
		Элементы.Группа3.ТекущаяСтраница = Элементы.ГруппаОсновныеНастройки;
	Иначе
		Элементы.Группа3.ТекущаяСтраница = Элементы.ГруппаРаботСНастройками;
		ОбновлениеСпискаНастроек();
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервере
Процедура ОбновлениеСпискаНастроек()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура;
	Отбор.Вставить("КлючОбъекта",ПолучитьНаименованиеОсновнойФормы() + "/НастройкиФормы");
	ОбработкаОбъект.СписокСуществующихНастроек.Очистить();
	ВыборкаПоОтбору = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	
	Пока ВыборкаПоОтбору.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОтбору.КлючНастроек) Тогда
			// { RGS Козлов К.С. 02.02.2016 13:20:05
			//ХранилищеСистемныхНастроек.Удалить(ВыборкаПоОтбору.КлючОбъекта,ВыборкаПоОтбору.КлючНастроек,ВыборкаПоОтбору.Пользователь);
			// } RGS Козлов К.С. 02.02.2016 13:20:05
		Иначе
			Если ЗначениеЗаполнено(ВыборкаПоОтбору.Пользователь) Тогда
				НоваяСтрока = ОбработкаОбъект.СписокСуществующихНастроек.Добавить();
				НоваяСтрока.КлючОбъекта 	= ВыборкаПоОтбору.КлючОбъекта;
				НоваяСтрока.Пользователь 	= ВыборкаПоОтбору.Пользователь;
				НоваяСтрока.Настройки	 	= ЗначениеВСтрокуВнутр(ВыборкаПоОтбору.Настройки);
				НоваяСтрока.Представление	= ВыборкаПоОтбору.КлючНастроек;
			Иначе
				НоваяСтрока = НастройкиБазы.Добавить();
				НоваяСтрока.НаименованиеНастройки 	= ВыборкаПоОтбору.КлючНастроек;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НастройкиБазы.Загрузить(ФормированиеТаблицыНастроек(Отбор,Ложь));
	
	ЗначениеВДанныеФормы(ОбработкаОбъект.СписокСуществующихНастроек,Объект.СписокСуществующихНастроек);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура РаботаСНастройками(Команда)
	РаботаСНастройкамиКнопка();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройки(Команда)
	ПараметрыФормы = Новый Структура;
	// { RGS Козлов К.С. 02.02.2016 15:12:08
	//ПараметрыФормы.Вставить("НастройкиФормы",ЗагрузитьНастройкиНаСервере(ИндексСтроки,Ложь));
	ПараметрыФормы.Вставить("КлючНастройки",ИндексСтроки);
	// } RGS Козлов К.С. 02.02.2016 15:12:08
	ПараметрыФормы.Вставить("ПользовательНастроек",Объект.СписокСуществующихНастроек.Получить(ИндексСтроки).Пользователь);
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
	КонецПопытки;
	
	ЭтаФорма.ВладелецФормы.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкуНаСервере(СписокПользователей)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Для Каждого Строка Из СписокПользователей Цикл
		НоваяСтрока = ОбработкаОбъект.СписокСуществующихНастроек.Добавить();
		НоваяСтрока.Пользователь = Строка;
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ОбработкаОбъект.СписокСуществующихНастроек,Объект.СписокСуществующихНастроек);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНастройку(Команда)
	
	НоваяСтрока = НастройкиБазы.Добавить();
	НоваяСтрока.НаименованиеНастройки = "Настройки по умолчанию";
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьНастройкуНаСервере(ИндексСтроки, ПользователиПриемник)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	УстановитьПривилегированныйРежим(Истина);
	МассивНастроекДляКопирования = ПолучитьМассивНастроек();
	Если ИндексСтроки = Неопределено Тогда
		Для Каждого ПользовательПриемник Из ПользователиПриемник Цикл
			НастройкиФормы = ХранилищеСистемныхНастроек.Загрузить(ПолучитьНаименованиеОсновнойФормы() + "/НастройкиФормы",,,ПользователиИнформационнойБазы.ТекущийПользователь());
			ХранилищеСистемныхНастроек.Сохранить(ПолучитьНаименованиеОсновнойФормы()+"/НастройкиФормы","Настройка по умолчанию",НастройкиФормы,, ?(ЗначениеЗаполнено(ПользовательПриемник),ПользовательПриемник,""));
			ХранилищеНастроекДанныхФорм.Сохранить(ПолучитьНаименованиеОсновнойФормы(),"Настройка по умолчанию",НастройкиФормы,,?(ЗначениеЗаполнено(ПользовательПриемник),ПользовательПриемник,""));
		КонецЦикла;
		ОбработкаОбъект.СкопироватьНастройкиФорм(ПользователиПриемник, МассивНастроекДляКопирования,  ПроектБазы, ПолучитьМассивСтруктурИзТЗ(),ПолучитьМассивСтруктурИзТЗОбъекта());
		ОбновлениеСпискаНастроек();
	Иначе
		ТекущаяСтрока = ОбработкаОбъект.СписокСуществующихНастроек.Получить(ИндексСтроки);
		Для Каждого ПользовательПриемник Из ПользователиПриемник Цикл
			НоваяСтрока = ОбработкаОбъект.СписокСуществующихНастроек.Добавить();
			НоваяСтрока.КлючОбъекта 	= ТекущаяСтрока.КлючОбъекта;
			НоваяСтрока.Пользователь	= ПользовательПриемник;
			НоваяСтрока.Настройки 		= ТекущаяСтрока.Настройки;
			НоваяСтрока.Представление 	= ТекущаяСтрока.Представление;
		КонецЦикла;
	КонецЕсли;
	ЗначениеВДанныеФормы(ОбработкаОбъект.СписокСуществующихНастроек,Объект.СписокСуществующихНастроек);
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкуНаСервере(НомерСтроки,ОбщНастройка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Если ОбщНастройка Тогда
		Представление	= НомерСтроки;
		Пользователь 	= "";
	Иначе             	
		ТекущаяСтрока 	= ОбработкаОбъект.СписокСуществующихНастроек.Получить(НомерСтроки);
		Пользователь 	= ТекущаяСтрока.Пользователь;
		Представление 	= ТекущаяСтрока.Представление;
	КонецЕсли;
	
	Отбор = Новый Структура;
	АдресФормы = ПолучитьНаименованиеОсновнойФормы(); 
	Отбор.Вставить("КлючОбъекта",АдресФормы + "/НастройкиФормы");
	Отбор.Вставить("КлючНастроек",Представление);
	// { RGS Козлов К.С. 02.02.2016 16:59:17
	//Отбор.Вставить("Пользователь",Пользователь);
	Если Не ОбщНастройка Тогда
		Отбор.Вставить("Пользователь",Пользователь);
	КонецЕсли;
	// } RGS Козлов К.С. 02.02.2016 16:59:17
	
	Выборка = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	
	Пока Выборка.Следующий() Цикл
		НастройкиФормы = ХранилищеСистемныхНастроек.Загрузить(Выборка.КлючОбъекта,Выборка.КлючНастроек,,Выборка.Пользователь);
		ХранилищеСистемныхНастроек.Удалить(Выборка.КлючОбъекта, Выборка.КлючНастроек, Выборка.Пользователь);
		ХранилищеНастроекДанныхФорм.Удалить(Выборка.КлючОбъекта, Выборка.КлючНастроек, Выборка.Пользователь);
	КонецЦикла;
	
		
	Если ОбщНастройка Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("НаименованиеНастройки",НомерСтроки);
		МассивУдаления = НастройкиБазы.НайтиСтроки(Отбор);
		Для Каждого СтрокаУдаления Из МассивУдаления Цикл
			НастройкиБазы.Удалить(СтрокаУдаления);
		КонецЦикла;
		Отбор = Новый Структура;
		Отбор.Вставить("Представление",НомерСтроки);
		МассивУдаления = ОбработкаОбъект.СписокСуществующихНастроек.НайтиСтроки(Отбор);
		Для Каждого СтрокаУдаления Из МассивУдаления Цикл
			ИндексУдаления = ОбработкаОбъект.СписокСуществующихНастроек.Индекс(СтрокаУдаления);
			ОбработкаОбъект.СписокСуществующихНастроек.Удалить(ИндексУдаления);
		КонецЦикла;
		
		ЗначениеВДанныеФормы(ОбработкаОбъект.СписокСуществующихНастроек,Объект.СписокСуществующихНастроек);
	Иначе
		ОбработкаОбъект.СписокСуществующихНастроек.Удалить(НомерСтроки);
		ЗначениеВДанныеФормы(ОбработкаОбъект.СписокСуществующихНастроек,Объект.СписокСуществующихНастроек);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройку(Команда)
	УдалитьНастройкуНаСервере(ИндексСтроки,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПриАктивизацииСтроки(Элемент)
	ИндексСтроки = ?(Элемент.ТекущиеДанные = Неопределено ,Неопределено,Элемент.ТекущиеДанные.НомерСтроки - 1); 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	//МассивПользователей = Новый Массив;
	//Для Каждого Строка Из Объект.СписокСуществующихНастроек Цикл
	//	//Если Строка.ВыборПользователя Тогда
	//		МассивПользователей.Добавить(Строка.Пользователь);
	//	//КонецЕсли;
	//КонецЦикла;

	//СкопироватьНаСервере(МассивПользователей);
	
КонецПроцедуры

&НаСервере
Функция ФормированиеТаблицыНастроек(Отбор,Список)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыборкаПоОтбору = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	
	Если Список Тогда
		СписокНастроек = Новый Массив;
		ТаблицаНастроек = Новый ТаблицаЗначений;
		ТаблицаНастроек.Колонки.Добавить("НаименованиеНастройки",Новый ОписаниеТипов("Строка"));
	
		Пока ВыборкаПоОтбору.Следующий() Цикл
			// { RGS Козлов К.С. 02.02.2016 13:45:24
			//НоваяСтрока = ТаблицаНастроек.Добавить();
			//НоваяСтрока.НаименованиеНастройки = ВыборкаПоОтбору.КлючНастроек;
			Если ЗначениеЗаполнено(ВыборкаПоОтбору.КлючНастроек) Тогда
				НоваяСтрока = ТаблицаНастроек.Добавить();
				НоваяСтрока.НаименованиеНастройки = ВыборкаПоОтбору.КлючНастроек;
			КонецЕсли;
			// } RGS Козлов К.С. 02.02.2016 13:45:24
		КонецЦикла;
	
		ТаблицаНастроек.Свернуть("НаименованиеНастройки");
		Для Каждого Строка Из ТаблицаНастроек Цикл
			СписокНастроек.Добавить(Строка.НаименованиеНастройки);
		КонецЦикла;
		
		Возврат СписокНастроек;
	Иначе
		НастройкиБазы.Очистить();
	
		ТаблицаНастроек = Новый ТаблицаЗначений;
		ТаблицаНастроек.Колонки.Добавить("НаименованиеНастройки",Новый ОписаниеТипов("Строка"));
	
		Пока ВыборкаПоОтбору.Следующий() Цикл
			// { RGS Козлов К.С. 02.02.2016 13:45:24
			//НоваяСтрока = ТаблицаНастроек.Добавить();
			//НоваяСтрока.НаименованиеНастройки = ВыборкаПоОтбору.КлючНастроек;
			Если ЗначениеЗаполнено(ВыборкаПоОтбору.КлючНастроек) Тогда
				НоваяСтрока = ТаблицаНастроек.Добавить();
				НоваяСтрока.НаименованиеНастройки = ВыборкаПоОтбору.КлючНастроек;
			КонецЕсли;
			// } RGS Козлов К.С. 02.02.2016 13:45:24
		КонецЦикла;
	
		ТаблицаНастроек.Свернуть("НаименованиеНастройки");
	
		Возврат ТаблицаНастроек;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

&НаКлиенте
Процедура НастройкиБазыПриАктивизацииСтроки(Элемент)
		ИндексСтрокиОбщ = ?(Элемент.ТекущиеДанные = Неопределено ,Неопределено,Элемент.ТекущиеДанные.НаименованиеНастройки); 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиОбщ(Команда)
	ПараметрыФормы = Новый Структура;
	// { RGS Козлов К.С. 02.02.2016 15:12:08
	ПараметрыФормы.Вставить("КлючНастройки",ИндексСтрокиОбщ);
	// } RGS Козлов К.С. 02.02.2016 15:12:08
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.Форма", ПараметрыФормы,,Новый УникальныйИдентификатор);
	КонецПопытки;
	ЭтаФорма.ВладелецФормы.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокНастроекПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Отбор = Новый Структура;
	
	Отбор.Вставить("КлючОбъекта",ПолучитьНаименованиеОсновнойФормы() + "/НастройкиФормы");
	// { RGS Козлов К.С. 02.02.2016 16:57:58
	Отбор.Вставить("Пользователь","");
	// } RGS Козлов К.С. 02.02.2016 16:57:58
	СтандартнаяОбработка = Ложь;
	Элемент.СписокВыбора.ЗагрузитьЗначения(ФормированиеТаблицыНастроек(Отбор,Истина)); 
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОбщНастройку(Команда)
	 УдалитьНастройкуНаСервере(ИндексСтрокиОбщ,Истина);
КонецПроцедуры

&НаСервере
Процедура СохранитьОбщНастройкуНаСервере(НомерСтроки)
	АдресФормы = ПолучитьНаименованиеОсновнойФормы();
	МассивНастроекДляКопирования = ПолучитьМассивНастроек();
	
	ПользователиПриемник = Новый Массив;
	ПользователиПриемник.Добавить("");
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.СкопироватьНастройкиФорм(ПользователиПриемник, МассивНастроекДляКопирования, ПроектБазы, ПолучитьМассивСтруктурИзТЗ(),ПолучитьМассивСтруктурИзТЗОбъекта(),НомерСтроки)
	

	//ХранилищеСистемныхНастроек.Сохранить(АдресФормы,ТекСтрока.НаименованиеНастройки);
	//ХранилищеНастроекДанныхФорм.Сохранить(АдресФормы,ТекСтрока.НаименованиеНастройки);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОбщНастройку(Команда)
	СохранитьОбщНастройкуНаСервере(ИндексСтрокиОбщ);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПользователей(Команда)
	
	СписокПользователей = ПолучитьСиписокПользователей();
	
	Если СписокПользователей.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Невозможно скопировать настройки, так как в системе не заведен ни один пользователь.'; en = 'You can not copy the settings , since the system is not on any user.'"));
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокПользователей.НайтиПоЗначению(Объект.Пользователь);
	Если ЭлементСписка <> Неопределено Тогда
		СписокПользователей.Удалить(ЭлементСписка);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Администратор", Администратор);
	СтруктураПараметров.Вставить("СписокПользователей", СписокПользователей);
	СтруктураПараметров.Вставить("РежимОткрытия", "Добавление");
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаВыбораПользователей", СтруктураПараметров, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаВыбораПользователей", СтруктураПараметров, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиБазыНаименованиеНастройкиПриИзменении(Элемент)
	 ИндексСтрокиОбщ = ?(Элемент.ТекстРедактирования = Неопределено ,Неопределено,Элемент.ТекстРедактирования);
КонецПроцедуры

//РГС Фёдорова 26.01.16 Конец добавления
