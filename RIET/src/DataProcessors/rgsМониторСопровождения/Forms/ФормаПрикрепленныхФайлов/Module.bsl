
 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Пользователь = Параметры.Пользователь;
	Объект.Пароль		= Параметры.Пароль;
	Объект.АдресБазы 	= Параметры.АдресБазы;
   	ГУИДВопроса			= Параметры.ГУИДВопроса;
	
	// { RGS Лунякин Иван 27.10.2015 12:51:08 
	Администратор 		= Параметры.Администратор;
	Элементы.ФормаИзменитьФорму.Видимость = Администратор;
	// } RGS Лунякин Иван 27.10.2015 12:51:08
	
	// { RGS Лунякин Иван 03.11.2015 16:29:30 
	ПолучитьНастройкиФормы();
	// } RGS Лунякин Иван 03.11.2015 16:29:30
	
	ОбновитьТаблицуФайлов();
КонецПроцедуры

// { RGS Лунякин Иван 03.11.2015 16:26:16

&НаСервере
Процедура ПолучитьНастройкиФормы()

	СтруктураНастроекФормы = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "НастройкаФорм");
	Если СтруктураНастроекФормы <> Неопределено Тогда
	   ХранилищеСистемныхНастроек.Сохранить(ЭтаФорма.ИмяФормы + "/НастройкиФормы",,СтруктураНастроекФормы);
	КонецЕсли;
	СтруктураНастроекОкна = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "НастройкаОкна");
	Если СтруктураНастроекФормы <> Неопределено Тогда
	   ХранилищеСистемныхНастроек.Сохранить(ЭтаФорма.ИмяФормы + "/НастройкиОкна",,СтруктураНастроекОкна);
	КонецЕсли;

КонецПроцедуры

// } RGS Лунякин Иван 03.11.2015 16:26:16

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено  Тогда
		Возврат;
	КонецЕсли; 
	Состояние(НСтр("ru = 'Загрузка файла с сервера..'; en = 'Download the file from the server..'"));
	АдресВоВременномХранилище = ПолучитьДанныеФайлаССервера(ТекСтрока.ГУИДФайла);
	Состояние(НСтр("ru = 'Загрузка файла завершена'; en = 'File Download completed'"));
	Результат = ПолучитьФайл(АдресВоВременномХранилище,ТекСтрока.Наименование + "."+ТекСтрока.Расширение,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьИзФайлаНаДиске(Команда)

	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Активизируйте строку с файлом'; en = 'Activate the line with the file'");
		Структура = Новый Структура;
		Структура.Вставить("ТекстПредупреждения",ТекстПредупреждения);
		// { RGS Лунякин Иван 27.10.2015 12:51:08 
		Структура.Вставить("Администратор", Администратор);
		// } RGS Лунякин Иван 27.10.2015 12:51:08
		Попытка
			ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		Исключение
			ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецПопытки; 
		Возврат;
	КонецЕсли;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		ТекстПредупреждения = НСтр("ru = 'В настоящий момент данный файл редактируется пользователем'; en = 'At the moment, this file is edited by the user'") + Символы.ПС + ТекСтрока.Редактирует +
						НСтр("ru = ' и не может быть изменен'; en = ' and can not be changed'");
		Структура = Новый Структура;
		Структура.Вставить("ТекстПредупреждения",ТекстПредупреждения);
		// { RGS Лунякин Иван 27.10.2015 12:51:08 
		Структура.Вставить("Администратор", Администратор);
		// } RGS Лунякин Иван 27.10.2015 12:51:08
		Попытка
			ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		Исключение
			ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецПопытки; 
		Возврат;
	КонецЕсли; 
		
	Структура = Новый Структура;
	Структура.Вставить("ТекстВопроса", НСтр("ru = 'Заменить присоединенный файл?'; en = 'Replace the attached file ?'"));
	Структура.Вставить("РежимВопроса","ДаНет");
	Структура.Вставить("ГУИДФайла", ТекСтрока.ГУИДФайла);
	Структура.Вставить("ИмяСобытия","ЗаменитьПрисоединенныйФайл_ФормаПрикрепленныхФайлов");
	// { RGS Лунякин Иван 27.10.2015 12:51:08 
	Структура.Вставить("Администратор", Администратор);
	// } RGS Лунякин Иван 27.10.2015 12:51:08
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаВопроса", Структура, ЭтаФорма, , ВариантоткрытияОкна.ОтдельноеОкно);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаВопроса", Структура, ЭтаФорма, , ВариантоткрытияОкна.ОтдельноеОкно);
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элемент.ТекущиеДанные;
	Если СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"ТаблицаПрисоединенныеФайлы","")="Описание" Тогда
		Возврат;
	КонецЕсли; 
	Состояние(НСтр("ru = 'Загрузка файла с сервера..'; en = 'Download the file from the server..'"));
	АдресВоВременномХранилище = ПолучитьДанныеФайлаССервера(ТекСтрока.ГУИДФайла);
	Состояние(НСтр("ru = 'Загрузка файла завершена'; en = 'File Download completed'"));
	Если АдресВоВременномХранилище = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Результат = ПолучитьФайл(АдресВоВременномХранилище,ТекСтрока.Наименование + "."+ТекСтрока.Расширение,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	//Отказ = Истина;
	//АдресВременногоХранилищаФайла = "";
	//ИмяФайла = "";
	
	// { RGS Глебов Дмитрий 20.09.2016  - ОРР-0003215
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтаФорма);
	НачатьПомещениеФайла(ОписаниеОповещения,,,Истина,УникальныйИдентификатор);	
	// } RGS Глебов Дмитрий 20.09.2016  - ОРР-0003215
	//Результат = ПоместитьФайл(АдресВременногоХранилищаФайла,ИмяФайла,ИмяФайла,Истина,УникальныйИдентификатор);
	//Если НЕ Результат Тогда
	//    Возврат;
	//КонецЕсли; 
	//Состояние(НСтр("ru = 'Загрузка файла на сервер..'; en = 'Download the file to the server..'"));
	//
	//// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	//ОписаниеФайла = ПолучитьОписаниеФайла(ИмяФайла);
	//// } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
	//
	//// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	////Если ПоместитьФайлыВПрисоединенные(ИмяФайла, АдресВременногоХранилищаФайла) Тогда
	//Если ПоместитьФайлыВПрисоединенные(ОписаниеФайла, АдресВременногоХранилищаФайла) Тогда
	//    // } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
	//    ПоказатьОповещениеПользователя(НСтр("ru = 'Файл успешно добавлен в базу ""Монитора сопровождения 3.0""'; en = 'File successfully added to the database ""Monitor of support 3.0""'"));
	//    ОбновитьТаблицуФайлов();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат,АдресВременногоХранилищаФайла,ИмяФайла,ДополнительныеПараметры)  Экспорт
	Если Результат = Ложь  Тогда
	 	Возврат;
	КонецЕсли;
	Состояние(НСтр("ru = 'Загрузка файла на сервер..'; en = 'Download the file to the server..'"));
	
	// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	ОписаниеФайла = ПолучитьОписаниеФайла(ИмяФайла);
	// } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
	
	// { RGS VChaplygin 28.05.2012 13:10:56 - Поправлена работа с файлом на сервере
	//Если ПоместитьФайлыВПрисоединенные(ИмяФайла, АдресВременногоХранилищаФайла) Тогда
	Если ПоместитьФайлыВПрисоединенные(ОписаниеФайла, АдресВременногоХранилищаФайла) Тогда
	    // } RGS VChaplygin 28.05.2012 13:11:16 - Поправлена работа с файлом на сервере
	    ПоказатьОповещениеПользователя(НСтр("ru = 'Файл успешно добавлен в базу ""Монитора сопровождения 3.0""'; en = 'File successfully added to the database ""Monitor of support 3.0""'"));
	    ОбновитьТаблицуФайлов();
	КонецЕсли;
	

КонецПроцедуры


&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Активизируйте строку с файлом'; en = 'Activate the line with the file'");
		Структура = Новый Структура;
		Структура.Вставить("ТекстПредупреждения",ТекстПредупреждения);
		// { RGS Лунякин Иван 27.10.2015 12:51:08 
		Структура.Вставить("Администратор", Администратор);
		// } RGS Лунякин Иван 27.10.2015 12:51:08
		Попытка
			ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		Исключение
			ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецПопытки; 
		Возврат;
	КонецЕсли;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		ТекстПредупреждения = НСтр("ru = 'В настоящий момент данный файл редактируется пользователем '; en = 'At the moment, this file is edited by the user '") + Символы.ПС + ТекСтрока.Редактирует +
						НСтр("ru = ' и не может быть помечен на удаление.'; en = ' and can not be marked for deletion.'");
		Структура = Новый Структура;
		Структура.Вставить("ТекстПредупреждения",ТекстПредупреждения);
		// { RGS Лунякин Иван 27.10.2015 12:51:08 
		Структура.Вставить("Администратор", Администратор);
		// } RGS Лунякин Иван 27.10.2015 12:51:08
		Попытка
			ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		Исключение
			ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецПопытки; 
		Возврат;
	КонецЕсли; 
	
	Если ТекСтрока.ПометкаУдаленияФайла Тогда
		ТекстВопроса = "Снять пометку удаления с """ + ТекСтрока.Наименование + """?";
	Иначе
		ТекстВопроса = "Установить пометку удаления на """ + ТекСтрока.Наименование + """?";
	КонецЕсли;
	Структура = Новый Структура;
	Структура.Вставить("ТекстВопроса", ТекстВопроса);
	Структура.Вставить("РежимВопроса","ДаНет");
	Структура.Вставить("ГУИДФайла", ТекСтрока.ГУИДФайла);
	Структура.Вставить("ПометкаУдаления", Не ТекСтрока.ПометкаУдаленияФайла);
	Структура.Вставить("ИмяСобытия","ПометкаУдаленияНаФайл_ФормаПрикрепленныхФайлов");
	// { RGS Лунякин Иван 27.10.2015 12:51:08 
	Структура.Вставить("Администратор", Администратор);
	// } RGS Лунякин Иван 27.10.2015 12:51:08
	
	Попытка
		ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаВопроса", Структура, ЭтаФорма, , ВариантоткрытияОкна.ОтдельноеОкно);
	Исключение
		ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаВопроса", Структура, ЭтаФорма, , ВариантоткрытияОкна.ОтдельноеОкно);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаленияСервер(ГУИДФайла, ПометкаУдаления)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль 		= Объект.Пароль; 
		Прокси.УстановитьПометкуУдаленияФайла(ГУИДФайла, ПометкаУдаления);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуФайлов()
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ТаблицаПрисоединенныеФайлы.Загрузить(ЗначениеИзСтрокиВнутр(Прокси.ПолучитьТаблицуПрисоединенныхФайлов(ГУИДВопроса)));
		//Элементы.ТолькоДляСотрудниковТП.Видимость = Прокси.ПолучитьВидимостьТП(ГУИДВопроса);
		ГУИДПроекта = Прокси.ПолучитьГУИДПроекта(ГУИДВопроса);
		ВидимостьРедактирует = Ложь;
		Для Каждого СтрокаТЗ Из ТаблицаПрисоединенныеФайлы Цикл
			Если СтрокаТЗ.Редактирует <> "" Тогда
				ВидимостьРедактирует = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		Элементы.ТаблицаПрисоединенныеФайлыРедактирует.Видимость = ВидимостьРедактирует;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеФайлаССервера(ГУИДФайла)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		ПолученныйФайл = ЗначениеИзСтрокиВнутр(Прокси.ПолучитьПрисоединенныйФайл(ГУИДФайла));
		Возврат ПоместитьВоВременноеХранилище(ПолученныйФайл);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки; 
 
КонецФункции

&НаСервере
Процедура ОбновитьФайлНаСервере(ГУИДФайла, ИмяФайла, АдресВременногоХранилищаФайла)
	
	Файл = Новый Файл(ИмяФайла);
	Размер = Файл.Размер();
    Расширение = Файл.Расширение;
    ИмяФайлаБезРасширения = Файл.ИмяБезРасширения;
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
    Попытка
        Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
        Прокси = ПолучитьПрокси(Определение);
        Прокси.Пользователь =  Объект.Пользователь;
        Прокси.Пароль = Объект.Пароль; 
        Результат = Прокси.ЗаменитьФайлВПрисоединенных(ГУИДФайла, ИмяФайлаБезРасширения, Размер, Расширение, ДвоичныеДанные);
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки; 
    
    Если Результат <> "true" Тогда
        Сообщить(Результат);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеФайла(ИмяФайла)
	
	Структура = Новый Структура("Расширение, ИмяФайлаБезРасширения");
	
	СтрокиПути = РазложитьСтрокуПоТочкамИСлэшам(ИмяФайла);
	
	Если СтрокиПути.Количество() >= 2 Тогда
		Структура.Расширение = СтрокиПути[СтрокиПути.Количество()-1];
		Структура.ИмяФайлаБезРасширения = СтрокиПути[СтрокиПути.Количество()-2];
	Иначе
		ВызватьИсключение
			ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при помещении файла в хранилище: %1'; en = 'Error when you place a file in the repository: %1'"),ИмяФайла);
	КонецЕсли;
    	
	Возврат Структура;
	
КонецФункции

&НаСервере
Функция ПоместитьФайлыВПрисоединенные(ОписаниеФайла, АдресВременногоХранилищаФайла)

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.ПоместитьФайлВПрисоединенные(ГУИДВопроса, ОписаниеФайла.ИмяФайлаБезРасширения, ДвоичныеДанные.Размер(), ОписаниеФайла.Расширение, ДвоичныеДанные);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Если Результат <> "true" Тогда
		Если Найти(Результат, НСтр("ru = 'Файл с таким именем уже присутствует списке присоединенных файлов'; en = 'File with the same name already present the list of attached files'"))<>0 Тогда
			Сообщить(НСтр("ru = 'Файл с таким именем уже присутствует списке присоединенных файлов!'; en = 'File with the same name already present list of attachments!'"));
		Иначе 
			Сообщить(Результат);
		КонецЕсли; 
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
// Функция раскладывает строку в массив строк, используя "./\" как разделитель
//
Функция РазложитьСтрокуПоТочкамИСлэшам(Знач Представление) Экспорт
	
	Перем ТекущаяПозиция;
	
	Фрагменты = Новый Массив;
	
	НачальнаяПозиция = 1;
	
	Для ТекущаяПозиция = 1 По СтрДлина(Представление) Цикл
		ТекущийСимвол = Сред(Представление, ТекущаяПозиция, 1);
		Если ТекущийСимвол = "." Или ТекущийСимвол = "/" Или ТекущийСимвол = "\" Тогда
			ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
			НачальнаяПозиция = ТекущаяПозиция + 1;
			Фрагменты.Добавить(ТекущийФрагмент);
		КонецЕсли;
	КонецЦикла;
	
	Если НачальнаяПозиция <> ТекущаяПозиция Тогда
		ТекущийФрагмент = Сред(Представление, НачальнаяПозиция, ТекущаяПозиция - НачальнаяПозиция);
		Фрагменты.Добавить(ТекущийФрагмент);
	КонецЕсли;
	
	Возврат Фрагменты;
	
КонецФункции

&НаКлиенте
// Подставляет параметры в строку. Максимально возможное число параметров - 9.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров
// начинается с единицы.
//
// Параметры
//  СтрокаПодстановки  – Строка – шаблон строки с параметрами (вхождениями вида "%ИмяПараметра").
// Параметр<n>         - Строка - параметр
// Возвращаемое значение:
//   Строка   – текстовая строка с подставленными параметрами
//
// Пример:
// Строка = ПодставитьПараметрыВСтроку(НСтр("ru='%1 пошел в %2'"), "Вася", "Зоопарк");
//
Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки,
	Знач Параметр1,	Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	Если СтрокаПодстановки = Неопределено ИЛИ СтрДлина(СтрокаПодстановки) = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	НачПозиция = 1;
	Позиция = 1;
	Пока Позиция <= СтрДлина(СтрокаПодстановки) Цикл
		СимволСтроки = Сред(СтрокаПодстановки, Позиция, 1);
		Если СимволСтроки <> "%" Тогда
			Позиция = Позиция + 1;
			Продолжить;
		КонецЕсли;
		Результат = Результат + Сред(СтрокаПодстановки, НачПозиция, Позиция - НачПозиция);
		Позиция = Позиция + 1;
		СимволСтроки = Сред(СтрокаПодстановки, Позиция, 1);
		
		Если СимволСтроки = "%" Тогда
			Позиция = Позиция + 1;
			НачПозиция = Позиция;
			Продолжить;
		КонецЕсли;
		
		Попытка
			НомерПараметра = Число(СимволСтроки);
		Исключение
			ВызватьИсключение НСтр("ru='Входная строка СтрокаПодстановки имеет неверный формат: %'; en = 'StrokaPodstanovki input string is malformed: %'" + СимволСтроки);
		КонецПопытки;
		
		Если СимволСтроки = "1" Тогда
			ЗначениеПараметра = Параметр1;
		ИначеЕсли СимволСтроки = "2" Тогда
			ЗначениеПараметра = Параметр2;
		ИначеЕсли СимволСтроки = "3" Тогда
			ЗначениеПараметра = Параметр3;
		ИначеЕсли СимволСтроки = "4" Тогда
			ЗначениеПараметра = Параметр4;
		ИначеЕсли СимволСтроки = "5" Тогда
			ЗначениеПараметра = Параметр5;
		ИначеЕсли СимволСтроки = "6" Тогда
			ЗначениеПараметра = Параметр6;
		ИначеЕсли СимволСтроки = "7" Тогда
			ЗначениеПараметра = Параметр7;
		ИначеЕсли СимволСтроки = "8" Тогда
			ЗначениеПараметра = Параметр8;
		ИначеЕсли СимволСтроки = "9" Тогда
			ЗначениеПараметра = Параметр9;
		Иначе
			ВызватьИсключение НСтр("ru='Входная строка СтрокаПодстановки имеет неверный формат: %'; en = 'StrokaPodstanovki input string has an invalid format: %'" + ЗначениеПараметра);
		КонецЕсли;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = "";
		Иначе
			ЗначениеПараметра = Строка(ЗначениеПараметра);
		КонецЕсли;
		Результат = Результат + ЗначениеПараметра;
		Позиция = Позиция + 1;
		НачПозиция = Позиция;
	
	КонецЦикла;
	
	Если (НачПозиция <= СтрДлина(СтрокаПодстановки)) Тогда
		Результат = Результат + Сред(СтрокаПодстановки, НачПозиция, СтрДлина(СтрокаПодстановки) - НачПозиция + 1);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаПрисоединенныеФайлыОписаниеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаПрисоединенныеФайлы.ТекущиеДанные;
	Если ТекСтрока.ФайлРедактируется И Не ТекСтрока.ФайлРедактируетТекущийПользователь Тогда
		ТекстПредупреждения = НСтр("ru = 'В настоящий момент данный файл редактируется пользователем '; en = 'At the moment, this file is edited by the user'") + Символы.ПС + ТекСтрока.Редактирует +
						НСтр("ru = 'и не может быть изменен '; en = ' and can not be modified'");
		Структура = Новый Структура;
		Структура.Вставить("ТекстПредупреждения",ТекстПредупреждения);
		// { RGS Лунякин Иван 27.10.2015 12:51:08 
		Структура.Вставить("Администратор", Администратор);
		// } RGS Лунякин Иван 27.10.2015 12:51:08
		Попытка
			ОткрытьФорму("ВнешняяОбработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		Исключение
			ОткрытьФорму("Обработка.rgsМониторСопровождения.Форма.ФормаПредупреждения", Структура, ЭтаФорма, ,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецПопытки; 
		Возврат;
		Возврат;
	КонецЕсли;
	
	УстановитьОписаниеФайла(ТекСтрока.ГУИДФайла, Текст);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОписаниеФайла(ГУИДФайла, ТекстОписания)
	
	Попытка
		Определение = Новый WSОпределения(Объект.АдресБазы+"/ws/MonitorExt.1cws?wsdl", Объект.Пользователь, Объект.Пароль);
		Прокси = ПолучитьПрокси(Определение);
		Прокси.Пользователь =  Объект.Пользователь;
		Прокси.Пароль = Объект.Пароль; 
		Результат = Прокси.УстановитьТекстОписанияФайла(ГУИДФайла, ТекстОписания);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
  	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПрокси(Определение) Экспорт
	
	Возврат Новый WSПрокси (Определение, "RemoteConnect", "RemoteConnect", "RemoteConnectSoap");
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаменитьПрисоединенныйФайл_ФормаПрикрепленныхФайлов" Тогда	
		АдресВременногоХранилищаФайла = "";
		ИмяФайла = "";
		Результат = ПоместитьФайл(АдресВременногоХранилищаФайла, ИмяФайла, ИмяФайла, Истина, УникальныйИдентификатор);
		Если НЕ Результат Тогда
			Возврат;
		КонецЕсли; 
		ОбновитьФайлНаСервере(Параметр.ГУИДФайла, ИмяФайла, АдресВременногоХранилищаФайла);
		ОбновитьТаблицуФайлов();
	ИначеЕсли ИмяСобытия = "ПометкаУдаленияНаФайл_ФормаПрикрепленныхФайлов" Тогда
		УстановитьПометкуУдаленияСервер(Параметр.ГУИДФайла, Не Параметр.ПометкаУдаленияФайла);
		ОбновитьТаблицуФайлов();

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры


