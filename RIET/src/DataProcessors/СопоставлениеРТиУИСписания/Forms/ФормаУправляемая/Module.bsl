&НаКлиенте
Процедура ВыбратьПериод(Команда)	
		
	П = Новый СтандартныйПериод;
	П.ДатаНачала 		= ?(ЗначениеЗаполнено(Объект.НачалоПериода), Объект.НачалоПериода, НачалоГода(ТекущаяДата()));
	П.ДатаОкончания 	= ?(ЗначениеЗаполнено(Объект.КонецПериода), Объект.КонецПериода, КонецГода(ТекущаяДата()));
	П.Вариант 			= ВариантСтандартногоПериода.ЭтотГод;
	
	ДиалогВыбора = Новый ДиалогРедактированияСтандартногоПериода;
	ДиалогВыбора.Период = П; 
	
	Если ДиалогВыбора.Редактировать() Тогда
		
		П = ДиалогВыбора.Период;
		
		Объект.НачалоПериода 	= П.ДатаНачала;
		Объект.КонецПериода 	= П.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода,КонецПериода");

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокРеализаций()
	 Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Документ
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	|		ПО РеализацияТоваровУслугТовары.Ссылка = InventoryСписаниеGoods.Реализация
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеализацияТоваровУслугТовары.Номенклатура.Catalog = ЗНАЧЕНИЕ(Справочник.Catalog.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка.Дата";
	
	Запрос.УстановитьПараметр("КонецПериода", ?(ЗначениеЗаполнено(Объект.КонецПериода), КонецДня(Объект.КонецПериода), ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	
	Объект.НепривязанныеРеализации.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры


&НаКлиенте
Процедура Обновить(Команда)
	Объект.НепривязанныеРеализации.Очистить();
	ЗаполнитьСписокРеализаций();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧ(Документ)
	Объект.Реализации.Очистить();
	Объект.Списания.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	РеализацияТоваровУслугТовары.НомерСтроки,
	|	РеализацияТоваровУслугТовары.Количество,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Цена,
	|	РеализацияТоваровУслугТовары.Сумма,
	|	РеализацияТоваровУслугТовары.СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС,
	|	РеализацияТоваровУслугТовары.НомерГТД,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.Ticket,
	|	РеализацияТоваровУслугТовары.Well,
	|	РеализацияТоваровУслугТовары.Oilfield,
	|	РеализацияТоваровУслугТовары.ProductLine,
	|	РеализацияТоваровУслугТовары.КостЦентр,
	|	РеализацияТоваровУслугТовары.TicketNumber,
	|	РеализацияТоваровУслугТовары.WO,
	|	РеализацияТоваровУслугТовары.СуммаБезНДСРуб,
	|	РеализацияТоваровУслугТовары.СуммаНДСРуб,
	|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Документ
	|	И ВЫБОР
	|			КОГДА &ЗаполнятьВсе
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РеализацияТоваровУслугТовары.Номенклатура.Catalog = ЗНАЧЕНИЕ(Справочник.Catalog.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ЗаполнятьВсе", Объект.ОтображатьЗаполненныеСтроки);
	
	Объект.Реализации.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	InventoryСписаниеGoods.Ссылка,
	|	InventoryСписаниеGoods.НомерСтроки,
	|	InventoryСписаниеGoods.Good,
	|	InventoryСписаниеGoods.UOM,
	|	InventoryСписаниеGoods.Quantity,
	|	InventoryСписаниеGoods.FinishedGood,
	|	InventoryСписаниеGoods.FinishedGoodPONumber,
	|	InventoryСписаниеGoods.ManagementPrice,
	|	InventoryСписаниеGoods.ManagementSum,
	|	InventoryСписаниеGoods.AU,
	|	InventoryСписаниеGoods.Batch,
	|	InventoryСписаниеGoods.Реализация,
	|	InventoryСписаниеGoods.ОСLawson,
	|	InventoryСписаниеGoods.TicketId
	|ИЗ
	|	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	|ГДЕ
	|	InventoryСписаниеGoods.Реализация = &Документ";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	Объект.Списания.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаКлиенте
Процедура НепривязанныеРеализацииПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьТЧ(Элемент.ТекущиеДанные.Документ)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПривязатьНаСервере(НомерСтрокаСписания, НомерСтрокаРеализации)
	СтрокаСписания = Объект.Списания[НомерСтрокаСписания-1];
	СтрокаРеализации = Объект.Реализации[НомерСтрокаРеализации-1];
	Номенклатура = СтрокаРеализации.Номенклатура.ПолучитьОбъект();
	Номенклатура.Catalog = СтрокаСписания.Good.Catalog;
	Попытка
		Номенклатура.Записать();
		Если НЕ Объект.ОтображатьЗаполненныеСтроки Тогда
			Объект.Реализации.Удалить(СтрокаРеализации);
		КонецЕсли;	
	Исключение
		Сообщить("Не удалось записать номенклатуру " + Номенклатура);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Привязать(Команда) 
	СтрокаСписания = Элементы.Списания.ТекущиеДанные.НомерСтроки;
	СтрокаРеализации = Элементы.Реализации.ТекущиеДанные.НомерСтроки;
	ПривязатьНаСервере(СтрокаСписания, СтрокаРеализации);
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьЗаполненныеСтрокиПриИзменении(Элемент)
	ЗаполнитьТЧ(Элементы.НепривязанныеРеализации.ТекущиеДанные.Документ);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьСписокРеализаций();
КонецПроцедуры

&НаКлиенте
Процедура НепривязанныеРеализацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ТекущиеДанные.Документ);
КонецПроцедуры

&НаКлиенте
Процедура СписанияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры



