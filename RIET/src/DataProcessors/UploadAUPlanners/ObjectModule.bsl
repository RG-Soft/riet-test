
Процедура ЗагрузитьТаблицу() Экспорт
	
	ТЗПоляТаблицы = Новый ТаблицаЗначений;
	ТЗПоляТаблицы.Колонки.Добавить("ИмяПоля");
	ТЗПоляТаблицы.Колонки.Добавить("ПолеПоиска");
	ТЗПоляТаблицы.Колонки.Добавить("НомерКолонки");
	НоваяСтрока = ТЗПоляТаблицы.Добавить();
	НоваяСтрока.ИмяПоля = "Accounting_Unit";
	НоваяСтрока.ПолеПоиска = "Accounting Unit";
	КоличествоСтрок = 0;
	
	ТаблицаДанных = ЗагрузитьВСтруктуруНаСервере(ВоВременномХранилище,ТЗПоляТаблицы, КоличествоСтрок);
	
	Если ТаблицаДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоПланеров = 1;
	Пока Истина Цикл		
		Если ТаблицаДанных.Колонки.Найти("planner_"+Формат(КоличествоПланеров,"ЧГ=0")) = Неопределено Тогда
			КоличествоПланеров = КоличествоПланеров - 1;
			Прервать;
		КонецЕсли;	
		КоличествоПланеров = КоличествоПланеров + 1;
	КонецЦикла;
	
	Если КоличествоПланеров<>0 Тогда
		НаборЗаписейAU_Planners = РегистрыСведений.AU_Planners.СоздатьНаборЗаписей();
		ТЗНаборЗаписейAU_Planners = НаборЗаписейAU_Planners.Выгрузить();
		РегистрыСведений.AU_Planners.СоздатьНаборЗаписей().Записать();	
		Для Каждого Элемент Из ТаблицаДанных Цикл
			AUСтрока = Элемент.Accounting_Unit;
		    AU = Справочники.КостЦентры.НайтиПоКоду(AUСтрока);
			Если ЗначениеЗаполнено(AU) Тогда
				Для НомерПланера = 1 По КоличествоПланеров Цикл
					КолонкаИмя = "planner_"+Формат(НомерПланера,"чг=0");
					PlannerСтрока = Элемент[КолонкаИмя];
					Planner = Справочники.Пользователи.НайтиПоНаименованию(PlannerСтрока);		
					Если ЗначениеЗаполнено(PlannerСтрока) И ЗначениеЗаполнено(Planner)  Тогда
						МенеджерЗаписи = ТЗНаборЗаписейAU_Planners.Добавить();
						МенеджерЗаписи.AU = AU;
						МенеджерЗаписи.Planner = Planner;						
					ИначеЕсли ЗначениеЗаполнено(PlannerСтрока) Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден planner " + PlannerСтрока);
					КонецЕсли;
				КонецЦикла;
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден Accounting Unit " + AUСтрока);
			КонецЕсли;
			
		КонецЦикла;
		ТЗНаборЗаписейAU_Planners.Свернуть("AU,Planner");
		НаборЗаписейAU_Planners.Загрузить(ТЗНаборЗаписейAU_Planners);
		НаборЗаписейAU_Planners.Записать(Истина);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Загружено " + КоличествоСтрок + " строк, (" + Формат(КоличествоПланеров, "ЧГ=0") + ?(КоличествоПланеров>1," planners)"," planner)"));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдено ни одной колонки Planner_");
	КонецЕсли;
КонецПроцедуры


Процедура ЗагрузитьТаблицуВ2() Экспорт
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ВоВременномХранилище);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение		
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, "Не удалось загрузить таблицу!");
		Возврат;
	КонецПопытки;	
	РегистрыСведений.AU_Planners.СоздатьНаборЗаписей().Записать();
	КолСтр = ТабДок.ВысотаТаблицы;
	Для НомерСтроки = 2 по КолСтр Цикл		
			AUСтрока = Строка(ТабДок.Область(НомерСтроки,1,НомерСтроки,1).Текст); //F2
		    AU = Справочники.КостЦентры.НайтиПоКоду(AUСтрока);
			Planner1 = Справочники.Пользователи.НайтиПоНаименованию(Строка(ТабДок.Область(НомерСтроки,2,НомерСтроки,2).Текст)); //F2
			Planner2 = Справочники.Пользователи.НайтиПоНаименованию(Строка(ТабДок.Область(НомерСтроки,3,НомерСтроки,3).Текст)); //F3
			Если ЗначениеЗаполнено(AU) Тогда
				Если ЗначениеЗаполнено(Planner1)  Тогда
					МенеджерЗаписи = РегистрыСведений.AU_Planners.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.AU = AU;
					МенеджерЗаписи.Planner = Planner1;
					МенеджерЗаписи.Записать();
				КонецЕсли;
				Если ЗначениеЗаполнено(Planner2)  Тогда
					МенеджерЗаписи = РегистрыСведений.AU_Planners.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.AU = AU;
					МенеджерЗаписи.Planner = Planner2;
					МенеджерЗаписи.Записать();
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
КонецПроцедуры



/////////////////////////// ////////////////////////////////////

&НаСервере
Функция ЗагрузитьВСтруктуруНаСервере(АдресФайла, ТЗПоляТаблицы, КоличествоСтрок)
	
	ПолноеИмяXLSФайла = ПолучитьИмяВременногоФайла(".xlsx");
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(ПолноеИмяXLSФайла);
	
	ТекстОшибок = "";
	
	ТаблицаExcel = ПолучитьТаблицуExcel(ТекстОшибок, ПолноеИмяXLSФайла, ТЗПоляТаблицы, КоличествоСтрок);
	
	УдалитьФайлы(ПолноеИмяXLSФайла);
	
	Если ПустаяСтрока(ТекстОшибок) Тогда
		Возврат ТаблицаExcel;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("" + ТекстОшибок);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуExcel(ТекстОшибок, ПолноеИмяФайла, ТЗПоляТаблицы, НомерСтроки)
	
	Connection = Новый COMОбъект("ADODB.Connection");
	СтрокаПодключения = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 12.0;HDR=No;IMEX=1""";	
	
	Попытка 
		Connection.Open(СтрокаПодключения);	
	Исключение
		Попытка
			СтрокаПодключения = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + ПолноеИмяФайла + ";Extended Properties=""Excel 8.0;HDR=No;IMEX=1""";
			Connection.Open(СтрокаПодключения);
		Исключение
			ТекстОшибок = ТекстОшибок + ОписаниеОшибки();
		КонецПопытки;
	КонецПопытки;
	
	rs = Новый COMObject("ADODB.RecordSet");
	rs.ActiveConnection = Connection;
	rs = Connection.OpenSchema(20);
	
	МассивЛистов = Новый Массив;
	Лист = Неопределено;
	
	Пока rs.EOF() = 0 Цикл
		
		Если ЗначениеЗаполнено(Лист) И СтрНайти(rs.Fields("TABLE_NAME").Value, Лист) > 0 Тогда
			rs.MoveNext();
			Продолжить;
		КонецЕсли;
		
		Лист = rs.Fields("TABLE_NAME").Value;
		МассивЛистов.Добавить(Лист);
		
		rs.MoveNext();
		
	КонецЦикла;  
	
	ТаблицаExcel = Новый ТаблицаЗначений();
	ТаблицаExcel.Колонки.Добавить("НомерСтрокиФайла", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)),"НомерСтрокиФайла");
	
	Для Каждого ЛистЭксель из МассивЛистов Цикл 
		
		sqlString = "select * from [" + ЛистЭксель + "]";
		rs.Close();
		rs.Open(sqlString);
		
		rs.MoveFirst();
				
		НомерСтроки = 0;
		Пока rs.EOF = 0 Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			Если НомерСтроки = 1 Тогда 
				
				ПолучитьСтруктуруИменИНомеровКолонок(rs, ТЗПоляТаблицы, ТаблицаExcel, ТекстОшибок);
				
				Если Не ПустаяСтрока(ТекстОшибок) Тогда 
					Прервать;
				КонецЕсли;
				
				rs.MoveNext();
				Продолжить;
				
			КонецЕсли;
			
			СвойстваСтруктуры = "";
			Для Каждого ПолеКолонки Из ТЗПоляТаблицы Цикл
				СвойстваСтруктуры = ?(ЗначениеЗаполнено(СвойстваСтруктуры),СвойстваСтруктуры+",","")+ПолеКолонки.ИмяПоля;
			КонецЦикла;
			
			СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
			
			//добавляем значение каждой ячейки файла в структуру значений
			Для Каждого ПолеКолонки из ТЗПоляТаблицы Цикл 
				
				ЗначениеЯчейки = rs.Fields(ПолеКолонки.НомерКолонки-1).Value;
				СтруктураЗначенийСтроки[ПолеКолонки.ИмяПоля] = СокрЛП(ЗначениеЯчейки);
				
			КонецЦикла;
			
			//добавляем новую структуру и пытаемся заполнить	
			Попытка
				
				НоваяСтрокаТаблицы = ТаблицаExcel.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, СтруктураЗначенийСтроки, СвойстваСтруктуры);
				
				НоваяСтрокаТаблицы.НомерСтрокиФайла = НомерСтроки;
				
			Исключение
				ТекстОшибок = ТекстОшибок + "
				|не удалось прочитать данные в строке №" + НомерСтроки + "'!";
			КонецПопытки;
			
			rs.MoveNext();
			
		КонецЦикла;
		
		//Прервать;
		
	КонецЦикла;
	
	rs.Close();
	Connection.Close();
	
	Возврат ТаблицаExcel;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруИменИНомеровКолонок(rs, ТЗПоляТаблицы, ТаблицаExcel, ТекстОшибок)
	
	НомерКолонки = 1;
	Для Каждого Field из rs.Fields Цикл 
		
		ТекстЯчейки = СокрЛП(Field.Value);
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли;
		
		Найден = Ложь;
		Для Каждого ПолеКолонки Из ТЗПоляТаблицы Цикл
		
			Если Найти(ТекстЯчейки, ПолеКолонки.ПолеПоиска) Тогда
				ПолеКолонки.НомерКолонки = НомерКолонки;
				Найден = Истина;
				Прервать;			
			КонецЕсли;
			
		КонецЦикла;
		Если Не Найден Тогда
			Если Найти(Нрег(ТекстЯчейки), "planner_") Тогда
				НоваяСтрока = ТЗПоляТаблицы.Добавить();
				НоваяСтрока.ИмяПоля = ТекстЯчейки;
				НоваяСтрока.ПолеПоиска = ТекстЯчейки;
				НоваяСтрока.НомерКолонки = НомерКолонки;
			КонецЕсли;
		КонецЕсли;
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Для Каждого ПолеКолонки Из ТЗПоляТаблицы Цикл
		
		Если ПолеКолонки.НомерКолонки = Неопределено Тогда
			ТекстОшибок = ТекстОшибок + "
			|необходимо проверить наличие колонки с данными '" + СтрЗаменить(ПолеКолонки.ИмяПоля, "_", " ") + "'!";
		Иначе
			Если ТаблицаExcel.Колонки.Найти(ПолеКолонки.ИмяПоля) = Неопределено Тогда
				ТаблицаExcel.Колонки.Добавить(ПолеКолонки.ИмяПоля, , ПолеКолонки.ИмяПоля);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

КонецФункции
