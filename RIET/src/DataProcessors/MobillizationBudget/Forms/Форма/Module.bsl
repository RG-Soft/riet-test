
&НаКлиенте
Процедура УвеличитьПериод(Команда)
	
	ИзменитьПериод(КонецМесяца(ПериодОбработки) + 1);
	
КонецПроцедуры

&НаСервере
Процедура ИсполнениеБюджетаНаСервере()
	
	Если ЗначениеЗаполнено(Project) ИЛИ ЗначениеЗаполнено(AU) ИЛИ ЗначениеЗаполнено(ServiceProvider) ИЛИ ЗначениеЗаполнено(TypeOfTransport) Тогда
		ФормированиеДиаграмм();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо указать 'AU', 'Project', 'Service provider' либо 'Type of transport'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнениеБюджета(Команда)
	
	ИсполнениеБюджетаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ФормированиеДиаграмм()
	
	НачДата = НачалоМесяца(ПериодОбработки);
	КонДата = КонецМесяца(ПериодОбработки);
	Период = 604800;
	ЦелыхПериодов = Цел((КонДата - НачДата+1)/Период);
	
	ДанныеДляЗаполнения = ПолучитьДанныеДляФормирования(НачДата, КонДата, Истина, 0);
	Диаграмма = ДиаграммаМесяц;
	Максимальное = Неопределено;
	Неделя = 0;
	
	Если ДанныеДляЗаполнения.Количество() > 0 Тогда
		Если Variant = "Sum" Тогда
			Если ДанныеДляЗаполнения[0].План >= ДанныеДляЗаполнения[0].Факт Тогда
				Максимальное = ДанныеДляЗаполнения[0].План;
			Иначе
				Максимальное = ДанныеДляЗаполнения[0].Факт;
			КонецЕсли;
		ИначеЕсли Variant = "Tn/km" Тогда
			Если ДанныеДляЗаполнения[0].TnKmПлан >= ДанныеДляЗаполнения[0].TnKmФакт Тогда
				Максимальное = ДанныеДляЗаполнения[0].TnKmПлан;
			Иначе
				Максимальное = ДанныеДляЗаполнения[0].TnKmФакт;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДиаграммуДанными(Диаграмма, ДанныеДляЗаполнения, Максимальное);
	
	Для Ном = 0 По ЦелыхПериодов Цикл
		НачальныйПериод = НачДата + Ном * Период;
		КонечныйПериод = НачДата + Ном * Период + Период-1;
		
		Если Ном <> ЦелыхПериодов Тогда
			ДанныеДляЗаполнения = ПолучитьДанныеДляФормирования(НачДата, КонечныйПериод, Ложь, Ном + 1);
			Если Ном = 0 Тогда 
				Диаграмма = ДиаграммаНеделя1;
			ИначеЕсли Ном = 1 Тогда
				Диаграмма = ДиаграммаНеделя2;
			ИначеЕсли Ном = 2 Тогда
				Диаграмма = ДиаграммаНеделя3;
			ИначеЕсли Ном = 3 Тогда
				Диаграмма = ДиаграммаНеделя4;
			КонецЕсли;
			ЗаполнитьДиаграммуДанными(Диаграмма, ДанныеДляЗаполнения, Максимальное);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьДиаграммуДанными(Диаграмма, ДанныеДляЗаполнения, Максимальное)
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();
	Диаграмма.АвтоТранспонирование = Ложь;
	Диаграмма.ВидПодписей = ВидПодписейКДиаграмме.Значение;
	Если ЗначениеЗаполнено(Максимальное) Тогда
		Диаграмма.ОсьЗначений.СпособОпределенияМаксимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение;
		Диаграмма.ОсьЗначений.СпособОпределенияМинимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение;
		Диаграмма.ОсьЗначений.МаксимальноеЗначение = Максимальное + Максимальное * 0.1;
		Диаграмма.ОсьЗначений.МинимальноеЗначение = 0;
	КонецЕсли;
	
	Для Каждого Колонка из ДанныеДляЗаполнения.Колонки Цикл
		Если ДанныеДляЗаполнения.Колонки.Индекс(Колонка) <> 0 Тогда
			Диаграмма.Серии.Добавить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ТочкаНазвание = "" + ?(ЗначениеЗаполнено(Project), "" + Project + " ", "") + ?(ЗначениеЗаполнено(AU), "" +AU + " ", "") + ?(ЗначениеЗаполнено(ServiceProvider), "" +ServiceProvider + " ", "");
	
	Для Каждого СтрТраб из ДанныеДляЗаполнения Цикл
		Точка=Диаграмма.Точки.Добавить(ТочкаНазвание);
		Индекс=0;
		Для Каждого Серия из Диаграмма.Серии Цикл
			Индекс=Индекс+1;
			Диаграмма.УстановитьЗначение(Точка,Серия,СтрТраб.Получить(Индекс));
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура УменьшитьПериод(Команда)
	
	ИзменитьПериод(НачалоМесяца(ПериодОбработки - 1));

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПериод(НовыйПериод)

	ПериодОбработки = НовыйПериод;
	ПредставлениеПериода = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"), 
		НачалоМесяца(ПериодОбработки),
		КонецМесяца(ПериодОбработки));
	
КонецПроцедуры 

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", 
		ПериодОбработки, КонецМесяца(ПериодОбработки));
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, Элементы.ПредставлениеПериода);

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИзменитьПериод(ВыбранноеЗначение.НачалоПериода);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодОбработки		 = НачалоМесяца(ТекущаяДата());
	ПредставлениеПериода = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(Перечисления.ДоступныеПериодыОтчета.Месяц, НачалоМесяца(ПериодОбработки), КонецМесяца(ПериодОбработки));
	MobillizationType = Перечисления.SummerWinter.WinterMobilization;
	Currency = CustomsСерверПовтИсп.ПолучитьВалютуПоНаименованию("RUB");
	
	СП_Variant = Элементы.Variant.СписокВыбора;
	СП_Variant.Добавить("Sum", "Sum");
	СП_Variant.Добавить("Tn/km", "Tn/km");
	//СП_Variant.Добавить("Avg Tn/km", "Avg Tn/km");
	
	Variant = СП_Variant[0].Значение;
	AccessorialСosts = Ложь;
	
КонецПроцедуры

Функция ПолучитьДанныеДляФормирования(ДатаНач, ДатаКон, ЗаполнитьРасшифровку, Неделя)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	TripNonLawsonCompaniesParcels.Ссылка КАК Trip,
		|	TripNonLawsonCompaniesStops_Source.ActualArrivalLocalTime КАК Период,
		|	TripNonLawsonCompaniesParcels.Parcel.TransportRequest.ProjectMobilization КАК Project,
		|	TripNonLawsonCompaniesParcels.Ссылка.Equipment КАК TypeOfTransport,
		|	TripNonLawsonCompaniesParcels.Parcel.TransportRequest.CostCenter КАК CostCenter,
		|	TripNonLawsonCompaniesParcels.Ссылка.ServiceProvider КАК ServiceProvider,
		|	TripNonLawsonCompaniesParcels.Ссылка.NavigationType КАК NavigationType,
		|	ParcelsДетали.Ссылка КАК Parcel,
		|	ParcelsДетали.СтрокаИнвойса КАК Item
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	Справочник.Parcels.Детали КАК ParcelsДетали
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.TripNonLawsonCompanies.Parcels КАК TripNonLawsonCompaniesParcels
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.TripNonLawsonCompanies.Stops КАК TripNonLawsonCompaniesStops_Source
		|			ПО TripNonLawsonCompaniesParcels.Ссылка = TripNonLawsonCompaniesStops_Source.Ссылка
		|				И TripNonLawsonCompaniesParcels.Parcel.TransportRequest.PickUpWarehouse = TripNonLawsonCompaniesStops_Source.Location
		|				И (TripNonLawsonCompaniesStops_Source.Type <> ЗНАЧЕНИЕ(Перечисление.StopsTypes.Destination))
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.TripNonLawsonCompanies.Stops КАК TripNonLawsonCompaniesStops_Dest
		|			ПО TripNonLawsonCompaniesParcels.Ссылка = TripNonLawsonCompaniesStops_Dest.Ссылка
		|				И TripNonLawsonCompaniesParcels.Parcel.TransportRequest.DeliverTo = TripNonLawsonCompaniesStops_Dest.Location
		|				И (TripNonLawsonCompaniesStops_Dest.Type <> ЗНАЧЕНИЕ(Перечисление.StopsTypes.Source))
		|		ПО ParcelsДетали.Ссылка = TripNonLawsonCompaniesParcels.Parcel
		|			И (TripNonLawsonCompaniesParcels.Ссылка.Проведен)
		|ГДЕ
		|	ParcelsДетали.Ссылка.TransportRequest <> ЗНАЧЕНИЕ(Документ.TransportRequest.ПустаяСсылка)
		|	И TripNonLawsonCompaniesStops_Source.ActualArrivalLocalTime МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ ParcelsДетали.Ссылка.ПометкаУдаления
		|	И TripNonLawsonCompaniesParcels.Ссылка.NavigationType = &NavigationType
		|	И TripNonLawsonCompaniesParcels.Parcel.TransportRequest.ProjectMobilization = &Project
		|	//ДопОтбор1
		|
		|СГРУППИРОВАТЬ ПО
		|	TripNonLawsonCompaniesParcels.Ссылка,
		|	TripNonLawsonCompaniesParcels.Ссылка.Equipment,
		|	TripNonLawsonCompaniesParcels.Parcel.TransportRequest.CostCenter,
		|	TripNonLawsonCompaniesParcels.Ссылка.ServiceProvider,
		|	TripNonLawsonCompaniesStops_Source.ActualArrivalLocalTime,
		|	TripNonLawsonCompaniesParcels.Parcel.TransportRequest.ProjectMobilization,
		|	TripNonLawsonCompaniesParcels.Ссылка.NavigationType,
		|	ParcelsДетали.Ссылка,
		|	ParcelsДетали.СтрокаИнвойса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Данные.Период КАК Период,
		|	Данные.TypeOfTransport КАК TypeOfTransport,
		|	Данные.NavigationType КАК MobillizationType,
		|	Данные.Project КАК Project,
		|	Данные.Trip КАК Trip,
		|	Данные.CostCenter КАК CostCenter,
		|	Данные.ServiceProvider КАК ServiceProvider,
		|	Данные.Trip.Currency КАК Currency,
		|	//Costs
		|	NULL КАК План,
		|	СУММА(LocalDistributionCostsMilageWeightVolumeОбороты.TonneKilometersОборот) КАК TnKmФакт,
		|	NULL КАК TnKmПлан,
		|	СУММА(0) КАК AvgTnKmФакт,
		|	NULL КАК AvgTnKmПлан
		|ИЗ
		|	Данные КАК Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.LocalDistributionCostsPerItem.Обороты(
		|				,
		|				,
		|				Регистратор,
		|				(Item, Parcel, Trip) В
		|					(ВЫБРАТЬ
		|						ВТссылки.Item,
		|						ВТссылки.Parcel,
		|						ВТссылки.Trip
		|					ИЗ
		|						Данные КАК ВТссылки)) КАК LocalDistributionCostsPerItemОбороты
		|		ПО Данные.Trip = LocalDistributionCostsPerItemОбороты.Trip
		|			И Данные.Parcel = LocalDistributionCostsPerItemОбороты.Parcel
		|			И Данные.Item = LocalDistributionCostsPerItemОбороты.Item
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.LocalDistributionCostsMilageWeightVolume.Обороты(, , Регистратор, ) КАК LocalDistributionCostsMilageWeightVolumeОбороты
		|		ПО Данные.Trip = LocalDistributionCostsMilageWeightVolumeОбороты.Регистратор
		|			И Данные.CostCenter.Segment = LocalDistributionCostsMilageWeightVolumeОбороты.Segment
		|			И Данные.CostCenter.SubSegment = LocalDistributionCostsMilageWeightVolumeОбороты.SubSegment
		|			И Данные.CostCenter.Geomarket = LocalDistributionCostsMilageWeightVolumeОбороты.Geomarket
		|
		|СГРУППИРОВАТЬ ПО
		|	Данные.Trip,
		|	Данные.Период,
		|	Данные.Project,
		|	Данные.TypeOfTransport,
		|	Данные.CostCenter,
		|	Данные.ServiceProvider,
		|	Данные.NavigationType,
		|	Данные.Trip.Currency
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	MobillizationBudget.Период,
		|	MobillizationBudget.TypeOfTransport,
		|	MobillizationBudget.MobillizationType,
		|	MobillizationBudget.Project,
		|	NULL,
		|	MobillizationBudget.AU,
		|	MobillizationBudget.ServiceProvider,
		|	&Currency,
		|	NULL,
		|	СУММА(MobillizationBudget.Sum),
		|	NULL,
		|	СУММА(MobillizationBudget.TnKm),
		|	NULL,
		|	СУММА(MobillizationBudget.AvgTnKm)
		|ИЗ
		|	РегистрСведений.MobillizationBudget КАК MobillizationBudget
		|ГДЕ
		|	MobillizationBudget.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И MobillizationBudget.MobillizationType = &NavigationType
		|	И MobillizationBudget.Project = &Project
		|	//ДопОтбор2
		|
		|СГРУППИРОВАТЬ ПО
		|	MobillizationBudget.Период,
		|	MobillizationBudget.MobillizationType,
		|	MobillizationBudget.Project,
		|	MobillizationBudget.TypeOfTransport,
		|	MobillizationBudget.AU,
		|	MobillizationBudget.ServiceProvider";
	
	Запрос.УстановитьПараметр("NavigationType", MobillizationType);
	Запрос.УстановитьПараметр("КонецПериода", ДатаКон);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНач);
	Запрос.УстановитьПараметр("Currency", CustomsСерверПовтИсп.ПолучитьВалютуПоНаименованию("RUB"));
	ДопОтбор1 = "";
	ДопОтбор2 = "";
	Если Variant = "Sum" и AccessorialСosts Тогда
		Costs = " СУММА(LocalDistributionCostsPerItemОбороты.TotalCostsSumОборот) КАК Факт, ";
	Иначе
		Costs = " СУММА(LocalDistributionCostsPerItemОбороты.BaseCostsSumОборот) КАК Факт, ";
	КонецЕсли;

	
	Если ЗначениеЗаполнено(Project) Тогда
		
		ДопОтбор1 = ДопОтбор1 + " И TripNonLawsonCompaniesParcels.Parcel.TransportRequest.ProjectMobilization = &Project";
		ДопОтбор2 = ДопОтбор2 + " И MobillizationBudget.Project = &Project";
		
		Запрос.УстановитьПараметр("Project", Project);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(AU) Тогда
		
		ДопОтбор1 = ДопОтбор1 + " И TripNonLawsonCompaniesParcels.Parcel.TransportRequest.CostCenter = &AU";
		ДопОтбор2 = ДопОтбор2 + " И MobillizationBudget.AU = &AU";
		
		Запрос.УстановитьПараметр("AU", AU);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ServiceProvider) Тогда
		
		ДопОтбор1 = ДопОтбор1 + " И TripNonLawsonCompaniesParcels.Ссылка.ServiceProvider = &ServiceProvider";
		ДопОтбор2 = ДопОтбор2 + " И MobillizationBudget.Project = &ServiceProvider";
		
		Запрос.УстановитьПараметр("ServiceProvider", ServiceProvider);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(TypeOfTransport) Тогда
		
		ДопОтбор1 = ДопОтбор1 + " И TripNonLawsonCompaniesParcels.Ссылка.Equipment = &TypeOfTransport";
		ДопОтбор2 = ДопОтбор2 + " И MobillizationBudget.TypeOfTransport = &TypeOfTransport";
		
		Запрос.УстановитьПараметр("TypeOfTransport", TypeOfTransport);
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДопОтбор1", ДопОтбор1);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДопОтбор2", ДопОтбор2);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Costs", Costs);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	CurrencyФорма = Currency;
	Если Не ЗначениеЗаполнено(CurrencyФорма) Тогда
		CurrencyФорма = CustomsСерверПовтИсп.ПолучитьВалютуПоНаименованию("RUB");
	КонецЕсли;
	
	Для Каждого Строка Из РезультатЗапроса Цикл
		
		Если СуммыВТыс Тогда
			Если ЗначениеЗаполнено(Строка.Факт) Тогда
				Строка.Факт = Строка.Факт / 1000;
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.План) Тогда
				Строка.План = Строка.План / 1000;
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.TnKmПлан) Тогда
				Строка.TnKmПлан = Строка.TnKmПлан / 1000;
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.TnKmФакт) Тогда
				Строка.TnKmФакт = Строка.TnKmФакт / 1000;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Currency) И Строка.Currency = CurrencyФорма Тогда
			Продолжить
		ИначеЕсли ЗначениеЗаполнено(Строка.Currency) И Строка.Currency <> CurrencyФорма Тогда
			
			Если ЗначениеЗаполнено(Строка.Trip) Тогда
				ДатаТрип = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.Trip, "Дата");
			Иначе
				ДатаТрип = Строка.Период;
			КонецЕсли;
			
			СтруктураCurrency = ОбщегоНазначения.ПолучитьКурсВалюты(Строка.Currency, ДатаТрип);
			СтруктураCurrencyФорма = ОбщегоНазначения.ПолучитьКурсВалюты(CurrencyФорма, ДатаТрип);
			Если ЗначениеЗаполнено(Строка.Факт) Тогда
				Строка.Факт = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Строка.Факт, Строка.Currency, CurrencyФорма, СтруктураCurrency.Курс, СтруктураCurrencyФорма.Курс, СтруктураCurrency.Кратность, СтруктураCurrencyФорма.Кратность);
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.План) Тогда
				Строка.План = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(Строка.План, Строка.Currency, CurrencyФорма, СтруктураCurrency.Курс, СтруктураCurrencyФорма.Курс, СтруктураCurrency.Кратность, СтруктураCurrencyФорма.Кратность);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаполнитьРасшифровку Тогда
		ТаблицаРасшифровки.Очистить();
		ТаблицаРасшифровки.Загрузить(РезультатЗапроса);
		Если Variant = "Sum" Тогда
			РезультатЗапроса.Свернуть("Currency","Факт, План");
		ИначеЕсли Variant = "Tn/km" Тогда
			//Трипы = РезультатЗапроса.Скопировать();
			//Трипы.Свернуть("Trip");
			//КолВоСтрок = Трипы.Количество() - 1;
			//Если КолВоСтрок<> 0 Тогда
			//	РезультатЗапроса.Свернуть("Currency","TnKmФакт, TnKmПлан, AvgTnKmФакт, AvgTnKmПлан");
			//	Для Каждого СтрокаЗапроса Из РезультатЗапроса Цикл
			//		СтрокаЗапроса.AvgTnKmФакт = СтрокаЗапроса.TnKmФакт / КолВоСтрок;
			//	КонецЦикла;
			//Иначе
				//РезультатЗапроса.Свернуть("Currency","TnKmФакт, TnKmПлан, AvgTnKmФакт, AvgTnKmПлан");
				РезультатЗапроса.Свернуть("Currency","TnKmФакт, TnKmПлан");
			//КонецЕсли;
		КонецЕсли;
	Иначе
		Если Неделя = 1 Тогда
			ТаблицаРасшифровки1Неделя.Очистить();
			ТаблицаРасшифровки1Неделя.Загрузить(РезультатЗапроса);
		ИначеЕсли Неделя = 2 Тогда
			ТаблицаРасшифровки2Неделя.Очистить();
			ТаблицаРасшифровки2Неделя.Загрузить(РезультатЗапроса);
		ИначеЕсли Неделя = 3 Тогда
			ТаблицаРасшифровки3Неделя.Очистить();
			ТаблицаРасшифровки3Неделя.Загрузить(РезультатЗапроса);
		ИначеЕсли Неделя = 4 Тогда
			ТаблицаРасшифровки4Неделя.Очистить();
			ТаблицаРасшифровки4Неделя.Загрузить(РезультатЗапроса);
		КонецЕсли;
		Если Variant = "Sum" Тогда
			РезультатЗапроса.Свернуть("Currency", "Факт");
		ИначеЕсли Variant = "Tn/km" Тогда
			//Трипы = РезультатЗапроса.Скопировать();
			//Трипы.Свернуть("Trip");
			//КолВоСтрок = Трипы.Количество() - 1;
			//Если КолВоСтрок<> 0 Тогда
			//	РезультатЗапроса.Свернуть("Currency","TnKmФакт, AvgTnKmФакт");
			//	Для Каждого СтрокаЗапроса Из РезультатЗапроса Цикл
			//		СтрокаЗапроса.AvgTnKmФакт = СтрокаЗапроса.TnKmФакт / КолВоСтрок;
			//	КонецЦикла;
			//Иначе
				//РезультатЗапроса.Свернуть("Currency","TnKmФакт, AvgTnKmФакт");
				РезультатЗапроса.Свернуть("Currency","TnKmФакт");
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат РезультатЗапроса;
	
КонецФункции

Процедура ПоказатьРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт

КонецПроцедуры


&НаКлиенте
Процедура ДиаграммаНеделя1Выбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ДанныеРасшифровки", ТаблицаРасшифровки1Неделя);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьРасшифровкуЗавершение", ЭтотОбъект, ДопПараметры); 
	ОткрытьФорму("ОбщаяФорма.BudgetMobillizationDetails", ДопПараметры , , , , , Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура ДиаграммаНеделя3Выбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ДанныеРасшифровки", ТаблицаРасшифровки3Неделя);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьРасшифровкуЗавершение", ЭтотОбъект, ДопПараметры); 
	ОткрытьФорму("ОбщаяФорма.BudgetMobillizationDetails", ДопПараметры , , , , , Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура ДиаграммаНеделя4Выбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ДанныеРасшифровки", ТаблицаРасшифровки4Неделя);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьРасшифровкуЗавершение", ЭтотОбъект, ДопПараметры); 
	ОткрытьФорму("ОбщаяФорма.BudgetMobillizationDetails", ДопПараметры , , , , , Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура ДиаграммаНеделя2Выбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ДанныеРасшифровки", ТаблицаРасшифровки2Неделя);
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьРасшифровкуЗавершение", ЭтотОбъект, ДопПараметры); 
	ОткрытьФорму("ОбщаяФорма.BudgetMobillizationDetails", ДопПараметры , , , , , Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура VariantПриИзменении(Элемент)
	
	Элементы.AccessorialСosts.Видимость = Variant = "Sum";
	Элементы.Currency.Видимость = Variant = "Sum";
	//Элементы.СуммыВТыс.Видимость = Variant = "Sum";
	AccessorialСosts = Ложь;
	//СуммыВТыс = Ложь;
	
КонецПроцедуры

