
//////////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыбратьФайл();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ВЫБОР ФАЙЛА

&НаКлиенте
Процедура FullPathНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						= "Files xls (*.xls)|*.xls|Files xlsx (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		FullPath = ДиалогВыбораФайла.ПолноеИмяФайла;
				
	КонецЕсли;
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// ЗАГРУЗКА

&НаКлиенте
Процедура Load(Команда)
	
	Если НЕ ЗначениеЗаполнено(FullPath) Тогда
		
		ВыбратьФайл();
		
		Если НЕ ЗначениеЗаполнено(FullPath) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Need to select file!",
				, "Объект", "FullPath");
				Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(FullPath) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	ЗаполнитьТаблицуLegalEntitiesИзФайлаXLS(Отказ, FullPath);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Состояние("Creating / updating TMS legal entities...");
	СоздатьИЗаполнитьLegalEntities(Отказ);
	
	Если Отказ Тогда
		Предупреждение("No legal entity was loaded due to errors.
			|See them on the right pane.", 60);
	Иначе
		Предупреждение("Legal entities were successfully loaded.", 60);	
	КонецЕсли;
	
КонецПроцедуры
                      
&НаКлиенте
Процедура ЗаполнитьТаблицуLegalEntitiesИзФайлаXLS(Отказ, ПолноеИмяXLSФайла)
	
	Excel = Неопределено;
	Workbooks = Неопределено;
	Worksheet = Неопределено;
	
	Состояние("Opening Excel...");
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить("Failed to open Excel!
			|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
		Отказ = Истина;
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		
		Состояние("Opening file with Excel...");
		Workbooks = Excel.Workbooks;
		Попытка
			Workbook = Workbooks.Open(ПолноеИмяXLSФайла, , Истина);
		Исключение
			Excel.Quit();
			Сообщить("Failed to open file with Excel!
				|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Состояние("Opening Excel sheet...");
		Попытка
			WorkSheet = Workbook.Worksheets(1);
		Исключение
			Сообщить("Failed to open First sheet!
				|" + ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
		
	Попытка
		ЗаполнитьТаблицуLegalEntitiesИзWorksheet(Отказ, Worksheet);
	Исключение
		Сообщить("Failed to read file:
			|" + ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
	
	Состояние("Closing file...");
	Если Workbook <> Неопределено Тогда
		
		Попытка
			Workbook.Close(False);
		Исключение
			Сообщить("Failed to close Excel Workbook!
				|" + ОписаниеОшибки());
		КонецПопытки;
			
	КонецЕсли;
	
	Если Workbooks <> Неопределено Тогда
		
		Попытка
			Workbooks.Close();
		Исключение
			Сообщить("Failed to close Excel Workbooks!
				|" + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Если Excel <> Неопределено Тогда
		
		Состояние("Closing Excel...");
		Попытка
			Excel.Quit();
		Исключение
			Сообщить("Failed to close Excel!
				|" + ОписаниеОшибки());
		КонецПопытки;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуLegalEntitiesИзWorksheet(Отказ, Worksheet) 
	
	СвойстваСтруктуры = "ERP_ID, COUNTRY_CODE, COMPANY_CODE, FINANCELOCCODE, FINANCEPROCESS, COMPANY_NAME, SOLD_TO_ADDRESS";
	
	Состояние("Analyzing file...");
    СтруктураИменИНомеровКолонок = ПолучитьСтруктуруИменИНомеровКолонок(WorkSheet, СвойстваСтруктуры);
	Если СтруктураИменИНомеровКолонок = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаLegalEntities.Очистить();

	Состояние("Reading file...");
	
	//перебираем все заполненные строки файла 
	СтруктураЗначенийСтроки = Новый Структура(СвойстваСтруктуры);
	КоличествоЯчеек = СтруктураЗначенийСтроки.Количество();
	НомерСтроки = 2;
	Пока Истина Цикл
		
		//добавляем значение каждой ячейки файла в структуру значений
		Для Каждого ЭлементСтруктуры из СтруктураИменИНомеровКолонок Цикл 
			
			ЗначениеЯчейки = СокрЛП(WorkSheet.Cells(НомерСтроки, ЭлементСтруктуры.Значение).Text);
			СтруктураЗначенийСтроки[ЭлементСтруктуры.Ключ] = ЗначениеЯчейки;
			
		КонецЦикла;
		
		//проверяем, если все ячейки пустые - считаем, что последняя строка
		КолВоНезаполненныхЭлементовСтруктуры = ВернутьКолВоНезаполненныхЭлементовСтруктуры(СтруктураЗначенийСтроки);
		Если КоличествоЯчеек = КолВоНезаполненныхЭлементовСтруктуры Тогда 
			Прервать;
		КонецЕсли;
		
		//добавляем строку Таблицы и пытаемся заполнить	
			
		НоваяСтрокаТаблицы = ТаблицаLegalEntities.Добавить();
		Для Каждого ЭлементСтруктурыЗначений из СтруктураЗначенийСтроки Цикл 
			НоваяСтрокаТаблицы[ЭлементСтруктурыЗначений.Ключ] = ЭлементСтруктурыЗначений.Значение;	
		КонецЦикла;
		НоваяСтрокаТаблицы.НомерСтрокиФайла = НомерСтроки;
				
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;  
			
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруИменИНомеровКолонок(WorkSheet, СвойстваСтруктуры)
	
	СтруктураКолонокИИндексов = Новый Структура(СвойстваСтруктуры);
	                                                    
	НомерКолонки = 1;
	Пока Истина Цикл
		
		ТекстЯчейки = СокрЛП(WorkSheet.Cells(1, НомерКолонки).Text);
		Если НЕ ЗначениеЗаполнено(ТекстЯчейки) Тогда
			Прервать;
		КонецЕсли; 
		
		Если ТекстЯчейки = "ERP_ID" Тогда
			СтруктураКолонокИИндексов.ERP_ID = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "COUNTRY_CODE" Тогда
			СтруктураКолонокИИндексов.COUNTRY_CODE = НомерКолонки;
	   	ИначеЕсли ТекстЯчейки = "COMPANY_CODE" Тогда
			СтруктураКолонокИИндексов.COMPANY_CODE = НомерКолонки;
	   	ИначеЕсли ТекстЯчейки = "FINANCELOCCODE" Тогда
			СтруктураКолонокИИндексов.FINANCELOCCODE = НомерКолонки;
	   	ИначеЕсли ТекстЯчейки = "FINANCEPROCESS" Тогда
			СтруктураКолонокИИндексов.FINANCEPROCESS = НомерКолонки;
	   	ИначеЕсли ТекстЯчейки = "COMPANY_NAME" Тогда
			СтруктураКолонокИИндексов.COMPANY_NAME = НомерКолонки;
		ИначеЕсли ТекстЯчейки = "SOLD_TO_ADDRESS" Тогда
			СтруктураКолонокИИндексов.SOLD_TO_ADDRESS = НомерКолонки;
	   	КонецЕсли; 
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла; 
	
	Отказ = Ложь;
	Для Каждого КлючИЗначение Из СтруктураКолонокИИндексов Цикл
		
		Если НЕ ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			Сообщить("Failed to find column " + КлючИЗначение.Ключ + "!");
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат Неопределено;
	Иначе
		Возврат СтруктураКолонокИИндексов;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВернутьКолВоНезаполненныхЭлементовСтруктуры(СтруктураЗначенийСтроки)
	
	КолВоНезаполненныхЯчеек = 0;
	Для Каждого КлючИЗначение Из СтруктураЗначенийСтроки Цикл
		
		Если НЕ ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			КолВоНезаполненныхЯчеек = КолВоНезаполненныхЯчеек + 1;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат КолВоНезаполненныхЯчеек;
	
КонецФункции

&НаСервере
Процедура СоздатьИЗаполнитьLegalEntities(Отказ) 
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);

	ТаблицаLegalEntitiesБазы = ПолучитьТаблицуСуществующихLegalEntities();
	
	СтрокаИменКлючей = "ERP_ID, COUNTRY_CODE, COMPANY_CODE, FINANCELOCCODE, FINANCEPROCESS";
	
	СтруктураПоиска = Новый Структура(СтрокаИменКлючей);
	
	Для Каждого Стр из ТаблицаLegalEntities Цикл 
		
		СправочникОбъект = Неопределено;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Стр, СтрокаИменКлючей); 
		
		МассивСтрокLegalEntitiesБазы = ТаблицаLegalEntitiesБазы.НайтиСтроки(СтруктураПоиска);
		
		// Если не нашли - добавляем
		Если МассивСтрокLegalEntitiesБазы.Количество() = 0 Тогда 
			
			СправочникОбъект = Справочники.LegalEntities.СоздатьЭлемент();
			СправочникОбъект.InTMS = Истина;
					
			СправочникОбъект.ERPID          = Стр.ERP_ID;
			СправочникОбъект.CountryCode    = Стр.COUNTRY_CODE;
			СправочникОбъект.CompanyCode    = Стр.COMPANY_CODE;
			СправочникОбъект.FinanceLocCode = Стр.FINANCELOCCODE;
			СправочникОбъект.FinanceProcess = Стр.FINANCEPROCESS;
			СправочникОбъект.SoldToAddress = Стр.SOLD_TO_ADDRESS;
			
		// Если нашли - апдейтим наименование (если нужно).
		Иначе  
			
			СтрокаLegalEntitiesБазы = МассивСтрокLegalEntitiesБазы[0];
			
			Если СтрокаLegalEntitiesБазы.Наименование <> СокрЛП(Стр.COMPANY_NAME)
				ИЛИ СтрокаLegalEntitiesБазы.SoldToAddress <> СокрЛП(Стр.SOLD_TO_ADDRESS) Тогда 
				
				СправочникОбъект = СтрокаLegalEntitiesБазы.Ссылка.ПолучитьОбъект();	  
		
			КонецЕсли; 
			
			ТаблицаLegalEntitiesБазы.Удалить(СтрокаLegalEntitiesБазы);
			
		КонецЕсли;
		
		Если СправочникОбъект <> Неопределено Тогда
			
			СправочникОбъект.Наименование = Стр.COMPANY_NAME;
			СправочникОбъект.SoldToAddress = Стр.SOLD_TO_ADDRESS;
			
			Попытка	
				СправочникОбъект.Записать();							
			Исключение
				Сообщить("Failed to save Legal entity in file's line №"+ Стр.НомерСтрокиФайла +"! See errors above.
					|" + ОписаниеОшибки());
				Отказ = Истина;
				ОтменитьТранзакцию();
				Возврат;	
			КонецПопытки;   
				
		КонецЕсли;
			
	КонецЦикла;
	
	// Пометим оставшиеся Legal entities на удаление
	Для Каждого СтрокаLegalEntitiesБазы из ТаблицаLegalEntitiesБазы Цикл 
		
		СправочникОбъект = СтрокаLegalEntitiesБазы.Ссылка.ПолучитьОбъект();
		     		
		Попытка	
			СправочникОбъект.УстановитьПометкуУдаления(Истина);							
		Исключение
			Сообщить("Failed to mark for deletion """ + СправочникОбъект + """!
				|" + ОписаниеОшибки());
			Отказ = Истина;
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуСуществующихLegalEntities()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	LegalEntities.Ссылка,
		|	LegalEntities.Наименование,
		|	LegalEntities.CompanyCode КАК COMPANY_CODE,
		|	LegalEntities.ERPID КАК ERP_ID,
		|	LegalEntities.CountryCode КАК COUNTRY_CODE,
		|	LegalEntities.FinanceLocCode КАК FINANCELOCCODE,
		|	LegalEntities.FinanceProcess КАК FINANCEPROCESS,
		|	LegalEntities.SoldToAddress
		|ИЗ
		|	Справочник.LegalEntities КАК LegalEntities
		|ГДЕ
		|	НЕ LegalEntities.ПометкаУдаления
		|	И LegalEntities.InTMS";
					
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции
