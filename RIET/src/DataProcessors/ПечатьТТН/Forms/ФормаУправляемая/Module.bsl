
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Документ") Тогда 
		Объект.Документ = Параметры.Документ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТТН(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Документ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле ""Накладная""!");
		Возврат;
	КонецЕсли;

	ТабДокумент = ПолучитьТабДокументТТН();
	ТабДокумент.Показать("1-Т (Товарно-транспортная накладная)");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабДокументТТН()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  Объект.Документ);
	Запрос.УстановитьПараметр("Курс",      Объект.Документ.КурсВзаиморасчетов);
	КратностьВзаиморасчетов = Объект.Документ.КратностьВзаиморасчетов;
	Запрос.УстановитьПараметр("Кратность", ?(КратностьВзаиморасчетов = 0, 1, КратностьВзаиморасчетов));
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузоотправитель = &ПустойКонтрагент
	|	      ТОГДА Организация
	|	      ИНАЧЕ Грузоотправитель КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	Контрагент   КАК Покупатель,
	|	Контрагент   КАК Плательщик,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	Товары.(
	|		НомерСтроки                                  КАК Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|		Номенклатура.Код                             КАК ТоварКод,
	|		Количество,
	|		КоличествоМест,
	|		Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|		ЕдиницаИзмерения               КАК ВидУпаковки,
	|		ЕдиницаИзмерения.КодПоОКЕИ КАК БазоваяЕдиницаКодПоОКЕИ,
	|		Коэффициент,
	|		Цена     * &Курс / &Кратность                КАК Цена,
	|		Сумма    * &Курс / &Кратность                КАК Сумма,
	|		СуммаНДС * &Курс / &Кратность                КАК СуммаНДС,
	|		СтавкаНДС
	|	)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Документ";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	Макет       = Обработки.ПечатьТТН.ПолучитьМакет("ТТН");

	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);
	СведенияОГрузоотправителе = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	СведенияОПокупателе       = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = КонтактнаяИнформация.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакета.Параметры.ПлательщикПредставление       = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОГрузоотправителе.КодПоОКПО;
	ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;

	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаНаСтранице      = 0;
	ИтогоНДСНаСтранице        = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	ИтогоСумма      = 0;
	ИтогоНДС        = 0;
	Ном             = 0;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");

	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Ном           = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");

			ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// очистим итоги по странице
			ИтогоКоличествоНаСтранице = 0;
			ИтогоСуммаСНДСНаСтранице  = 0;

			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		СуммаСНДС = (ВыборкаСтрокТовары.Сумма
		          + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

		Мест        = ВыборкаСтрокТовары.КоличествоМест;
		Количество  = ВыборкаСтрокТовары.Количество;
		СуммаНДС    = ВыборкаСтрокТовары.СуммаНДС;
		СуммаБезНДС = СуммаСНДС    - СуммаНДС;

		ОбластьМакета.Параметры.Сумма = СуммаСНДС;
		ОбластьМакета.Параметры.Цена  = СуммаСНДС / ?(Количество = 0, 1, Количество);

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по странице
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
		ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;

		// увеличим итоги по дукументу
		ИтогоМест       = ИтогоМест       + Мест;
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
		ИтогоНДС        = ИтогоНДС        + СуммаНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице;

	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");

	Руководители = ОбщегоНазначения.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.ФИООтпускРпзрешил     = Руководители.РуководительПредставление;
	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Руководители.ГлавныйБухгалтерПредставление;

	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.КоличествоСтрок         = КоличествоСтрок;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ФормированиеПечатныхФорм.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.ВсегоМестПрописью       = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	ОбластьМакета.Параметры.ВсегоНаименований       = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ТабДокумент.Вывести(ОбластьМакета);

	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	ОбластьМакета   = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , НЕ Объект.ЛицензионнаяКарточка);
	ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , Объект.ЛицензионнаяКарточка);

	ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
	ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;

	ОбластьМакета.Параметры.СрокДоставки              = Объект.СрокДоставки;
	ОбластьМакета.Параметры.Номер                     = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
	ОбластьМакета.Параметры.ОрганизацияПеревозчик     = Объект.Перевозчик;
	ОбластьМакета.Параметры.МаркаАвтомобиля           = Объект.МаркаАвтомобиля;
	ОбластьМакета.Параметры.ГосНомерАвтомобиля        = Объект.ГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ОрганизацияЗаказчик       = Объект.Заказчик;
	ОбластьМакета.Параметры.ФИОВодителя               = Объект.Водитель;
	ОбластьМакета.Параметры.ВодительскоеУдостоверение = Объект.ВодительскоеУдостоверение;
	ОбластьМакета.Параметры.ВидПеревозки              = Объект.ВидПеревозки;
	ОбластьМакета.Параметры.ПунктПогрузки             = Объект.ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки            = Объект.ПунктРазгрузки;
	ОбластьМакета.Параметры.Прицеп                    = Объект.МаркаПрицепа;
	ОбластьМакета.Параметры.ГосНомерПрицепа           = Объект.ГосНомерПрицепа;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("СведенияОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.ОтображатьСетку     = Ложь;
	ТабДокумент.Защита              = Ложь;
	ТабДокумент.ТолькоПросмотр      = Истина;

	Возврат ТабДокумент;
	
КонецФункции

