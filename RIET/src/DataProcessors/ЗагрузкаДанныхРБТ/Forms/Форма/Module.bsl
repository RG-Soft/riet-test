
// функция считывает данные из переданного на сервер файла 
// в табличный документ и возвращает данный табличный документ. 
// Параметры:
// 		ПутьКЗагружаемомуФайлу - Путь к файлу с данными
// Возврат: 
//		Табличный документ содержащий считанные данные
&НаКлиенте
Функция СчитатьДанныеИзФайла(ПутьКЗагружаемомуФайлу, СтартоваяПозиция = 1, Excel = Неопределено)
	
	ИмяФайла = ПутьКЗагружаемомуФайлу;
	
	ExcelЛист = Неопределено;
	
	Если Excel = Неопределено Тогда
		// теперь начинаем читать данные
		Попытка
			Excel = Новый COMОбъект("Excel.Application");
			Excel.WorkBooks.Open(ИмяФайла);
			ExcelЛист = Excel.Sheets(1);
		Исключение
			Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
			Возврат Неопределено;
			
		КонецПопытки;
	Иначе
		ExcelЛист = Excel.Sheets(1);
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ActiveCell 	= Excel.ActiveCell.SpecialCells(11);
	RowCount 	= ActiveCell.Row;
	ColumnCount = ActiveCell.Column;
	
	Я = ExcelЛист.Cells;
	
	МассивЗаголовков = Новый Массив;
	
	Если СтартоваяПозиция = 1 Тогда		
		// сформируем массив заголовков по первой строке
		Для Column = 1 По ColumnCount Цикл
			Значение = Я.item(2,Column).Text;
			МассивЗаголовков.Добавить(Значение);		
		КонецЦикла;
	КонецЕсли;
	
	// считываем
	Row = СтартоваяПозиция;
	
	КоличествоОбрабатываемых = 15000; 
	
	Если Цел(RowCount / КоличествоОбрабатываемых) < 2 Тогда
		КоличествоОбрабатываемых = RowCount-1;
	КонецЕсли;
	
	//Диапазон = ExcelЛист.Range(Я.item(2,1), Я.item(RowCount,ColumnCount)).Value;
	Добавка = ?(СтартоваяПозиция = 1, 1, 0);
	Диапазон = ExcelЛист.Range(Я.item(СтартоваяПозиция + Добавка,1), Я.item(СтартоваяПозиция + Добавка + КоличествоОбрабатываемых,ColumnCount)).Value;
	
	СчетчикОтработаных = 1;
	
	счетчикПустых = 0;
	
	Для Row = 2 По RowCount-1 Цикл
		
		Если СчетчикОтработаных > КоличествоОбрабатываемых Тогда
			Прервать;
		КонецЕсли;
		Для Column = 1 По ColumnCount Цикл			
			//Значение = СокрЛП(Я.item(Row,Column).Value);       
			Значение = СокрЛП(Диапазон.getValue(Column, Row));       
			Значение = СтрЗаменить(Значение, " ", ""); 
			Если Column = 3 Тогда 
				Если ПустаяСтрока(Значение) Тогда
					счетчикПустых = счетчикПустых + 1;
					Column = ColumnCount + 1; 
					Продолжить;
				Иначе
					Если счетчикПустых > 0 тогда
						счетчикПустых = 0;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			ТабличныйДокумент.Область("R" + Формат(СчетчикОтработаных, "ЧГ=") +"C" + Формат(Column, "ЧГ=")).Текст = Значение;
		КонецЦикла;
		
		// условие выхода = 5 пустых строк подряд.
		Если счетчикПустых > 4 Тогда
			Прервать;
		КонецЕсли;
		
		СчетчикОтработаных = СчетчикОтработаных + 1;
		
	КонецЦикла;
	
	Если СчетчикОтработаных + СтартоваяПозиция >= RowCount-1 Тогда
		
		// закрываем эксель
		Excel.WorkBooks.Close();
		Excel = 0;
		Excel = Неопределено;
		
	КонецЕсли;
	
	Возврат Новый Структура("ТабличныйДокумент, МассивЗаголовков, КоличествоСтрокВсего, КоличествоСтрокПрочитано", 
	ТабличныйДокумент, МассивЗаголовков, RowCount, КоличествоОбрабатываемых + Добавка + СтартоваяПозиция);
	
КонецФункции

&НаСервере
Функция  ЗагрузитьДанныеНаСервере(МассивТабличныхДокументов)
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	Результат =  ОбъектОбработка.ЗагрузитьДанныеИзТабличногоДокумента(МассивТабличныхДокументов);
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	НачДата = ТекущаяДата();		
	МассивТабличныхДокументов = Новый Массив;
	
	Эксель = Неопределено;
	
	СтруктураДанных = СчитатьДанныеИзФайла(Объект.ПутьКФайлу, , Эксель);
	
	Если СтруктураДанных = Неопределено Тогда
		// т.к. данный файл является основополагающим, то он обязан загрузиться
		Возврат;
	КонецЕсли;
	
	МассивЗаголовков 	= СтруктураДанных.МассивЗаголовков;
	
	МассивТабличныхДокументов.Добавить(Новый Структура("ТабличныйДокумент, ТипЗагрузки, МассивЗаголовков", СтруктураДанных.ТабличныйДокумент, "РБТ", МассивЗаголовков));
	
	Пока СтруктураДанных.КоличествоСтрокПрочитано < СтруктураДанных.КоличествоСтрокВсего Цикл
		
		// а тут запускаем очередную итерацию по чтению, если есть еще непрочитанные строки
		СтруктураДанных = СчитатьДанныеИзФайла(Объект.ПутьКФайлу, СтруктураДанных.КоличествоСтрокПрочитано, Эксель);
		
		МассивТабличныхДокументов.Добавить(Новый Структура("ТабличныйДокумент, ТипЗагрузки, МассивЗаголовков", СтруктураДанных.ТабличныйДокумент, "РБТ", МассивЗаголовков));
		
	КонецЦикла;
	Попытка
		Эксель.WorkBooks.Close();
		Эксель = 0;
		Эксель = Неопределено;
	Исключение
		
	КонецПопытки;
	
	Авиакомпании  = ЗагрузитьДанныеНаСервере(МассивТабличныхДокументов);
	
	Для Каждого Продавец Из Авиакомпании Цикл
		Символ = СтрНайти(Продавец, ",");
		Если Символ<>0 Тогда
			Продавец = Сред(Продавец, 1, Символ-1);
		КонецЕсли;
		Отбор = Новый Структура("Код", СокрЛП(Продавец));
		НайденныеСтроки = Перевозчики.НайтиСтроки(Отбор);
		Если НЕ НайденныеСтроки.Количество() И НЕ ПустаяСтрока(Продавец) Тогда
			НоваяСтрока = Перевозчики.Добавить();
			НоваяСтрока.Код = СокрЛП(Продавец);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Перевозчики Цикл
		Если НЕ ЗначениеЗаполнено(Стр.Контрагент) Тогда
			Сообщить("Укажите соответствие для контрагента в строке " + Стр.ПолучитьИдентификатор() + " на вкладке ""Соответствие контрагентов""");
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыборФайлаДляВыгрузкиИЗагрузки(ИмяЭлемента)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбора.Фильтр                      = ВернутьСтр("ru = 'Файл Excel'") + " (*.xlsx)|*.xlsx| (*.xls)|*.xls";
	ДиалогВыбора.Заголовок                   = ВернутьСтр("ru = 'Выберите файл для загрузки данных'");
	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.Расширение                  = "xlsx";
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогВыбора.Выбрать() Тогда
		Объект[ИмяЭлемента] = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция  СоздатьДокументыНаСервере()
	СоответствиеКонтрагентов = Перевозчики.Выгрузить();
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектОбработка.СоздатьДокументыПоступления(СоответствиеКонтрагентов);	
КонецФункции


&НаКлиенте
Процедура СоздатьДокументы(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.КонтрагентРБТ) Тогда
		Сообщить("Укажите контрагента РБТ");
		Возврат;
	КонецЕсли;
	ОтборПустых = Новый Структура("Контрагент", ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"));
	ПустыеСтроки = Перевозчики.НайтиСтроки(ОтборПустых);
	Если ПустыеСтроки.Количество() Тогда
		Сообщить("Заполните соответствие контрагентов");
		Возврат;
	КонецЕсли;	
	СтруктураВозврата = СоздатьДокументыНаСервере();
	СписокПоступлений.ЗагрузитьЗначения(СтруктураВозврата.МассивПоступлений);
	Сумма = СтруктураВозврата.Сумма;
	СписокНомеровВозврат.ЗагрузитьЗначения(СтруктураВозврата.МассивСФВозврат);
	ЗаполнитьСКП();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСКП()
	Если Не ЗначениеЗаполнено(СчетКнигиПокупок) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКнигиПокупок.Ссылка
		|ИЗ
		|	Документ.СчетКнигиПокупок КАК СчетКнигиПокупок
		|ГДЕ
		|	СчетКнигиПокупок.СуммаДокументаСНДСРуб = &Сумма";
		
		Запрос.УстановитьПараметр("Сумма", Сумма);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Если РезультатЗапроса.Пустой() ИЛИ Выборка.Количество() > 1 Тогда
			Сообщить("Не удалось однозначно определить Счет книги покупок по сумме файла. Выберите вручную.");
			Возврат;
		Иначе
			Выборка.Следующий();
			СчетКнигиПокупок = Выборка.Ссылка;
		КонецЕсли	
	КонецЕсли;
	
	СКП = СчетКнигиПокупок.ПолучитьОбъект();
	ПерваяСтрока = Скп.Суммы[0];
	СКП.Суммы.Очистить();
	Для Каждого ПТИУ Из СписокПоступлений Цикл
		Поступление = ПТИУ.Значение;
		Для Каждого Строка Из Поступление.Услуги Цикл
			Если Строка.Сумма <> 0 Тогда
			НоваяСтрока = СКП.Суммы.Добавить();
			
			НоваяСтрока.ПоступлениеТоваровИУслуг = Поступление;
			Если Строка.Сумма < 0 И СписокНомеровВозврат.НайтиПоЗначению(Поступление.Номер)<> Неопределено Тогда
				СФ = УчетНДС.НайтиПодчиненныйСчетФактуру(Поступление, "СчетФактураПолученный");
				НоваяСтрока.Период = СФ.УдалитьДатаИсправленияИсходногоДокумента;
			Иначе 
				НоваяСтрока.Период = Поступление.Дата;	 
			КонецЕсли;	
			НоваяСтрока.СуммаБезНДС = Строка.Сумма;
			НоваяСтрока.СуммаБезНДСРуб = Строка.Сумма;
			НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
			НоваяСтрока.СуммаНДСРуб = Строка.СуммаНДС;
			НоваяСтрока.СуммаСНДС = Строка.Сумма + Строка.СуммаНДС;
			НоваяСтрока.СуммаСНДСРуб = Строка.Сумма + Строка.СуммаНДС;
			НоваяСтрока.СтавкаНДС = Строка.СтавкаНДС;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	СКП.Записать();
	Попытка
	СКП.Записать(РежимЗаписиДокумента.Проведение);
Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПОлучитьРеквизит(Док, Реквизит)
	Возврат Док[Реквизит];
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.КонтрагентРБТ = Справочники.Контрагенты.НайтиПоНаименованию("РБТ-Холдинг М");	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСКП1(Команда)
	Если ЗначениеЗаполнено(СчетКнигиПокупок) И ПолучитьРеквизит(СчетКнигиПокупок, "СуммаДокументаСНДСРуб") <> Сумма Тогда
		Ответ = Вопрос("Сумма документа не совпадает с суммой файла. Перезаполнить документ?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	ЗаполнитьСКП();
	
КонецПроцедуры

