
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РГСофтКлиентСервер.УстановитьЭлементОтбора(
		InventoryСписания.Отбор,
		"ПометкаУдаления",
		Ложь,
		ВидСравненияКомпоновкиДанных.Равно,,Истина);
		
	РГСофтКлиентСервер.УстановитьЭлементОтбора(
		InventoryСписания.Отбор,
		"Segment",
		Справочники.Сегменты.НайтиПоКоду("ALS"),
		ВидСравненияКомпоновкиДанных.Равно,,Истина);
	//	
	//РГСофтКлиентСервер.УстановитьЭлементОтбора(
	//	InventoryСписания.Отбор,
	//	"Реализация",,
	//	ВидСравненияКомпоновкиДанных.НеЗаполнено,,Истина);
	  			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НачалоПериода = ?(ЗначениеЗаполнено(ПериодОтбораInventoryСписаний.ДатаНачала), ПериодОтбораInventoryСписаний.ДатаНачала, КонецДня(ТекущаяДата()));
	КонецПериода  = ?(ЗначениеЗаполнено(ПериодОтбораInventoryСписаний.ДатаОкончания), ПериодОтбораInventoryСписаний.ДатаОкончания, КонецДня(ТекущаяДата()));
	
	InventoryСписания.Параметры.УстановитьЗначениеПараметра("НачалоПериода", НачалоПериода);
	InventoryСписания.Параметры.УстановитьЗначениеПараметра("КонецПериода", КонецПериода);
	
	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		InventoryСписания.Отбор,
		,"НачалоПериода",        
		НачалоПериода, 
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно, Истина);
		
	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		InventoryСписания.Отбор,
		,"КонецПериода",
		КонецПериода,
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, Истина);	
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПериодОтбораInventoryСписанийПриИзменении(Элемент)
	
	ИспользованиеДатыНачала = ЗначениеЗаполнено(ПериодОтбораInventoryСписаний.ДатаНачала);

	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		InventoryСписания.Отбор,
		,"НачалоПериода",        
		ПериодОтбораInventoryСписаний.ДатаНачала,
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно, ИспользованиеДатыНачала);
		
	ИспользованиеДатыОкончания = ЗначениеЗаполнено(ПериодОтбораInventoryСписаний.ДатаОкончания); 
	
	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
		InventoryСписания.Отбор,
		,"КонецПериода",
		ПериодОтбораInventoryСписаний.ДатаОкончания,
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, ИспользованиеДатыОкончания);
		
	InventoryСписания.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ПериодОтбораInventoryСписаний.ДатаНачала);
	InventoryСписания.Параметры.УстановитьЗначениеПараметра("КонецПериода", ПериодОтбораInventoryСписаний.ДатаОкончания);	
		
КонецПроцедуры

&НаКлиенте
Процедура InventoryСписанияПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.InventoryСписания.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 	
	     			
	СтруктураМассивовСтруктур = ПодобратьРеализацииИЗагрузитьДанные(ТекДанные.Ссылка, Объект.SiebelOrdersИзФайла);
	ОбновитьПодсветку();
    InventoryGoods = Объект.InventoryGoods;	
	InventoryGoods.Очистить();
    МассивСтруктурInventoryGoods = СтруктураМассивовСтруктур.МассивСтруктурInventoryGoods;
	Для Каждого СтруктураМассива из МассивСтруктурInventoryGoods цикл
		НоваяСтрGoods = InventoryGoods.Добавить();
		Для Каждого ЭлементСтруктуры из СтруктураМассива Цикл 
			НоваяСтрGoods[ЭлементСтруктуры.Ключ] = СтруктураМассива[ЭлементСтруктуры.Ключ];
		КонецЦикла;
	КонецЦикла;
	
	СписокРеализаций = Объект.СписокРеализаций;
	СписокРеализаций.Очистить();
	МассивСтруктурСписокРеализаций = СтруктураМассивовСтруктур.МассивСтруктурСписокРеализаций;
	Для Каждого СтруктураМассива из МассивСтруктурСписокРеализаций цикл
		НоваяСтрРеализаций = СписокРеализаций.Добавить();
		Для Каждого ЭлементСтруктуры из СтруктураМассива Цикл 
			НоваяСтрРеализаций[ЭлементСтруктуры.Ключ] = СтруктураМассива[ЭлементСтруктуры.Ключ];
		КонецЦикла;
	КонецЦикла;
	
	ДанныеSiebelOrders = Объект.ДанныеSiebelOrders;
	ДанныеSiebelOrders.Очистить();
	МассивСтруктурДанныеSiebelOrders = СтруктураМассивовСтруктур.МассивСтруктурДанныеSiebelOrders;
	Для Каждого СтруктураМассива из МассивСтруктурДанныеSiebelOrders цикл
		НоваяСтрSO = ДанныеSiebelOrders.Добавить();
		Для Каждого ЭлементСтруктуры из СтруктураМассива Цикл 
			НоваяСтрSO[ЭлементСтруктуры.Ключ] = СтруктураМассива[ЭлементСтруктуры.Ключ];
		КонецЦикла;
	КонецЦикла;
       	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодобратьРеализацииИЗагрузитьДанные(ТекInventoryСписание, Знач SiebelOrdersИзФайла)
	
	СтруктураМассивовСтруктур = Новый Структура("МассивСтруктурInventoryGoods,МассивСтруктурДанныеSiebelOrders,МассивСтруктурСписокРеализаций");
	
	МассивСтруктурInventoryGoods = Новый Массив;
	МассивСтруктурДанныеSiebelOrders = Новый Массив;
	МассивСтруктурСписокРеализаций = Новый Массив;

		
	//заполним InventoryGoods
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекInventoryСписание", ТекInventoryСписание);
	Запрос.Текст = "ВЫБРАТЬ
	               |	InventoryСписаниеGoods.Ссылка,
	               |	InventoryСписаниеGoods.Good,
	               |	InventoryСписаниеGoods.UOM,
	               |	InventoryСписаниеGoods.Quantity,
	               |	InventoryСписаниеGoods.AU,
	               |	InventoryСписаниеGoods.Good.Код КАК PartNumber,
	               |	InventoryСписание.Segment КАК Segment,
	               |	InventoryСписание.Дата КАК ДатаДок,
	               |	InventoryСписаниеGoods.Реализация,
	               |	СчетФактураВыданный.Ссылка КАК СчетФактура
	               |ИЗ
	               |	Документ.InventoryСписание КАК InventoryСписание
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |			ПО InventoryСписаниеGoods.Реализация = СчетФактураВыданный.ДокументОснование
	               |		ПО InventoryСписание.Ссылка = InventoryСписаниеGoods.Ссылка
	               |ГДЕ
	               |	InventoryСписание.Ссылка = &ТекInventoryСписание";
	              	      	
	
	МассивPartNumber = Новый Массив();
		
	ВыборкаGoods = Запрос.Выполнить().Выбрать();
	Пока ВыборкаGoods.Следующий() Цикл 
						
		МассивPartNumber.Добавить(СокрЛП(ВыборкаGoods.PartNumber));
		
		СтруктураInventoryGoods = Новый Структура("Ссылка,Good,UOM,Quantity,AU,PartNumber,Реализация,СчетФактура");
	    Для Каждого ЭлементСтруктуры из СтруктураInventoryGoods Цикл 
			СтруктураInventoryGoods[ЭлементСтруктуры.Ключ] = ВыборкаGoods[ЭлементСтруктуры.Ключ];
		КонецЦикла;
		
		МассивСтруктурInventoryGoods.Добавить(СтруктураInventoryGoods);
		
 	КонецЦикла;
	
	Если МассивСтруктурInventoryGoods.Количество() = 0 Тогда 
		Возврат СтруктураМассивовСтруктур;
	КонецЕсли;
	
	Segment = ВыборкаGoods.Segment;
	ДатаДок = ДобавитьМесяц(ВыборкаGoods.ДатаДок, -6);

	
	//заполним ДанныеSiebelOrders 	
	Запрос = Новый Запрос;
	
	МассивИННInterCompany = Новый Массив;
	МассивИННInterCompany.Добавить("8604025355"); //ЭПУ
	МассивИННInterCompany.Добавить("7709413265"); //Шлюмберже
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Segment", Segment);
	Запрос.УстановитьПараметр("ИННInterCompany", МассивИННInterCompany);
	Запрос.УстановитьПараметр("Дата", ДатаДок);
	Запрос.УстановитьПараметр("МассивКодов", МассивPartNumber);
    
	Запрос.Текст = "ВЫБРАТЬ
	               |	НомераИнвойсовLawson.Тикет.SiebelOrder,
	               |	НомераИнвойсовLawson.Документ КАК Реализация,
	               |	NULL КАК НомерСтроки,
	               |	СчетФактураВыданный.Номер КАК НомерСФ
	               |ПОМЕСТИТЬ SOРеализаций
	               |ИЗ
	               |	РегистрСведений.НомераИнвойсовLawson КАК НомераИнвойсовLawson
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |		ПО НомераИнвойсовLawson.Документ = СчетФактураВыданный.ДокументОснование
	               |ГДЕ
	               |	НомераИнвойсовLawson.Тикет.ProductLine В ИЕРАРХИИ(&Segment)
	               |	И НомераИнвойсовLawson.Документ.Дата > &Дата
	               |	И НЕ НомераИнвойсовLawson.Документ.Контрагент.ИНН В (&ИННInterCompany)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	NULL,
	               |	РеализацияТоваровУслугТовары.Ссылка,
	               |	РеализацияТоваровУслугТовары.НомерСтроки,
	               |	СчетФактураВыданный.Номер
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |		ПО РеализацияТоваровУслугТовары.Ссылка = СчетФактураВыданный.ДокументОснование
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка.Контрагент.ИНН В(&ИННInterCompany)
	               |	И РеализацияТоваровУслугТовары.ProductLine В ИЕРАРХИИ(&Segment)
	               |	И РеализацияТоваровУслугТовары.Ссылка.Дата > &Дата
	               |	И РеализацияТоваровУслугТовары.Номенклатура.Артикул В(&МассивКодов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ SiebelOrdersDetails.НомерСтроки) КАК НомерСтроки,
	               |	SOРеализаций.Реализация,
	               |	SiebelOrdersDetails.PartNumber КАК PartNumber,
	               |	SiebelOrdersDetails.Количество,
	               |	SiebelOrdersDetails.ЕдиницаИзмерения КАК UOM,
	               |	SiebelOrdersDetails.Description КАК Description
	               |ПОМЕСТИТЬ Ордеры
	               |ИЗ
	               |	Документ.SiebelOrders.Details КАК SiebelOrdersDetails
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ SOРеализаций КАК SOРеализаций
	               |		ПО SiebelOrdersDetails.Ссылка = SOРеализаций.ТикетSiebelOrder
	               |			И (SiebelOrdersDetails.PartNumber В (&МассивКодов))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	SOРеализаций.Реализация,
	               |	SiebelOrdersDetails.PartNumber,
	               |	SiebelOrdersDetails.Количество,
	               |	SiebelOrdersDetails.ЕдиницаИзмерения,
	               |	SiebelOrdersDetails.Description
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеализацияТоваровУслугТовары.НомерСтроки),
	               |	РеализацияТоваровУслугТовары.Ссылка,
	               |	РеализацияТоваровУслугТовары.Номенклатура.Артикул,
	               |	РеализацияТоваровУслугТовары.Количество,
	               |	РеализацияТоваровУслугТовары.ЕдиницаИзмерения,
	               |	ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(300))
	               |ИЗ
	               |	SOРеализаций КАК SOРеализаций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ПО SOРеализаций.Реализация = РеализацияТоваровУслугТовары.Ссылка
	               |			И (SOРеализаций.ТикетSiebelOrder ЕСТЬ NULL )
	               |			И (РеализацияТоваровУслугТовары.НомерСтроки = SOРеализаций.НомерСтроки)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровУслугТовары.Ссылка,
	               |	РеализацияТоваровУслугТовары.Номенклатура.Артикул,
	               |	РеализацияТоваровУслугТовары.Количество,
	               |	РеализацияТоваровУслугТовары.ЕдиницаИзмерения,
	               |	ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(300))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ InventoryСписаниеGoods.Ссылка) КАК Использований,
	               |	SOРеализаций.Реализация
	               |ПОМЕСТИТЬ Привязано
	               |ИЗ
	               |	SOРеализаций КАК SOРеализаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	               |		ПО (InventoryСписаниеGoods.Реализация = SOРеализаций.Реализация)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	SOРеализаций.Реализация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	SOРеализаций.Реализация,
	               |	SOРеализаций.Реализация.Контрагент КАК Контрагент,
	               |	КОЛИЧЕСТВО(Ордеры.НомерСтроки) КАК КоличествоСовпадений,
	               |	SOРеализаций.НомерСФ,
	               |	SOРеализаций.ТикетSiebelOrder.LawsonInvoice КАК LawsonInvoice,
	               |	Привязано.Использований
	               |ПОМЕСТИТЬ ВТСписокРеализаций
	               |ИЗ
	               |	SOРеализаций КАК SOРеализаций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ордеры КАК Ордеры
	               |		ПО SOРеализаций.Реализация = Ордеры.Реализация
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Привязано КАК Привязано
	               |		ПО SOРеализаций.Реализация = Привязано.Реализация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	SOРеализаций.Реализация,
	               |	SOРеализаций.Реализация.Контрагент,
	               |	SOРеализаций.НомерСФ,
	               |	SOРеализаций.ТикетSiebelOrder.LawsonInvoice,
	               |	Привязано.Использований
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТСписокРеализаций.Реализация,
	               |	ВЫБОР
	               |		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	               |			ТОГДА РеализацияТоваровУслугТовары.Сумма - РеализацияТоваровУслугТовары.СуммаНДС
	               |		ИНАЧЕ РеализацияТоваровУслугТовары.Сумма
	               |	КОНЕЦ КАК СуммаБезНДС,
	               |	РеализацияТоваровУслугТовары.TicketNumber КАК SIR
	               |ПОМЕСТИТЬ СуммыРеализаций
	               |ИЗ
	               |	ВТСписокРеализаций КАК ВТСписокРеализаций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ПО ВТСписокРеализаций.Реализация = РеализацияТоваровУслугТовары.Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТСписокРеализаций.Реализация,
	               |	ВЫБОР
	               |		КОГДА РеализацияТоваровУслугУслуги.Ссылка.СуммаВключаетНДС
	               |			ТОГДА РеализацияТоваровУслугУслуги.Сумма - РеализацияТоваровУслугУслуги.СуммаНДС
	               |		ИНАЧЕ РеализацияТоваровУслугУслуги.Сумма
	               |	КОНЕЦ,
	               |	РеализацияТоваровУслугУслуги.TicketNumber
	               |ИЗ
	               |	ВТСписокРеализаций КАК ВТСписокРеализаций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |		ПО ВТСписокРеализаций.Реализация = РеализацияТоваровУслугУслуги.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТСписокРеализаций.Реализация,
	               |	ВТСписокРеализаций.Контрагент,
	               |	ВТСписокРеализаций.КоличествоСовпадений,
	               |	ВТСписокРеализаций.НомерСФ,
	               |	ВТСписокРеализаций.LawsonInvoice,
	               |	ВТСписокРеализаций.Использований,
	               |	СУММА(СуммыРеализаций.СуммаБезНДС) КАК СуммаБезНДС,
	               |	МАКСИМУМ(СуммыРеализаций.SIR) КАК SIR
	               |ИЗ
	               |	ВТСписокРеализаций КАК ВТСписокРеализаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СуммыРеализаций КАК СуммыРеализаций
	               |		ПО ВТСписокРеализаций.Реализация = СуммыРеализаций.Реализация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТСписокРеализаций.Реализация,
	               |	ВТСписокРеализаций.Контрагент,
	               |	ВТСписокРеализаций.КоличествоСовпадений,
	               |	ВТСписокРеализаций.НомерСФ,
	               |	ВТСписокРеализаций.LawsonInvoice,
	               |	ВТСписокРеализаций.Использований
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Ордеры.Реализация,
	               |	Ордеры.PartNumber,
	               |	Ордеры.Количество,
	               |	Ордеры.UOM,
	               |	Ордеры.Description
	               |ИЗ
	               |	Ордеры КАК Ордеры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРеализаций КАК ВТСписокРеализаций
	               |		ПО Ордеры.Реализация = ВТСписокРеализаций.Реализация";

							   
	Результат = Запрос.ВыполнитьПакет();
	                            	          
	ВыборкаРеализаций = Результат[5].Выбрать();
	Пока ВыборкаРеализаций.Следующий() Цикл 
		
		СтруктураСписокРеализаций   = Новый Структура("Реализация,Контрагент,КоличествоСовпадений,НомерСФ,LawsonInvoice,Использований,СуммаБезНДС,SIR");
		Для Каждого ЭлементСтруктуры из СтруктураСписокРеализаций Цикл 
			СтруктураСписокРеализаций[ЭлементСтруктуры.Ключ] = ВыборкаРеализаций[ЭлементСтруктуры.Ключ];
		КонецЦикла;
		
		МассивСтруктурСписокРеализаций.Добавить(СтруктураСписокРеализаций);
		
 	КонецЦикла;
               
	
	ВыборкаSiebelOrders = Результат[6].Выбрать();
	Пока ВыборкаSiebelOrders.Следующий() Цикл 
		
		СтруктураДанныеSiebelOrders = Новый Структура("Реализация,PartNumber,Количество,UOM,Description");
        Для Каждого ЭлементСтруктуры из СтруктураДанныеSiebelOrders Цикл 
			СтруктураДанныеSiebelOrders[ЭлементСтруктуры.Ключ] = ВыборкаSiebelOrders[ЭлементСтруктуры.Ключ];
		КонецЦикла;
		
		МассивСтруктурДанныеSiebelOrders.Добавить(СтруктураДанныеSiebelOrders);
		
 	КонецЦикла;
	
	// дополним ДанныеSiebelOrders из файла
	Если SiebelOrdersИзФайла.Количество() > 0 Тогда 
		
		Запрос.УстановитьПараметр("SOИзФайла", SiebelOrdersИзФайла.Выгрузить());
		Запрос.Текст = "ВЫБРАТЬ
		               |	SOИзФайла.Реализация,
		               |	SOИзФайла.PartNumber,
		               |	SOИзФайла.UOM,
		               |	SOИзФайла.Количество,
		               |	SOИзФайла.Description,
		               |	SOИзФайла.НомерСтроки
		               |ПОМЕСТИТЬ SOИзФайла
		               |ИЗ
		               |	&SOИзФайла КАК SOИзФайла
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВложенныйЗапрос.Реализация,
		               |	ВложенныйЗапрос.Номер КАК НомерСФ
		               |ПОМЕСТИТЬ РеализацииПоСегменту
		               |ИЗ
		               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |		ВложенныйЗапрос.Реализация КАК Реализация,
		               |		СчетФактураВыданный.Номер КАК Номер
		               |	ИЗ
		               |		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |			РеализацияТоваровУслугТовары.Ссылка КАК Реализация
		               |		ИЗ
		               |			Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		               |		ГДЕ
		               |			(НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления)
		               |			И РеализацияТоваровУслугТовары.ProductLine В ИЕРАРХИИ(&Segment)
		               |		
		               |		ОБЪЕДИНИТЬ ВСЕ
		               |		
		               |		ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |			РеализацияТоваровУслугУслуги.Ссылка
		               |		ИЗ
		               |			Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		               |		ГДЕ
		               |			(НЕ РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления)
		               |			И РеализацияТоваровУслугУслуги.ProductLine В ИЕРАРХИИ(&Segment)) КАК ВложенныйЗапрос
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
		               |			ПО ВложенныйЗапрос.Реализация = СчетФактураВыданный.ДокументОснование
		               |	ГДЕ
		               |		ВложенныйЗапрос.Реализация.Дата > &Дата) КАК ВложенныйЗапрос
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	РеализацииПоСегменту.Реализация,
		               |	РеализацииПоСегменту.НомерСФ,
		               |	РеализацииПоСегменту.Реализация.Контрагент КАК Контрагент,
		               |	Привязано.Использований,
		               |	КОЛИЧЕСТВО(SOИзФайла.НомерСтроки) КАК КоличествоСовпадений
		               |ПОМЕСТИТЬ ВТСписокРеализаций
		               |ИЗ
		               |	РеализацииПоСегменту КАК РеализацииПоСегменту
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ SOИзФайла КАК SOИзФайла
		               |		ПО РеализацииПоСегменту.Реализация = SOИзФайла.Реализация
		               |			И (SOИзФайла.PartNumber В (&МассивКодов))
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			РеализацииПоСегменту.Реализация КАК Реализация,
		               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ InventoryСписание.Ссылка) КАК Использований
		               |		ИЗ
		               |			РеализацииПоСегменту КАК РеализацииПоСегменту
		               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.InventoryСписание КАК InventoryСписание
		               |				ПО (InventoryСписание.Реализация = РеализацииПоСегменту.Реализация)
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			РеализацииПоСегменту.Реализация) КАК Привязано
		               |		ПО РеализацииПоСегменту.Реализация = Привязано.Реализация
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РеализацииПоСегменту.Реализация,
		               |	РеализацииПоСегменту.НомерСФ,
		               |	РеализацииПоСегменту.Реализация.Контрагент,
		               |	Привязано.Использований
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТСписокРеализаций.Реализация,
		               |	ВТСписокРеализаций.НомерСФ,
		               |	ВТСписокРеализаций.Контрагент,
		               |	ВТСписокРеализаций.Использований,
		               |	ВТСписокРеализаций.КоличествоСовпадений
		               |ИЗ
		               |	ВТСписокРеализаций КАК ВТСписокРеализаций
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	SOИзФайла.Реализация,
		               |	SOИзФайла.PartNumber,
		               |	SOИзФайла.UOM,
		               |	SOИзФайла.Количество,
		               |	SOИзФайла.Description
		               |ИЗ
		               |	SOИзФайла КАК SOИзФайла
		               |ГДЕ
		               |	SOИзФайла.Реализация В
		               |			(ВЫБРАТЬ
		               |				СписокРеализаций.Реализация
		               |			ИЗ
		               |				ВТСписокРеализаций КАК СписокРеализаций)";
		
		Результат = Запрос.ВыполнитьПакет();
		ВыборкаРеализаций = Результат[3].Выбрать();
		Пока ВыборкаРеализаций.Следующий() Цикл 
			
			СтруктураСписокРеализаций   = Новый Структура("Реализация,Контрагент,КоличествоСовпадений,НомерСФ,Использований");
			Для Каждого ЭлементСтруктуры из СтруктураСписокРеализаций Цикл 
				СтруктураСписокРеализаций[ЭлементСтруктуры.Ключ] = ВыборкаРеализаций[ЭлементСтруктуры.Ключ];
			КонецЦикла;
			
			МассивСтруктурСписокРеализаций.Добавить(СтруктураСписокРеализаций);
			
		КонецЦикла;
		          		
		ВыборкаSiebelOrders = Результат[4].Выбрать();
		Пока ВыборкаSiebelOrders.Следующий() Цикл 
			
			СтруктураДанныеSiebelOrders = Новый Структура("Реализация,PartNumber,Количество,UOM,Description");
			Для Каждого ЭлементСтруктуры из СтруктураДанныеSiebelOrders Цикл 
				СтруктураДанныеSiebelOrders[ЭлементСтруктуры.Ключ] = ВыборкаSiebelOrders[ЭлементСтруктуры.Ключ];
			КонецЦикла;
			
			МассивСтруктурДанныеSiebelOrders.Добавить(СтруктураДанныеSiebelOrders);
			
		КонецЦикла;
		       		
	КонецЕсли;
	   
	СтруктураМассивовСтруктур.МассивСтруктурInventoryGoods = МассивСтруктурInventoryGoods;
	СтруктураМассивовСтруктур.МассивСтруктурСписокРеализаций = МассивСтруктурСписокРеализаций;
	СтруктураМассивовСтруктур.МассивСтруктурДанныеSiebelOrders = МассивСтруктурДанныеSiebelOrders;
	
	Возврат СтруктураМассивовСтруктур; 
	   
КонецФункции

&НаКлиенте
Процедура СписокРеализацийПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда  
		Элементы.ДанныеSiebelOrders.ОтборСтрок = Новый ФиксированнаяСтруктура("Реализация",ТекДанные.Реализация);
	КонецЕсли;
	ОбновитьПодсветку();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПодсветку(); 
	Для каждого Списание из Объект.InventoryGoods цикл	
		Списание.окрашивать = Ложь;            
	КонецЦикла; 
	
	ТекДанные = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда  
	Для каждого Списание из Объект.InventoryGoods цикл		
		для Каждого Реализация из Объект.ДанныеSiebelOrders цикл
			если (СокрЛП(Реализация.PartNumber) = СокрЛП(Списание.PartNumber)) и (Реализация.Реализация =ТекДанные.Реализация) тогда
				Списание.окрашивать = истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	КонецЕсли;
КонецПроцедуры


//////////////////////////////////////////////
//КОМАНДА ПРИВЯЗАТЬ

&НаКлиенте
Процедура Привязать(Команда)
	
	Отказ = Ложь;
	
    ТекДанныеInventory = Элементы.InventoryСписания.ТекущиеДанные;
	Если ТекДанныеInventory = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Inventory списание"" для привязывания!",,,,Отказ);
	КонецЕсли;	
	
	ТекДанныеРеализаций = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанныеРеализаций = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Реализация товаров и услуг"" для привязывания!",,,,Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		РеализацияОбъект        = ТекДанныеРеализаций.Реализация.ПолучитьОбъект();
		InventoryСписаниеОбъект = ТекДанныеInventory.Ссылка.ПолучитьОбъект();
		
		InventoryСписаниеОбъект.Реализация            = РеализацияОбъект.Ссылка;
		InventoryСписаниеОбъект.НалоговыйПериод       = РеализацияОбъект.НалоговыйПериод;
		InventoryСписаниеОбъект.ОбменДанными.Загрузка = Истина;
		Для Каждого Стр из InventoryСписаниеОбъект.Goods цикл
			Стр.Реализация = РеализацияОбъект.Ссылка;
		КонецЦикла;
		Попытка
			InventoryСписаниеОбъект.Записать();
			ПоказатьОповещениеПользователя(,,"Изменен документ: 
			|Inventory " + ТекДанныеInventory.Ссылка + ".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать: " + ТекДанныеInventory.Ссылка + ",
			|" + ОписаниеОшибки());
		КонецПопытки;
		    				
	КонецЕсли;
	
КонецПроцедуры



//////////////////////////////////////////////
//КОМАНДА ПРИВЯЗАТЬ ПОСТРОЧНО

&НаКлиенте
Процедура ПривязатьКСТрокам(Команда)
	
	Отказ = Ложь;
	
    ТекДанныеInventory = Элементы.InventoryGoods.ТекущиеДанные;
	Если ТекДанныеInventory = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Inventory списание"" для привязывания!",,,,Отказ);
	КонецЕсли;	
	ТекДанныеРеализаций = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанныеРеализаций = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Реализация товаров и услуг"" для привязывания!",,,,Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		РеализацияОбъект        = ТекДанныеРеализаций.Реализация.ПолучитьОбъект();
		InventoryСписаниеОбъект = ТекДанныеInventory.Ссылка.ПолучитьОбъект();
		
		//InventoryСписаниеОбъект.Реализация            = РеализацияОбъект.Ссылка;
		InventoryСписаниеОбъект.НалоговыйПериод       = РеализацияОбъект.НалоговыйПериод;
		InventoryСписаниеОбъект.ОбменДанными.Загрузка = Истина;
		//Для Каждого Стр из InventoryСписаниеОбъект.Goods цикл
		//	Стр.Реализация = РеализацияОбъект.Ссылка;
		//КонецЦикла;
		Для  каждого стр из Элементы.InventoryGoods.ВыделенныеСтроки цикл
			id = Объект.InventoryGoods.НайтиПоИдентификатору(стр);
			InventoryСписаниеОбъект.Goods[id.НомерСтроки -1 ].Реализация = РеализацияОбъект.Ссылка;
		КонецЦикла;
		Попытка
			InventoryСписаниеОбъект.Записать();
			ПоказатьОповещениеПользователя(,,"Изменен документ: 
			|Inventory " + ТекДанныеInventory.Ссылка + ".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать: " + ТекДанныеInventory.Ссылка + ",
			|" + ОписаниеОшибки());
		КонецПопытки;
		InventoryСписанияПриАктивизацииСтроки(Команда);		    				
	КонецЕсли;
КонецПроцедуры


//////////////////////////////////////////////
//КОМАНДА ЗАГРУЗИТЬ ФАЙЛ

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	                  	
	СтандартнаяОбработка = Ложь;
	
	//создание диалога выбора файла
	Режим = РежимДиалогаВыбораФайла.Открытие;
	Диалог = Новый ДиалогВыбораФайла(Режим);
	Диалог.ПолноеИмяФайла = "";
	Диалог.Фильтр = "Файл CSV(*.csv)|*.csv";
	Диалог.ПроверятьСуществованиеФайла = Истина;
	
    Диалог.МножественныйВыбор = Истина;
	Диалог.Заголовок = "Выберите файлы с данными ";
	
	Если Диалог.Выбрать() Тогда
		
		Для Каждого НовФайл из Диалог.ВыбранныеФайлы Цикл 
			СписокФайлов.Добавить(НовФайл);
		КонецЦикла;
		
		ПутьКФайлу = "";
		Для каждого Файл Из СписокФайлов Цикл
			ПутьКФайлу = ПутьКФайлу + ?(ПутьКФайлу = "", "", ";") + Файл.Значение;
		КонецЦикла;
		
	КонецЕсли;
		 	
КонецПроцедуры

 &НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Объект.SiebelOrdersИзФайла.Очистить();  
	
	Для каждого Путь из СписокФайлов Цикл
		
		ИмяФайла = Путь.Значение;
		Если РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(ИмяФайла, "ИмяФайла") Тогда
			
			Состояние("Чтение данных из файла");
			Попытка
				Текст = Новый ТекстовыйДокумент;
				Текст.Прочитать(ИмяФайла);	
			Исключение 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Не удалось прочитать данные из файла: " + ОписаниеОшибки(),
				, "ПутьКФайлу");
				Возврат;
			КонецПопытки;
			
			Состояние("Загрузка прочитанных данных");	
			ЗагрузитьДанныеИзФайла(Текст);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзФайла(Текст) 
	
	ОбщийОтказ = Ложь;
		
	ТЗизФайла = Объект.SiebelOrdersИзФайла.Выгрузить(Новый Массив);
	ТЗизФайла.Колонки.Добавить("ДатаРеализации", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	ТЗизФайла.Колонки.Добавить("НомерРеализации", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(25));
	ТЗизФайла.Колонки.Добавить("КодЕдИзмерения", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(3));
		
	КоличествоСтрок = Текст.КоличествоСтрок();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		Стр = Текст.ПолучитьСтроку(НомерСтроки);
								
		ТекущийОтказ = Ложь;
		
		ЗаполнитьСтрокуТЗИзФайла(ТЗизФайла, Стр, НомерСтроки, ТекущийОтказ);
				
	КонецЦикла;	
	        	
	ТЗизФайла = ДозаполнитьТЗизФайлаВSiebelOrders(ТЗизФайла, ТекущийОтказ);
	
	Для Каждого СтрТЗ из ТЗизФайла Цикл 
		НоваяСтр = Объект.SiebelOrdersИзФайла.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр, СтрТЗ);
	КонецЦикла;	
	       		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуТЗИзФайла(ТЗ, Стр, НомерСтроки, Отказ) 
	
	Стр = СтрЗаменить(Стр,"""","");
	МассивЯчеек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр, ";");
	
	Если МассивЯчеек.Количество() <> 6 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + НомерСтроки + ": " + "нестандартное количество колонок!");
		//Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	СтрТЗ = ТЗ.Добавить();
    СтрТЗ.НомерСтроки = НомерСтроки;
	
	//дата реализации
	ДатаТекст = СтрЗаменить(СокрЛП(МассивЯчеек[0]), ".", " ");
	ДатаРеализации = ПолучитьДатуИзСтроки(ДатаТекст);
	Попытка
		СтрТЗ.ДатаРеализации = ДатаРеализации;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + НомерСтроки + ": " + "не удалось преобразовать """ + СокрЛП(МассивЯчеек[0]) + """ в дату!");
		//Отказ = Истина;
	КонецПопытки;
	
	СтрТЗ.НомерРеализации = СокрЛП(МассивЯчеек[1]);
	СтрТЗ.PartNumber = УдалитьЛидирующиеНули(СокрЛП(МассивЯчеек[2]));
	СтрТЗ.Description = СокрЛП(МассивЯчеек[3]);
	СтрТЗ.КодЕдИзмерения = СокрЛП(МассивЯчеек[4]);
	
	//количество
	Попытка
		Количество = Число(СтрЗаменить(СокрЛП(МассивЯчеек[5]), " " , ""));
		СтрТЗ.Количество = Количество;
	Исключение 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + НомерСтроки + ": " + "не удалось преобразовать """ + СокрЛП(МассивЯчеек[5]) + """ в число!");
		//Отказ = Истина;
	КонецПопытки;
			
КонецПроцедуры

&НаСервере
Функция ДозаполнитьТЗизФайлаВSiebelOrders(Знач ТЗ, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.ДатаРеализации,
	               |	ТЗ.НомерРеализации,
	               |	ТЗ.КодЕдИзмерения
	               |ПОМЕСТИТЬ ВтТЗ
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтТЗ.ДатаРеализации,
	               |	ВтТЗ.НомерРеализации,
	               |	ВтТЗ.КодЕдИзмерения,
	               |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	               |	КлассификаторЕдиницИзмерения.НаименованиеEng КАК UOM
	               |ИЗ
	               |	ВтТЗ КАК ВтТЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ПО ВтТЗ.НомерРеализации = РеализацияТоваровУслуг.Номер
	               |			И ((НЕ РеализацияТоваровУслуг.ПометкаУдаления))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	               |		ПО ((НЕ КлассификаторЕдиницИзмерения.ПометкаУдаления))
	               |			И (ВтТЗ.КодЕдИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	               |				ИЛИ ВтТЗ.КодЕдИзмерения = КлассификаторЕдиницИзмерения.Наименование)";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	СтруктураПоиска = Новый Структура("ДатаРеализации,НомерРеализации,КодЕдИзмерения");
	ы=0;
	Пока ы < ТЗ.количество() Цикл 
		
		Стр = ТЗ[ы];
		СтруктураПоиска.ДатаРеализации  = Стр.ДатаРеализации;
		СтруктураПоиска.НомерРеализации = Стр.НомерРеализации;
		СтруктураПоиска.КодЕдИзмерения  = Стр.КодЕдИзмерения;
		
		МассивСтрок = РезультатЗапроса.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() > 1 Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Стр.НомерСтроки + ": " + 
			"по дате и номеру реализации, коду единицы измерения найдены различные данные,
			|необходимо сверить данные в базе"  + "!");
		КонецЕсли;
		
		НайденнаяСтрока = МассивСтрок[0];
		Если Не ЗначениеЗаполнено(НайденнаяСтрока.UOM) Тогда 
		     ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Стр.НомерСтроки + ": " + 
			"по коду """ + НайденнаяСтрока.КодЕдИзмерения + """ не найден Basic UOM"""  + "!");
		Иначе 
			 Стр.UOM = НайденнаяСтрока.UOM;
		КонецЕсли;
		 
		Если Не ЗначениеЗаполнено(НайденнаяСтрока.Реализация) Тогда 
		     ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Стр.НомерСтроки + ": " + 
			"по номеру """ + НайденнаяСтрока.НомерРеализации + """ и дате " + НайденнаяСтрока.ДатаРеализации + " не найдена Реализация"  + ".");
			 ТЗ.Удалить(Стр);
		Иначе 
			 Стр.Реализация = НайденнаяСтрока.Реализация;
			 ы = ы+1;
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

&НаСервере
Функция ПолучитьДатуИзСтроки(Знач ДатаСтрока) 
	
	ДатаСтрока = СокрЛП(ДатаСтрока);
	ПозицияПробела = СтрНайти(ДатаСтрока, " ");
	Если ПозицияПробела = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
			
	ДеньСтрока = Лев(ДатаСтрока, ПозицияПробела - 1);	
	Попытка
		День = Число(ДеньСтрока);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	ОставшаясяСтрока = СокрЛ(Сред(ДатаСтрока, ПозицияПробела+1));
		
	МесяцСтрока = Лев(ОставшаясяСтрока, 3);
	Месяц = Число(МесяцСтрока);
	Если Месяц = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	ПозицияПробела = СтрНайти(ОставшаясяСтрока, " ");
	Если ПозицияПробела = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОставшаясяСтрока = СокрЛ(Сред(ОставшаясяСтрока, ПозицияПробела+1));
	ГодСтрока = Лев(ОставшаясяСтрока, 4);
	
	Попытка
		Год = Число(ГодСтрока);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Попытка
		ИтоговаяДата = Дата(Год, Месяц, День);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат ИтоговаяДата;
			
КонецФункции

////////////////////////////////////////////////////////////////
////КОМАНДА Преобразовать файлы

&НаКлиенте
Процедура ПреобразоватьДляEPU(Команда)
	
	Для каждого Путь из СписокФайлов Цикл
		
		ИмяФайла = Путь.Значение;
		Если РГСофтКлиентСервер.ФайлДоступенДляЗагрузки(ИмяФайла, "ИмяФайла") Тогда
			
			Состояние("Чтение данных из файла");
			Попытка
				Текст = Новый ТекстовыйДокумент;
				Текст.Прочитать(ИмяФайла);	
			Исключение 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Не удалось прочитать данные из файла: " + ОписаниеОшибки(),
				, "ПутьКФайлу");
				Возврат;
			КонецПопытки;
			
			Состояние("Загрузка прочитанных данных");	
			ПреобразоватьДанныеВФайле(Текст, ИмяФайла);
			
		КонецЕсли;
		
	КонецЦикла;
				
КонецПроцедуры

&НаКлиенте
Процедура ПреобразоватьДанныеВФайле(Текст, ИмяФайла) 
	
	МассивСтрок = Новый Массив;
	
	//обрабатываем все строки файла
	КоличествоСтрок = Текст.КоличествоСтрок();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		Стр = Текст.ПолучитьСтроку(НомерСтроки);
								
		Стр = СтрЗаменить(Стр,"""","");
	    МассивЯчеек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр, ";");
		
		НомерРеализации = МассивЯчеек[1];
		ДатаРеализации  = МассивЯчеек[0];
		НовНомерРеализации = ВернутьНомерРеализации(СокрЛП(НомерРеализации), СокрЛП(ДатаРеализации));
		
		Если НомерРеализации <> НовНомерРеализации Тогда 
			МассивЯчеек.Вставить(1, НовНомерРеализации);
			МассивЯчеек.Удалить(2);
		КонецЕсли;
		
		МассивСтрок.Добавить(МассивЯчеек);

	КонецЦикла;	

	//записываем измененный текст в файл 
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла);
	
	Для Каждого ЭлементМассива из МассивСтрок Цикл 
		НоваяСтрокаФайла = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ЭлементМассива, ";");
	    ЗаписьТекста.ЗаписатьСтроку(НоваяСтрокаФайла);
	КонецЦикла;			
	                     	
	ЗаписьТекста.Закрыть();
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Преобразование для EPU выполнено.");
	       	           	
КонецПроцедуры                  

&НаКлиенте
Функция ВернутьНомерРеализации(Знач НомерРеализации, Знач ДатаРеализации)
	
	Если Не ЗначениеЗаполнено(НомерРеализации) Тогда 
		Возврат НомерРеализации;
	КонецЕсли;
	     	 	
	ДлинаНомера = СтрДлина(НомерРеализации);
	
	//сначала проверим префикс (вместо 1 может быть I)
	НомерРеализации = СтрЗаменить(НомерРеализации, "SLI-RPI-", "SLI-RP1-");
	
	ПрефиксSLI = "SLI-RP1-";
	ПозицияПрефиксаSLI = СтрНайти(НомерРеализации, ПрефиксSLI);
	       		
	Если ПозицияПрефиксаSLI > 1 Тогда 
		//избавляемся от лишних символов слева
		НомерРеализации = Прав(НомерРеализации, ДлинаНомера - (ПозицияПрефиксаSLI - 1));
		ДлинаНомера = СтрДлина(НомерРеализации);
	КонецЕсли;
	
	Если ПозицияПрефиксаSLI = 1 и ДлинаНомера > 14 Тогда 
		//избавляемся от лишних символов справа
		НомерРеализации = Лев(НомерРеализации, 14);
	КонецЕсли;
	
	
	НомерЧислом = "";
	Попытка
		НомерЧислом = Число(НомерРеализации);
	Исключение 
		Возврат НомерРеализации;
	КонецПопытки;
	
	Если НомерЧислом <> "" Тогда 
		
		Если ДлинаНомера = 3 Тогда 
			
			Если ЗначениеЗаполнено(ДатаРеализации) Тогда
				ГодРеализации = Прав(ДатаРеализации, 1);
				НомерРеализации = ПрефиксSLI + ГодРеализации + "I-" + НомерРеализации;
			КонецЕсли;

		ИначеЕсли ДлинаНомера = 4 Тогда
			
			НомерРеализации = "IW " + НомерРеализации;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НомерРеализации;
	
КонецФункции


&НаКлиенте
Процедура ДанныеSiebelOrdersПриИзменении(Элемент)
	ОбновитьПодсветку();
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьЛидирующиеНули(Слово)
	
	Пока СтрДлина(Слово) > 0 И Лев(Слово,1) = "0" Цикл
		Слово = Сред(Слово,2);
	КонецЦикла;
	
	Возврат Слово;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьSiebel(Команда)
	
	ЗаполнитьSiebelНаСервере();	

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьSiebelНаСервере()
	
	Запрос = Новый запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.Ссылка В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					НомераИнвойсовLawson.Документ КАК ссылка
	|				ИЗ
	|					РегистрСведений.НомераИнвойсовLawson КАК НомераИнвойсовLawson)
	|	И НЕ РеализацияТоваровУслуг.ПометкаУдаления
	|	И РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &нач И &кон";	
	Запрос.Параметры.Вставить("нач",ДобавитьМесяц(ТекущаяДата(),-6));
	Запрос.Параметры.Вставить("кон",КонецДня(ТекущаяДата()));
	ВыборкаДок = Запрос.Выполнить().Выбрать();
	
	Номера = РегистрыСведений.НомераИнвойсовLawson.СоздатьНаборЗаписей();
	
	пока ВыборкаДок.Следующий() цикл
		Документ = ВыборкаДок.Ссылка;
		Номера.Отбор.Документ.Установить(Документ);
		Номера.Прочитать();
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВложенныйЗапрос.Номер,
		                      |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		                      |	ВложенныйЗапрос.СтавкаНДС,
		                      |	ВложенныйЗапрос.Ticket КАК Тикет,
		                      |	ВложенныйЗапрос.GLDate КАК ДатаLawson
		                      |ИЗ
		                      |	(ВЫБРАТЬ
		                      |		РеализацияТоваровУслугТовары.Ticket.SiebelOrder.LawsonInvoice КАК Номер,
		                      |		ВЫБОР
		                      |			КОГДА (НЕ РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС)
		                      |				ТОГДА РеализацияТоваровУслугТовары.Сумма + РеализацияТоваровУслугТовары.СуммаНДС
		                      |			ИНАЧЕ РеализацияТоваровУслугТовары.Сумма
		                      |		КОНЕЦ КАК Сумма,
		                      |		РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
		                      |		РеализацияТоваровУслугТовары.Ticket КАК Ticket,
		                      |		РеализацияТоваровУслугТовары.Ticket.SiebelOrder.GLDate КАК GLDate
		                      |	ИЗ
		                      |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		                      |	ГДЕ
		                      |		РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		                      |	
		                      |	ОБЪЕДИНИТЬ ВСЕ
		                      |	
		                      |	ВЫБРАТЬ
		                      |		РеализацияТоваровУслугУслуги.Ticket.SiebelOrder.LawsonInvoice,
		                      |		ВЫБОР
		                      |			КОГДА (НЕ РеализацияТоваровУслугУслуги.Ссылка.СуммаВключаетНДС)
		                      |				ТОГДА РеализацияТоваровУслугУслуги.Сумма + РеализацияТоваровУслугУслуги.СуммаНДС
		                      |			ИНАЧЕ РеализацияТоваровУслугУслуги.Сумма
		                      |		КОНЕЦ,
		                      |		РеализацияТоваровУслугУслуги.СтавкаНДС,
		                      |		РеализацияТоваровУслугУслуги.Ticket,
		                      |		РеализацияТоваровУслугУслуги.Ticket.SiebelOrder.GLDate
		                      |	ИЗ
		                      |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		                      |	ГДЕ
		                      |		РеализацияТоваровУслугУслуги.Ссылка = &Ссылка) КАК ВложенныйЗапрос
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ВложенныйЗапрос.Номер,
		                      |	ВложенныйЗапрос.СтавкаНДС,
		                      |	ВложенныйЗапрос.Ticket,
		                      |	ВложенныйЗапрос.GLDate");
		Запрос.УстановитьПараметр("Ссылка", Документ);
		Выборка = запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = Номера.Добавить();
			Запись.Документ = Документ;
			Запись.СуммаДокументаБезНДС = SalesBook.ОпределитьСуммуДокументаБезНДС(Документ);
			Запись.СуммаДокумента = ОбщегоНазначения.ПолучитьСуммуДокументаСНДС(Документ);
			Запись.Номер = Выборка.Номер;
			Запись.Сумма = Выборка.Сумма;
			Запись.СтавкаНДС = Выборка.СтавкаНДС;
			Запись.Тикет = Выборка.Тикет;
			Запись.ДатаLawson = Выборка.ДатаLawson;
		КонецЦикла;
		
		Попытка 
			Номера.Записать();
		Исключение
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьПоSO(Команда)
	
	ОткрытьФорму("Обработка.ПривязываниеРеализацийКInventoryСписанию.Форма.Форма1");

КонецПроцедуры

