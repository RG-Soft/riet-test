
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Segment = Справочники.Сегменты.НайтиПоКоду("ALS");
	
КонецПроцедуры

//////////////////////////////////////////////
//КОМАНДА ОБНОВИТЬ

&НаКлиенте
Процедура ЗаполнитьСписокРеализаций(Команда)
	
	Если Не ЗначениеЗаполнено(ПериодОтбораРеализаций.ДатаНачала) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен период!",
			, "Объект",	"ПериодОтбораРеализаций");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокРеализацийСОтбором();
	
 КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьСписокРеализацийСОтбором()
	
	МассивИННInterCompany = Новый Массив;
	МассивИННInterCompany.Добавить("8604025355"); //ЭПУ
	МассивИННInterCompany.Добавить("7709413265"); //Шлюмберже
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Segment", Segment);
	Запрос.УстановитьПараметр("ИННInterCompany", МассивИННInterCompany);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодОтбораРеализаций.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ПериодОтбораРеализаций.ДатаОкончания);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслугТовары.Ссылка КАК Реализация
	               |ПОМЕСТИТЬ ВТРеализацииПоСегменту
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.ProductLine В ИЕРАРХИИ(&Segment)
	               |	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	               |	И РеализацияТоваровУслугТовары.Ссылка.ДатаПроведения <= &КонецПериода
	               |	И РеализацияТоваровУслугТовары.Ссылка.ДатаПроведения >= &НачалоПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	               |	СчетФактураВыданный.Ссылка КАК СчетФактура,
	               |	РеализацияТоваровУслуг.Ссылка.Контрагент КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА РеализацияТоваровУслуг.Ссылка.Контрагент.ИНН В (&ИННInterCompany)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК InterCompany,
	               |	РеализацияТоваровУслуг.ДатаПроведения КАК ДатаПроведения
	               |ПОМЕСТИТЬ ВТРеализации
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |		ПО РеализацияТоваровУслуг.Ссылка = СчетФактураВыданный.ДокументОснование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	               |		ПО РеализацияТоваровУслуг.Ссылка = InventoryСписаниеGoods.Реализация
	               |ГДЕ
	               |	InventoryСписаниеGoods.Реализация ЕСТЬ NULL 
	               |	И РеализацияТоваровУслуг.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТРеализацииПоСегменту.Реализация
	               |			ИЗ
	               |				ВТРеализацииПоСегменту КАК ВТРеализацииПоСегменту)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	SiebelOrdersDetails.Количество,
	               |	SiebelOrdersDetails.ЕдиницаИзмерения КАК UOM,
	               |	SiebelOrdersDetails.PartNumber,
	               |	SiebelOrdersDetails.Description,
	               |	НомераИнвойсовLawson.Документ КАК Реализация,
	               |	SiebelOrdersDetails.НомерСтроки,
	               |	НомераИнвойсовLawson.Тикет.ProductLine КАК ProductLine
	               |ПОМЕСТИТЬ ВТpartNumbers
	               |ИЗ
	               |	РегистрСведений.НомераИнвойсовLawson КАК НомераИнвойсовLawson
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.SiebelOrders.Details КАК SiebelOrdersDetails
	               |		ПО НомераИнвойсовLawson.Тикет.SiebelOrder = SiebelOrdersDetails.Ссылка
	               |			И (НомераИнвойсовLawson.Документ В
	               |				(ВЫБРАТЬ
	               |					ВТРеализации.Реализация
	               |				ИЗ
	               |					ВТРеализации КАК ВТРеализации
	               |				ГДЕ
	               |					(НЕ ВТРеализации.InterCompany)))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияТоваровУслугТовары.Количество,
	               |	РеализацияТоваровУслугТовары.ЕдиницаИзмерения,
	               |	РеализацияТоваровУслугТовары.Номенклатура.Артикул,
	               |	РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное,
	               |	РеализацияТоваровУслугТовары.Ссылка,
	               |	РеализацияТоваровУслугТовары.НомерСтроки,
	               |	РеализацияТоваровУслугТовары.ProductLine
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТРеализации.Реализация
	               |			ИЗ
	               |				ВТРеализации КАК ВТРеализации
	               |			ГДЕ
	               |				ВТРеализации.InterCompany)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТРеализации.Реализация,
	               |	ВТРеализации.СчетФактура,
	               |	ВТРеализации.Контрагент,
	               |	ВТРеализации.InterCompany,
	               |	ВТРеализации.ДатаПроведения,
	               |	НомераИнвойсовLawson.Тикет.SiebelOrder.LawsonInvoice КАК LawsonInvoice
	               |ИЗ
	               |	ВТРеализации КАК ВТРеализации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераИнвойсовLawson КАК НомераИнвойсовLawson
	               |		ПО ВТРеализации.Реализация = НомераИнвойсовLawson.Документ
	               |ГДЕ
	               |	ВТРеализации.Реализация В
	               |			(ВЫБРАТЬ
	               |				ВТpartNumbers.Реализация
	               |			ИЗ
	               |				ВТpartNumbers КАК ВТpartNumbers)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТРеализации.ДатаПроведения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТpartNumbers.Количество,
	               |	ВТpartNumbers.UOM,
	               |	ВТpartNumbers.PartNumber,
	               |	ВТpartNumbers.Description,
	               |	ВТpartNumbers.Реализация,
	               |	ВТpartNumbers.НомерСтроки КАК НомерСтрокиПП,
	               |	ВТpartNumbers.ProductLine
	               |ИЗ
	               |	ВТpartNumbers КАК ВТpartNumbers
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтрокиПП";
	 	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Объект.СписокРеализаций.Загрузить(РезультатыЗапроса[3].Выгрузить());
	Объект.ДанныеРеализации.Загрузить(РезультатыЗапроса[4].Выгрузить());
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
/// СПИСОК РЕАЛИЗАЦИЙ ПРИ АКТИВИЗАЦИИ СТРОКИ

&НаКлиенте
Процедура СписокРеализацийПриАктивизацииСтроки(Элемент)
	
	ОбновитьДанныеInventory();
		 	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеInventory()
	
	СписокInventoryСписаний = Объект.СписокInventoryСписаний;	
	СписокInventoryСписаний.Очистить();
	InventoryGoods = Объект.InventoryGoods;	
	InventoryGoods.Очистить();
	
	ТекДанные = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда  
		Возврат;
	КонецЕсли;
	
	Элементы.ДанныеРеализации.ОтборСтрок = Новый ФиксированнаяСтруктура("Реализация",ТекДанные.Реализация);
	
	МассивPartNumbers = Новый Массив;
	Для Каждого Стр из Объект.ДанныеРеализации Цикл 
		Если Стр.Реализация = ТекДанные.Реализация
			И ЗначениеЗаполнено(Стр.PartNumber)
			И МассивPartNumbers.Найти(Стр.PartNumber) = Неопределено Тогда 
			МассивPartNumbers.Добавить(Стр.PartNumber);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивPartNumbers.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураМассивовСтруктур = ПолучитьInventoryСписания(МассивPartNumbers, Segment, ТекДанные.Реализация);
	  			   	
	МассивСтруктурInventoryСписаний = СтруктураМассивовСтруктур.МассивСтруктурInventoryСписаний;
	Для Каждого СтруктураМассива из МассивСтруктурInventoryСписаний цикл
		НоваяСтрСписаний = СписокInventoryСписаний.Добавить();
		Для Каждого ЭлементСтруктуры из СтруктураМассива Цикл 
			НоваяСтрСписаний[ЭлементСтруктуры.Ключ] = СтруктураМассива[ЭлементСтруктуры.Ключ];
		КонецЦикла;
	КонецЦикла;
	           
	МассивСтруктурInventoryGoods = СтруктураМассивовСтруктур.МассивСтруктурInventoryGoods;
	Для Каждого СтруктураМассива из МассивСтруктурInventoryGoods цикл
		НоваяСтрGoods = InventoryGoods.Добавить();
		Для Каждого ЭлементСтруктуры из СтруктураМассива Цикл 
			НоваяСтрGoods[ЭлементСтруктуры.Ключ] = СтруктураМассива[ЭлементСтруктуры.Ключ];
		КонецЦикла;
	КонецЦикла;
	  		
	ОбновитьПодсветку();
	 	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьInventoryСписания(МассивPartNumbers, Segment, Реализация)
	
	СтруктураМассивовСтруктур = Новый Структура("МассивСтруктурInventoryСписаний,МассивСтруктурInventoryGoods");
	МассивСтруктурInventoryСписаний = Новый Массив;
	МассивСтруктурInventoryGoods = Новый Массив;
	   
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивPartNumbers", МассивPartNumbers);
	Запрос.УстановитьПараметр("Segment", Segment);
	Запрос.УстановитьПараметр("ДатаПроведенияРеализации", Реализация.ДатаПроведения);
	Запрос.УстановитьПараметр("ДатаПроведенияРеализацииПлюсПолГода", ДобавитьМесяц(Реализация.ДатаПроведения,6));
	Запрос.Текст = "ВЫБРАТЬ
	               |	InventoryСписаниеGoods.Ссылка КАК InventoryСписание,
	               |	InventoryСписаниеGoods.Good,
	               |	InventoryСписаниеGoods.UOM,
	               |	InventoryСписаниеGoods.Quantity,
	               |	InventoryСписаниеGoods.AU,
	               |	InventoryСписаниеGoods.Good.Код КАК PartNumber,
	               |	InventoryСписаниеGoods.Реализация,
	               |	InventoryСписаниеGoods.НомерСтроки
	               |ПОМЕСТИТЬ ВТInventoryGoods
	               |ИЗ
	               |	Документ.InventoryСписание.Goods КАК InventoryСписаниеGoods
	               |ГДЕ
	               |	InventoryСписаниеGoods.Good.Код В(&МассивPartNumbers)
	               |	И InventoryСписаниеGoods.Ссылка.Segment В ИЕРАРХИИ(&Segment)
	               |	И InventoryСписаниеGoods.Ссылка.Дата > &ДатаПроведенияРеализации
	               |	И InventoryСписаниеGoods.Ссылка.Дата < &ДатаПроведенияРеализацииПлюсПолГода
	               |	И InventoryСписаниеGoods.Ссылка.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТInventoryGoods.InventoryСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВТInventoryGoods.Реализация = ЗНАЧЕНИЕ(документ.РеализацияТоваровУслуг.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ 1
	               |		КОНЕЦ) КАК КолВоРеализацийВСтроках,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТInventoryGoods.НомерСтроки) КАК КолВоСтрок,
	               |	МАКСИМУМ(ВТInventoryGoods.AU) КАК AU
	               |ИЗ
	               |	ВТInventoryGoods КАК ВТInventoryGoods
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТInventoryGoods.InventoryСписание
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КолВоСтрок УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТInventoryGoods.InventoryСписание,
	               |	ВТInventoryGoods.Good,
	               |	ВТInventoryGoods.UOM,
	               |	ВТInventoryGoods.Quantity,
	               |	ВТInventoryGoods.AU,
	               |	ВТInventoryGoods.PartNumber,
	               |	ВТInventoryGoods.Реализация,
	               |	СчетФактураВыданный.Ссылка КАК СчетФактура,
	               |	ВТInventoryGoods.НомерСтроки КАК НомерСтрокиВТЧ
	               |ИЗ
	               |	ВТInventoryGoods КАК ВТInventoryGoods
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	               |		ПО ВТInventoryGoods.Реализация = СчетФактураВыданный.ДокументОснование
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтрокиВТЧ";
	              	      	
	Результаты = Запрос.ВыполнитьПакет();    			
	
	ВыборкаСписаний = Результаты[1].Выбрать();
	Пока ВыборкаСписаний.Следующий() Цикл 
		
		СтруктураInventoryСписаний = Новый Структура("InventoryСписание,AU,КолВоСтрок,КолВоРеализацийВСтроках");
		Для Каждого ЭлементСтруктуры из СтруктураInventoryСписаний Цикл 
			СтруктураInventoryСписаний[ЭлементСтруктуры.Ключ] = ВыборкаСписаний[ЭлементСтруктуры.Ключ];
		КонецЦикла;
		
		МассивСтруктурInventoryСписаний.Добавить(СтруктураInventoryСписаний);
		
	КонецЦикла;
	
	ВыборкаGoods = Результаты[2].Выбрать();
	Пока ВыборкаGoods.Следующий() Цикл 
		
		СтруктураInventoryGoods = Новый Структура("InventoryСписание,Good,UOM,Quantity,AU,PartNumber,Реализация,СчетФактура,НомерСтрокиВТЧ");
		Для Каждого ЭлементСтруктуры из СтруктураInventoryGoods Цикл 
			СтруктураInventoryGoods[ЭлементСтруктуры.Ключ] = ВыборкаGoods[ЭлементСтруктуры.Ключ];
		КонецЦикла;
		
		МассивСтруктурInventoryGoods.Добавить(СтруктураInventoryGoods);
		
	КонецЦикла;
	
    СтруктураМассивовСтруктур.МассивСтруктурInventoryСписаний = МассивСтруктурInventoryСписаний;
	СтруктураМассивовСтруктур.МассивСтруктурInventoryGoods    = МассивСтруктурInventoryGoods;
	
	Возврат СтруктураМассивовСтруктур; 
	   
КонецФункции

///////////////////////////////////////////////////////////////////////
/// СПИСОК INVENTORY СПИСАНИЙ ПРИ АКТИВИЗАЦИИ СТРОКИ

&НаКлиенте
Процедура СписокInventoryСписанийПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.СписокInventoryСписаний.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 	
	
	Элементы.InventoryGoods.ОтборСтрок = Новый ФиксированнаяСтруктура("InventoryСписание",ТекДанные.InventoryСписание);
	
	ОбновитьПодсветку();
	
КонецПроцедуры
  
//////////////////////////////////////////////
// ОБНОВИТЬ ПОДСВЕТКУ

&НаКлиенте
Процедура ОбновитьПодсветку(); 
	Для каждого Списание из Объект.InventoryGoods цикл	
		Списание.окрашивать = Ложь;            
	КонецЦикла; 
	
	ТекДанные = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда  
		Для каждого Списание из Объект.InventoryGoods цикл		
			для Каждого Реализация из Объект.ДанныеРеализации цикл
				если (СокрЛП(Реализация.PartNumber) = СокрЛП(Списание.PartNumber)) и (Реализация.Реализация =ТекДанные.Реализация) тогда
					Списание.окрашивать = истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры
                
//////////////////////////////////////////////
//КОМАНДА ПРИВЯЗАТЬ

&НаКлиенте
Процедура Привязать(Команда)
	
	Отказ = Ложь;
	
    ТекДанныеInventory = Элементы.СписокInventoryСписаний.ТекущиеДанные;
	Если ТекДанныеInventory = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Inventory списание"" для привязывания!",,,,Отказ);
	КонецЕсли;	
	
	ТекДанныеРеализаций = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанныеРеализаций = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Реализация товаров и услуг"" для привязывания!",,,,Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		РеализацияОбъект        = ТекДанныеРеализаций.Реализация.ПолучитьОбъект();
		InventoryСписаниеОбъект = ТекДанныеInventory.InventoryСписание.ПолучитьОбъект();
		
		InventoryСписаниеОбъект.Реализация            = РеализацияОбъект.Ссылка;
		InventoryСписаниеОбъект.НалоговыйПериод       = РеализацияОбъект.НалоговыйПериод;
		InventoryСписаниеОбъект.ОбменДанными.Загрузка = Истина;
		Для Каждого Стр из InventoryСписаниеОбъект.Goods цикл
			Стр.Реализация = РеализацияОбъект.Ссылка;
		КонецЦикла;
		Попытка
			InventoryСписаниеОбъект.Записать();
			ПоказатьОповещениеПользователя(,,"Изменен документ: 
			|Inventory " + ТекДанныеInventory.InventoryСписание + ".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать: " + ТекДанныеInventory.InventoryСписание + ",
			|" + ОписаниеОшибки());
		КонецПопытки;
		ОбновитьДанныеInventory();    				
	КонецЕсли;
	
КонецПроцедуры
            
//////////////////////////////////////////////
//КОМАНДА ПРИВЯЗАТЬ ПОСТРОЧНО

&НаКлиенте
Процедура ПривязатьКСТрокам(Команда)
	
	Отказ = Ложь;
	
    ТекДанныеInventory = Элементы.InventoryGoods.ТекущиеДанные;
	Если ТекДанныеInventory = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет выделенных строк документа ""Inventory списание"" для привязывания!",,,,Отказ);
	КонецЕсли;	
	ТекДанныеРеализаций = Элементы.СписокРеализаций.ТекущиеДанные;
	Если ТекДанныеРеализаций = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выделен документ ""Реализация товаров и услуг"" для привязывания!",,,,Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		РеализацияОбъект        = ТекДанныеРеализаций.Реализация.ПолучитьОбъект();
		InventoryСписаниеОбъект = ТекДанныеInventory.InventoryСписание.ПолучитьОбъект();
		
		InventoryСписаниеОбъект.НалоговыйПериод       = РеализацияОбъект.НалоговыйПериод;
		InventoryСписаниеОбъект.ОбменДанными.Загрузка = Истина;
		Для каждого стр из Элементы.InventoryGoods.ВыделенныеСтроки цикл
			id = Объект.InventoryGoods.НайтиПоИдентификатору(стр);
			InventoryСписаниеОбъект.Goods[(id.НомерСтрокиВТЧ-1)].Реализация = РеализацияОбъект.Ссылка;
		КонецЦикла;
		Попытка
			InventoryСписаниеОбъект.Записать();
			ПоказатьОповещениеПользователя(,,"Изменен документ: 
			|Inventory " + ТекДанныеInventory.InventoryСписание + ".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать: " + ТекДанныеInventory.InventoryСписание + ",
			|" + ОписаниеОшибки());
		КонецПопытки;
		ОбновитьДанныеInventory();		    				
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////
//СОБЫТИЕ ВЫБОР 

&НаКлиенте
Процедура СписокInventoryСписанийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СписокInventoryСписаний.ТекущиеДанные;
	
	Если Поле.Имя = "СписокInventoryСписанийInventoryСписание" тогда
		Если ЗначениеЗаполнено(ТекДанные.InventoryСписание) тогда
			ОткрытьЗначение(ТекДанные.InventoryСписание);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
                    
&НаКлиенте
Процедура СписокРеализацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СписокРеализаций.ТекущиеДанные;
	
	Если Поле.Имя = "СписокРеализацийРеализация" тогда
		Если ЗначениеЗаполнено(ТекДанные.Реализация) тогда
			ОткрытьЗначение(ТекДанные.Реализация);
		КонецЕсли;
	ИначеЕсли Поле.Имя = "СписокРеализацийСчетФактура" тогда
		Если ЗначениеЗаполнено(ТекДанные.СчетФактура) тогда
			ОткрытьЗначение(ТекДанные.СчетФактура);
		КонецЕсли;
	КонецЕсли;
	   	
КонецПроцедуры


