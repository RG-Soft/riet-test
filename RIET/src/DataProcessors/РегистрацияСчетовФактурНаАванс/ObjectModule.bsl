Перем мВалютаРегламентированногоУчета Экспорт; 
Перем Структура_ТипыДокументовАванса;

//Пересчет суммы НДС и валютной суммы при изменении суммы регл.
Процедура ПересчетНДСиВалютнойСуммыПоСтроке(ТД, ПересчетВалютнойСуммы = Ложь, СуммаСтарая = 0) Экспорт
	
	ТД.СуммаНДС = 0;
	
	Если ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		ТД.СуммаНДС = ТД.Сумма * 20 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		ТД.СуммаНДС = ТД.Сумма * 10 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
		ТД.СуммаНДС = ТД.Сумма * 18 / 100;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		ТД.СуммаНДС = ТД.Сумма * 20 / 120;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		ТД.СуммаНДС = ТД.Сумма * 10 / 110;
	ИначеЕсли ТД.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		ТД.СуммаНДС = ТД.Сумма * 18 / 118;
	КонецЕсли;
	
	Если ПересчетВалютнойСуммы = Истина тогда 
		Если ТД.ВалютаДокумента = мВалютаРегламентированногоУчета Тогда
			ТД.ВалютнаяСумма = ТД.Сумма;
		Иначе
			ТД.ВалютнаяСумма = ?(НЕ ЗначениеЗаполнено(СуммаСтарая), 0, ТД.ВалютнаяСумма * ТД.Сумма / СуммаСтарая);
		КонецЕсли;
	КонецЕсли; 
	СуммаСтарая = ТД.Сумма;
	
КонецПроцедуры 	

Процедура ПровркаСчетаНаПредоплату(Счет, Отказ, СтавкаСчета, СоответствиеСтавок)
	
	Копия = Счет.Товары.Выгрузить(,"СтавкаНДС");
	Копия.Свернуть("СтавкаНДС");
	Если ЗначениеЗаполнено(Копия) Тогда
	СтавкаСчета = ?(ЗначениеЗаполнено(СоответствиеСтавок[Копия[0].СтавкаНДС]), СоответствиеСтавок[Копия[0].СтавкаНДС], Копия[0].СтавкаНДС);
	Если Копия.Количество() > 1 Тогда
		
		Сообщить("В счете: " + Строка(Счет) + " - указано более одного вида ставки НДС. Дальнейшее заполнение счета-фактуры невозможно.", СтатусСообщения.Важное);
		Отказ = Истина;
		
	КонецЕсли;
	КонецЕсли;

	Копия = Счет.Услуги.Выгрузить(,"СтавкаНДС");
	Копия.Свернуть("СтавкаНДС");
	Если ЗначениеЗаполнено(Копия) Тогда
	СтавкаСчета = ?(ЗначениеЗаполнено(СоответствиеСтавок[Копия[0].СтавкаНДС]), СоответствиеСтавок[Копия[0].СтавкаНДС], Копия[0].СтавкаНДС);
	Если Копия.Количество() > 1 Тогда
		
		Сообщить("В счете: " + Строка(Счет) + " - указано более одного вида ставки НДС. Дальнейшее заполнение счета-фактуры невозможно.", СтатусСообщения.Важное);
		Отказ = Истина;
		
	КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокиДокумента(ТаблицаРезультатов) Экспорт
	
	//Ставка0 = Перечисления.СтавкиНДС.НДС0;
	СоответствиеСтавок = Новый Соответствие();
	СоответствиеСтавок.Вставить(Перечисления.СтавкиНДС.НДС10, Перечисления.СтавкиНДС.НДС10_110);
	СоответствиеСтавок.Вставить(Перечисления.СтавкиНДС.НДС18, Перечисления.СтавкиНДС.НДС18_118);
	СоответствиеСтавок.Вставить(Перечисления.СтавкиНДС.НДС20, Перечисления.СтавкиНДС.НДС20_120);
	// По ставке НДС 0% СФ на аванс выписывается по расчетной ставке 18/118
	Если НачалоПериода>'20051231' Тогда
		// Регистрация авансов по реализации на экспорт производится в момент
		// подтверждения правомерности применения 0%.
		// Полноценная отработка положений ст. 154 НК РФ п.9 планируется в ближайших
		// версиях, после появления пояснений по применению положений данной статьи от ФНС.
	Иначе
		СоответствиеСтавок.Вставить(Перечисления.СтавкиНДС.НДС0, Перечисления.СтавкиНДС.НДС18_118);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Условие = "";
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		Условие = Условие + " И ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)";
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",ПодразделениеОрганизации);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИнвойсинговыйЦентр) Тогда
		Условие = Условие + " И ИнвойсинговыйЦентр = &ИнвойсинговыйЦентр";
		Запрос.УстановитьПараметр("ИнвойсинговыйЦентр",ИнвойсинговыйЦентр);
	КонецЕсли;
//
	
	Запрос.Текст = 
	     "ВЫБРАТЬ
	     |	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента,
	     |	ДоговорыКонтрагентов.Владелец КАК Контрагент
	     |ПОМЕСТИТЬ Договоры
	     |ИЗ
	     |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	Договоры.Контрагент,
	     |	ВзаиморасчетыСПокупателямиОбороты.ДоговорКонтрагента,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка.ВалютаДокумента КАК ВалютаРасчетов,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка КАК ДокументАванса,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка.Дата КАК ДокументАвансаДата,
	     |	ВзаиморасчетыСПокупателямиОбороты.ПодразделениеОрганизации,
	     |	СУММА(ВзаиморасчетыСПокупателямиОбороты.СуммаРеглРасход) КАК Сумма,
	     |	СУММА(ВзаиморасчетыСПокупателямиОбороты.СуммаВзаиморасчетовРасход) КАК ВалютнаяСумма,
	     |	ВзаиморасчетыСПокупателямиОбороты.СчетНаПредоплату
	     |ИЗ
	     |	РегистрНакопления.ВзаиморасчетыСПокупателями.Обороты(
	     |			&НачалоПериода,
	     |			&КонецПериода,
	     |			Период,
	     |			(НЕ Сделка ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
		 |			 "+Условие+"
	     |				И (НЕ ЕСТЬNULL(Сделка.ДокументОснование, НЕОПРЕДЕЛЕНО) ССЫЛКА Документ.ВводНачальныхОстатковНДС)) КАК ВзаиморасчетыСПокупателямиОбороты
	     |		ЛЕВОЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	     |		ПО ВзаиморасчетыСПокупателямиОбороты.ДоговорКонтрагента = Договоры.ДоговорКонтрагента
	     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	     |			ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка КАК Ссылка
	     |		ИЗ
	     |			Документ.ПлатежноеПоручениеВходящее.РасшифровкаПлатежа КАК ПлатежноеПоручениеВходящееРасшифровкаПлатежа
	     |		ГДЕ
		 |          ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка.Allocated И
	     |			(ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Сделка = ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Ссылка ИЛИ ПлатежноеПоручениеВходящееРасшифровкаПлатежа.Сделка = НЕОПРЕДЕЛЕНО)) КАК ППВ
	     |		ПО ВзаиморасчетыСПокупателямиОбороты.Сделка = ППВ.Ссылка
	     |ГДЕ
	     |	ВзаиморасчетыСПокупателямиОбороты.СуммаРеглРасход > 0
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	Договоры.Контрагент,
	     |	ВзаиморасчетыСПокупателямиОбороты.ДоговорКонтрагента,
	     |	ВзаиморасчетыСПокупателямиОбороты.ПодразделениеОрганизации,
	     |	ВзаиморасчетыСПокупателямиОбороты.СчетНаПредоплату,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка.Дата,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка.ВалютаДокумента,
	     |	ВзаиморасчетыСПокупателямиОбороты.Сделка";
					 
	//Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("НачалоПериода",	Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",	Новый Граница(КонецДня(КонецПериода), ВидГраницы.Включая));
	
	Если Структура_ТипыДокументовАванса.Количество()>0 Тогда
		ОграничениеТиповДокументов = "";
		
		Для каждого ТипДокументовАванса Из Структура_ТипыДокументовАванса Цикл
			ОграничениеТиповДокументов = ОграничениеТиповДокументов+?(ПустаяСтрока(ОграничениеТиповДокументов),"( "," ИЛИ ")+"Сделка ссылка Документ." + ТипДокументовАванса.Ключ;
		КонецЦикла; 
		
		ОграничениеТиповДокументов = ОграничениеТиповДокументов+") ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"(НЕ Сделка ССЫЛКА Документ.ОтчетКомиссионераОПродажах)", ОграничениеТиповДокументов);
	КонецЕсли; 
	
	Результат = Запрос.Выполнить();
	
	Если не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Отказ = Ложь;
			СтавкаСчета = Перечисления.СтавкиНДС.ПустаяСсылка();
			Если ЗначениеЗаполнено(Выборка.СчетНаПредоплату) Тогда
				ПровркаСчетаНаПредоплату(Выборка.СчетНаПредоплату, Отказ, СтавкаСчета, СоответствиеСтавок);
				Если Отказ Тогда Продолжить; КонецЕсли;
			КонецЕсли;
			
			ДокАванса = Выборка.ДокументАванса;
			Если ЗначениеЗаполнено(ДокАванса) и ЗначениеЗаполнено(СтавкаСчета)
				и ДокАванса.Метаданные().ТабличныеЧасти.Найти("РасшифровкаПлатежа") <> Неопределено 
				Тогда
				НайденныеСтроки = ДокАванса.РасшифровкаПлатежа.НайтиСтроки(Новый Структура("СчетНаПредоплату",Выборка.СчетНаПредоплату));
				Для Каждого Запись Из НайденныеСтроки Цикл
					СтавкаНДС = ?(ЗначениеЗаполнено(СоответствиеСтавок[Запись.СтавкаНДС]), СоответствиеСтавок[Запись.СтавкаНДС], Запись.СтавкаНДС);
					Если СтавкаНДС <> СтавкаСчета И Запись.СтавкаНДС <> СтавкаСчета Тогда 
						Сообщить("Ставки НДС в счете: " + Строка(Выборка.СчетНаПредоплату) + " - и ставка в Платежном поручении входящем: " + Строка(ДокАванса) + " - не совпадают. Строка с данным счетом не будет создана.", СтатусСообщения.ОченьВажное);
						Отказ = Истина;
					КонецЕсли;
				КонецЦикла;
				Если Отказ Тогда Продолжить; КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДокАванса) и  НЕ ЗначениеЗаполнено(СтавкаСчета)
				и ДокАванса.Метаданные().ТабличныеЧасти.Найти("РасшифровкаПлатежа") <> Неопределено 
				Тогда
				ОтборСтруктура = Новый Структура;
				ОтборСтруктура.Вставить("СчетНаПредоплату",Выборка.СчетНаПредоплату);
				ОтборСтруктура.Вставить("ДоговорКонтрагента",Выборка.ДоговорКонтрагента);
				НайденныеСтроки = ДокАванса.РасшифровкаПлатежа.НайтиСтроки(ОтборСтруктура);
				
				ВалютаДокумента = Выборка.ВалютаРасчетов;
				
				ТаблицаПоСтавкам = Новый ТаблицаЗначений();
				ТаблицаПоСтавкам.Колонки.Добавить("СтавкаНДС",Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
				ТаблицаПоСтавкам.Колонки.Добавить("Сумма", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
				ТаблицаПоСтавкам.Колонки.Добавить("ВалютнаяСумма", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15,2));
				
				Для Каждого СтрПлатежа Из НайденныеСтроки Цикл
					Если СтрПлатежа.ДоговорКонтрагента = Выборка.ДоговорКонтрагента Тогда
						ТекСтавкаНДС = ?(ЗначениеЗаполнено(СоответствиеСтавок[СтрПлатежа.СтавкаНДС]), СоответствиеСтавок[СтрПлатежа.СтавкаНДС], СтрПлатежа.СтавкаНДС);
						СтрокаПоСтавке = ТаблицаПоСтавкам.Добавить();
						СтрокаПоСтавке.СтавкаНДС = ТекСтавкаНДС;
						СтрокаПоСтавке.Сумма = СтрПлатежа.СуммаПлатежа;
						СтрокаПоСтавке.ВалютнаяСумма = СтрПлатежа.СуммаПлатежа;
					КонецЕсли;
				КонецЦикла;
				
				ТаблицаПоСтавкам.Свернуть("СтавкаНДС","Сумма,ВалютнаяСумма");
				
				//Распределение суммы рег учета
				МассивСумм = УправлениеПроизводством.РаспределитьПропорционально(Выборка.Сумма,ТаблицаПоСтавкам.ВыгрузитьКолонку("Сумма"));
				Если не МассивСумм = Неопределено Тогда
					ТаблицаПоСтавкам.ЗагрузитьКолонку(МассивСумм,"Сумма");
				Иначе
					МассивСумм = ТаблицаПоСтавкам.ВыгрузитьКолонку("Сумма");
				КонецЕсли; 
				
				//Распределение валютной суммы
				//Если НЕ ЗначениеЗаполнено(Выборка.ВалютнаяСуммаАванса) или ВалютаДокумента  = мВалютаРегламентированногоУчета Тогда
				Если ВалютаДокумента  = мВалютаРегламентированногоУчета Тогда
					ТаблицаПоСтавкам.ЗагрузитьКолонку(МассивСумм,"ВалютнаяСумма");
				Иначе
					МассивСуммВал = УправлениеПроизводством.РаспределитьПропорционально(Выборка.ВалютнаяСумма,ТаблицаПоСтавкам.ВыгрузитьКолонку("ВалютнаяСумма"));
					Если не МассивСуммВал = Неопределено Тогда
						ТаблицаПоСтавкам.ЗагрузитьКолонку(МассивСуммВал,"ВалютнаяСумма");
					Иначе
						ТаблицаПоСтавкам.ЗагрузитьКолонку(МассивСумм,"ВалютнаяСумма");
					КонецЕсли; 
				КонецЕсли; 
				
				Для каждого СтрокаПоСтавке Из ТаблицаПоСтавкам Цикл
					СтрокаТП 					= ТаблицаРезультатов.Добавить();
					СтрокаТП.Дата 				= Выборка.ДокументАвансаДата;
					СтрокаТП.Сумма 				= СтрокаПоСтавке.Сумма;
					СтрокаТП.ВалютнаяСумма 		= СтрокаПоСтавке.ВалютнаяСумма;
					СтрокаТП.Контрагент 		= Выборка.Контрагент;
					СтрокаТП.Договор 			= Выборка.ДоговорКонтрагента;
					СтрокаТП.СчетНаПредоплату	= Выборка.СчетНаПредоплату;
					СтрокаТП.СтавкаНДС 			= СтрокаПоСтавке.СтавкаНДС;
					СтрокаТП.ДокументОснование 	= Выборка.ДокументАванса;
					СтрокаТП.ВалютаДокумента 	= Выборка.ВалютаРасчетов;
					ПересчетНДСиВалютнойСуммыПоСтроке(СтрокаТП);
					СтрокаТП.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизации;
				КонецЦикла; // Для каждого СтрокаПоСтавке Из ТаблицаПоСтавкам Цикл
			
				Продолжить;
				
			КонецЕсли;
			
			СтрокаТП 					= ТаблицаРезультатов.Добавить();
			СтрокаТП.Дата 				= Выборка.ДокументАвансаДата;
			СтрокаТП.Сумма 				= Выборка.Сумма;
			СтрокаТП.ВалютнаяСумма 		= Выборка.ВалютнаяСумма;
			СтрокаТП.Контрагент 		= Выборка.Контрагент;
			СтрокаТП.Договор 			= Выборка.ДоговорКонтрагента;
			СтрокаТП.СчетНаПредоплату	= Выборка.СчетНаПредоплату;
			СтрокаТП.СтавкаНДС 			= СтавкаСчета;
			СтрокаТП.ДокументОснование 	= Выборка.ДокументАванса;
			СтрокаТП.ВалютаДокумента 	= Выборка.ВалютаРасчетов;
			ПересчетНДСиВалютнойСуммыПоСтроке(СтрокаТП);
			СтрокаТП.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизации;
			
			
		КонецЦикла; // Пока Выборка.Следующий() Цикл
	КонецЕсли;
	
	ОпределитьНаличиеНереализованныхОтгрузок(ТаблицаРезультатов);
	
КонецПроцедуры

Процедура ОпределитьНаличиеНереализованныхОтгрузок(ТаблицаАвансов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	     "ВЫБРАТЬ
	     |	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента,
	     |	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	     |	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
	     |	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах
	     |ПОМЕСТИТЬ Договоры
	     |ИЗ
	     |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	     |ГДЕ
	     |	ДоговорыКонтрагентов.Владелец В(&СписокПокупателей)
	     |	И ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	Договоры.Контрагент КАК Покупатель,
	     |	Договоры.ДоговорКонтрагента
	     |ИЗ
	     |	РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(
	     |			&Период,
	     |			Сделка ССЫЛКА Документ.РеализацияТоваровУслуг
	     |				И Сделка.ВидОперации = &ОперацияОтгрузка) КАК ВзаиморасчетыСПокупателямиОстатки
	     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	     |		ПО ВзаиморасчетыСПокупателямиОстатки.ДоговорКонтрагента = Договоры.ДоговорКонтрагента";
	
		//"ВЫБРАТЬ
		//|	НДСРасчетыСПокупателямиОстатки.Покупатель,
		//|	НДСРасчетыСПокупателямиОстатки.ДоговорКонтрагента
		//|ИЗ
		//|	РегистрНакопления.НДСРасчетыСПокупателями.Остатки(
		//|		&Период,
		//|		Организация = &Организация
		//|		    И Покупатель В (&СписокПокупателей)
		//|		    И ДоговорКонтрагента В (&СписокДоговоров)
		//|		    И Документ ССЫЛКА Документ.РеализацияТоваровУслуг
		//|		    И Документ.ВидОперации = &ОперацияОтгрузка) КАК НДСРасчетыСПокупателямиОстатки";
				   
	Запрос.УстановитьПараметр("Период", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокПокупателей", ТаблицаАвансов.ВыгрузитьКолонку("Контрагент"));
	Запрос.УстановитьПараметр("СписокДоговоров", ТаблицаАвансов.ВыгрузитьКолонку("Договор"));
	Запрос.УстановитьПараметр("ОперацияОтгрузка", Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = РезультатЗапроса.Выгрузить();
	
	Сообщить("Некоторые авансы могут быть отнесены к отгрузкам без перехода права собственности, но не отражена реализация в указанном периоде.
			|Возможно по данным суммам аванса не требуется начислять НДС, так как такая оплата не является предварительной для целей НДС:", СтатусСообщения.Важное);

	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
		Сообщить("Контрагент <" + СтрокаРезультата.Покупатель + ">, договор <" + СтрокаРезультата.ДоговорКонтрагента + ">", СтатусСообщения.Важное);
	КонецЦикла;		
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

Массив_ТипыДокументовАванса = Метаданные.РегистрыНакопления.НДСсАвансов.Измерения.СчетФактура.Тип.Типы();
//ОписаниеТипов_ДокументыРасчетовСПокупателями = Метаданные.РегистрыНакопления.НДСРасчетыСПокупателями.Измерения.Документ.Тип;
ОписаниеТипов_ДокументыРасчетовСПокупателями = Метаданные.РегистрыНакопления.ВзаиморасчетыСПокупателями.Измерения.Сделка.Тип;
Структура_ТипыДокументовАванса = Новый Структура();
Для каждого ТипДокументаАванса Из Массив_ТипыДокументовАванса Цикл
	Если ОписаниеТипов_ДокументыРасчетовСПокупателями.СодержитТип(ТипДокументаАванса) Тогда
		Структура_ТипыДокументовАванса.Вставить(Метаданные.НайтиПоТипу(ТипДокументаАванса).Имя,ТипДокументаАванса);
	КонецЕсли; 
КонецЦикла;