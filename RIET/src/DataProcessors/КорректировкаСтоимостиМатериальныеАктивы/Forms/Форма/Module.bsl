        
 // Установить период
   
&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	
	ДатаКон = КонецДня(ДатаКон);
		
КонецПроцедуры

#Если НЕ ТонкийКлиент И НЕ ВебКлиент Тогда //17.09.2012 пахоменков. В тонком клиенте это выдаст ошибку.
&НаКлиенте
Процедура УстановитьПериод(Команда)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон ='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
		
КонецПроцедуры
#КонецЕсли 

//

&НаКлиенте
Процедура ЗагрузитьОстаткиМА(Команда)
	
	ЗагрузитьОстаткиМАНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОстаткиМАНаСервере()
	
	ОстаткиMA.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаНач", ?(ЗначениеЗаполнено(ДатаНач),ДатаНач,Дата(2011,1,1)));
	Запрос.УстановитьПараметр("ДатаКон", ?(ЗначениеЗаполнено(ДатаКон),ДатаКон,КонецДня(ТекущаяДата())));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	""FA"" КАК ТипМА,
	               |	РаспределениеМатериаловИзКнигиПокупокFA.Ссылка КАК Документ,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП КАК ПроводкаDSS,
	               |	РаспределениеМатериаловИзКнигиПокупокFA.СуммаРуб КАК FiscalSumПоДокументу,
	               |	МатериальныеАктивыОстатки.СуммаРубОстаток КАК ОстатокFiscalSum,
	               |	РаспределениеМатериаловИзКнигиПокупокFA.Сумма КАК ManagementSumПоДокументу,
	               |	МатериальныеАктивыОстатки.СуммаОстаток КАК ОстатокManagementSum,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.PoNumber КАК PoNumber,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.AU КАК AU,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.ItemDescription КАК ItemDescription,
	               |	РаспределениеМатериаловИзКнигиПокупокFA.Количество,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Vendor,
	               |	РаспределениеМатериаловИзКнигиПокупокFA.Ссылка.Дата КАК Дата
	               |ИЗ
	               |	РегистрНакопления.МатериальныеАктивы.Остатки(&ТекДата, ) КАК МатериальныеАктивыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.FA КАК РаспределениеМатериаловИзКнигиПокупокFA
	               |		ПО МатериальныеАктивыОстатки.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокFA.ПроводкаДеталейСКП
	               |			И (РаспределениеМатериаловИзКнигиПокупокFA.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""Inventory"",
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП,
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.СуммаРуб,
	               |	МатериальныеАктивыОстатки.СуммаРубОстаток,
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Сумма,
	               |	МатериальныеАктивыОстатки.СуммаОстаток,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.PoNumber,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.AU,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.ItemDescription,
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Количество,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Vendor,
	               |	РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка.Дата
	               |ИЗ
	               |	РегистрНакопления.МатериальныеАктивы.Остатки(&ТекДата, ) КАК МатериальныеАктивыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.INVENTORY КАК РаспределениеМатериаловИзКнигиПокупокINVENTORY
	               |		ПО МатериальныеАктивыОстатки.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокINVENTORY.ПроводкаДеталейСКП
	               |			И (РаспределениеМатериаловИзКнигиПокупокINVENTORY.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""M&S"",
	               |	РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП,
	               |	РаспределениеМатериаловИзКнигиПокупокMandS.СуммаРуб,
	               |	МатериальныеАктивыОстатки.СуммаРубОстаток,
	               |	РаспределениеМатериаловИзКнигиПокупокMandS.Сумма,
	               |	МатериальныеАктивыОстатки.СуммаОстаток,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.PoNumber,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.AU,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.ItemDescription,
	               |	NULL,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Vendor,
	               |	РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка.Дата
	               |ИЗ
	               |	РегистрНакопления.МатериальныеАктивы.Остатки(&ТекДата, ) КАК МатериальныеАктивыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.MandS КАК РаспределениеМатериаловИзКнигиПокупокMandS
	               |		ПО МатериальныеАктивыОстатки.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокMandS.ПроводкаДеталейСКП
	               |			И (РаспределениеМатериаловИзКнигиПокупокMandS.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""Inv transport"",
	               |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Ссылка,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП,
	               |	РаспределениеМатериаловИзКнигиПокупокInvTransport.СуммаРуб,
	               |	МатериальныеАктивыОстатки.СуммаРубОстаток,
	               |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Сумма,
	               |	МатериальныеАктивыОстатки.СуммаОстаток,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.PoNumber,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.AU,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.ItemDescription,
	               |	NULL,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Vendor,
	               |	РаспределениеМатериаловИзКнигиПокупокInvTransport.Ссылка.Дата
	               |ИЗ
	               |	РегистрНакопления.МатериальныеАктивы.Остатки(&ТекДата, ) КАК МатериальныеАктивыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеМатериаловИзКнигиПокупок.InvTransport КАК РаспределениеМатериаловИзКнигиПокупокInvTransport
	               |		ПО МатериальныеАктивыОстатки.ПроводкаДеталейСКП = РаспределениеМатериаловИзКнигиПокупокInvTransport.ПроводкаДеталейСКП
	               |			И (РаспределениеМатериаловИзКнигиПокупокInvTransport.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""Доп. расходы"",
	               |	РаспределениеДопРасходовИзКнигиПокупокДопРасходы.Ссылка,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП,
	               |	РаспределениеДопРасходовИзКнигиПокупокДопРасходы.СуммаРуб,
	               |	МатериальныеАктивыОстатки.СуммаРубОстаток,
	               |	РаспределениеДопРасходовИзКнигиПокупокДопРасходы.Сумма,
	               |	МатериальныеАктивыОстатки.СуммаОстаток,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.PoNumber,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.AU,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.ItemDescription,
	               |	NULL,
	               |	МатериальныеАктивыОстатки.ПроводкаДеталейСКП.Vendor,
	               |	РаспределениеДопРасходовИзКнигиПокупокДопРасходы.Ссылка.Дата
	               |ИЗ
	               |	РегистрНакопления.МатериальныеАктивы.Остатки(&ТекДата, ) КАК МатериальныеАктивыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеДопРасходовИзКнигиПокупок.ДопРасходы КАК РаспределениеДопРасходовИзКнигиПокупокДопРасходы
	               |		ПО МатериальныеАктивыОстатки.ПроводкаДеталейСКП = РаспределениеДопРасходовИзКнигиПокупокДопРасходы.ПроводкаДеталейСКП
	               |			И (РаспределениеДопРасходовИзКнигиПокупокДопРасходы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		НоваяСтр = ОстаткиMA.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр, Выборка);
	КонецЦикла;
			      	
КонецПроцедуры

//

&НаКлиенте
Процедура ОбновитьСтоимость(Команда)
	
	МассивИдСтрок = Элементы.ОстаткиMA.ВыделенныеСтроки;
	Если МассивИдСтрок.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нужно выделить строки в таблице остатков.",,
			"Объект.ОстаткиMA");
		Возврат;
	КонецЕсли;
	
	ОбновитьСуммуВДокументе(МассивИдСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСуммуВДокументе(МассивИдСтрок)
	
	//получим таблицу выделенных для изменения суммы строк
	МассивСтрок = Новый Массив();
	
	Для Каждого ЭлементМассива из МассивИдСтрок Цикл 
		ТекСтрока = ОстаткиMA.НайтиПоИдентификатору(ЭлементМассива);
		МассивСтрок.Добавить(ТекСтрока);
	КонецЦикла;
	
	ТЗДляОбновления = ОстаткиMA.Выгрузить(МассивСтрок);
	
	Если ТЗДляОбновления.Количество() = 0 Тогда 
	    Возврат;
	КонецЕсли;
	
	//получим массив документов, для которых нужно обновить стоимость
	МассивДокументов = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТЗДляОбновления, "Документ");
	СтруктураОтбора = Новый Структура("Документ");
	
	//для каждого документа получим таблицу проводок, для которых нужно изменить сумму
	Для Каждого ДокСсылка из МассивДокументов Цикл 
					
		ДокОбъект = ДокСсылка.ПолучитьОбъект();
		
		СтруктураОтбора.Документ = ДокСсылка;
		ТаблицаПроводок = ТЗДляОбновления.Скопировать(СтруктураОтбора,
							"ТипМА,ПроводкаDSS,FiscalSumПоДокументу,ОстатокFiscalSum,ManagementSumПоДокументу,ОстатокManagementSum");
		
		ИзменитьСуммуПроводокДокумента(ДокОбъект, ТаблицаПроводок);
		
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать документ "+ ДокОбъект +",
			| "+ ОписаниеОшибки());
		КонецПопытки;
							
	КонецЦикла;
	
	ЗагрузитьОстаткиМАНаСервере();
	  	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСуммуПроводокДокумента(ДокОбъект, ТаблицаПроводокДокумента)
	
	МассивТиповМА = РГСофтКлиентСервер.ВыгрузитьКолонкуКоллекцииБезПустыхЗначенийИДублей(ТаблицаПроводокДокумента, "ТипМА");
	Для Каждого ТипМА из МассивТиповМА Цикл 
		
		Тип = ПолучитьИмяТабЧасти(ТипМА);
		ТабЧасть = ДокОбъект[Тип];
		
		ТаблицаПроводокТипа = ТаблицаПроводокДокумента.Скопировать(Новый Структура("ТипМА", ТипМА));
		
		Для Каждого СтрокаПроводки из ТаблицаПроводокТипа Цикл 
			СтруктураНовыхСуммПроводки = ПолучитьНовыеСуммыПроводки(СтрокаПроводки);           
			
			СтрокаТЧ = ТабЧасть.Найти(СтрокаПроводки.ПроводкаDSS, "ПроводкаДеталейСКП");
			Если СтрокаТЧ <> Неопределено Тогда 
				СтрокаТЧ.Сумма    = СтруктураНовыхСуммПроводки.Сумма;
				СтрокаТЧ.СуммаРуб = СтруктураНовыхСуммПроводки.СуммаРуб;
			КонецЕсли;
		КонецЦикла;
				
	КонецЦикла;
	          		  	
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыеСуммыПроводки(СтрокаПроводки)
	
	СтруктураНовыхСуммПроводки = Новый Структура("Сумма,СуммаРуб");
	
	Если СтрокаПроводки.ОстатокFiscalSum = 0 Тогда 
		СтруктураНовыхСуммПроводки.СуммаРуб = СтрокаПроводки.FiscalSumПоДокументу;
	Иначе 
		СтруктураНовыхСуммПроводки.СуммаРуб = СтрокаПроводки.FiscalSumПоДокументу + СтрокаПроводки.ОстатокFiscalSum;
	КонецЕсли;
		
	Если СтрокаПроводки.ОстатокManagementSum = 0 Тогда 
		СтруктураНовыхСуммПроводки.Сумма = СтрокаПроводки.ManagementSumПоДокументу;
	Иначе 
		СтруктураНовыхСуммПроводки.Сумма = СтрокаПроводки.ManagementSumПоДокументу + СтрокаПроводки.ОстатокManagementSum;
	КонецЕсли;
	    	
	Возврат СтруктураНовыхСуммПроводки;
	 	
КонецФункции

&НаСервере
Функция ПолучитьИмяТабЧасти(ТипМА)
	
	Тип = ТипМА;
	
	Если Тип = "FA" Тогда 
		Тип = "FA";
	ИначеЕсли Тип = "Inventory" Тогда 
		Тип = "INVENTORY";
	ИначеЕсли Тип = "M&S" Тогда 
		Тип = "MandS";
	ИначеЕсли Тип = "Inv transport" Тогда 
		Тип = "InvTransport";
	ИначеЕсли Тип = "Доп. расходы" Тогда 
		Тип = "ДопРасходы";
	КонецЕсли;	 
	
	Возврат Тип;
	 	
КонецФункции

