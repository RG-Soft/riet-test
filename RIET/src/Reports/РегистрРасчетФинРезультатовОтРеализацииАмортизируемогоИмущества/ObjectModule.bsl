#Если Клиент Тогда
	
Перем НП Экспорт;

// Возвращает полное наименование элемента справочника, если у этого вида 
// справочников есть реквизит НаименованиеПолное.
// 
// Параметры:      
//    Элемент - элемент справочника, для которого нужно вернуть полное наименование
//
// Возвращаемое значение: 
//  Строка с полным наименованием.
//
Функция ПолноеНаименование(Элемент) Экспорт

	Если ОбщегоНазначения.ЗначениеНеЗаполнено(Элемент) Тогда
		Возврат "";

	ИначеЕсли Элемент.Метаданные().Реквизиты.Найти("НаименованиеПолное") = Неопределено Тогда
		Возврат Элемент.Наименование;;

	ИначеЕсли ОбщегоНазначения.ЗначениеНеЗаполнено(Элемент.НаименованиеПолное) Тогда
		Возврат Элемент.Наименование;

	Иначе
		Возврат Элемент.НаименованиеПолное;
	КонецЕсли;

КонецФункции

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
 ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока     = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал     = Макет.ПолучитьОбласть("Подвал");
	
	СрезСведений = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, Ложь, Организация, "Нал");
	УчетнаяПолитика = ?(СрезСведений.Количество() = 0, Перечисления.СпособыОценки.ПустаяСсылка(), СрезСведений.СпособОценкиМПЗ);
	Заголовок = "Регистр учета стоимости";

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

    Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",       ДатаКон);
	Запрос.УстановитьПараметр("ГраницаНач",    Новый Граница(НачалоДня(ДатаНач), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаКон",    Новый Граница(КонецДня(ДатаКон), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ВидУчета",      Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("ВидСобытияОС",  Перечисления.ВидыСобытийОС.Передача);
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	//Запрос.УстановитьПараметр("ВидСубконтоНМА",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Налоговый.ВыручкаОтРеализацииОсновныхСредств);
	//Массив.Добавить(ПланыСчетов.Налоговый.ВыручкаОтРеализацииНематериальныхАктивов);
	Массив.Добавить(ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейОсновныхСредств);
	//Массив.Добавить(ПланыСчетов.Налоговый.РасходыСвязанныеСРеализациейНематериальныхАктивов);
	Запрос.УстановитьПараметр("Счет90",       Массив);
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Налоговый.ОсновныеСредства);
	Массив.Добавить(ПланыСчетов.Налоговый.ДоходныеВложенияВ_МЦ);
	Запрос.УстановитьПараметр("Счет01",      Массив);
	Запрос.УстановитьПараметр("Счет0109",    ПланыСчетов.Налоговый.ВыбытиеОС);
	//Запрос.УстановитьПараметр("Счет04",      ПланыСчетов.Налоговый.НематериальныеАктивыОрганизации);
	Запрос.УстановитьПараметр("Счет02",      Планысчетов.Налоговый.АмортизацияОсновныхСредств);
	//Запрос.УстановитьПараметр("Счет05",      ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
	
	
	Запрос.Текст =  
			"ВЫБРАТЬ
			|	ПереданныеАмортОбъекты.Объект КАК Объект,
			|	ПереданныеАмортОбъекты.Период КАК Период,
			|	СУММА(Амортизация.СуммаАмортизации) КАК Сумма02,
			|	СУММА(ДоходыИРасходы.СуммаОборотДт) КАК ОборотДт90,
			|	СУММА(ДоходыИРасходы.СуммаОборотКт) КАК ОборотКт90,
			|	СУММА(ОстаточнаяСтоимость.СуммаОстаточнойСтоимости) КАК Сумма01
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПередачаОС.ОсновноеСредство КАК Объект,
			|		ПередачаОС.Период КАК Период
			|	ИЗ
			|		РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
			|			&ГраницаКон,
			|			Организация = &Организация
			|			    И Событие.ВидСобытияОС = &ВидСобытияОС) КАК ПередачаОС
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ПередачаНМА.НематериальныйАктив,
			|		ПередачаНМА.Дата
			|	ИЗ
			|		Документ.ПередачаНМА КАК ПередачаНМА
			|	ГДЕ
			|		ПередачаНМА.Дата МЕЖДУ &ДатаНач И &ДатаКон
			|		И ПередачаНМА.Проведен
			|		И ПередачаНМА.Организация = &Организация
			|		И ПередачаНМА.ОтражатьВНалоговомУчете) КАК ПереданныеАмортОбъекты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			АмортизацияОС.СуммаОборотДт КАК СуммаАмортизации,
			|			АмортизацияОС.Субконто1 КАК ОбъектАмортизации
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет02),
			|				&ВидСубконтоОС,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				,
			|				) КАК АмортизацияОС
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			АмортизацияНМА.СуммаОборотДт,
			|			АмортизацияНМА.Субконто1
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет05),
			|				&ВидСубконтоНМА,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				,
			|				) КАК АмортизацияНМА) КАК Амортизация
			|		ПО ПереданныеАмортОбъекты.Объект = Амортизация.ОбъектАмортизации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДоходыИРасходыОС.Субконто1 КАК ОбъектДоходовИРасхдов,
			|			ДоходыИРасходыОС.СуммаОборотДт КАК СуммаОборотДт,
			|			ДоходыИРасходыОС.СуммаОборотКт КАК СуммаОборотКт
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет90),
			|				&ВидСубконтоОС,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				,
			|				) КАК ДоходыИРасходыОС
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ДоходыИРасходыНМА.Субконто1,
			|			ДоходыИРасходыНМА.СуммаОборотДт,
			|			ДоходыИРасходыНМА.СуммаОборотКт
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет90),
			|				&ВидСубконтоНМА,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				,
			|				) КАК ДоходыИРасходыНМА) КАК ДоходыИРасходы
			|		ПО ПереданныеАмортОбъекты.Объект = ДоходыИРасходы.ОбъектДоходовИРасхдов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ОстаточнаяСтоимостьОС.Субконто1 КАК ОбъектОстаточнойСтоимости,
			|			ОстаточнаяСтоимостьОС.СуммаОборотКт КАК СуммаОстаточнойСтоимости
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет01),
			|				&ВидСубконтоОС,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				КорСчет В ИЕРАРХИИ (&Счет0109),
			|				) КАК ОстаточнаяСтоимостьОС
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ОстаточнаяСтоимостьНМА.Субконто1,
			|			ОстаточнаяСтоимостьНМА.СуммаОборотКт
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|				&ГраницаНач,
			|				&ГраницаКон,
			|				,
			|				Счет В ИЕРАРХИИ (&Счет04),
			|				&ВидСубконтоНМА,
			|				Организация = &Организация
			|				    И ВидУчета = &ВидУчета,
			|				,
			|				) КАК ОстаточнаяСтоимостьНМА) КАК ОстаточнаяСтоимость
			|		ПО ПереданныеАмортОбъекты.Объект = ОстаточнаяСтоимость.ОбъектОстаточнойСтоимости
			|
			|СГРУППИРОВАТЬ ПО
			|	ПереданныеАмортОбъекты.Объект,
			|	ПереданныеАмортОбъекты.Период";	   
				   
				 Результат = Запрос.Выполнить().Выгрузить();
 ТаблицаДат = Результат.Скопировать();
 Убыток = 0; 
 Для Каждого Выборка Из Результат Цикл    
	ОбластьСтрока.Параметры.ДатаОперации            = Выборка.Период;
	ОбластьСтрока.Параметры.НаименованиеОбъекта  	= Выборка.Объект;
	ОбластьСтрока.Параметры.Выручка		            = Выборка.ОборотКт90;
	ОбластьСтрока.Параметры.ПервоначальнаяСтоимость = Выборка.Сумма01;
	ОбластьСтрока.Параметры.СуммаАморизации		    = Выборка.Сумма02;
	ОбластьСтрока.Параметры.РасходыПоРеализации		= Выборка.ОборотДт90 - (Выборка.СУмма01 - Выборка.СУмма02);
	ОбластьСтрока.Параметры.ОбщаяСуммаРасходов      = Выборка.ОборотДт90;
	Прибыль = Выборка.ОборотКт90 - Выборка.ОборотДт90;
	ОбластьСтрока.Параметры.СуммаУбытка		        = ?(Прибыль > 0, 0, -Прибыль);
	Убыток = Убыток + ?(Прибыль > 0, 0, -Прибыль);
	ДокументРезультат.Вывести(ОбластьСтрока);
 КонецЦикла;
	ОбластьПодвал.Параметры.ИтогоВыручка            = Результат.Итог("ОборотКт90");
	ОбластьПодвал.Параметры.ИтогоСуммаРасходов	    = Результат.Итог("ОборотДт90");
	ОбластьПодвал.Параметры.ИтогоСуммаУбытка        = Убыток;
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ДокументРезультат.Вывести(ОбластьПодвал);
	 
КонецПроцедуры



НП   = Новый НастройкаПериода;
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

#КонецЕсли