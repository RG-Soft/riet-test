#Если Клиент Тогда

// Формирование отчета в виде табличного документа.
// Параметры:
//  ТабличныйДокумент - макет отчета.
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	Перем Результат;

	ТабличныйДокумент.Очистить();
	Макет = ПолучитьМакет("Макет");

	// Вывод шапки
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ТабличныйДокумент.Вывести(Секция);
	
	// Выполнение запроса.
	Результат = ПодготовитьОтчетКВыводуНаПечать();
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если Результат.Пустой() Тогда
	
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НПП = "";
		Секция.Параметры.ДатаНомер = "";
		Секция.Параметры.ДатаПолучения = "";
		Секция.Параметры.Сумма = "";
		Секция.Параметры.Продавец = "";
		Секция.Параметры.Основание = "";
        ТабличныйДокумент.Вывести(Секция);
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	    Возврат;
		
	КонецЕсли; 
	
	Документ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Секция = Макет.ПолучитьОбласть("Строка");
	Счетчик = 0;
	
	Пока Документ.Следующий() Цикл
		
		Счетчик = Счетчик + 1;
		Секция.Параметры.НПП = Счетчик;
		Секция.Параметры.СчетФактура = Документ.СчетФактура;
		
		// Дата и номер счета-фактуры.
		Если ТипЗнч(Документ.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			УчетНДС.ПолучитьПараметрыСчетаФактуры(Документ.СчетФактура, мВалютаРегламентированногоУчета, Результат);
			Секция.Параметры.Основание = Документ.ДокументОснование;
			Секция.Параметры.Сумма = ?(Результат.СуммаДокумента = 0, "", Формат(Результат.СуммаДокумента, "ЧЦ=19; ЧДЦ=2") + " " + Строка(Результат.ВалютаДокумента));
			Секция.Параметры.РасчетныйДокумент = Документ.ДокументОснование;
			Секция.Параметры.Продавец = Результат.Контрагент;
			Секция.Параметры.Контрагент = Результат.Контрагент;
			ДатаНомер = "" + Формат(Документ.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.СчетФактура.НомерВходящегоДокумента;
			ДатаПолучения = Документ.Дата;
			
		//ИначеЕсли ТипЗнч(Документ.СчетФактура) = Тип("ДокументСсылка.ГТДИмпорт") Тогда
		//	Секция.Параметры.Основание = Документ.СчетФактура;
		//	Секция.Параметры.Сумма = ?(Документ.ФактурнаяСтоимость = 0, "", Формат(Документ.ФактурнаяСтоимость, "ЧЦ=19; ЧДЦ=2") + " " + Строка(Документ.СчетФактура.ВалютаДокумента));
		//	Секция.Параметры.РасчетныйДокумент = Документ.СчетФактура;
		//	Секция.Параметры.Продавец = Документ.СчетФактура.Контрагент;
		//	Секция.Параметры.Контрагент = Документ.СчетФактура.Контрагент;
		//	ДатаНомер = "ГТД № " + СокрЛП(Документ.СчетФактура.НомерГТД);
		//	ДатаПолучения = Документ.Дата;
			
		Иначе
			ДатаНомер = "";
			ДатаПолучения = "";
		КонецЕсли;
		
		Секция.Параметры.ДатаНомер = ДатаНомер;
		Секция.Параметры.ДатаПолучения = Формат(ДатаПолучения, "ДФ=dd.MM.yyyy");
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла; 
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	
КонецПроцедуры // СформироватьОтчет()

// Функция вызывается из тела процедуры "Сформировать".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПодготовитьОтчетКВыводуНаПечать()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура,
	|	СчетФактураПолученный.Дата КАК Дата,
	|	СчетФактураПолученный.ДокументОснование,
	|	NULL КАК ФактурнаяСтоимость
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	(НЕ СчетФактураПолученный.ПометкаУдаления)
	|	И СчетФактураПолученный.Дата >= &НачалоПериода
	|	И СчетФактураПолученный.Дата <= &КонецПериода
	|	И СчетФактураПолученный.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпортТовары.Ссылка,
	|	ГТДИмпортТовары.Ссылка.Дата,
	|	NULL,
	|	СУММА(ГТДИмпортТовары.ФактурнаяСтоимость)
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|ГДЕ
	|	(НЕ ГТДИмпортТовары.Ссылка.ПометкаУдаления)
	|	И ГТДИмпортТовары.Ссылка.Дата >= &НачалоПериода
	|	И ГТДИмпортТовары.Ссылка.Дата <= &КонецПериода
	|	И ГТДИмпортТовары.Ссылка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ГТДИмпортТовары.Ссылка,
	|	ГТДИмпортТовары.Ссылка.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|	СУММА(ФактурнаяСтоимость)
	|ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);

	Возврат Запрос.Выполнить();

КонецФункции

#КонецЕсли