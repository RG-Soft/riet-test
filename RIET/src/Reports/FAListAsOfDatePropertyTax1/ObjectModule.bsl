Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

Перем сукНачальныеНастройкиЗапроса;			// Структура начальных параметров в запросе для вывода данных

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
Процедура ВывестиЗаголовок()
		
	сукНачальныеНастройкиЗапроса.Результат.Очистить();
	Макет = ПолучитьМакет("Отчет");
	Область = Макет.ПолучитьОбласть("Заголовок");
	Подразделение = сукНачальныеНастройкиЗапроса.Подразделение;
	Если сукНачальныеНастройкиЗапроса.Кон = Дата(1,1,1) Тогда
		Область.Параметры.Период = Формат(ТекущаяДата(), "ДЛФ=DD");
	Иначе
		Область.Параметры.Период = Формат(сукНачальныеНастройкиЗапроса.Кон, "ДЛФ=DD");
	КонецЕсли;
	Область.Параметры.ИНН = "9909012867";
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Область.Параметры.КПП = Подразделение.КПП;
		Область.Параметры.Адрес = Подразделение.Адрес;
		Область.Параметры.Наименование = Подразделение.Наименование;		
	КонецЕсли;
	сукНачальныеНастройкиЗапроса.Результат.Вывести(Область);
	
КонецПроцедуры
	
Функция ОпределитьКопиюТаблицыЗапросаДляВывода(тзРезультат)	
	
	табВозврата = Новый ТаблицаЗначений;
	
	масТипов = Новый Массив;
	Для Каждого Колонка Из тзРезультат.Колонки Цикл
		Для Каждого Тип Из Колонка.ТипЗначения.Типы() Цикл
			Если НЕ Строка(Тип) = "Null" Тогда масТипов.Добавить(Тип);КонецЕсли;
		КонецЦикла;
		масТипов.Добавить(Тип("Строка"));
		табВозврата.Колонки.Добавить(Колонка.Имя, Новый ОписаниеТипов(масТипов));
		масТипов.Очистить();
	КонецЦикла;
		
    масТипов.Очистить();
	масТипов.Добавить(Тип("Число"));
	масТипов.Добавить(Тип("Строка"));
	табВозврата.Колонки.Вставить(0, "НомерПП", Новый ОписаниеТипов(масТипов));
	масТипов.Очистить();
	НомерПП = 1;
		
	Для Каждого Запись Из тзРезультат Цикл
		Если тзРезультат.Индекс(Запись) Тогда
			СтрокаТЗ = табВозврата.Добавить();
			СтрокаТЗ.НомерПП = НомерПП;
			НомерПП = НомерПП + 1;
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, Запись);
		КонецЕсли;
	КонецЦикла;
		
	СтрокаТЗ = табВозврата.Вставить(0);
	НомерКолонки = 1;
	Для Каждого Колонка Из табВозврата.Колонки Цикл
		СтрокаТЗ[Колонка.Имя] = Строка(НомерКолонки);
		НомерКолонки = НомерКолонки + 1;
	КонецЦикла;
	
	Если тзРезультат.Количество() Тогда
		ИтоговаяСтрока = тзРезультат[0];
		СтрокаТЗ = табВозврата.Добавить();
		СтрокаТЗ.ПервоначальнаяСтоимостьДолл= ИтоговаяСтрока.ПервоначальнаяСтоимостьДолл;
		СтрокаТЗ.СтоимостьДолл 				= ИтоговаяСтрока.СтоимостьДолл;
		СтрокаТЗ.АмортизацияДолл 			= ИтоговаяСтрока.АмортизацияДолл;
		СтрокаТЗ.ОстаточнаяСтоимостьДолл 	= ИтоговаяСтрока.ОстаточнаяСтоимостьДолл;
		СтрокаТЗ.ПервоначальнаяСтоимость 	= ИтоговаяСтрока.ПервоначальнаяСтоимость;
		СтрокаТЗ.Стоимость 					= ИтоговаяСтрока.Стоимость;
		СтрокаТЗ.Амортизация 				= ИтоговаяСтрока.Амортизация;
		СтрокаТЗ.ОстаточнаяСтоимость 		= ИтоговаяСтрока.ОстаточнаяСтоимость;
		СтрокаТЗ.АмортизацияПоПодразделению = ИтоговаяСтрока.АмортизацияПоПодразделению;
		СтрокаТЗ.СтоимостьПоступленияНаПодразделение 		= ИтоговаяСтрока.СтоимостьПоступленияНаПодразделение;
		СтрокаТЗ.НомерПП = "ИТОГО";
	КонецЕсли;	
	
	тзРезультат.Очистить();
	
	Возврат табВозврата;
	
КонецФункции

Процедура ПолучитьНачальныеНастройкиЗапроса(сукНачальныеНастройкиЗапроса)
	
	Для Каждого Элемент Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если Строка(Элемент.Параметр) = "Дата" Тогда
			сукНачальныеНастройкиЗапроса.Кон = ?(ТипЗнч(Элемент.Значение) = Тип("СтандартнаяДатаНачала"),Элемент.Значение.Дата, Элемент.Значение);
			//Добавила Федотова Л., РГ-Софт, 15.02.14, вопрос SLI-0004189
			сукНачальныеНастройкиЗапроса.Кон = КонецДня(сукНачальныеНастройкиЗапроса.Кон);
		ИначеЕсли Строка(Элемент.Параметр) = "Подразделение" Тогда
			сукНачальныеНастройкиЗапроса.Подразделение = ?(Строка(Элемент.Значение) = "Справочник.ПодразделенияОрганизаций.ПустаяСсылка",Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),Элемент.Значение);
		КонецЕсли;		
	КонецЦикла;
	 
КонецПроцедуры

Процедура ОпределитьПодразделениеСтроки(СтрокаТЗ, ВидСравненияПодразделения, Подразделение)
	
	Если ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.Равно
		ИЛИ ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
		СтрокаТЗ.Подразделение = Подразделение;
	ИначеЕсли ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.НеРавно
		ИЛИ ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.НеВСписке
		ИЛИ ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.НеВИерархии 
		ИЛИ ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		СтрокаТЗ.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	ИначеЕсли ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.ВСписке
		ИЛИ ВидСравненияПодразделения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		СтрокаТЗ.Подразделение = Подразделение[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	сукНачальныеНастройкиЗапроса.Вставить("Нач", Дата(1,1,1));
	сукНачальныеНастройкиЗапроса.Вставить("Кон", Дата(1,1,1));
	сукНачальныеНастройкиЗапроса.Вставить("УсловиеПодразделение", "");
	сукНачальныеНастройкиЗапроса.Вставить("Подразделение", Неопределено);
	сукНачальныеНастройкиЗапроса.Вставить("ВидСравненияПодразделения", Неопределено);
	
	ПолучитьНачальныеНастройкиЗапроса(сукНачальныеНастройкиЗапроса);
	//	Запрос.Текст = 	Запрос.Текст + сукНачальныеНастройкиЗапроса.УсловиеПодразделение;
	//Запрос.Текст =  Запрос.Текст + " ОсновноеСредство.ПометкаУдаления = ЛОЖЬ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних

	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон", сукНачальныеНастройкиЗапроса.Кон);
	Запрос.УстановитьПараметр("Подразделение", сукНачальныеНастройкиЗапроса.Подразделение);
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоНаименованию("USD"));
	Запрос.УстановитьПараметр("НулеваяДата", Дата(1,1,1));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство,
	|	ВложенныйЗапрос.Местонахождение КАК Подразделение,
	|	ВложенныйЗапрос.КостЦентр,
	|	ЛьготированиеИмуществаСрезПоследних.ЛьготируемоеИмущество КАК Льготируемое,
	|	ЛьготированиеИмуществаСрезПоследних.Проект
	|ПОМЕСТИТЬ ОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|		МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Местонахождение,
	|		МестонахождениеОСБухгалтерскийУчетСрезПоследних.КостЦентр КАК КостЦентр
	|	ИЗ
	|		РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|				&Кон,
	|				НЕ ОсновноеСредство В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|							ИЗ
	|								РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|							ГДЕ
	|								СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|								И СостоянияОСОрганизаций.ДатаСостояния <= &кон)
	|					И НЕ ОсновноеСредство.АрендованноеОС) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|	ГДЕ
	|		МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение В ИЕРАРХИИ(&Подразделение)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготированиеИмущества.СрезПоследних(&Кон, ) КАК ЛьготированиеИмуществаСрезПоследних
	|		ПО ВложенныйЗапрос.ОсновноеСредство = ЛьготированиеИмуществаСрезПоследних.ОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОС.ОсновноеСредство.Код КАК ОсновноеСредствоКод,
	|	ОС.ОсновноеСредство.ПорядковыйНомерВУправленческойБазе КАК Номер,
	|	ОС.ОсновноеСредство.КодОС КАК ОсновноеСредствоКодОС,
	|	ОС.ОсновноеСредство.ЗаводскойНомер КАК ОсновноеСредствоЗаводскойНомер,
	|	НачислениеАмортизации.СрокНУ КАК СрокПолезногоИспользования,
	|	ПринятоКУчету.ДатаСостояния КАК ДатаПринятияКУчету,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА КОНЕЦПЕРИОДА(&Кон, МЕСЯЦ) = КОНЕЦПЕРИОДА(&Кон, ДЕНЬ)
	|					ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПринятоКУчету.ДатаСостояния, МЕСЯЦ), НАЧАЛОПЕРИОДА(&Кон, МЕСЯЦ), МЕСЯЦ)
	|				ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПринятоКУчету.ДатаСостояния, МЕСЯЦ), НАЧАЛОПЕРИОДА(&Кон, МЕСЯЦ), МЕСЯЦ) - 1
	|			КОНЕЦ < 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КОНЕЦПЕРИОДА(&Кон, МЕСЯЦ) = КОНЕЦПЕРИОДА(&Кон, ДЕНЬ)
	|					ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПринятоКУчету.ДатаСостояния, МЕСЯЦ), НАЧАЛОПЕРИОДА(&Кон, МЕСЯЦ), МЕСЯЦ)
	|				ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПринятоКУчету.ДатаСостояния, МЕСЯЦ), НАЧАЛОПЕРИОДА(&Кон, МЕСЯЦ), МЕСЯЦ) - 1
	|			КОНЕЦ
	|	КОНЕЦ КАК ФактическийСрокСлужбы,
	|	ОС.ОсновноеСредство.НаименованиеENG,
	|	ОС.ОсновноеСредство.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьДолл,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьДолл,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияДолл,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|						ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаточнаяСтоимостьДолл,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ * КурсыВалютСрезПоследних.Курс
	|		ИНАЧЕ ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимость,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток * КурсыВалютСрезПоследних.Курс
	|		ИНАЧЕ СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|			ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток * КурсыВалютСрезПоследних.Курс
	|		ИНАЧЕ СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток * КурсыВалютСрезПоследних.Курс
	|				ИНАЧЕ СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|			КОНЕЦ ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|						ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток * КурсыВалютСрезПоследних.Курс
	|					ИНАЧЕ СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.СтоимостьБУОстаток * КурсыВалютСрезПоследних.Курс
	|				ИНАЧЕ СтоимостьАмортизацияОС.СтоимостьБУОстаток
	|			КОНЕЦ - ВЫБОР
	|				КОГДА ОС.ОсновноеСредство.Валюта = &Валюта
	|					ТОГДА СтоимостьАмортизацияОС.АмортизацияБУОстаток * КурсыВалютСрезПоследних.Курс
	|				ИНАЧЕ СтоимостьАмортизацияОС.АмортизацияБУОстаток
	|			КОНЕЦ
	|	КОНЕЦ КАК ОстаточнаяСтоимость,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Автотранспорт
	|			ТОГДА ОС.ОсновноеСредство.НомерПаспорта
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВИН,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Автотранспорт
	|			ТОГДА ОС.ОсновноеСредство.НомерШасси
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерШасси,
	|	ВЫБОР
	|		КОГДА ОС.ОсновноеСредство.Автотранспорт
	|			ТОГДА ОС.ОсновноеСредство.РегистрационныйНомер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК РегистрационныйНомер,
	|	ОС.КостЦентр.ПодразделениеОрганизации КАК Местонахождение,
	|	ОС.КостЦентр КАК КостЦентр,
	|	ОС.ОсновноеСредство.Счет КАК Счет,
	|	ОС.Льготируемое,
	|	ОС.Проект,
	|	ОС.КостЦентр.Сегмент.Родитель.Родитель КАК Сегмент,
	|	ОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ОС.Подразделение,
	|	ОС.ОсновноеСредство.НомерЗаказаНаПриобретение,
	|	ОС.ОсновноеСредство.НомерНакладной,
	|	ОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ОС.ОсновноеСредство.НомерКоммерческогоИнвойса,
	|	ОС.ОсновноеСредство.НомерСчетаФактуры,
	|	ОС.ОсновноеСредство.ОсновноеСредствоLawson КАК ОсновноеСредствоLawson
	|ПОМЕСТИТЬ ИтоговаяТаблица
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Кон, Валюта = &Валюта) КАК КурсыВалютСрезПоследних,
	|	ОС КАК ОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизации.СрезПоследних(
	|				&Кон,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ОС.ОсновноеСредство
	|					ИЗ
	|						ОС)) КАК НачислениеАмортизации
	|		ПО ОС.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|			СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния
	|		ИЗ
	|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ГДЕ
	|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) КАК ПринятоКУчету
	|		ПО ОС.ОсновноеСредство = ПринятоКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведения.СрезПоследних(
	|				&Кон,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ОС.ОсновноеСредство
	|					ИЗ
	|						ОС)) КАК ПервоначальныеСведения
	|		ПО ОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтоимостьАмортизацияОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|			СУММА(СтоимостьАмортизацияОСОстаткиИОбороты.СтоимостьБУОстаток) КАК СтоимостьБУОстаток,
	|			СУММА(СтоимостьАмортизацияОСОстаткиИОбороты.АмортизацияБУОстаток) КАК АмортизацияБУОстаток
	|		ИЗ
	|			РегистрНакопления.СтоимостьАмортизацияОС.Остатки(
	|					&Кон,
	|					ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							ОС.ОсновноеСредство
	|						ИЗ
	|							ОС КАК ОС)) КАК СтоимостьАмортизацияОСОстаткиИОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтоимостьАмортизацияОСОстаткиИОбороты.ОсновноеСредство) КАК СтоимостьАмортизацияОС
	|		ПО ОС.ОсновноеСредство = СтоимостьАмортизацияОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблица.ОсновноеСредствоКод,
	|	ИтоговаяТаблица.Номер,
	|	ИтоговаяТаблица.ОсновноеСредствоКодОС,
	|	ИтоговаяТаблица.ОсновноеСредствоЗаводскойНомер,
	|	ИтоговаяТаблица.СрокПолезногоИспользования,
	|	ИтоговаяТаблица.ДатаПринятияКУчету,
	|	ИтоговаяТаблица.ФактическийСрокСлужбы,
	|	ИтоговаяТаблица.ОсновноеСредствоНаименованиеENG,
	|	ИтоговаяТаблица.ОсновноеСредствоНаименованиеПолное,
	|	ИтоговаяТаблица.ПервоначальнаяСтоимостьДолл КАК ПервоначальнаяСтоимостьДолл,
	|	ИтоговаяТаблица.СтоимостьДолл КАК СтоимостьДолл,
	|	ИтоговаяТаблица.АмортизацияДолл КАК АмортизацияДолл,
	|	ИтоговаяТаблица.ОстаточнаяСтоимостьДолл КАК ОстаточнаяСтоимостьДолл,
	|	ИтоговаяТаблица.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ИтоговаяТаблица.Стоимость КАК Стоимость,
	|	ИтоговаяТаблица.Амортизация КАК Амортизация,
	|	ИтоговаяТаблица.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	СтоимостьАмортизацияОСОбороты.АмортизацияБУПриход КАК АмортизацияПоПодразделению,
	|	ИтоговаяТаблица.ОстаточнаяСтоимость + СтоимостьАмортизацияОСОбороты.АмортизацияБУПриход КАК СтоимостьПоступленияНаПодразделение,
	|	ИтоговаяТаблица.ВИН,
	|	ИтоговаяТаблица.НомерШасси,
	|	ИтоговаяТаблица.РегистрационныйНомер,
	|	ИтоговаяТаблица.Местонахождение,
	|	ИтоговаяТаблица.КостЦентр,
	|	ИтоговаяТаблица.Счет,
	|	ИтоговаяТаблица.Льготируемое,
	|	ИтоговаяТаблица.Проект,
	|	ИтоговаяТаблица.Сегмент,
	|	ИтоговаяТаблица.ОсновноеСредство,
	|	ИтоговаяТаблица.Подразделение,
	|	ИтоговаяТаблица.ОсновноеСредствоНомерЗаказаНаПриобретение,
	|	ИтоговаяТаблица.ОсновноеСредствоНомерНакладной,
	|	ИтоговаяТаблица.ГруппаОС,
	|	ИтоговаяТаблица.ОсновноеСредствоНомерКоммерческогоИнвойса,
	|	ИтоговаяТаблица.ОсновноеСредствоНомерСчетаФактуры,
	|	ИтоговаяТаблица.ОсновноеСредствоLawson
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьАмортизацияОС.Обороты(&НулеваяДата, &Кон, Период, Подразделение В ИЕРАРХИИ (&Подразделение)) КАК СтоимостьАмортизацияОСОбороты
	|		ПО ИтоговаяТаблица.ОсновноеСредство = СтоимостьАмортизацияОСОбороты.ОсновноеСредство
	|ИТОГИ
	|	СУММА(ПервоначальнаяСтоимостьДолл),
	|	СУММА(СтоимостьДолл),
	|	СУММА(АмортизацияДолл),
	|	СУММА(ОстаточнаяСтоимостьДолл),
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(Стоимость),
	|	СУММА(Амортизация),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(АмортизацияПоПодразделению),
	|	СУММА(СтоимостьПоступленияНаПодразделение)
	|ПО
	|	ОБЩИЕ";
							
	Если ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "PA" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОС.КостЦентр.Сегмент.Родитель.Родитель", "ОС.КостЦентр.Segment");       
	КонецЕсли; 						
	тзРезультат = Запрос.Выполнить().Выгрузить();
	тзВнешнийНаборДанных = ОпределитьКопиюТаблицыЗапросаДляВывода(тзРезультат);
	Подразделение = сукНачальныеНастройкиЗапроса.Подразделение;
	//для вывода строки с номерами колонок
	ОпределитьПодразделениеСтроки(тзВнешнийНаборДанных[0], сукНачальныеНастройкиЗапроса.ВидСравненияПодразделения, Подразделение);
	ОпределитьПодразделениеСтроки(тзВнешнийНаборДанных[тзВнешнийНаборДанных.Количество()-1], сукНачальныеНастройкиЗапроса.ВидСравненияПодразделения, Подразделение);
	
	//для вывода заголовка
	сукНачальныеНастройкиЗапроса.Вставить("Результат", Результат);
	
	ВнешнийНаборДанных = Новый Структура;
	ВнешнийНаборДанных.Вставить("тзDepreciationReportForProfitTax", тзВнешнийНаборДанных);
	ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешнийНаборДанных);
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	
КонецФункции

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считывание структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

#КонецЕсли

#Если Клиент Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	#Если Клиент ИЛИ ВнешнееСоединение Тогда //18.09.2012 Пахоменков раз уж описание функции в таких инструкциях то и тут надо
	//вывод заголовка
	ВывестиЗаголовок();
	#КонецЕсли
	
	Для каждого ВыбранноеПоле из КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		Если ТипЗнч(ВыбранноеПоле) = Тип("ВыбранноеПолеКомпоновкиДанных") И ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДанныеОФизЛице.ДеньРождения") тогда 
			ВыбранноеПоле.Заголовок = "Ближайший день рождения";
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеПараметра.Значение = '00010101' Тогда
		ЗначениеПараметра.Значение = КонецДня(ТекущаяДата());
		ЗначениеПараметра.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

Если сукНачальныеНастройкиЗапроса = Неопределено Тогда
	сукНачальныеНастройкиЗапроса = Новый Структура;
КонецЕсли;

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;

Если КомпоновщикНастроек = Неопределено Тогда
	КомпоновщикНастроек =  Новый КомпоновщикНастроекКомпоновкиДанных;
КонецЕсли;
