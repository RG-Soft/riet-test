#Если Клиент Тогда
	
// Настройка периода
Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "ДатаНач", ОбщийОтчет.ДатаНач);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "ДатаКон", ОбщийОтчет.ДатаКон);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "ТекущаяДата", ОбщийОтчет.ДатаКон);

	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = Истина;
	
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры // СформироватьОтчет()

// Процедура - заполняет начальные настройки отчета
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = Истина;
	
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	СчетНаОплатуПокупателю.Ссылка КАК СчетНаОплату,
	        |	СчетФактураВыданный.Ссылка КАК СчетФактура,
	        |	ВЫБОР
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 0 И 30
	        |			ТОГДА "" 1-30""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 31 И 60
	        |			ТОГДА "" 31-60""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 61 И 90
	        |			ТОГДА "" 61-90""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 91 И 120
	        |			ТОГДА "" 91-120""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 121 И 180
	        |			ТОГДА ""121-180""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) МЕЖДУ 181 И 360
	        |			ТОГДА ""181-360""
	        |		КОГДА ДЕНЬГОДА(&ТекущаяДата) + (ГОД(&ТекущаяДата) - ГОД(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата)) * 365 - ДЕНЬГОДА(ВзаиморасчетыСПокупателямиОстатки.Сделка.Дата) > 360
	        |			ТОГДА ""360+""
	        |	КОНЕЦ КАК Период,
	        |	ВзаиморасчетыСПокупателямиОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	        |	ВзаиморасчетыСПокупателямиОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	        |	ВзаиморасчетыСПокупателямиОстатки.ПодразделениеОрганизации КАК Подразделение,
	        |	ВзаиморасчетыСПокупателямиОстатки.Сделка КАК Сделка,
	        |	ВзаиморасчетыСПокупателямиОстатки.КостЦентр КАК КостЦентр,
	        |	ВзаиморасчетыСПокупателямиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	        |	ВзаиморасчетыСПокупателямиОстатки.СуммаУпрОстаток КАК СуммаUSD,
	        |	ВзаиморасчетыСПокупателямиОстатки.СуммаРеглОстаток КАК СуммаРуб,
	        |	ВзаиморасчетыСПокупателямиОстатки.ИнвойсинговыйЦентр
	        |{ВЫБРАТЬ
	        |	СчетНаОплату.*,
	        |	СчетФактура.*,
	        |	Период,
	        |	ДоговорКонтрагента.*,
	        |	Контрагент.*,
	        |	Подразделение.*,
	        |	Сделка.*,
	        |	КостЦентр.*,
	        |	ИнвойсинговыйЦентр.*}
	        |ИЗ
	        |	РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(&ДатаКон, ) КАК ВзаиморасчетыСПокупателямиОстатки
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	        |		ПО ВзаиморасчетыСПокупателямиОстатки.Сделка = СчетФактураВыданный.ДокументОснование
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	        |		ПО ВзаиморасчетыСПокупателямиОстатки.Сделка = СчетНаОплатуПокупателю.ДокументОснование
	        |ГДЕ
	        |	ВзаиморасчетыСПокупателямиОстатки.Сделка <> НЕОПРЕДЕЛЕНО
	        |{ГДЕ
	        |	СчетНаОплатуПокупателю.Ссылка.* КАК СчетНаОплату,
	        |	СчетФактураВыданный.Ссылка.* КАК СчетФактура,
	        |	ВзаиморасчетыСПокупателямиОстатки.ДоговорКонтрагента.*,
	        |	ВзаиморасчетыСПокупателямиОстатки.ДоговорКонтрагента.Владелец.* КАК Контрагент,
	        |	ВзаиморасчетыСПокупателямиОстатки.ПодразделениеОрганизации.* КАК Подразделение,
	        |	ВзаиморасчетыСПокупателямиОстатки.Сделка.*,
	        |	ВзаиморасчетыСПокупателямиОстатки.КостЦентр.*,
	        |	ВзаиморасчетыСПокупателямиОстатки.ИнвойсинговыйЦентр.*}
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Период
	        |{УПОРЯДОЧИТЬ ПО
	        |	СчетНаОплату.*,
	        |	СчетФактура.*,
	        |	Период,
	        |	ДоговорКонтрагента.*,
	        |	Контрагент.*,
	        |	Сделка.*,
	        |	Подразделение.*,
	        |	КостЦентр.*,
	        |	ИнвойсинговыйЦентр.*}
	        |ИТОГИ
	        |	СУММА(СуммаВзаиморасчетов),
	        |	СУММА(СуммаUSD),
	        |	СУММА(СуммаРуб)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	Период,
	        |	СчетНаОплату.*,
	        |	СчетФактура.*,
	        |	ДоговорКонтрагента.*,
	        |	Контрагент.*,
	        |	Подразделение.*,
	        |	Сделка.*,
	        |	КостЦентр.*,
	        |	ИнвойсинговыйЦентр.*}";	
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить( "КостЦентр", "Accounting unit");
	СтруктураПредставлениеПолей.Вставить( "Сделка", "Документ");
    СтруктураПредставлениеПолей.Вставить( "ДоговорКонтрагента", "Договор контрагента");
	СтруктураПредставлениеПолей.Вставить( "СчетФактура", "Счет фактура");
	СтруктураПредставлениеПолей.Вставить( "СчетНаОплату", "Счет на оплату");
    СтруктураПредставлениеПолей.Вставить( "ИнвойсинговыйЦентр", "Инвойсинговый центр");

	
	ПостроительОтчета.Текст = Текст;
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	
	ОбщийОтчет.ЗаполнитьПоказатели( "СуммаВзаиморасчетов",   "Сумма (в валюте)",    Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СуммаРуб",   "Сумма (в рублях)",    Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СуммаUSD",   "Сумма (в валюте USD)",    Истина, "ЧЦ=15; ЧДЦ=2");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Контрагент");
	МассивОтбора.Добавить("СчетНаОплату");
	МассивОтбора.Добавить("СчетФактура");
	МассивОтбора.Добавить("ДоговорКонтрагента");
	МассивОтбора.Добавить("КостЦентр");
	МассивОтбора.Добавить("Подразделение");
	МассивОтбора.Добавить("ИнвойсинговыйЦентр");

	ПостроительОтчета.ИзмеренияСтроки.Добавить("Контрагент");
	ПостроительОтчета.ИзмеренияСтроки.Добавить("ДоговорКонтрагента");
	ПостроительОтчета.ИзмеренияКолонки.Добавить("Период");

	
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	ПостроительОтчета.ВыбранныеПоля.Добавить("Сделка");
	ПостроительОтчета.ВыбранныеПоля.Добавить("Подразделение");

	
	ОбщийОтчет.ВыводитьПоказателиВСтроку=Истина;
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры // Настроить()

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет  = ЭтотОбъект;
	
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);
		
	ИначеЕсли ТипЗнч(РасшифровкаСтроки) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		СтандартнаяОбработка = Ложь;
		ФормаРегистра = РегистрыНакопления.ВзаиморасчетыСПокупателями.ПолучитьФормуСписка();
		ФормаРегистра.РегистрНакопленияСписок.Отбор.Сделка.Значение = РасшифровкаСтроки.ДокументОснование;
        ФормаРегистра.РегистрНакопленияСписок.Отбор.Сделка.Использование = Истина;
        ФормаРегистра.РегистрНакопленияСписок.Отбор.Сделка.ВидСравнения = ВидСравнения.Равно;
		ФормаРегистра.Открыть();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Добавляет в структуру общие для всех отчетов параметры настройки
//
// Параметры:
//	Нет.
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("НастройкиПостроителя", ОбщийОтчет.ПостроительОтчета.ПолучитьНастройки());
	СтруктураНастроек.Вставить("Показатели", ОбщийОтчет.Показатели.Выгрузить());
	СтруктураНастроек.Вставить("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураНастроек.Вставить("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураНастроек.Вставить("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураНастроек.Вставить("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураНастроек.Вставить("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек()()

// Заполняет из структуры настроек общие параметры отчетов
//
// Параметры:
//	Нет.
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ПоказыватьЗаголовок) Экспорт
	Перем ТабПоказатели;
	
	Если ТипЗнч(ОбщийОтчет.СохраненныеНастройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщийОтчет.ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	
	СтруктураСНастройками.Свойство("Показатели", ТабПоказатели);
	Если ТипЗнч(ТабПоказатели) = Тип("ТаблицаЗначений") Тогда
		ОбщийОтчет.Показатели.Загрузить(ТабПоказатели);
	КонецЕсли;
	
	СтруктураСНастройками.Свойство("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураСНастройками.Свойство("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураСНастройками.Свойство("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураСНастройками.Свойство("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураСНастройками.Свойство("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
КонецПроцедуры // ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки)()

ОбщийОтчет.ИмяРегистра          = "ВзаиморасчетыСПокупателями";
ОбщийОтчет.мНазваниеОтчета      = "Отчет ";
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мРежимВводаПериода   = 1;

#КонецЕсли