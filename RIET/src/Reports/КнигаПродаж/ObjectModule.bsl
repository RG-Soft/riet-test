Перем ТаблицаДополнительнойИнформацииПоСФ, СоотвествиеСтрокиДопИнформацииПоСчетуФактуре;
Перем ПрефиксыРИБиОрганизации;
Перем мСведенияОбОрганизации;
Перем мСтруктураОтбораПроведен, мСтруктураОтбораСчетФактуры;

#Если КЛИЕНТ Тогда
	
Процедура ПроставитьПрочеркиВПустыеПоля(ОбластьМакета)
		
	Если ОбластьМакета.Параметры.Покупатель = "Розничная продажа" Тогда
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ПокупательИНН) Тогда
			ОбластьМакета.Параметры.ПокупательИНН = "---";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ПокупательКПП) Тогда
			ОбластьМакета.Параметры.ПокупательКПП = "---";
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры
	
// Формирует табличную часть отчета
Процедура СформироватьКнигуПродаж(ЭлементыФормы) Экспорт
	
	мСведенияОбОрганизации = Неопределено;
	ОшибкаПолученияУчетнойПолитики = Ложь;
		
	УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(НачалоПериода, ОшибкаПолученияУчетнойПолитики, Организация, "Нал");
		
	Если ОшибкаПолученияУчетнойПолитики Тогда
		Возврат;
	КонецЕсли;
		
	// У нас нет этой функции и РИБ не используется
	//ПрефиксыРИБиОрганизации = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
	ПрефиксыРИБиОрганизации = Новый Массив();
	ЕстьЗаписиПоКолонке20 = Ложь;	
		
	ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
	ОсновнойРаздел = ПанельРазделовКниги.Страницы.ОсновнойРаздел;
	КоличествоОтображаемыхРазделов = ПанельРазделовКниги.Страницы.Количество();
	Для НомерСтраницы = 1 по КоличествоОтображаемыхРазделов Цикл
		Если ПанельРазделовКниги.Страницы[КоличествоОтображаемыхРазделов - НомерСтраницы] = ОсновнойРаздел Тогда
			Продолжить;
		КонецЕсли; 
		ПанельРазделовКниги.Страницы.Удалить(КоличествоОтображаемыхРазделов - НомерСтраницы);
	КонецЦикла; 
	
	Если Не (ВыводитьТолькоДопЛисты И ФормироватьДополнительныеЛисты) Тогда
		СформироватьОсновнойРаздел(ЭлементыФормы, УчетнаяПолитикаНУ);
	КонецЕсли;
	
	СформироватьДополнительныеЛисты_1_6_23(Организация, НачалоПериода, КонецПериода, ЭлементыФормы, УчетнаяПолитикаНУ);
	//СформироватьДополнительныеЛисты(Организация, НачалоПериода, КонецПериода, ЭлементыФормы, УчетнаяПолитикаНУ);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20)
	
		Секция.Параметры.Заполнить(ЗаписьКниги);
		Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
			Секция.Параметры.СчетФактура = ЗаписьКниги.СчетФактураДокумент;
		ИначеЕсли ЗаписьКниги.Строки.Количество() <> 0 Тогда
			Секция.Параметры.СчетФактура = ЗаписьКниги.Строки[0].СчетФактура;
		КонецЕсли;
		
		//Добавила Федотова Л., РГ-Софт, 16.08.11, изменил Трефиленков 26.08.11
		Если НЕ ЗначениеЗаполнено(ЗаписьКниги.Строки) Тогда
			РасшифровкаДанныхПокупателя = ЗаписьКниги;
			ЗаписьКниги = ЗаписьКниги.Родитель;
		Иначе
			РасшифровкаДанныхПокупателя		= ЗаписьКниги.Строки[0];
		КонецЕсли;
		//<-
		
		Секция.Параметры.Покупатель		= РасшифровкаДанныхПокупателя.Покупатель;
		Секция.Параметры.ПокупательИНН	= РасшифровкаДанныхПокупателя.ПокупательИНН;
		Секция.Параметры.ПокупательКПП	= РасшифровкаДанныхПокупателя.ПокупательКПП;
		Секция.Параметры.Контрагент		= РасшифровкаДанныхПокупателя.Контрагент;
		Секция.Параметры.НалоговаяРегистрация= РасшифровкаДанныхПокупателя.НалоговаяРегистрация;
		Секция.Параметры.LawsonIDClient	= РасшифровкаДанныхПокупателя.LawsonIDClient;
		Если ВидЦенности Тогда
			Секция.Параметры.ВидЦенности	= РасшифровкаДанныхПокупателя.ВидЦенности;
		КонецЕсли; 
			
		Если Не ЕстьЗаписиПоКолонке20 И Не (ЗаписьКниги.СуммаБезНДС20 = 0 И ЗаписьКниги.НДС20 = 0) Тогда
			ЕстьЗаписиПоКолонке20 = Истина;
		КонецЕсли; 
			
		Если ЗначениеЗаполнено(РасшифровкаДанныхПокупателя.СчетФактура) Тогда
			СтрокаДополнительнойИнформации = СоотвествиеСтрокиДопИнформацииПоСчетуФактуре[Строка(РасшифровкаДанныхПокупателя.СчетФактура.УникальныйИдентификатор())];
			Если Не СтрокаДополнительнойИнформации = Неопределено 
				И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		ЗаполнениеДатыИНомераСФ(РасшифровкаДанныхПокупателя, Секция);
			
		ТекстОплаты = "";
		СписокДатОплат = Новый списокЗначений();
		Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
			Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
				Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
					ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
					СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// Проверим наличие дополнительных дат оплат	
		Если НЕ СтрокаДополнительнойИнформации = Неопределено 
			 И ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив")
			 Тогда
			 Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
				 Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
					 ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) + Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
					 СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
				 КонецЕсли;
			 КонецЦикла;
		 КонецЕсли; 

		//Если Не РасшифровкаДанныхПокупателя.НаАванс И Не РасшифровкаДанныхПокупателя.НаСуммовуюРазницу 
		//	И РасшифровкаДанныхПокупателя.МоментОпределенияНалоговойБазыНДС = Перечисления.МоментыОпределенияНалоговойБазыНДС.ПоОплате 
		//	И Не СтрокаДополнительнойИнформации = Неопределено
		//	И Не ПустаяСтрока(ТекстОплаты)
		//	И ЗаписьКниги.ВсегоПродаж > 0 
		//	И ЗаписьКниги.ВсегоПродаж < СтрокаДополнительнойИнформации.СуммаСНДС 
		//	Тогда
		//	ТекстОплаты = ТекстОплаты + " частичная оплата";
		//КонецЕсли; 
			
		Секция.Параметры.ДатаОплаты = ТекстОплаты;
			
		ПроставитьПрочеркиВПустыеПоля(Секция);
	
	
КонецПроцедуры
	
Процедура СформироватьОсновнойРаздел(ЭлементыФормы, УчетнаяПолитикаНУ) Экспорт
	
	ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если КонецПериода < '20090609' Тогда
		Макет = ПолучитьМакет("Макет");
	Иначе
		Макет = ПолучитьМакет("Макет451");
	КонецЕсли;
		
	// Вывод шапки
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
	НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент = " + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
	Если Не ВидЦенности тогда
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенности"));
	КонецЕсли;
	
	ЕстьЗаписиПоКолонке20 = Ложь;	
	
	// Анализ ИБ для формирования книги продаж
	СписокСчетовФактур = Неопределено;
	//Результат = ПодготовитьКнигуКВыводуНаПечать_1_6_23(УчетнаяПолитикаНУ.НДСНалоговыйПериод, СписокСчетовФактур);
	Результат = ПодготовитьКнигуКВыводуНаПечать(УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС);
	Если Результат.Пустой() Тогда
			
		Секция = Макет.ПолучитьОбласть("Всего");
			
		Секция.Параметры.ВсегоПродаж = 	0;
		Секция.Параметры.СуммаБезНДС18 = 	0;
		Секция.Параметры.НДС18 = 			0;
		Секция.Параметры.СуммаБезНДС10 = 	0;
		Секция.Параметры.НДС10 = 			0;
		Секция.Параметры.НДС0 = 			0;
		Секция.Параметры.СуммаБезНДС20 = 	0;
		Секция.Параметры.НДС20 = 			0;
		Секция.Параметры.СуммаСовсемБезНДС= 0;
			
		ТабличныйДокумент.Вывести(Секция);
			
		/////////////////////////////////////////////////////////////////////////
		// Вывод подвала
		ВывестиПодвал(ТабличныйДокумент, Макет);
		// Вывод подвала
		/////////////////////////////////////////////////////////////////////////
			
		Если СкрытьКолонкиПоСтавке20 Тогда
			ТекстНадписьПриложение = ТабличныйДокумент.Область("НадписьПриложение").Текст;
			ТабличныйДокумент.Область("НадписьПриложение").Очистить();
			ТабличныйДокумент.Область("НадписьПриложение").Разъединить();
			ТабличныйДокумент.Область("НадписьПриложениеБез20Процентов").Объединить();
			ТабличныйДокумент.Область("НадписьПриложениеБез20Процентов").Текст = ТекстНадписьПриложение;
					
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
			
		КонецЕсли; 
		
		Если Не ВидЦенности тогда
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиИтог"));
		КонецЕсли;
		 		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		Возврат;
	КонецЕсли; 
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИтогПоОрганизации = ДеревоЗаписей.Строки[0];
		
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(Организация, КонецПериода, СписокСчетовФактур);
		
	Секция = Макет.ПолучитьОбласть("Строка");
	Если ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	Если УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС = Перечисления.МоментыОпределенияНалоговойБазыНДС.ПоОплате Тогда 
		Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
			Для Каждого ИтогПоКонтрагенту Из ИтогПоОрганизации.Строки Цикл 
				СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
				ТабличныйДокумент.Вывести(СекцияКонтрагент);
				ТабличныйДокумент.НачатьГруппуСтрок();
				Если ВидЦенности Тогда
					Для Каждого ИтогПоВидуЦенности Из ИтогПоКонтрагенту.Строки Цикл
						Для каждого ЗаписьКниги Из ИтогПоВидуЦенности Цикл
							ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
							ТабличныйДокумент.Вывести(Секция);
						КонецЦикла; 
					КонецЦикла; 
				Иначе
					Для Каждого ЗаписьКниги Из ИтогПоКонтрагенту.Строки Цикл
						ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
						ТабличныйДокумент.Вывести(Секция);
						ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиСтрока"));
					КонецЦикла; 
				КонецЕсли; 
				ТабличныйДокумент.ЗакончитьГруппуСтрок();
				СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
				Если Не ВидЦенности тогда
					ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиКонтрагент"));
				КонецЕсли;

			КонецЦикла;
		Иначе
			Если ВидЦенности Тогда
				Для Каждого ИтогПоВидуЦенности Из ИтогПоОрганизации.Строки Цикл
					Для каждого ЗаписьКниги Из ИтогПоВидуЦенности Цикл
						ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
						ТабличныйДокумент.Вывести(Секция);
					КонецЦикла; 
				КонецЦикла; 
			Иначе
				Для Каждого ЗаписьКниги Из ИтогПоОрганизации.Строки Цикл
					ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
					ТабличныйДокумент.Вывести(Секция);
					ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиСтрока"));
				КонецЦикла; 
			КонецЕсли; 
		КонецЕсли;		
	Иначе
		Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
			Для Каждого ИтогПоКонтрагенту Из ИтогПоОрганизации.Строки Цикл 
				СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
				ТабличныйДокумент.Вывести(СекцияКонтрагент);
				ТабличныйДокумент.НачатьГруппуСтрок();
				Для каждого СтрокаСФ Из ИтогПоКонтрагенту.Строки Цикл
					Для каждого Строка_Ананс_НеАванс Из СтрокаСФ.Строки Цикл
						Если ВидЦенности Тогда
							Для каждого ИтогПоСТавке Из Строка_Ананс_НеАванс.Строки Цикл
								Для каждого ЗаписьКниги Из ИтогПоСТавке.Строки Цикл
									ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
									ТабличныйДокумент.Вывести(Секция);
								КонецЦикла;
							КонецЦикла; 
						Иначе
							Для каждого ЗаписьКниги Из Строка_Ананс_НеАванс.Строки Цикл
								ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
								ТабличныйДокумент.Вывести(Секция);
								ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиСтрока"));
							КонецЦикла; 
						КонецЕсли; 
					КонецЦикла; 
				КонецЦикла;
				ТабличныйДокумент.ЗакончитьГруппуСтрок();
				СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
				ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
				Если Не ВидЦенности тогда
					ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиКонтрагент"));
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого СтрокаСФ Из ИтогПоОрганизации.Строки Цикл
				Для каждого Строка_Ананс_НеАванс Из СтрокаСФ.Строки Цикл
					Если ВидЦенности Тогда
						Для каждого ИтогПоСТавке Из Строка_Ананс_НеАванс.Строки Цикл
							Для каждого ЗаписьКниги Из ИтогПоСТавке.Строки Цикл
								ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
								ТабличныйДокумент.Вывести(Секция);								
							КонецЦикла; 
						КонецЦикла; 
					Иначе	
						Для каждого ЗаписьКниги Из Строка_Ананс_НеАванс.Строки Цикл
							ЗаполнитьСтрокуКнигиПродаж(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
							ТабличныйДокумент.Вывести(Секция);
							ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиСтрока"));
						КонецЦикла; 
					КонецЕсли; 
				КонецЦикла; 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
		
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
		
	ТабличныйДокумент.Вывести(Секция);
	Если Не ВидЦенности тогда
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВидЦенностиИтог"));
	КонецЕсли;
		
	/////////////////////////////////////////////////////////////////////////
	// Вывод подвала
	ВывестиПодвал(ТабличныйДокумент, Макет);
	// Вывод подвала
	/////////////////////////////////////////////////////////////////////////

	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
		
	Если СкрытьКолонкиПоСтавке20 Тогда
		Если ЕстьЗаписиПоКолонке20 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(НачалоПериода, ?(КонецПериода='00010101',КонецПериода,КонецДня(КонецПериода)))+" есть записи по ставке НДС 20%!
			|Отображение соотвествующих колонок не может быть отключено.");
		Иначе
			ТекстНадписьПриложение = ТабличныйДокумент.Область("НадписьПриложение").Текст;
			ТабличныйДокумент.Область("НадписьПриложение").Очистить();
			ТабличныйДокумент.Область("НадписьПриложение").Разъединить();
			ТабличныйДокумент.Область("НадписьПриложениеБез20Процентов").Объединить();
			ТабличныйДокумент.Область("НадписьПриложениеБез20Процентов").Текст = ТекстНадписьПриложение;
				
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
		КонецЕсли;
	КонецЕсли;
	
	
		
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		
КонецПроцедуры // СформироватьКнигуПродаж()
	
Процедура ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20)
	
	Если НЕ ЗначениеЗаполнено(ЗаписьКниги) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		СтрокаДополнительнойИнформации = СоотвествиеСтрокиДопИнформацииПоСчетуФактуре[Строка(ЗаписьКниги.СчетФактура.УникальныйИдентификатор())];
		Если Не СтрокаДополнительнойИнформации = Неопределено 
			И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
			СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли; 
	Иначе
		СтрокаДополнительнойИнформации = Неопределено;
	КонецЕсли;
	
	Секция.Параметры.Заполнить(ЗаписьКниги);
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		Секция.Параметры.СчетФактура = ЗаписьКниги.СчетФактураДокумент;
	ИначеЕсли ЗаписьКниги.Строки.Количество() <> 0 Тогда
		Секция.Параметры.СчетФактура = ЗаписьКниги.СчетФактура;
	КонецЕсли;
		
	Секция.Параметры.Покупатель		= ЗаписьКниги.Покупатель;
	Секция.Параметры.ПокупательИНН	= ЗаписьКниги.ПокупательИНН;
	Секция.Параметры.ПокупательКПП	= ЗаписьКниги.ПокупательКПП;
	Секция.Параметры.Контрагент		= ЗаписьКниги.Контрагент;
		
	ЗаполнениеДатыИНомераСФ(ЗаписьКниги, Секция);
		
	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений;
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Проверим наличие дополнительных дат оплат
	Если Не СтрокаДополнительнойИнформации = Неопределено 
		И ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив")
		Тогда
		Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
			Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) + Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	
	Секция.Параметры.ДатаОплаты = ТекстОплаты;
		
	ПроставитьПрочеркиВПустыеПоля(Секция);

	Если не ЕстьЗаписиПоКолонке20 и не (ЗаписьКниги.СуммаБезНДС20 = 0 и ЗаписьКниги.НДС20 = 0) Тогда
		ЕстьЗаписиПоКолонке20 = Истина;
	КонецЕсли; 
									
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты_1_6_23(Организация, НачалоПериода, КонецПериода, ЭлементыФормы, УчетнаяПолитикаНУ = Неопределено)
	Перем Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента;
	Перем ТабличныйДокумент;
	
	Если УчетнаяПолитикаНУ.Свойство("НДСНалоговыйПериод") Тогда 
		НДСНалоговыйПериод = УчетнаяПолитикаНУ.НДСНалоговыйПериод;
	Иначе
		НДСНалоговыйПериод = Перечисления.Периодичность.Месяц;
	КонецЕсли;
	//НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, КонецПериода, УчетнаяПолитикаНУ);
		
	СтруктураПараметров = ПроверитьНаличиеДопЛистов(Организация, НачалоПериода, КонецПериода, НДСНалоговыйПериод);
		
	Если ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
			|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
			|Для этого необходимо взвести флаг ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
			|Построение дополнительных листов за текущий налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Не ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
			|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
			|Для этого необходимо взвести флаг ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
			|Построение дополнительных листов за корректируемый налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Если Не ФормироватьДополнительныеЛисты Тогда
		Возврат;
	КонецЕсли;
		
	СписокСчетовФактур = Неопределено;
	//Результат = ПолучитьЗаписиДополнительныхЛистов_1_6_23(Организация, НачалоПериода, КонецПериода, УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС, СписокСчетовФактур);
	Результат = ПолучитьЗаписиДополнительныхЛистов(Организация, НачалоПериода, КонецПериода, УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
		
	Макет = ПолучитьМакет("ДополнительныйЛист");
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","ФИОБух");
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
		
	Секция = Макет.ПолучитьОбласть("Строка");
	СтрокаИтого = Макет.ПолучитьОбласть("Итого");
	СтрокаВсего = Макет.ПолучитьОбласть("Всего");
		
	Если ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	НомерОтображаемогоПериода = 0;
	
	Если СкрытьКолонкиПоСтавке20 Тогда
	    ТаблицаОбластейДляКорректировки = Новый ТаблицаЗначений();
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("НадписьПриложение");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("НадписьПриложениеБез20Процентов");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("Подпись20Процентов");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("КонецЛистаБезПодписи20Процентов");
	КонецЕсли; 
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	/////////////////////////////////////////////////////////////////////////
	// Получение дополнительной информации по счетам-фактурам
	СписокСчетовФактур = Неопределено;
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(Организация, КонецПериода, СписокСчетовФактур, Истина);	
	// Получение дополнительной информации по счетам-фактурам
	/////////////////////////////////////////////////////////////////////////
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		
		НомерЛиста = 0;
   //------------------------
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(ИтогПоПериодам.ПериодСобытия, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
				
		ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
		НоваяСтраница = ПанельРазделовКниги.Страницы.Добавить("ДопЛист"+НомерОтображаемогоПериода,"Доп.листы за "+НалоговыйПериод);
		ПанельРазделовКниги.ТекущаяСтраница = НоваяСтраница;
		ТабличныйДокумент = ЭлементыФормы.Добавить(Тип("ПолеТабличногоДокумента"),"ТД_ДопЛист"+НомерОтображаемогоПериода, Истина,ПанельРазделовКниги);
		ТабличныйДокумент.Лево = ЭлементыФормы.ТабличныйДокумент.Лево;
		ТабличныйДокумент.Верх = ЭлементыФормы.ТабличныйДокумент.Верх;
		ТабличныйДокумент.Высота = ЭлементыФормы.ТабличныйДокумент.Высота;
		ТабличныйДокумент.Ширина = ЭлементыФормы.ТабличныйДокумент.Ширина;
		ТабличныйДокумент.Очистить();
				
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.ТолькоПросмотр = Истина;
	//------------------------
		Если СкрытьКолонкиПоСтавке20 Тогда
		    ТаблицаОбластейДляКорректировки.Очистить();
		КонецЕсли;
		МожноСкрытьКолонкиПоСтавке20 = СкрытьКолонкиПоСтавке20;

		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			// Формирование шапки доп. листа
			НомерЛиста = НомерЛиста + 1;
				
			ВывестиШапкуДопЛиста_1_6_23(ТабличныйДокумент, Макет, ИтогПоПериодамКорректировки, НомерЛиста); //НачалоПериода, КонецПериода, НДСНалоговыйПериод,

			ИтогЗаПериод = ПолучитьИтогиЗаПериод(Организация, ИтогПоПериодамКорректировки.ПериодСобытия, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода),ИтогПоПериодамКорректировки.МоментОпределенияНалоговойБазыНДС);
			Если Не ИтогЗаПериод.Пустой() Тогда
				ИтогЗаПериод = ИтогЗаПериод.Выгрузить()[0];
			Иначе
				ИтогЗаПериод = Новый Структура;
				ИтогЗаПериод.Вставить("ВсегоПродаж", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
			КонецЕсли;
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			ЕстьЗаписиПоКолонке20 = не (ИтогЗаПериод.СуммаБезНДС20 = 0 и ИтогЗаПериод.НДС20 = 0);
			ТабличныйДокумент.Вывести(СтрокаИтого);
			
			Если НЕ ВидЦенности Тогда
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦИтого"));
			КонецЕсли; 

			Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
				Для Каждого ИтогПоКонтрагенту Из ИтогПоПериодамКорректировки.Строки Цикл
					СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
					ТабличныйДокумент.Вывести(СекцияКонтрагент);
					
					Если НЕ ВидЦенности Тогда
						ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦКонтрагент"));
					КонецЕсли; 
					
					ТабличныйДокумент.НачатьГруппуСтрок();
					Для каждого ЗаписьПоСФ Из ИтогПоКонтрагенту.Строки Цикл
						Для Каждого СторнирующаяЗаписьДопЛиста Из ЗаписьПоСФ.Строки Цикл
							Если ВидЦенности Тогда
								Для каждого ИтогПоВидуЦенности Из СторнирующаяЗаписьДопЛиста.Строки Цикл
									Для Каждого ЗаписьКниги Из ИтогПоВидуЦенности.Строки Цикл
										
										ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
										
										ТабличныйДокумент.Вывести(Секция);
										
										ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
										ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
										ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
										ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
										ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
										ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
										ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
										ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
										ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
										
									КонецЦикла; 
								КонецЦикла; 
							Иначе	
								Для Каждого ЗаписьКниги Из СторнирующаяЗаписьДопЛиста.Строки Цикл
									
									ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
									
									ТабличныйДокумент.Вывести(Секция);
									
									Если НЕ ВидЦенности Тогда
										ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦСтрока"));
									КонецЕсли; 
									
									ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
									ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
									ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
									ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
									ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
									ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
									ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
									ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
									ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
									
								КонецЦикла; 
							КонецЕсли; 
						КонецЦикла; 
					КонецЦикла;  
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
					СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
					
					Если НЕ ВидЦенности Тогда
						ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦВсегоКонтрагент"));
					КонецЕсли; 
					
				КонецЦикла;
			Иначе	
				Для Каждого ЗаписьПоСФ Из ИтогПоПериодамКорректировки.Строки Цикл
					Для Каждого СторнирующаяЗаписьДопЛиста Из ЗаписьПоСФ.Строки Цикл
						Если ВидЦенности Тогда
							Для каждого ИтогПоВидуЦенности Из СторнирующаяЗаписьДопЛиста.Строки Цикл
								Для Каждого ЗаписьКниги Из ИтогПоВидуЦенности.Строки Цикл
									
									ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
									
									ТабличныйДокумент.Вывести(Секция);
									
									ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
									ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
									ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
									ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
									ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
									ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
									ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
									ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
									ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
									
								КонецЦикла; 
							КонецЦикла; 
							
						Иначе
							Для Каждого ЗаписьКниги Из СторнирующаяЗаписьДопЛиста.Строки Цикл
								
								
								ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
								
								ТабличныйДокумент.Вывести(Секция);
								Если НЕ ВидЦенности Тогда
									ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦСтрока"));
								КонецЕсли; 
								
								
								ИтогЗаПериод.ВсегоПродаж = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
								ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
								ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
								ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
								ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
								ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
								ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
								ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
								ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
								
								
							КонецЦикла; 
						КонецЕсли; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЕсли;
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			Если НЕ ВидЦенности Тогда
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦВсего"));
			КонецЕсли; 
					
			/////////////////////////////////////////////////////////////////////////
			// Вывод подвала
			ВывестиПодвал(ТабличныйДокумент, Макет);
			// Вывод подвала
			/////////////////////////////////////////////////////////////////////////
			
			МожноСкрытьКолонкиПоСтавке20 = МожноСкрытьКолонкиПоСтавке20 и не ЕстьЗаписиПоКолонке20;
			
			Если МожноСкрытьКолонкиПоСтавке20 тогда
				МакетТекущегоЛиста = ТаблицаОбластейДляКорректировки.Добавить();
				МакетТекущегоЛиста.НадписьПриложение = ТабличныйДокумент.Область("НадписьПриложение");
				МакетТекущегоЛиста.НадписьПриложениеБез20Процентов = ТабличныйДокумент.Область("НадписьПриложениеБез20Процентов");
				МакетТекущегоЛиста.Подпись20Процентов = ТабличныйДокумент.Область("Подпись20Процентов");
				МакетТекущегоЛиста.КонецЛистаБезПодписи20Процентов = ТабличныйДокумент.Область(МакетТекущегоЛиста.Подпись20Процентов.Верх,,МакетТекущегоЛиста.Подпись20Процентов.Верх); 
			КонецЕсли; 
			
		КонецЦикла;
		
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		Если СкрытьКолонкиПоСтавке20 Тогда
			Если не МожноСкрытьКолонкиПоСтавке20 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В дополнительном листе книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(ИтогПоПериодамКорректировки.ПериодСобытия, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода))+" есть записи по ставке НДС 20%!
				|Отображение соотвествующих колонок не может быть отключено.");
			Иначе
				ТекстНадписьПриложение = ТабличныйДокумент.Область("НадписьПриложение").Текст;
				Для каждого ОбластиДляКорректировки Из ТаблицаОбластейДляКорректировки Цикл
					ОбластиДляКорректировки.НадписьПриложение.Очистить();
					ОбластиДляКорректировки.НадписьПриложение.Разъединить();
					ОбластиДляКорректировки.НадписьПриложениеБез20Процентов.Объединить();
					ОбластиДляКорректировки.НадписьПриложениеБез20Процентов.Текст = ТекстНадписьПриложение;
					
					ТабличныйДокумент.УдалитьОбласть(ОбластиДляКорректировки.Подпись20Процентов);
					
					ОбластиДляКорректировки.КонецЛистаБезПодписи20Процентов.КонецСтраницы = Истина;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла; 	
				
				Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
				ЛеваяКолонка = Область20Процентов.Лево;
				ПраваяКолонка = Область20Процентов.Право;
				ОбластьКУдалению = ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка);
				ТабличныйДокумент.УдалитьОбласть(ОбластьКУдалению,ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
		
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры // СформироватьКнигуПродаж()

// Формирует табличную часть отчета
Процедура СформироватьДополнительныеЛисты(ЗаписиКнигиПродаж, Организация, НачалоПериода, КонецПериода, ТабличныйДокумент, УчетнаяПолитикаНУ = Неопределено)
		
	Если УчетнаяПолитикаНУ = Неопределено Тогда
		УчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(НачалоПериода, Неопределено, Организация, "Нал");
	КонецЕсли;
	Если УчетнаяПолитикаНУ.Свойство("НДСНалоговыйПериод") Тогда 
		НДСНалоговыйПериод = УчетнаяПолитикаНУ.НДСНалоговыйПериод;
	Иначе
		НДСНалоговыйПериод = Перечисления.Периодичность.Месяц;
	КонецЕсли;
	
	СтруктураПараметров = ПроверитьНаличиеДопЛистов(Организация, НачалоПериода, КонецПериода, НДСНалоговыйПериод);
	
	Если ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
					|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
					|Для этого необходимо взвести флаг ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
					|Построение дополнительных листов за текущий налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Не ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
					|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
					|Для этого необходимо взвести флаг ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
					|Построение дополнительных листов за корректируемый налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Не ФормироватьДополнительныеЛисты Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ПолучитьЗаписиДополнительныхЛистов(Организация, НачалоПериода, КонецПериода, УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	НомерЛиста = 1;
	Макет = ПолучитьМакет("ДополнительныйЛист");
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","ФИОБух");
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		Счетчик = 0;
		ТекущийПериодКорректировки = '00010101';
		
		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			// Формирование шапки доп. листа, если они формируются за корректируемый период
			
			СписокДатОплат = Новый СписокЗначений;
			СписокСчетовФактур = УчетНДС.УдалитьПовторяющиесяЭлементыМассива(ИтогПоПериодамКорректировки.Строки.ВыгрузитьКолонку("СчетФактура"),Истина);
			ДополнительнаяИнформацияПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(Организация, КонецПериода, СписокСчетовФактур);
			
			Для каждого ЗаписьпоСФ Из ИтогПоПериодамКорректировки.Строки Цикл
				ДатаИНомерСФ = ОпределитьДатуИНомерСФ(ЗаписьпоСФ.Строки[0].Строки[0]);
				Секция = Макет.ПолучитьОбласть("Строка");
				Для каждого ЗаписьКниги Из ЗаписьПоСФ.Строки Цикл
					// Формирование шапки доп. листа, если они формируются за текущий период
					// В данном случае требуется формировать новый лист для каждого периода внесения корректировок
					НовыйЛист = Ложь;
					ВыводВсего = Истина;
					Если ТекущийПериодКорректировки = '00010101' Тогда
						ТекущийПериодКорректировки = КонецДня(ЗаписьКниги.Период);
						УчетнаяПолитикаПериодКорректировки = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ТекущийПериодКорректировки, Неопределено, Организация, "Нал");
						Если УчетнаяПолитикаПериодКорректировки.Свойство("НДСНалоговыйПериод") Тогда 
							НДСНалоговыйПериодКорректировки = УчетнаяПолитикаПериодКорректировки.НДСНалоговыйПериод;
						Иначе
							НДСНалоговыйПериодКорректировки = Перечисления.Периодичность.Месяц;
						КонецЕсли;
						НовыйЛист = Истина;
						ВыводВсего = Ложь;
						Если НДСНалоговыйПериод = Перечисления.Периодичность.Месяц Тогда
							ИтогЗаПериод = ПолучитьИтогиЗаПериод(Организация, НачалоМесяца(ИтогПоПериодам.ПериодСобытия), КонецМесяца(ИтогПоПериодам.ПериодСобытия), УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС);
						Иначе
							ИтогЗаПериод = ПолучитьИтогиЗаПериод(Организация, НачалоКвартала(ИтогПоПериодам.ПериодСобытия), КонецКвартала(ИтогПоПериодам.ПериодСобытия), УчетнаяПолитикаНУ.МоментОпределенияНалоговойБазыНДС);
						КонецЕсли;	
						Если Не ИтогЗаПериод.Пустой() Тогда
							ИтогЗаПериод = ИтогЗаПериод.Выгрузить()[0];
						Иначе
							ИтогЗаПериод = Новый Структура;
							ИтогЗаПериод.Вставить("ИтогоПродаж", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("СуммаБезНДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("НДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
							ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
						КонецЕсли;
					КонецЕсли;
					Если КонецДня(ЗаписьКниги.Период) <> ТекущийПериодКорректировки Тогда 
						НовыйЛист = Истина;
					КонецЕсли;
					Если НовыйЛист Тогда
						// Вывод строки "Всего"
						Если ВыводВсего Тогда
							СтрокаВсего = Макет.ПолучитьОбласть("Всего");
							СтрокаВсего.Параметры.ВсегоПродаж = 	ИтогЗаПериод.ИтогоПродаж;
							СтрокаВсего.Параметры.СуммаБезНДС18 = 	ИтогЗаПериод.СуммаБезНДС18;
							СтрокаВсего.Параметры.НДС18 = 			ИтогЗаПериод.НДС18;
							СтрокаВсего.Параметры.СуммаБезНДС10 = 	ИтогЗаПериод.СуммаБезНДС10;
							СтрокаВсего.Параметры.НДС10 = 			ИтогЗаПериод.НДС10;
							СтрокаВсего.Параметры.НДС0 = 			ИтогЗаПериод.НДС0;
							СтрокаВсего.Параметры.СуммаБезНДС20 = 	ИтогЗаПериод.СуммаБезНДС20;
							СтрокаВсего.Параметры.НДС20 = 			ИтогЗаПериод.НДС20;
							СтрокаВсего.Параметры.СуммаСовсемБезНДС= ИтогЗаПериод.СуммаСовсемБезНДС;
							ТабличныйДокумент.Вывести(СтрокаВсего);
							
							// Вывод подвала
							Подвал = Макет.ПолучитьОбласть("Подвал");
							Подвал.Параметры.ИмяБух = СведенияОбОрганизации.ФИОБух;
							Подвал.Параметры.ИмяОрг = "";
								
							ТабличныйДокумент.Вывести(Подвал);
						КонецЕсли;
						ТекущийПериодКорректировки = КонецДня(ЗаписьКниги.Период);
						ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ЗаписьКниги, НачалоПериода, КонецПериода, НДСНалоговыйПериод, НомерЛиста);
						НомерЛиста = НомерЛиста + 1;
						// Вывод строки "Итого"
						СтрокаИтого = Макет.ПолучитьОбласть("Итого");
						СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
						ТабличныйДокумент.Вывести(СтрокаИтого);
					КонецЕсли;
					
					Счетчик = Счетчик + 1;
					
					Секция.Параметры.Заполнить(ЗаписьКниги);
					
					Секция.Параметры.Покупатель		= ЗаписьКниги.Строки[0].Покупатель;
					Секция.Параметры.ПокупательИНН	= ЗаписьКниги.Строки[0].ПокупательИНН;
					Секция.Параметры.ПокупательКПП	= ЗаписьКниги.Строки[0].ПокупательКПП;
					Секция.Параметры.Контрагент		= ЗаписьКниги.Строки[0].Контрагент;
					
					Секция.Параметры.ДатаНомер = ДатаИНомерСФ;
					
					ТекстОплаты = "";
					СписокДатОплат.Очистить();
					Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
						Если Не ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
							Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
								ТекстОплаты = ТекстОплаты + ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ТекстОплаты), "", ",") + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
								СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Секция.Параметры.ДатаОплаты = ТекстОплаты;
					
					ПроставитьПрочеркиВПустыеПоля(Секция);
					
					ТабличныйДокумент.Вывести(Секция);
					
					ИтогЗаПериод.ИтогоПродаж = ИтогЗаПериод.ИтогоПродаж + ЗаписьКниги.ВсегоПродаж;
					ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
					ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
					ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
					ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
					ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
					ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
					ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
					ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
					
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
			
		// Вывод всего
		Секция = Макет.ПолучитьОбласть("Всего");
		Если ТипЗнч(ИтогЗаПериод) = Тип("РезультатЗапроса") Тогда
		    Секция.Параметры.Заполнить(ИтогПоПериодам);
		Иначе
			Секция.Параметры.ВсегоПродаж = 		ИтогЗаПериод.ИтогоПродаж;
			Секция.Параметры.СуммаБезНДС18 = 	ИтогЗаПериод.СуммаБезНДС18;
			Секция.Параметры.НДС18 = 			ИтогЗаПериод.НДС18;
			Секция.Параметры.СуммаБезНДС10 = 	ИтогЗаПериод.СуммаБезНДС10;
			Секция.Параметры.НДС10 = 			ИтогЗаПериод.НДС10;
			Секция.Параметры.НДС0 = 			ИтогЗаПериод.НДС0;
			Секция.Параметры.СуммаБезНДС20 = 	ИтогЗаПериод.СуммаБезНДС20;
			Секция.Параметры.НДС20 = 			ИтогЗаПериод.НДС20;
			Секция.Параметры.СуммаСовсемБезНДС= ИтогЗаПериод.СуммаСовсемБезНДС;
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(Секция);
			
		// Вывод подвала
		Секция = Макет.ПолучитьОбласть("Подвал");
		Секция.Параметры.ИмяБух = СведенияОбОрганизации.ФИОБух;
		Секция.Параметры.ИмяОрг = "";
			
		ТабличныйДокумент.Вывести(Секция);
		
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;
	
КонецПроцедуры // СформироватьКнигуПродаж()


// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Заполняет некоторые параметры строки: 
// ДатаНомер и СчетФактура(по авансам)
Процедура ЗаполнениеДатыИНомераСФ(ЗаписьКниги, Секция)
		
	ДатаНомер = ОпределитьДатуИНомерСФ(ЗаписьКниги, Секция);
		
	Секция.Параметры.ДатаНомер = ДатаНомер;
		
КонецПроцедуры
	
// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Заполняет некоторые параметры строки: 
// ДатаНомер и СчетФактура(по авансам)
Функция ОпределитьДатуИНомерСФ_1_6_23(ЗаписьКниги, Секция = Неопределено)
		
	Если Не ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		Возврат "";
	КонецЕсли;					
	
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		Если ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			// Не требуется удаление префиксов в номере документа
			ДатаНомер = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") + ", №" + СокрЛП(ЗаписьКниги.НомерСчетаФактуры);
		Иначе
			ДатаНомер = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(Новый Структура("Дата, Номер, Организация", ЗаписьКниги.ДатаСчетаФактуры, ЗаписьКниги.НомерСчетаФактуры, Организация), ПрефиксыРИБиОрганизации);
		КонецЕсли; 
	ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + ЗаписьКниги.СчетФактура.НомерВходящегоДокумента;
	ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактура,ПрефиксыРИБиОрганизации);
	Иначе
		Если ЗаписьКниги.НаАванс Тогда
			мСтруктураОтбораСчетФактуры.Вставить("ВидСчетаФактуры", Перечисления.ВидСчетаФактурыВыставленного.НаАванс);
		ИначеЕсли ЗаписьКниги.НаСуммовуюРазницу Тогда
			мСтруктураОтбораСчетФактуры.Вставить("ВидСчетаФактуры", Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу);
		Иначе
			мСтруктураОтбораСчетФактуры.Вставить("ВидСчетаФактуры", Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
		КонецЕсли; 
		
		Если (ЗаписьКниги.НаАванс Или ЗаписьКниги.НаСуммовуюРазницу)
			И ЗначениеЗаполнено(ЗаписьКниги.СтавкаНДС_Аванс) Тогда
			мСтруктураОтбораСчетФактуры.Вставить("СтавкаНДС",ЗаписьКниги.СтавкаНДС_Аванс);
		ИначеЕсли мСтруктураОтбораСчетФактуры.Свойство("СтавкаНДС") Тогда
			мСтруктураОтбораСчетФактуры.Удалить("СтавкаНДС");
		КонецЕсли; 
		Если (ЗаписьКниги.НаАванс
			И ЗначениеЗаполнено(ЗаписьКниги.ДоговорАванса)) Тогда
			мСтруктураОтбораСчетФактуры.Вставить("ДоговорКонтрагента",ЗаписьКниги.ДоговорАванса);
		ИначеЕсли мСтруктураОтбораСчетФактуры.Свойство("ДоговорКонтрагента") Тогда
			мСтруктураОтбораСчетФактуры.Удалить("ДоговорКонтрагента");
		КонецЕсли; 
		
		Документ = УчетНДС.НайтиПодчиненныйСчетФактуру(ЗаписьКниги.СчетФактура, "СчетФактураВыданный", мСтруктураОтбораСчетФактуры);
			
		Если не Документ = Неопределено Тогда
			ДатаНомер = "" + Формат(Документ.Дата, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(Документ,ПрефиксыРИБиОрганизации);
			
			Если (ЗаписьКниги.НаАванс или ЗаписьКниги.НаСуммовуюРазницу) и не Секция = Неопределено Тогда
				Секция.Параметры.СчетФактура = Документ;
			КонецЕсли; 
		Иначе
			Документ = УчетНДС.НайтиПодчиненныйСчетФактуру(ЗаписьКниги.СчетФактура, "СчетФактураПолученный", мСтруктураОтбораПроведен);
			Если не Документ = Неопределено Тогда
				Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаВходящегоСчетаФактуры", Документ.Метаданные()) 
					И ОбщегоНазначения.ЕстьРеквизитДокумента("НомерВходящегоСчетаФактуры", Документ.Метаданные()) Тогда
					ДатаНомер = "" + Формат(Документ.ДатаВходящегоСчетаФактуры, "ДФ=dd.MM.yyyy") + ", № " + Документ.НомерВходящегоСчетаФактуры;
				Иначе
					ДатаНомер = "" + Формат(Документ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.НомерВходящегоДокумента;
				КонецЕсли;
			Иначе
				ДатаНомер = "";
			КонецЕсли
		КонецЕсли;
			
	КонецЕсли;
		
	Возврат ДатаНомер;
		
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПродаж". 
// Заполняет некоторые параметры строки: 
// ДатаНомер и СчетФактура(по авансам)
Функция ОпределитьДатуИНомерСФ(ЗаписьКниги, Секция = Неопределено)
		
	Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + ЗаписьКниги.СчетФактура.НомерВходящегоДокумента;
	ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактура);
		Если ЗаписьКниги.НаАванс Тогда
			Документ = ЗаписьКниги.СчетФактура;
		КонецЕсли; 
	// Добавлено Булавский А. 28_11_2011 РГ-Софт
	ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И (ЗаписьКниги.СчетФактура.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно) И ЗначениеЗаполнено(ЗаписьКниги.СчетФактура.Сделка) Тогда
		ДокументСФ = ОбщегоНазначения.НайтиПодчиненныйДокумент(ЗаписьКниги.СчетФактура.Сделка, "СчетФактураВыданный");
		Если ЗначениеЗаполнено(ДокументСФ) Тогда
			ДатаНомер = "" + Формат(ДокументСФ.Дата, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументСФ);
		КонецЕсли; 
	// Конец
	Иначе
		Документ = ОбщегоНазначения.НайтиПодчиненныйДокумент(ЗаписьКниги.СчетФактура, "СчетФактураВыданный",ЗаписьКниги.НаАванс,ЗаписьКниги.НаАванс,ЗаписьКниги.СтавкаНДС_Аванс, Истина);
			
		Если Документ = Неопределено Тогда
			//Добавила Федотова Л., РГ-Софт, 08.11.12, вопрос №SLI-0002977 ->
			Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетКнигиПокупок") Тогда
				ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + ЗаписьКниги.СчетФактура.НомерВходящегоДокумента;
			Иначе
			//<-	
				Документ = ОбщегоНазначения.НайтиПодчиненныйДокумент(ЗаписьКниги.СчетФактура, "СчетФактураПолученный",,,, Истина);
				Если Документ = Неопределено Тогда
					ДатаНомер = "";
				Иначе
					ДатаНомер = "" + Формат(Документ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ", №" + Документ.НомерВходящегоДокумента;
				КонецЕсли
			//Добавила Федотова Л., РГ-Софт, 08.11.12, вопрос №SLI-0002977 ->
			КонецЕсли;
			//<-	
		Иначе
			Если ЗаписьКниги.НаАванс и не Секция = Неопределено Тогда
				Секция.Параметры.СчетФактура = Документ;
			КонецЕсли; 
			ДатаНомер = "" + Формат(Документ.Дата, "ДФ=dd.MM.yyyy") + ", №" + ОбщегоНазначения.ПолучитьНомерНаПечать(Документ);
		КонецЕсли;
			
	КонецЕсли;
		
	Возврат ДатаНомер;
		
КонецФункции

	
Процедура ВывестиШапкуДопЛиста_1_6_23(ТабличныйДокумент, Макет, ЗаписьКниги, НомерЛиста)
		
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Секция.Параметры.НомерЛиста = НомерЛиста;
	КонецЕсли;

	Секция.Параметры.Период = ПредставлениеПериода(ЗаписьКниги.ПериодСобытия, КонецДня(ЗаписьКниги.КонецНалоговогоПериода), "ФП = Истина");
	СведенияОбОрганизации = КонтактнаяИнформация.СведенияОЮрФизЛице(Организация);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");;
	//Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
	Секция.Параметры.ИННОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Секция.Параметры.ДатаСоставления = Формат(ЗаписьКниги.Период, "ДФ=dd.MM.yyyy");
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
	Если НЕ ВидЦенности Тогда
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("ВЦШапка"));
	КонецЕсли; 
		
КонецПроцедуры

Процедура ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ЗаписьКниги,  НачалоПериода, КонецПериода, НДСНалоговыйПериод, НомерЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Секция.Параметры.НомерЛиста = НомерЛиста;
	КонецЕсли;
	Если НДСНалоговыйПериод = Перечисления.Периодичность.Месяц Тогда
		Секция.Параметры.Период = ПредставлениеПериода(НачалоМесяца(ЗаписьКниги.ПериодСобытия), КонецМесяца(ЗаписьКниги.ПериодСобытия), "ФП = Истина");
	Иначе
		Секция.Параметры.Период = ПредставлениеПериода(НачалоКвартала(ЗаписьКниги.ПериодСобытия), КонецКвартала(ЗаписьКниги.ПериодСобытия), "ФП = Истина");
	КонецЕсли;			
	Секция.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	Секция.Параметры.ИННОрганизации = "" + Организация.ИНН + ?(ОбщегоНазначения.ЗначениеНеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Секция.Параметры.ДатаСоставления = Формат(КонецДня(ЗаписьКниги.Период), "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ВывестиПодвал(ТабличныйДокумент, Макет)
	
	Если мСведенияОбОрганизации = Неопределено Тогда
		
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("ФИОБух");
		СписокПоказателей.Добавить("ФИО");
		мСведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
		СведенияОЮрФизЛице  = КонтактнаяИнформация.СведенияОЮрФизЛице(Организация, ТекущаяДата());
		мСведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
		
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяБух = мСведенияОбОрганизации.ФИОБух;
	Секция.Параметры.ИмяОрг = ?(РегламентированнаяОтчетность.ЭтоПБОЮЛ(Организация), мСведенияОбОрганизации.ФИО, "");
	Секция.Параметры.Свидетельство = мСведенияОбОрганизации.Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры //ВывестиПодвал()

#КонецЕсли 

Процедура ПодготовитьУсловие(Запрос, УсловиеСФ = "", УсловиеРегистра = "")
	
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		УсловиеСФ	 = УсловиеСФ + "И СчетФактураВыданный.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации) ";
		УсловиеРегистра = УсловиеРегистра + " И ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации) ";
	    Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИнвойсинговыйЦентр) Тогда
		УсловиеСФ	 = УсловиеСФ + "И СчетФактураВыданный.ИнвойсинговыйЦентр = &ИнвойсинговыйЦентр";
		УсловиеРегистра = УсловиеРегистра + " И ИнвойсинговыйЦентр = &ИнвойсинговыйЦентр";
	    Запрос.УстановитьПараметр("ИнвойсинговыйЦентр", ИнвойсинговыйЦентр);
	КонецЕсли;
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда
		УсловиеСФ	 = УсловиеСФ + "И СчетФактураВыданный.Контрагент = &КонтрагентДляОтбора";
		УсловиеРегистра = УсловиеРегистра + " И Покупатель = &КонтрагентДляОтбора";
	    Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	КонецЕсли;	
	
КонецПроцедуры

// Функция вызывается из тела процедуры "СформироватьКнигуПродаж".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПодготовитьКнигуКВыводуНаПечать_1_6_23(Периодичность = Неопределено, СписокСчетовФактур)
	
	// Создаем запрос по счетам-фактурам
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, Организация);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"	, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = Новый Массив;
	//ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	ВидыЦенностей_АвансСобственные = Новый Массив;
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансСобственные"	, ВидыЦенностей_АвансСобственные);
	
	ВидыЦенностей_СуммоваяРазница = Новый Массив;
	ВидыЦенностей_СуммоваяРазница.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	Запрос.УстановитьПараметр("ВидыЦенностей_СуммоваяРазница"	, ВидыЦенностей_СуммоваяРазница);
	

	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	               |	КОНЕЦ КАК Контрагент,
	               |	НДСЗаписиКнигиПродажОбороты.Период КАК Период,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	               |	НДСЗаписиКнигиПродажОбороты.ДатаОплаты КАК ДатаОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.ДокументОплаты КАК ДокументОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.Событие КАК Событие,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.ДатаСобытия
	               |	КОНЕЦ КАК ДатаСобытия,
	               |	СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК ВсегоПродаж,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС20,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС20,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС18,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС18,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС10,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС10,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС0,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	               |	НДСЗаписиКнигиПродажОбороты.Организация КАК Организация,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродажОбороты.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |	КОНЕЦ КАК ДатаОприходования,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НаАванс,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НаСуммовуюРазницу,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтавкаНДС_Аванс,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК ДоговорАванса,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |ПОМЕСТИТЬ ЗаписиКнигиПродаж
	               |ИЗ
	               |	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			Организация = &Организация
	               |				И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)
	               |				И ВЫБОР
	               |					КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	               |						ТОГДА Покупатель = &КонтрагентДляОтбора
	               |					ИНАЧЕ ИСТИНА
	               |				КОНЕЦ) КАК НДСЗаписиКнигиПродажОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НДСЗаписиКнигиПродажОбороты.Организация,
	               |	НДСЗаписиКнигиПродажОбороты.Период,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	               |	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.Событие,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.ДатаСобытия
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродажОбороты.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата";
				   
	Если Периодичность = Перечисления.Периодичность.Квартал Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Квартал");
	КонецЕсли; 
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура
	               |ИЗ
	               |	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументы(Запрос);

	// Создаем общий запрос                                    
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаписиКнигиПродаж.Организация КАК Организация,
	               |	ЗаписиКнигиПродаж.Период КАК НалоговыйПериод,
	               |	ВЫБОР
	               |		КОГДА ВЫБОР
	               |				КОГДА ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= ДАТАВРЕМЯ(2006, 1, 1)
	               |					ТОГДА ЗНАЧЕНИЕ(Перечисление.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке)
	               |				ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.МоментОпределенияНалоговойБазыНДС, ЗНАЧЕНИЕ(Перечисление.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке))
	               |			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке)
	               |			ТОГДА НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.СчетФактура.Дата, МЕСЯЦ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.ДатаОплаты, ДЕНЬ)
	               |	КОНЕЦ КАК ПорядокОтраженияПоДатам,
	               |	ЗаписиКнигиПродаж.НаАванс КАК НаАванс,
	               |	ЗаписиКнигиПродаж.НаСуммовуюРазницу,
	               |	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	               |	ЗаписиКнигиПродаж.СчетФактураДата КАК СчетФактураДата,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	               |			ИНАЧЕ ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	               |		КОНЕЦ, ЗаписиКнигиПродаж.СчетФактура) КАК СчетФактураДокумент,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |				ТОГДА ЗаписиКнигиПродаж.СчетФактура.Номер
	               |			ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	               |		КОНЕЦ, ВЫБОР
	               |			КОГДА ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура = ИСТИНА
	               |				ТОГДА ЗаписиКнигиПродаж.СчетФактура.НомерВходящегоСчетаФактуры
	               |			ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |		КОНЕЦ) КАК НомерСчетаФактуры,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |				ТОГДА ЗаписиКнигиПродаж.СчетФактура.Дата
	               |			ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	               |		КОНЕЦ, ВЫБОР
	               |			КОГДА ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура = ИСТИНА
	               |				ТОГДА ЗаписиКнигиПродаж.СчетФактура.ДатаВходящегоСчетаФактуры
	               |			ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |		КОНЕЦ) КАК ДатаСчетаФактуры,
	               |	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	               |	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	               |	ЗаписиКнигиПродаж.Контрагент,
	               |	ЗаписиКнигиПродаж.Контрагент.ИНН КАК ПокупательИНН,
	               |	ЗаписиКнигиПродаж.Контрагент.КПП КАК ПокупательКПП,
	               |	ВЫБОР
	               |		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	               |				И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).ВариантНаименованияДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВариантыНаименованияДляПечатныхФорм.СокращенноеНаименование)
	               |			ТОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).НаименованиеСокращенное, 1, 250)
	               |		КОГДА ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	               |			ТОГДА ЗаписиКнигиПродаж.Контрагент.Наименование
	               |		ИНАЧЕ ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	               |	КОНЕЦ КАК Покупатель,
	               |	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	               |	ЗаписиКнигиПродаж.ДокументОплаты,
	               |	ЗаписиКнигиПродаж.Событие,
	               |	ЗаписиКнигиПродаж.ВсегоПродаж КАК ВсегоПродаж,
	               |	ВЫБОР
	               |		КОГДА ЗаписиКнигиПродаж.НаАванс
	               |				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	               |			ТОГДА 0
	               |		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС20
	               |	КОНЕЦ КАК СуммаБезНДС20,
	               |	ЗаписиКнигиПродаж.НДС20 КАК НДС20,
	               |	ВЫБОР
	               |		КОГДА ЗаписиКнигиПродаж.НаАванс
	               |				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	               |			ТОГДА 0
	               |		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС18
	               |	КОНЕЦ КАК СуммаБезНДС18,
	               |	ЗаписиКнигиПродаж.НДС18 КАК НДС18,
	               |	ВЫБОР
	               |		КОГДА ЗаписиКнигиПродаж.НаАванс
	               |				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	               |			ТОГДА 0
	               |		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС10
	               |	КОНЕЦ КАК СуммаБезНДС10,
	               |	ЗаписиКнигиПродаж.НДС10 КАК НДС10,
	               |	ЗаписиКнигиПродаж.НДС0 КАК НДС0,
	               |	ЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= ДАТАВРЕМЯ(2006, 1, 1)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке)
	               |		ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.МоментОпределенияНалоговойБазыНДС, ЗНАЧЕНИЕ(Перечисление.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке))
	               |	КОНЕЦ КАК МоментОпределенияНалоговойБазыНДС
	               |ИЗ
	               |	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	               |			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	               |			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	               |			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	               |		ИЗ
	               |			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТаблицаСчетаФактурыДокументы.СчетФактура,
	               |			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	               |			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса) КАК Приоритеты
	               |		ПО ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактура
	               |			И ЗаписиКнигиПродаж.ДоговорАванса = Приоритеты.ДоговорАванса
	               |			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	               |		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	               |			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	               |			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	               |			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	               |		ПО (УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация)
	               |			И (УчетнаяПолитикаОрганизаций.Период В
	               |				(ВЫБРАТЬ
	               |					МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	               |				ИЗ
	               |					РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	               |				ГДЕ
	               |					ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= УчетнаяПолитикаОрганизаций.Период
	               |					И УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НалоговыйПериод,
	               |	ПорядокОтраженияПоДатам,
	               |	СчетФактураДата,
	               |	СчетФактура,
	               |	ДатаОплаты
	               |ИТОГИ
	               |	МИНИМУМ(СчетФактураДата),
	               |	МАКСИМУМ(Покупатель),
	               |	МАКСИМУМ(ДатаОплаты),
	               |	СУММА(ВсегоПродаж),
	               |	СУММА(СуммаБезНДС20),
	               |	СУММА(НДС20),
	               |	СУММА(СуммаБезНДС18),
	               |	СУММА(НДС18),
	               |	СУММА(СуммаБезНДС10),
	               |	СУММА(НДС10),
	               |	СУММА(НДС0),
	               |	СУММА(СуммаСовсемБезНДС)
	               |ПО
	               |	Организация,
	               |	НалоговыйПериод,
	               |	ПорядокОтраженияПоДатам,
	               |	СчетФактураДокумент,
	               |	ДоговорАванса";
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	Организация,", "ПО
	               |	Организация, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;				   
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Функция вызывается из тела процедуры "СформироватьКнигуПродаж".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПодготовитьКнигуКВыводуНаПечать(МоментОпределенияНалоговойБазыНДС)
	
	// Создаем общий запрос                                       
	Запрос = Новый Запрос;
	
	Условие = "";
	Условие1 = "";
	ПодготовитьУсловие(Запрос, Условие, Условие1);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.ИНН
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.ИНН
	|	КОНЕЦ КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.КПП
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.ДатаСобытия КАК ДатаСобытия,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) + ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0)) КАК ВсегоПродаж,
	|	ГОД(НДСЗаписиКнигиПродажОбороты.ДатаСобытия) КАК ГодСобытия,
	|	МЕСЯЦ(НДСЗаписиКнигиПродажОбороты.ДатаСобытия) КАК МесяцСобытия,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И (НЕ ВЫБОР
	|							КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|								ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|							ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|						КОНЕЦ)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И (НЕ ВЫБОР
	|							КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|								ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|							ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|						КОНЕЦ)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И (НЕ ВЫБОР
	|							КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|								ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|							ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|						КОНЕЦ)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПродажОбороты.Организация КАК Организация,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.Наименование
	|					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.Покупатель.Наименование
	|				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Покупатель,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаОприходования,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС_Аванс,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактураДокумент,
	|	НДСЗаписиКнигиПродажОбороты.ПодразделениеОрганизации КАК НалоговаяРегистрация,
	|	"+?(ВидЦенности, "НДСЗаписиКнигиПродажОбороты.ВидЦенности,", "")+"
	|	НДСЗаписиКнигиПродажОбороты.Покупатель.КонтрагентLawson КАК LawsonIDClient,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Номер КАК ActNumber
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Период,
	|		Организация = &Организация "+Условие1+"
	|		    И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СчетФактураВыданный.НаАванс КАК НаАванс,
	|			СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
	|			ВЫБОР
	|				КОГДА СчетФактураВыданный.НаАванс
	|					ТОГДА СчетФактураВыданный.СтавкаНДС
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ КАК СтавкаНДС_Аванс
	|		ИЗ
	|			Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ГДЕ
	|			СчетФактураВыданный.НаАванс
	|			И СчетФактураВыданный.Организация = &Организация "+Условие+") КАК СчетФактураВыданный
	|		ПО НДСЗаписиКнигиПродажОбороты.СчетФактура = СчетФактураВыданный.ДокументОснование
	|			И (ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|					ТОГДА СчетФактураВыданный.НаАванс
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС = СчетФактураВыданный.СтавкаНДС_Аванс
	|				ИНАЧЕ (НЕ СчетФактураВыданный.НаАванс)
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	|	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.ДатаСобытия,
	|	НДСЗаписиКнигиПродажОбороты.Организация,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.ИНН
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.КПП
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.Наименование
	|					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.Покупатель.Наименование
	|				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ПодразделениеОрганизации,
	|	"+?(ВидЦенности, "НДСЗаписиКнигиПродажОбороты.ВидЦенности,", "")+"
	|	НДСЗаписиКнигиПродажОбороты.Покупатель.КонтрагентLawson,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Номер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГодСобытия,
	|	МесяцСобытия,
	|	ДатаСобытия,
	|	ДатаОплаты
	|ИТОГИ
	|	СУММА(ВсегоПродаж),
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС)
	|ПО
	|	Организация" +
	?(ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме, ", Покупатель", "") +
	?(МоментОпределенияНалоговойБазыНДС = Перечисления.МоментыОпределенияНалоговойБазыНДС.ПоОтгрузке, ", СчетФактура,НаАванс,СтавкаНДС_Аванс", "")+
	?(ВидЦенности И Не СформироватьОтчетПоСтандартнойФорме, ", ВидЦенности", "");
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"	, Организация);
	
	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = новый массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннеПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = новый массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	Запрос.УстановитьПараметр("ПриходДенежныхСредствРозничнаяВыручка", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Функция вызывается из тела процедуры "СформироватьКнигуПродаж".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПолучитьЗаписиДополнительныхЛистов_1_6_23(Организация, НачалоПериода, КонецПериода, МоментОпределенияНалоговойБазыНДС, СписокСчетовФактур)
	
	// Создаем общий запрос                                       
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, Организация);
	Запрос.УстановитьПараметр("НалоговыйПериодМесяц", Перечисления.Периодичность.Месяц);
	Запрос.УстановитьПараметр("НалоговыйПериодКвартал", Перечисления.Периодичность.Квартал);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	
	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = Новый Массив;
	//ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	ВидыЦенностей_АвансСобственные = Новый Массив;
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансСобственные"	, ВидыЦенностей_АвансСобственные);
	
	ВидыЦенностей_СуммоваяРазница = Новый Массив;
	ВидыЦенностей_СуммоваяРазница.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	Запрос.УстановитьПараметр("ВидыЦенностей_СуммоваяРазница"	, ВидыЦенностей_СуммоваяРазница);
    	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	               |	КОНЕЦ КАК Контрагент,
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	               |	НДСЗаписиКнигиПродажОбороты.ДатаОплаты КАК ДатаОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.ДокументОплаты КАК ДокументОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.Событие КАК Событие,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.ДатаСобытия
	               |	КОНЕЦ КАК ДатаСобытия,
	               |	СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК ВсегоПродаж,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС20,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС20,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС18,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС18,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаБезНДС10,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС10,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК НДС0,
	               |	СУММА(ВЫБОР
	               |			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	               |				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	               |	НДСЗаписиКнигиПродажОбороты.Организация КАК Организация,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродажОбороты.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |	КОНЕЦ КАК ДатаОприходования,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НаАванс,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НаСуммовуюРазницу,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК СтавкаНДС_Аванс,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК ДоговорАванса,
	               |	НДСЗаписиКнигиПродажОбороты.Период КАК Период,
	               |	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод КАК КорректируемыйПериод,
	               |	НДСЗаписиКнигиПродажОбороты.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста
	               |ПОМЕСТИТЬ ЗаписиКнигиПродаж
	               |ИЗ
	               |	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			День,
	               |			Организация = &Организация
	               |				И ЗаписьДополнительногоЛиста = ИСТИНА
	               |				И ВЫБОР
	               |					КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	               |						ТОГДА Покупатель = &КонтрагентДляОтбора
	               |					ИНАЧЕ ИСТИНА
	               |				КОНЕЦ) КАК НДСЗаписиКнигиПродажОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	               |	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	               |	НДСЗаписиКнигиПродажОбороты.Событие,
	               |	НДСЗаписиКнигиПродажОбороты.Организация,
	               |	НДСЗаписиКнигиПродажОбороты.Период,
	               |	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
	               |	НДСЗаписиКнигиПродажОбороты.СторнирующаяЗаписьДопЛиста,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.ДатаСобытия
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПродажОбороты.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	               |		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |				ИЛИ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	               |			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ";
	
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонецПериода", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаписьДополнительногоЛиста = ИСТИНА", 
		"ЗаписьДополнительногоЛиста = ИСТИНА 
		|И КорректируемыйПериод >= &НачалоПериода 
		|И КорректируемыйПериод <= &КонецПериода");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура
	               |ИЗ
	               |	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументы(Запрос);
	
	Запрос.Текст =	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	              	|	ВЫБОР
	              	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСНалоговыйПериод, ВЫБОР
	              	|					КОГДА ЗаписиКнигиПродаж.КорректируемыйПериод < ДАТАВРЕМЯ(2008, 1, 1)
	              	|						ТОГДА &НалоговыйПериодМесяц
	              	|					ИНАЧЕ &НалоговыйПериодКвартал
	              	|				КОНЕЦ) = &НалоговыйПериодКвартал
	              	|			ТОГДА НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, КВАРТАЛ)
	              	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, МЕСЯЦ)
	              	|	КОНЕЦ КАК НалоговыйПериод,
	              	|	ВЫБОР
	              	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСНалоговыйПериод, ВЫБОР
	              	|					КОГДА ЗаписиКнигиПродаж.КорректируемыйПериод < ДАТАВРЕМЯ(2008, 1, 1)
	              	|						ТОГДА &НалоговыйПериодМесяц
	              	|					ИНАЧЕ &НалоговыйПериодКвартал
	              	|				КОНЕЦ) = &НалоговыйПериодКвартал
	              	|			ТОГДА КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, КВАРТАЛ)
	              	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЗаписиКнигиПродаж.КорректируемыйПериод, МЕСЯЦ)
	              	|	КОНЕЦ КАК КонецНалоговогоПериода,
	              	|	ЗаписиКнигиПродаж.НаАванс КАК НаАванс,
	              	|	ЗаписиКнигиПродаж.НаСуммовуюРазницу,
	              	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	              	|	ЗаписиКнигиПродаж.СчетФактура.Дата КАК СчетФактураДата,
	              	|	ЕСТЬNULL(ВЫБОР
	              	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	              	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура
	              	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	              	|		КОНЕЦ, ЗаписиКнигиПродаж.СчетФактура) КАК СчетФактураДокумент,
	              	|	ЕСТЬNULL(ВЫБОР
	              	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	              	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура.Номер
	              	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	              	|		КОНЕЦ, ВЫБОР
	              	|			КОГДА ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура = ИСТИНА
	              	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура.НомерВходящегоСчетаФактуры
	              	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	              	|		КОНЕЦ) КАК НомерСчетаФактуры,
	              	|	ЕСТЬNULL(ВЫБОР
	              	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	              	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура.Дата
	              	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	              	|		КОНЕЦ, ВЫБОР
	              	|			КОГДА ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура = ИСТИНА
	              	|				ТОГДА ЗаписиКнигиПродаж.СчетФактура.ДатаВходящегоСчетаФактуры
	              	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	              	|		КОНЕЦ) КАК ДатаСчетаФактуры,
	              	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	              	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	              	|	ЗаписиКнигиПродаж.Контрагент,
	              	|	ЗаписиКнигиПродаж.Контрагент.ИНН КАК ПокупательИНН,
	              	|	ЗаписиКнигиПродаж.Контрагент.КПП КАК ПокупательКПП,
	              	|	ВЫБОР
	              	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	              	|				И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).ВариантНаименованияДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВариантыНаименованияДляПечатныхФорм.СокращенноеНаименование)
	              	|			ТОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ЗаписиКнигиПродаж.Контрагент КАК Справочник.Организации).НаименованиеСокращенное, 1, 250)
	              	|		КОГДА ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	              	|			ТОГДА ЗаписиКнигиПродаж.Контрагент.Наименование
	              	|		ИНАЧЕ ПОДСТРОКА(ЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	              	|	КОНЕЦ КАК Покупатель,
	              	|	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	              	|	ЗаписиКнигиПродаж.ДокументОплаты,
	              	|	ЗаписиКнигиПродаж.Событие,
	              	|	ЗаписиКнигиПродаж.ВсегоПродаж КАК ВсегоПродаж,
	              	|	ВЫБОР
	              	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	              	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	              	|			ТОГДА 0
	              	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС20
	              	|	КОНЕЦ КАК СуммаБезНДС20,
	              	|	ЗаписиКнигиПродаж.НДС20 КАК НДС20,
	              	|	ВЫБОР
	              	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	              	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	              	|			ТОГДА 0
	              	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС18
	              	|	КОНЕЦ КАК СуммаБезНДС18,
	              	|	ЗаписиКнигиПродаж.НДС18 КАК НДС18,
	              	|	ВЫБОР
	              	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	              	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	              	|			ТОГДА 0
	              	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС10
	              	|	КОНЕЦ КАК СуммаБезНДС10,
	              	|	ЗаписиКнигиПродаж.НДС10 КАК НДС10,
	              	|	ЗаписиКнигиПродаж.НДС0 КАК НДС0,
	              	|	ЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	              	|	ЗаписиКнигиПродаж.Период КАК ДатаОформления,
	              	|	ЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста
	              	|ИЗ
	              	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	              	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	              	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	              	|			ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокумент,
	              	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	              	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	              	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	              	|		ИЗ
	              	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	              	|		
	              	|		СГРУППИРОВАТЬ ПО
	              	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	              	|			ТаблицаСчетаФактурыДокументы.СчетФактураДокумент,
	              	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	              	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса) КАК Приоритеты
	              	|		ПО (ВЫБОР
	              	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	              	|					ТОГДА ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактураДокумент
	              	|				ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура = Приоритеты.СчетФактура
	              	|			КОНЕЦ)
	              	|			И ЗаписиКнигиПродаж.ДоговорАванса = Приоритеты.ДоговорАванса
	              	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	              	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	              	|		ПО (ВЫБОР
	              	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	              	|					ТОГДА Приоритеты.СчетФактураДокумент = ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	              	|				ИНАЧЕ Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура
	              	|			КОНЕЦ)
	              	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	              	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	              	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	              	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	              	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация)
	              	|			И (УчетнаяПолитикаОрганизаций.Период В
	              	|				(ВЫБРАТЬ
	              	|					МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	              	|				ИЗ
	              	|					РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	              	|				ГДЕ
	              	|					ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.Дата, &КонецПериода) >= УчетнаяПолитикаОрганизаций.Период
	              	|					И УчетнаяПолитикаОрганизаций.Организация = ЗаписиКнигиПродаж.Организация))
	              	|
	              	|УПОРЯДОЧИТЬ ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления,
	              	|	СчетФактураДата,
	              	|	СторнирующаяЗаписьДопЛиста УБЫВ,
	              	|	ДатаОплаты
	              	|ИТОГИ
	              	|	МАКСИМУМ(КонецНалоговогоПериода),
	              	|	МИНИМУМ(СчетФактураДата),
	              	|	МАКСИМУМ(Покупатель),
	              	|	МАКСИМУМ(ДатаОплаты),
	              	|	СУММА(ВсегоПродаж),
	              	|	СУММА(СуммаБезНДС20),
	              	|	СУММА(НДС20),
	              	|	СУММА(СуммаБезНДС18),
	              	|	СУММА(НДС18),
	              	|	СУММА(СуммаБезНДС10),
	              	|	СУММА(НДС10),
	              	|	СУММА(НДС0),
	              	|	СУММА(СуммаСовсемБезНДС)
	              	|ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления,
	              	|	СчетФактура,
	              	|	ДоговорАванса,
	              	|	СторнирующаяЗаписьДопЛиста";
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления,", "ПО
	              	|	НалоговыйПериод,
	              	|	ДатаОформления, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;				   
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Функция вызывается из тела процедуры "СформироватьКнигуПродаж".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПолучитьЗаписиДополнительныхЛистов(Организация, НачалоПериода, КонецПериода, МоментОпределенияНалоговойБазыНДС)
	
	// Создаем общий запрос                                       
	Запрос = Новый Запрос;
	
	УсловиеРегистра = "";
	ПодготовитьУсловие(Запрос, , УсловиеРегистра);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДСЗаписиКнигиПродажОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.ИНН
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.ИНН
	|	КОНЕЦ КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.КПП
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.ДатаСобытия КАК ДатаСобытия,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) + ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0)) КАК ВсегоПродаж,
	|	ГОД(НДСЗаписиКнигиПродажОбороты.ДатаСобытия) КАК ГодСобытия,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод, МЕСЯЦ)) КАК ПериодСобытия,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|						И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС20,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС20,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|						И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|						И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПродажОбороты.Организация КАК Организация,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.Наименование
	|					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.Покупатель.Наименование
	|				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Покупатель,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаОприходования,
	|	НДСЗаписиКнигиПродажОбороты.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС_Аванс,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактураДокумент,
	|	НДСЗаписиКнигиПродажОбороты.ПодразделениеОрганизации,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Номер КАК ActNumber,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель.КонтрагентLawson КАК LawsonIDClient"
		+ ?(ВидЦенности, ", НДСЗаписиКнигиПродажОбороты.ВидЦенности ", " ")+
	"ПОМЕСТИТЬ таб1
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Запись,
	|			Организация = &Организация " + Строка(УсловиеРегистра) + "
	|				И ЗаписьДополнительногоЛиста = ИСТИНА) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.Период,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДатаОплаты,
	|	НДСЗаписиКнигиПродажОбороты.ДокументОплаты,
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.ДатаСобытия,
	|	НДСЗаписиКнигиПродажОбороты.Организация,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата,
	|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.ИНН
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.КПП
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.Организация.Наименование
	|					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Организация.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.Покупатель.Наименование
	|				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПродажОбороты.Покупатель.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.СчетФактура.Дата
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродажОбороты.СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродажОбороты.ПодразделениеОрганизации,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель.КонтрагентLawson,"
	+ ?(ВидЦенности, " НДСЗаписиКнигиПродажОбороты.ВидЦенности, ", " ") +
	"	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура.Номер	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК Период,
	|	УчетнаяПолитикаНалоговыйУчет.Организация,
	|	таб1.ПериодСобытия
	|ПОМЕСТИТЬ таб2
	|ИЗ
	|	таб1 КАК таб1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО таб1.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
	|			И таб1.ПериодСобытия >= УчетнаяПолитикаНалоговыйУчет.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетнаяПолитикаНалоговыйУчет.Организация,
	|	таб1.ПериодСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	таб2.Организация,
	|	таб2.ПериодСобытия,
	|	УчетнаяПолитикаНалоговыйУчет.НДСНалоговыйПериод КАК НДСНалоговыйПериод,
	|	УчетнаяПолитикаНалоговыйУчет.МоментОпределенияНалоговойБазыНДС
	|ПОМЕСТИТЬ таб3
	|ИЗ
	|	таб2 КАК таб2
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО таб2.Период = УчетнаяПолитикаНалоговыйУчет.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	таб1.Период КАК Период,
	|	таб1.Контрагент КАК Контрагент,
	|	таб1.ПокупательИНН,
	|	таб1.ПокупательКПП,
	|	таб1.СчетФактура КАК СчетФактура,
	|	таб1.ДатаОплаты КАК ДатаОплаты,
	|	таб1.ДокументОплаты,
	|	таб1.Событие,
	|	таб1.ДатаСобытия КАК ДатаСобытия,
	|	таб1.ВсегоПродаж КАК ВсегоПродаж,
	|	таб1.ГодСобытия КАК ГодСобытия,
	|	таб1.ПериодСобытия КАК ПериодСобытия,
	|	таб1.СуммаБезНДС20 КАК СуммаБезНДС20,
	|	таб1.НДС20 КАК НДС20,
	|	таб1.СуммаБезНДС18 КАК СуммаБезНДС18,
	|	таб1.НДС18 КАК НДС18,
	|	таб1.СуммаБезНДС10 КАК СуммаБезНДС10,
	|	таб1.НДС10 КАК НДС10,
	|	таб1.НДС0 КАК НДС0,
	|	таб1.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	таб1.Организация,
	|	таб1.СчетФактураДата,
	|	таб1.Покупатель,
	|	таб1.ДатаОприходования,
	|	таб1.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	таб1.НаАванс,
	|	таб1.СтавкаНДС_Аванс,
	|	таб1.СчетФактураДокумент,
	|	таб1.ПодразделениеОрганизации КАК НалоговаяРегистрация,
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодМесяц = таб3.НДСНалоговыйПериод
	|			ТОГДА КОНЕЦПЕРИОДА(таб1.ПериодСобытия, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(таб1.ПериодСобытия, КВАРТАЛ)
	|	КОНЕЦ КАК КонецНалоговогоПериода,
	|	таб3.МоментОпределенияНалоговойБазыНДС КАК МоментОпределенияНалоговойБазыНДС,
	|	таб1.ActNumber,
	|	таб1.LawsonIDClient"
	+ ?(ВидЦенности, ", таб1.ВидЦенности КАК ВидЦенности ", " ") +
	"ИЗ
	|	таб1 КАК таб1
	|		ЛЕВОЕ СОЕДИНЕНИЕ таб3 КАК таб3
	|		ПО таб1.ПериодСобытия = таб3.ПериодСобытия
	|			И таб1.Организация = таб3.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	СчетФактура,
	|	СторнирующаяЗаписьДопЛиста УБЫВ,
	|	ГодСобытия,
	|	ПериодСобытия,
	|	ДатаСобытия,
	|	ДатаОплаты
	|ИТОГИ
	|	СУММА(ВсегоПродаж),
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(КонецНалоговогоПериода),
	|	МАКСИМУМ(МоментОпределенияНалоговойБазыНДС)
	|ПО
	|	ПериодСобытия, 
	|	Период, " + ?(ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме,"Покупатель,","") + "
	|	СчетФактура,
	|	СторнирующаяЗаписьДопЛиста"
	+ ?(ВидЦенности, ", ВидЦенности", "");
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонецПериода", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаписьДополнительногоЛиста = ИСТИНА", 
								"ЗаписьДополнительногоЛиста = ИСТИНА 
								|И КорректируемыйПериод >= &НачалоПериода 
								|И КорректируемыйПериод <= &КонецПериода");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"	, Организация);
	
	Запрос.УстановитьПараметр("НалоговыйПериодМесяц", Перечисления.Периодичность.Месяц);
	Запрос.УстановитьПараметр("НалоговыйПериодКвартал", Перечисления.Периодичность.Квартал);	
	
	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = новый массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннеПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = новый массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	Запрос.УстановитьПараметр("ПриходДенежныхСредствРозничнаяВыручка", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Получает страну происхождения и номер ГТД по списку счетов-фактур в виде, отражаемом в книге покупок
//
Функция ПолучитьДополнительнуюИнформациюПоСФ(Организация, КонецПериода, СписокСчетовФактур, ЗаписьДополнительногоЛиста = Ложь)
	
	// Определить частичные оплаты
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДСНачисленныйОбороты.СчетФактура КАК СчетФактура,
	|	СУММА(НДСНачисленныйОбороты.СуммаБезНДСПриход + НДСНачисленныйОбороты.НДСПриход) КАК СуммаСНДС
	|ИЗ
	|	РегистрНакопления.НДСНачисленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|				СчетФактура В (&СписокСчетовФактур)
	|				И (НЕ(ВидЦенности В (&ВидыЦенностей_ОплатаПоНДС)
	|						ИЛИ ВидЦенности В (&ВидыЦенностей_БезОплаты)))) КАК НДСНачисленныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНачисленныйОбороты.СчетФактура
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("СписокСчетовФактур",  СписокСчетовФактур);
	
	// Виды ценностей с особым порядком распределения оплат - по НДС выплаченному в бюджет
	ВидыЦенностей_ОплатаПоНДС = Новый СписокЗначений;
	
	// Виды ценностей с особым порядком распределения оплат - оплата не определяется
	ВидыЦенностей_БезОплаты = Новый СписокЗначений;
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	//ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежиОС);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_ОплатаПоНДС", ВидыЦенностей_ОплатаПоНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_БезОплаты", ВидыЦенностей_БезОплаты);
	
	ДополнительнаяИнформацияПоСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	СоотвествиеСтрокиДопИнформацииПоСчетуФактуре = Новый Соответствие;
	
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("IDСчетФактура", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	Для Каждого СтрокаИнформации Из ДополнительнаяИнформацияПоСФ.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаИнформации.СчетФактура) Тогда
			СоотвествиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаИнформации.СчетФактура.УникальныйИдентификатор()), СтрокаИнформации);
		КонецЕсли; 
	КонецЦикла; 
	
	// дополняем информацию датами оплаты,
	// отраженными в регистре записей книг отдельно от сумм

	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ДатыОплаты");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
		|	НДСЗаписиКнигиПродаж.ДатаОплаты
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
		|ГДЕ
		|	НДСЗаписиКнигиПродаж.Организация = &Организация
		|	И ВЫБОР
		|			КОГДА &ЗаписьДополнительногоЛиста
		|					И &ДополнительныеЛистыЗаТекущийПериод
		|				ТОГДА НДСЗаписиКнигиПродаж.Период >= &НачалоПериода
		|						И (НДСЗаписиКнигиПродаж.КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
		|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		КОНЕЦ
		|	И НДСЗаписиКнигиПродаж.СчетФактура В(&СписокСчетовФактур)
		|	И НДСЗаписиКнигиПродаж.СуммаБезНДС = 0
		|	И НДСЗаписиКнигиПродаж.НДС = 0
		|	И (НЕ ЕСТЬNULL(НДСЗаписиКнигиПродаж.ДатаОплаты, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1))
		|	И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста = &ЗаписьДополнительногоЛиста
		|ИТОГИ ПО
		|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста", ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("ДополнительныеЛистыЗаТекущийПериод", ДополнительныеЛистыЗаТекущийПериод);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ДатыОплатСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаСФ Из ДатыОплатСФ.Строки Цикл
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоотвествиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			СоотвествиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		Для Каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ДатыОплаты = СтрокаСФ.Строки.ВыгрузитьКолонку("ДатаОплаты");;
		КонецЦикла; 
	КонецЦикла; 

	Возврат ДополнительнаяИнформацияПоСФ;
	
КонецФункции // ПолучитьДополнительнуюИнформациюПоСФ()

Процедура ПолучитьСчетаФактурыДокументы(Запрос)
	
	
	//МассивДокументовСДаннымиСФ = УчетНДС.ПолучитьИменаДокументовСДаннымиСФ();
	//
	//ТекстЗапросаПоДокументамСДаннымиСФ = "";
	//Если МассивДокументовСДаннымиСФ.Количество() <> 0 Тогда
	//	
	//	Для Каждого ИмяДокумента Из МассивДокументовСДаннымиСФ Цикл
	//		ТекстЗапросаПоДокументамСДаннымиСФ = ТекстЗапросаПоДокументамСДаннымиСФ + " ОБЪЕДИНИТЬ ВСЕ 
	//			   |		ВЫБРАТЬ
	//			   |			ДокументСДаннымиСФ.Ссылка,
	//			   |			ДокументСДаннымиСФ.НомерВходящегоСчетаФактуры,
	//			   |			ДокументСДаннымиСФ.ДатаВходящегоСчетаФактуры,
	//			   |			ДокументСДаннымиСФ.Ссылка,
	//			   |			ЛОЖЬ,
	//			   |			НЕОПРЕДЕЛЕНО,
	//			   |			НЕОПРЕДЕЛЕНО,
	//			   |			4
	//			   |		ИЗ
	//			   |			Документ." + ИмяДокумента + " КАК ДокументСДаннымиСФ
	//			   |		ГДЕ
	//			   |			ДокументСДаннымиСФ.ПредъявленСчетФактура 
	//			   |			И ДокументСДаннымиСФ.Проведен
	//			   |			И (НЕ ДокументСДаннымиСФ.ПометкаУдаления)
	//			   |			И ДокументСДаннымиСФ.Организация = &Организация";
	//	КонецЦикла;
	//	
	//КонецЕсли;
				   
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СчетаФактурыДокументы.СчетФактура,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура, ЛОЖЬ) = ИСТИНА
	               |			ТОГДА ЗаписиКнигиПродаж.СчетФактура.ДатаВходящегоСчетаФактуры
	               |		ИНАЧЕ СчетаФактурыДокументы.ДатаСчетаФактуры
	               |	КОНЕЦ КАК ДатаСчетаФактуры,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура, ЛОЖЬ) = ИСТИНА
	               |			ТОГДА ЗаписиКнигиПродаж.СчетФактура.НомерВходящегоСчетаФактуры
	               |		ИНАЧЕ СчетаФактурыДокументы.НомерСчетаФактуры
	               |	КОНЕЦ КАК НомерСчетаФактуры,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура, ЛОЖЬ) = ИСТИНА
	               |			ТОГДА ЗаписиКнигиПродаж.СчетФактура
	               |		ИНАЧЕ СчетаФактурыДокументы.СчетФактураДокумент
	               |	КОНЕЦ КАК СчетФактураДокумент,
	               |	СчетаФактурыДокументы.ДоговорАванса,
	               |	СчетаФактурыДокументы.СтавкаНДСАванса,
	               |	СчетаФактурыДокументы.Приоритет
	               |ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	               |ИЗ
	               |	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПриходныйКассовыйОрдер.Ссылка,
	               |			ПриходныйКассовыйОрдер.Номер,
	               |			ПриходныйКассовыйОрдер.Дата,
	               |			ПриходныйКассовыйОрдер.Ссылка,
	               |			ЛОЖЬ,
	               |			ЛОЖЬ,
	               |			НЕОПРЕДЕЛЕНО,
	               |			НЕОПРЕДЕЛЕНО,
	               |			2
	               |		ИЗ
	               |			Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	               |		ГДЕ
	               |			ПриходныйКассовыйОрдер.Проведен
	               |			И (НЕ ПриходныйКассовыйОрдер.ПометкаУдаления)
	               |			И ПриходныйКассовыйОрдер.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка)
	               |			И ПриходныйКассовыйОрдер.Организация = &Организация
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			СчетФактураВыданный.ДокументОснование,
	               |			СчетФактураВыданный.Ссылка.Номер,
	               |			СчетФактураВыданный.Ссылка.Дата,
	               |			СчетФактураВыданный.Ссылка,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |					ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу)
	               |					ТОГДА СчетФактураВыданный.Ссылка.СтавкаНДС
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА ВЫБОР
	               |						КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ ЛОЖЬ
	               |					КОНЕЦ
	               |					ТОГДА СчетФактураВыданный.Ссылка.ДоговорКонтрагента
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			3
	               |		ИЗ
	               |			Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК Авансы
	               |				ПО СчетФактураВыданный.Ссылка = Авансы.Ссылка
	               |		ГДЕ
	               |			СчетФактураВыданный.Ссылка.Проведен
	               |			И (НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления)
	               |			И СчетФактураВыданный.Ссылка.Организация = &Организация
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			СчетФактураПолученный.ДокументОснование,
	               |			СчетФактураПолученный.Ссылка.НомерВходящегоДокумента,
	               |			СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента,
	               |			СчетФактураПолученный.Ссылка,
	               |			СчетФактураПолученный.Ссылка.НаАванс,
	               |			ЛОЖЬ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.НаАванс = ИСТИНА
	               |					ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.НаАванс = ИСТИНА
	               |					ТОГДА СчетФактураПолученный.Ссылка.ДоговорКонтрагента
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			5
	               |		ИЗ
	               |			Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК Авансы
	               |				ПО СчетФактураПолученный.Ссылка = Авансы.Ссылка
	               |		ГДЕ
	               |			СчетФактураПолученный.Ссылка.Проведен
	               |			И (НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления)
	               |			И СчетФактураПолученный.Ссылка.Организация = &Организация
	               |		
	               |		) КАК СчетаФактурыДокументы
	               |		ПО (ЕСТЬNULL(ЗаписиКнигиПродаж.СчетФактура.ПредъявленСчетФактура, ЛОЖЬ) = ЛОЖЬ)
	               |			И (ЗаписиКнигиПродаж.СчетФактура = СчетаФактурыДокументы.СчетФактура
	               |				ИЛИ ЗаписиКнигиПродаж.СчетФактура = СчетаФактурыДокументы.СчетФактураДокумент)
	               |			И (ВЫБОР
	               |				КОГДА ЗаписиКнигиПродаж.НаАванс
	               |					ТОГДА СчетаФактурыДокументы.НаАванс
	               |							И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СчетаФактурыДокументы.СтавкаНДСАванса
	               |							И ЗаписиКнигиПродаж.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	               |				КОГДА ЗаписиКнигиПродаж.НаСуммовуюРазницу
	               |					ТОГДА СчетаФактурыДокументы.НаСуммовуюРазницу
	               |							И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СчетаФактурыДокументы.СтавкаНДСАванса
	               |							И ЗаписиКнигиПродаж.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	               |				ИНАЧЕ (НЕ(СчетаФактурыДокументы.НаАванс
	               |							ИЛИ СчетаФактурыДокументы.НаСуммовуюРазницу))
	               |			КОНЕЦ)";
						 
	
				   
   Запрос.Выполнить();
				   
КонецПроцедуры

Функция ПолучитьИтогиЗаПериод_1_6_23(Организация, НачалоПериода, КонецПериода, ДатаФормированияДопЛиста)
	
	// Создаем общий запрос                                       
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.ВсегоПродаж), 0) КАК ВсегоПродаж,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС20), 0) КАК СуммаБезНДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС20), 0) КАК НДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС18), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС10), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС0), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот КАК ВсегоПродаж,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС0,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаСовсемБезНДС
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|			    И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И (НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс))
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&МоментФормированияДопЛиста,
	|			Период,
	|			Организация = &Организация
	|			    И (ЗаписьДополнительногоЛиста = ИСТИНА
	|			        И КорректируемыйПериод >= &НачалоПериода
	|			        И КорректируемыйПериод <= &КонецПериода)) КАК НДСЗаписиКнигиПродажОбороты) КАК ЗаписиКнигиПродаж";
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"	, Организация);
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста",Новый Граница(НачалоДня(ДатаФормированияДопЛиста),ВидГраницы.Исключая));
	
	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_Аванс = новый массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	// Для итогов авансы можно учитывать вместе с выделенными суммовыми разницами - методика отражения в книге одинаковая
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьИтогиЗаПериод(Организация, НачалоПериода, КонецПериода, МоментОпределенияНалоговойБазыНДС)
	
	// Создаем общий запрос                                       
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ВсегоПродаж,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|						И (НЕ ВЫБОР
	|								КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|									ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|								ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|							КОНЕЦ)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС20,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС20,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|						И (НЕ ВЫБОР
	|								КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|									ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|								ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|							КОНЕЦ)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|						И (НЕ ВЫБОР
	|								КОГДА НДСЗаписиКнигиПродажОбороты.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|									ТОГДА ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СчетФактура.НаАванс, ЛОЖЬ)
	|								ИНАЧЕ ЕСТЬNULL(СчетФактураВыданный.НаАванс, ЛОЖЬ)
	|							КОНЕЦ)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|					ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК СуммаСовсемБезНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|		&НачалоПериода,
	|		&КонецПериода,
	|		Период,
	|		Организация = &Организация
	|		    И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СчетФактураВыданный.НаАванс КАК НаАванс,
	|			СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
	|			ВЫБОР
	|				КОГДА СчетФактураВыданный.НаАванс
	|					ТОГДА СчетФактураВыданный.СтавкаНДС
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ КАК СтавкаНДС_Аванс
	|		ИЗ
	|			Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ГДЕ
	|			СчетФактураВыданный.НаАванс
	|			И СчетФактураВыданный.Организация = &Организация) КАК СчетФактураВыданный
	|		ПО НДСЗаписиКнигиПродажОбороты.СчетФактура = СчетФактураВыданный.ДокументОснование
	|			И (ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|					ТОГДА СчетФактураВыданный.НаАванс
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС = СчетФактураВыданный.СтавкаНДС_Аванс
	|				ИНАЧЕ (НЕ СчетФактураВыданный.НаАванс)
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"	, Организация);
	
	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	
	ВидыЦенностей_Аванс = новый массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс"	, ВидыЦенностей_Аванс);
		
	Возврат Запрос.Выполнить();
	
КонецФункции

// Возвращает структуру с полями "ТекущийПериод" и "КорректируемыйПериод",
// принимающие значение булевого типа - требуется ли формировать доп. листы
Функция ПроверитьНаличиеДопЛистов(Организация, НачалоПериода, КонецПериода, НДСНалоговыйПериод)
	
	СтруктураПараметров = Новый Структура("ТекущийПериод, КорректируемыйПериод");
	СтруктураПараметров.ТекущийПериод = Ложь;
	СтруктураПараметров.КорректируемыйПериод = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК Порядок,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьДопЛисты,
		|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			Организация = &Организация
		|				И ЗаписьДополнительногоЛиста = ИСТИНА) КАК НДСЗаписиКнигиПродажОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	2,
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	&НачалоПериода
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
		|			&НачалоПериода,
		|			,
		|			День,
		|			Организация = &Организация
		|				И ЗаписьДополнительногоЛиста = ИСТИНА
		|				И КорректируемыйПериод >= &НачалоПериода
		|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПродажОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
		|	НДСЗаписиКнигиПродажОбороты.Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС";
	
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, Организация);
	
	Если НДСНалоговыйПериод = Перечисления.Периодичность.Квартал Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Квартал");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

мСтруктураОтбораПроведен = Новый Структура("Проведен", Истина);
мСтруктураОтбораСчетФактуры = Новый Структура("Проведен, ВидСчетаФактуры", Истина);