#Если Клиент Тогда
	
// Настройка периода
Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "Организация", Организация);
	
	Если ОтчетПоДокументу Тогда
		
		МоментДокумента = новый МоментВремени(Документ.Дата,Документ);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала", МоментДокумента.Дата);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаОкончания", МоментДокумента.Дата);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачГраница", МоментДокумента);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("КонГраница", МоментДокумента);
		
	Иначе
		
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала", НачалоДня(ОбщийОтчет.ДатаНач));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаОкончания", КонецДня(ОбщийОтчет.ДатаКон));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачГраница", Новый Граница(НачалоДня(ОбщийОтчет.ДатаНач)));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("КонГраница", Новый Граница(КонецДня(ОбщийОтчет.ДатаКон)));
		
	КонецЕсли; 
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата", '00010101');
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СостояниеПринятоКУчету", Перечисления.СостоянияОС.ПринятоКУчету);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СостояниеСнятоСУчета", Перечисления.СостоянияОС.СнятоСУчета);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры // СформироватьОтчет()

// Процедура - заполняет начальные настройки отчета
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = Истина;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.мСтруктураНевыводимыхГруппировок.Вставить("Общие", 1);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение),
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство),
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ,
	|	ПРЕДСТАВЛЕНИЕ(МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ),
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета КАК СчетУчета,
	|	ТекущееСостояние.Состояние КАК ЗначениеТекущегоСостояния,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СнятыеСУчета.СнятоСУчета, ЛОЖЬ) КАК ОССнятоСУчетаНаНачало,
	|	ПринятиеКУчету.ДатаСостояния КАК ДатаПринятияКУчету,
	|	ГрафикиАмортизацииБухгалтерскийУчетСрезПоследних.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ТекущееСостояние.ДатаСостояния КАК ДатаПоследнегоСостояния,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаНачальныйОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаНачальныйОстатокКт, 0) КАК АмортизацияНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаОборотДт, 0) КАК СтоимостьОборотДт,
	|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаОборотКт, 0) КАК СтоимостьОборотКт,
	|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаОборотКт, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаКонечныйОстатокДт, 0) КАК СтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0) КАК АмортизацияКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьОС_БУ.СуммаКонечныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияОС_БУ.СуммаКонечныйОстатокКт, 0) КАК ОстаточнаяСтоимость,
	|	ВЫРАЗИТЬ(ВыработкаОСОбороты.КоличествоОборот КАК ЧИСЛО(15, 2)) КАК Выработка
	|{ВЫБРАТЬ
	|	Подразделение.*,
	|	ОсновноеСредство.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния,
	|	СчетНачисленияАмортизации,
	|	ОССнятоСУчетаНаНачало,
	|	ДатаПринятияКУчету,
	|	ГрафикАмортизации,
	|	ДатаПоследнегоСостояния,
	|	ПорядокПогашенияСтоимости,
	|	СпособНачисленияАмортизации,
	|	СпособыОтраженияРасходовПоАмортизации,
	|	СрокИспользованияДляВычисленияАмортизации,
	|	НачислятьАмортизацию,
	|	ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	КоэффициентАмортизации}
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация {ОсновноеСредство.* КАК ОсновноеСредство}) КАК ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыработкаОС.Обороты(&НачГраница, &КонГраница, , ) КАК ВыработкаОСОбороты
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = ВыработкаОСОбороты.ОсновноеСредство
	|			И ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПараметрВыработки = ВыработкаОСОбороты.ПараметрВыработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация) КАК НачислениеАмортизацииБухгалтерскийУчетСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация) КАК ГрафикиАмортизацииБухгалтерскийУчетСрезПоследних
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ГрафикиАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&КонГраница, Организация = &Организация) КАК СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачГраница, &КонГраница, Период, ДвиженияИГраницыПериода, , &СубконтоОС, Организация = &Организация) КАК СтоимостьОС_БУ
	|				ПО СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство = СтоимостьОС_БУ.Субконто1
	|					И СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета = СтоимостьОС_БУ.Счет
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачГраница, &КонГраница, Период, ДвиженияИГраницыПериода, , &СубконтоОС, Организация = &Организация) КАК АмортизацияОС_БУ
	|				ПО СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство = АмортизацияОС_БУ.Субконто1
	|					И СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации = АмортизацияОС_БУ.Счет
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|				ИСТИНА КАК СнятоСУчета
	|			ИЗ
	|				РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ГДЕ
	|				СостоянияОСОрганизаций.Состояние = &СостояниеСнятоСУчета
	|				И СостоянияОСОрганизаций.ДатаСостояния < &ДатаНачала
	|				И СостоянияОСОрганизаций.Организация = &Организация) КАК СнятыеСУчета
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СнятыеСУчета.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|				СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния
	|			ИЗ
	|				РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ГДЕ
	|				СостоянияОСОрганизаций.Состояние = &СостояниеПринятоКУчету
	|				И ВЫБОР
	|						КОГДА &ДатаОкончания = &ПустаяДата
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СостоянияОСОрганизаций.ДатаСостояния <= &ДатаОкончания
	|					КОНЕЦ
	|				И СостоянияОСОрганизаций.Организация = &Организация) КАК ПринятиеКУчету
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПринятиеКУчету.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|				СостоянияОСОрганизаций.Состояние КАК Состояние,
	|				СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния,
	|				СостоянияОСОрганизаций.Регистратор КАК ДокументУстановкиСостояния
	|			ИЗ
	|				РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ГДЕ
	|				СостоянияОСОрганизаций.ДатаСостояния В
	|						(ВЫБРАТЬ
	|							МАКСИМУМ(ДатаПоследнегоСостояния.ДатаСостояния)
	|						ИЗ
	|							РегистрСведений.СостоянияОСОрганизаций КАК ДатаПоследнегоСостояния
	|						ГДЕ
	|							ДатаПоследнегоСостояния.Организация = &Организация
	|							И ДатаПоследнегоСостояния.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|							И ВЫБОР
	|								КОГДА &ДатаОкончания = &ПустаяДата
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ДатаПоследнегоСостояния.ДатаСостояния < &ДатаОкончания
	|							КОНЕЦ
	|						СГРУППИРОВАТЬ ПО
	|									ДатаПоследнегоСостояния.ОсновноеСредство)
	|				И СостоянияОСОрганизаций.НомерСтроки В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							МАКСИМУМ(ДатаПоследнегоСостояния.НомерСтроки)
	|						ИЗ
	|							РегистрСведений.СостоянияОСОрганизаций КАК ДатаПоследнегоСостояния
	|						ГДЕ
	|							ДатаПоследнегоСостояния.Организация = &Организация
	|							И ДатаПоследнегоСостояния.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|							И ДатаПоследнегоСостояния.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|						СГРУППИРОВАТЬ ПО
	|									ДатаПоследнегоСостояния.ОсновноеСредство)
	|				И СостоянияОСОрганизаций.Организация = &Организация) КАК ТекущееСостояние
	|			ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ТекущееСостояние.ОсновноеСредство
	|		ПО НачислениеАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство}
	|{ГДЕ
	|	ЕСТЬNULL(СнятыеСУчета.СнятоСУчета, ЛОЖЬ) КАК ОССнятоСУчетаНаНачало,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПорядокПогашенияСтоимости,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета,
	|	ТекущееСостояние.Состояние,
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ}
	|{УПОРЯДОЧИТЬ ПО
	|	Подразделение.*,
	|	ОсновноеСредство.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния,
	|	СчетНачисленияАмортизации,
	|	ОССнятоСУчетаНаНачало,
	|	ДатаПринятияКУчету,
	|	ГрафикАмортизации,
	|	ДатаПоследнегоСостояния,
	|	ПорядокПогашенияСтоимости,
	|	СпособНачисленияАмортизации,
	|	СпособыОтраженияРасходовПоАмортизации,
	|	СрокИспользованияДляВычисленияАмортизации,
	|	НачислятьАмортизацию,
	|	ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	КоэффициентАмортизации}
	|ИТОГИ
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(ОсновноеСредство),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(СчетУчета),
	|	МАКСИМУМ(ЗначениеТекущегоСостояния),
	|	МАКСИМУМ(СчетНачисленияАмортизации),
	|	МАКСИМУМ(ОССнятоСУчетаНаНачало),
	|	МАКСИМУМ(ДатаПринятияКУчету),
	|	МАКСИМУМ(ГрафикАмортизации),
	|	МАКСИМУМ(ДатаПоследнегоСостояния),
	|	МАКСИМУМ(ПорядокПогашенияСтоимости),
	|	МАКСИМУМ(СпособНачисленияАмортизации),
	|	МАКСИМУМ(СпособыОтраженияРасходовПоАмортизации),
	|	МАКСИМУМ(СрокИспользованияДляВычисленияАмортизации),
	|	МАКСИМУМ(НачислятьАмортизацию),
	|	МАКСИМУМ(ОбъемПродукцииРаботДляВычисленияАмортизации),
	|	МАКСИМУМ(КоэффициентАмортизации),
	|	МАКСИМУМ(КоэффициентУскорения),
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(СтоимостьДляВычисленияАмортизации),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(СтоимостьОборотДт),
	|	СУММА(СтоимостьОборотКт),
	|	СУММА(АмортизацияОборот),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(Выработка)
	|ПО
	|	Подразделение,
	|	ОсновноеСредство
	|{ИТОГИ ПО
	|	Подразделение.*,
	|	ОсновноеСредство.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния}";
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Подразделение", "Подразделение");
	СтруктураПредставлениеПолей.Вставить("ОсновноеСредство", "Основное средство");
	СтруктураПредставлениеПолей.Вставить("МОЛ", "МОЛ");
	СтруктураПредставлениеПолей.Вставить("ПорядокПогашенияСтоимости", "Порядок погашения стоимости");
	СтруктураПредставлениеПолей.Вставить("ОССнятоСУчетаНаНачало", "Снято с учета на начало отчета");
	
	СтруктураПредставлениеПолей.Вставить("ДатаПринятияКУчету", "Дата принятия к учету");
	СтруктураПредставлениеПолей.Вставить("ДатаПоследнегоСостояния", "Дата установки текущего состояния");
	СтруктураПредставлениеПолей.Вставить("ЗначениеТекущегоСостояния", "Текущее состояние");
	
	СтруктураПредставлениеПолей.Вставить("СчетУчета", "Счет учета");   
	СтруктураПредставлениеПолей.Вставить("СчетНачисленияАмортизации", "Счет амортизации");
	
	СтруктураПредставлениеПолей.Вставить("СпособНачисленияАмортизации", "Способ начисления амортизации");
	СтруктураПредставлениеПолей.Вставить("СпособыОтраженияРасходовПоАмортизации", "Отражение расходов");
	
	СтруктураПредставлениеПолей.Вставить("СрокИспользованияДляВычисленияАмортизации", "Срок использования (для амортизации)");
	СтруктураПредставлениеПолей.Вставить("ОбъемПродукцииРаботДляВычисленияАмортизации", "Объем продукции");
	СтруктураПредставлениеПолей.Вставить("КоэффициентАмортизации", "Коэффициент амортизации");
	СтруктураПредставлениеПолей.Вставить("КоэффициентУскорения", "Коэффициент ускорения (для способа уменьшаемого остатака)");
	СтруктураПредставлениеПолей.Вставить("ГрафикАмортизации", "Годовой график");
	СтруктураПредставлениеПолей.Вставить("НачислятьАмортизацию", "Начислять амортизацию");
	
	ПостроительОтчета.Текст = ТекстЗапроса;
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	ПостроительОтчета.ВыбранныеПоля.Добавить("ПорядокПогашенияСтоимости");
	ПостроительОтчета.ВыбранныеПоля.Добавить("СпособНачисленияАмортизации");
	ПостроительОтчета.ВыбранныеПоля.Добавить("СрокИспользованияДляВычисленияАмортизации");
	
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("Подразделение", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ОсновноеСредство", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("МОЛ", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СчетУчета", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ЗначениеТекущегоСостояния", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СчетНачисленияАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ОССнятоСУчетаНаНачало", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ДатаПринятияКУчету", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ГрафикАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ДатаПоследнегоСостояния", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПорядокПогашенияСтоимости", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СпособНачисленияАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СпособыОтраженияРасходовПоАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СрокИспользованияДляВычисленияАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("НачислятьАмортизацию", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ОбъемПродукцииРаботДляВычисленияАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("КоэффициентАмортизации", Новый Структура("ОсновноеСредство"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("КоэффициентУскорения", Новый Структура("ОсновноеСредство"));
	
	УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	
	ОбщийОтчет.ЗаполнитьПоказатели("ПервоначальнаяСтоимость", "Первоначальная стоимость", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьДляВычисленияАмортизации", "Стоимость для вычисления амортизации", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьНачальныйОстаток", "Стоимость на начало периода", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияНачальныйОстаток", "Амортизация на начало периода", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОборотДт", "Увеличение стоимости", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияОборот", "Амортизация за период", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОборотКт", "Уменьшение стоимости", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьКонечныйОстаток", "Стоимость на конец периода", Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияКонечныйОстаток", "Амортизация на конец периода", Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("ОстаточнаяСтоимость", "Остаточная стоимость", Истина, "ЧЦ=15; ЧДЦ=2");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("ОсновноеСредство");
	МассивОтбора.Добавить("ОССнятоСУчетаНаНачало");
	
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры // Настроить()

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет  = ЭтотОбъект;
	
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Добавляет в структуру общие для всех отчетов параметры настройки
//
// Параметры:
//	Нет.
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("НастройкиПостроителя", ОбщийОтчет.ПостроительОтчета.ПолучитьНастройки());
	СтруктураНастроек.Вставить("Показатели", ОбщийОтчет.Показатели.Выгрузить());
	СтруктураНастроек.Вставить("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураНастроек.Вставить("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураНастроек.Вставить("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураНастроек.Вставить("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураНастроек.Вставить("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек()()

// Заполняет из структуры настроек общие параметры отчетов
//
// Параметры:
//	Нет.
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ПоказыватьЗаголовок) Экспорт
	Перем ТабПоказатели;
	
	Если ТипЗнч(ОбщийОтчет.СохраненныеНастройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщийОтчет.ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	
	СтруктураСНастройками.Свойство("Показатели", ТабПоказатели);
	Если ТипЗнч(ТабПоказатели) = Тип("ТаблицаЗначений") Тогда
		ОбщийОтчет.Показатели.Загрузить(ТабПоказатели);
	КонецЕсли;
	
	СтруктураСНастройками.Свойство("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураСНастройками.Свойство("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураСНастройками.Свойство("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураСНастройками.Свойство("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураСНастройками.Свойство("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
КонецПроцедуры // ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки)()

ОбщийОтчет.ИмяРегистра          = "СтоимостьОС";
ОбщийОтчет.мНазваниеОтчета      = "Ведомость по амортизации ОС";
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мРежимВводаПериода   = 0;

#КонецЕсли