
&НаСервере
Функция ПолучитьТаблицуDestination()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ " + Отчет.TopCount + "
	|	LocalDistributionCostsMilageWeightVolumeОбороты.DestinationLocation КАК DestinationLocation,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.MilageOfParcelОборот КАК Milage,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.WeightОборот КАК Weight,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.SumOfMilageОборот КАК Sum
	|ИЗ
	|	РегистрНакопления.LocalDistributionCostsMilageWeightVolume.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			&УсловиеParentCompany
	|				И &УсловиеGeomarket
	|				И &УсловиеSubGeomarket
	|				И &УсловиеSegment
	|				И &УсловиеSubSegment
	|				И &УсловиеSourceLocation
	|				И &УсловиеDestinationLocation) КАК LocalDistributionCostsMilageWeightVolumeОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	&ТекстПорядка УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстПорядка", Отчет.Resources);
	
	Если ЗначениеЗаполнено(Отчет.ParentCompany) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеParentCompany", "ParentCompany = &ParentCompany");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Geomarket) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеGeomarket", "Geomarket = &Geomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubGeomarket) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеSubGeomarket", "SubGeomarket = &SubGeomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Segment) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеSegment", "Segment = &Segment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubSegment) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеSubSegment", "SubSegment = &SubSegment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SourceLocation) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеSourceLocation", "SourceLocation = &SourceLocation");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.DestinationLocation) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеDestinationLocation", "DestinationLocation = &DestinationLocation");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода",				Новый Граница(НачалоДня(Отчет.НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",				Новый Граница(КонецДня(Отчет.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ParentCompany",				Отчет.ParentCompany);
	Запрос.УстановитьПараметр("Geomarket",					Отчет.Geomarket);
	Запрос.УстановитьПараметр("SubGeomarket",				Отчет.SubGeomarket);
	Запрос.УстановитьПараметр("Segment",					Отчет.Segment);
	Запрос.УстановитьПараметр("SubSegment",					Отчет.SubSegment);
	Запрос.УстановитьПараметр("SourceLocation",				Отчет.SourceLocation);
	Запрос.УстановитьПараметр("DestinationLocation",		Отчет.DestinationLocation);
	Запрос.УстановитьПараметр("УсловиеParentCompany",		Истина);
	Запрос.УстановитьПараметр("УсловиеGeomarket",			Истина);
	Запрос.УстановитьПараметр("УсловиеSubGeomarket",		Истина);
	Запрос.УстановитьПараметр("УсловиеSegment",				Истина);
	Запрос.УстановитьПараметр("УсловиеSubSegment",			Истина);
	Запрос.УстановитьПараметр("УсловиеSourceLocation",		Истина);
	Запрос.УстановитьПараметр("УсловиеDestinationLocation",	Истина);
	
	ТаблицаDestination = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаDestination;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаSource(DestinationLocation, Счетчик)
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ " + Отчет.TopCount + "
	|	LocalDistributionCostsMilageWeightVolumeОбороты.SourceLocation КАК SourceLocation,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.DestinationLocation КАК DestinationLocation,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.MilageOfParcelОборот КАК Milage,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.WeightОборот КАК Weight,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.SumOfMilageОборот КАК Sum
	|ИЗ
	|	РегистрНакопления.LocalDistributionCostsMilageWeightVolume.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			&УсловиеParentCompany
	|				И &УсловиеGeomarket
	|				И &УсловиеSubGeomarket
	|				И &УсловиеSegment
	|				И &УсловиеSubSegment
	|				И &УсловиеSourceLocation
	|				И &УсловиеDestinationLocation) КАК LocalDistributionCostsMilageWeightVolumeОбороты";
	
	Если ЗначениеЗаполнено(Отчет.ParentCompany) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеParentCompany", "ParentCompany = &ParentCompany");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Geomarket) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеGeomarket", "Geomarket = &Geomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubGeomarket) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSubGeomarket", "SubGeomarket = &SubGeomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Segment) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSegment", "Segment = &Segment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubSegment) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSubSegment", "SubSegment = &SubSegment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SourceLocation) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSourceLocation", "SourceLocation = &SourceLocation");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(DestinationLocation) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеDestinationLocation", "DestinationLocation = &DestinationLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуSource(ТаблицаDestination)
	
	Запрос = Новый Запрос;
	
	Счетчик			= 1;
	ПервыйРаз		= Истина;
	ТекстЗапроса	= "";
	
	Для Каждого СтрокаDestination Из ТаблицаDestination Цикл
		
		ТекстЗапроса = ТекстЗапроса + ?(ПервыйРаз, "", Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС) + ПолучитьТекстЗапросаSource(СтрокаDestination.DestinationLocation, Счетчик);
		
		Запрос.УстановитьПараметр("DestinationLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="), СтрокаDestination.DestinationLocation);
		
		ПервыйРаз	= Ложь;
		Счетчик		= Счетчик + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "УПОРЯДОЧИТЬ ПО DestinationLocation, " + Отчет.Resources + " УБЫВ";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НачалоПериода",				Новый Граница(НачалоДня(Отчет.НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",				Новый Граница(КонецДня(Отчет.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ParentCompany",				Отчет.ParentCompany);
	Запрос.УстановитьПараметр("Geomarket",					Отчет.Geomarket);
	Запрос.УстановитьПараметр("SubGeomarket",				Отчет.SubGeomarket);
	Запрос.УстановитьПараметр("Segment",					Отчет.Segment);
	Запрос.УстановитьПараметр("SubSegment",					Отчет.SubSegment);
	Запрос.УстановитьПараметр("SourceLocation",				Отчет.SourceLocation);
	Запрос.УстановитьПараметр("DestinationLocation",		Отчет.DestinationLocation);
	Запрос.УстановитьПараметр("УсловиеParentCompany",		Истина);
	Запрос.УстановитьПараметр("УсловиеGeomarket",			Истина);
	Запрос.УстановитьПараметр("УсловиеSubGeomarket",		Истина);
	Запрос.УстановитьПараметр("УсловиеSegment",				Истина);
	Запрос.УстановитьПараметр("УсловиеSubSegment",			Истина);
	Запрос.УстановитьПараметр("УсловиеSourceLocation",		Истина);
	Запрос.УстановитьПараметр("УсловиеDestinationLocation",	Истина);
	
	ТаблицаSource = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаSource;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаSum(SourceLocation, DestinationLocation, Счетчик)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	LocalDistributionCostsMilageWeightVolumeОбороты.Период КАК ПериодМесяц,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.SourceLocation КАК SourceLocation,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.DestinationLocation КАК DestinationLocation,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.MilageOfParcelОборот КАК Milage,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.WeightОборот КАК Weight,
	|	LocalDistributionCostsMilageWeightVolumeОбороты.SumOfMilageОборот КАК Sum
	|ИЗ
	|	РегистрНакопления.LocalDistributionCostsMilageWeightVolume.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			&УсловиеParentCompany
	|				И &УсловиеGeomarket
	|				И &УсловиеSubGeomarket
	|				И &УсловиеSegment
	|				И &УсловиеSubSegment
	|				И &УсловиеSourceLocation
	|				И &УсловиеDestinationLocation) КАК LocalDistributionCostsMilageWeightVolumeОбороты";
	
	Если ЗначениеЗаполнено(Отчет.ParentCompany) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеParentCompany", "ParentCompany = &ParentCompany");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Geomarket) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеGeomarket", "Geomarket = &Geomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubGeomarket) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSubGeomarket", "SubGeomarket = &SubGeomarket");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Segment) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSegment", "Segment = &Segment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.SubSegment) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSubSegment", "SubSegment = &SubSegment");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(SourceLocation) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеSourceLocation", "SourceLocation = &SourceLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(DestinationLocation) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеDestinationLocation", "DestinationLocation = &DestinationLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="));
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуSum(ТаблицаSource)
	
	Запрос = Новый Запрос;
	
	Счетчик			= 1;
	ПервыйРаз		= Истина;
	ТекстЗапроса	= "";
	
	Для Каждого СтрокаSource Из ТаблицаSource Цикл
		
		ТекстЗапроса = ТекстЗапроса + ?(ПервыйРаз, "", Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС) + ПолучитьТекстЗапросаSum(СтрокаSource.SourceLocation, СтрокаSource.DestinationLocation, Счетчик);
		
		Запрос.УстановитьПараметр("SourceLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="),			СтрокаSource.SourceLocation);
		Запрос.УстановитьПараметр("DestinationLocation" + Формат(Счетчик, "ЧЦ=2; ЧВН="),	СтрокаSource.DestinationLocation);
		
		ПервыйРаз	= Ложь;
		Счетчик		= Счетчик + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "УПОРЯДОЧИТЬ ПО DestinationLocation, ПериодМесяц, SourceLocation";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НачалоПериода",				Новый Граница(НачалоДня(Отчет.НачалоПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",				Новый Граница(КонецДня(Отчет.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ParentCompany",				Отчет.ParentCompany);
	Запрос.УстановитьПараметр("Geomarket",					Отчет.Geomarket);
	Запрос.УстановитьПараметр("SubGeomarket",				Отчет.SubGeomarket);
	Запрос.УстановитьПараметр("Segment",					Отчет.Segment);
	Запрос.УстановитьПараметр("SubSegment",					Отчет.SubSegment);
	Запрос.УстановитьПараметр("SourceLocation",				Отчет.SourceLocation);
	Запрос.УстановитьПараметр("DestinationLocation",		Отчет.DestinationLocation);
	Запрос.УстановитьПараметр("УсловиеParentCompany",		Истина);
	Запрос.УстановитьПараметр("УсловиеGeomarket",			Истина);
	Запрос.УстановитьПараметр("УсловиеSubGeomarket",		Истина);
	Запрос.УстановитьПараметр("УсловиеSegment",				Истина);
	Запрос.УстановитьПараметр("УсловиеSubSegment",			Истина);
	Запрос.УстановитьПараметр("УсловиеSourceLocation",		Истина);
	Запрос.УстановитьПараметр("УсловиеDestinationLocation",	Истина);
	
	ТаблицаSum = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаSum;
	
КонецФункции

&НаСервере
Процедура УдалитьПрограммныеРеквизитыИЭлементы()
	
	// Очищаем элементы формы
	ЭлементыГруппыSource = Элементы.ГруппаДиаграммSource.ПодчиненныеЭлементы;
	
	Пока ЭлементыГруппыSource.Количество() > 0 Цикл
		Элементы.Удалить(ЭлементыГруппыSource[0]);
	КонецЦикла;
	
	// Очищаем Реквизиты формы
	МассивРеквизитовДляУдаления = Новый Массив;
	
	РеквизитыФормы = ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если Найти(РеквизитФормы.Имя, "ДиаграммаSource") <> 0 Тогда
			МассивРеквизитовДляУдаления.Добавить(РеквизитФормы.Имя);
		ИначеЕсли Найти(РеквизитФормы.Имя, "ДиаграммаSum") <> 0 Тогда
			МассивРеквизитовДляУдаления.Добавить(РеквизитФормы.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(, МассивРеквизитовДляУдаления);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтчет()
	
	УдалитьПрограммныеРеквизитыИЭлементы();
	
	// Диаграмма Destination
	ТаблицаDestination = ПолучитьТаблицуDestination();
	
	ДиаграммаDestination.Очистить();
	
	ДиаграммаDestination.ОбластьЗаголовка.Текст			= "Top destination location";
	ДиаграммаDestination.ОбластьЗаголовка.ЦветТекста	= WebЦвета.Синий;
	ДиаграммаDestination.ТипДиаграммы					= ТипДиаграммы.ГистограммаОбъемная;
	ДиаграммаDestination.ВидПодписей					= ВидПодписейКДиаграмме.Значение;
	ДиаграммаDestination.ОтображатьЛегенду				= Истина;
	ДиаграммаDestination.Обновление						= Ложь;
	
	Точка = ДиаграммаDestination.УстановитьТочку(Отчет.Resources);
	
	Для Каждого	Строка Из ТаблицаDestination Цикл
		
		Серия = ДиаграммаDestination.УстановитьСерию(Строка.DestinationLocation);
		ДиаграммаDestination.УстановитьЗначение(Точка, Серия, Строка[Отчет.Resources]);
		 
	КонецЦикла;
	
	ДиаграммаDestination.Обновление	= Истина;
	
	// Диаграммы Source и Sum
	ТаблицаSource	= ПолучитьТаблицуSource(ТаблицаDestination);
	ТаблицаSum		= ПолучитьТаблицуSum(ТаблицаSource);
	
	Счетчик = 1;
	Для Каждого СтрокаDestination Из ТаблицаDestination Цикл
		
		// Новая группа формы
		ИмяГруппы = "ГруппаДиаграммSource" + Формат(Счетчик, "ЧЦ=2; ЧВН=");
		НоваяГруппа = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), Элементы.ГруппаДиаграммSource);
		
		НоваяГруппа.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
		НоваяГруппа.ОтображатьЗаголовок	= Ложь;
		НоваяГруппа.Отображение			= ОтображениеОбычнойГруппы.Нет;
		НоваяГруппа.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		// Новый реквизит формы
		ИмяДиаграммы = "ДиаграммаSource" + Формат(Счетчик, "ЧЦ=2; ЧВН=");
		НовыйРеквизитФормы = Новый РеквизитФормы(ИмяДиаграммы, Новый ОписаниеТипов("Диаграмма"));
		
		МассивРеквизитовДляДобавления = Новый Массив;
		МассивРеквизитовДляДобавления.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовДляДобавления);
				
		// Новый элемент формы
		НовыйЭлементФормы = Элементы.Добавить(ИмяДиаграммы, Тип("ПолеФормы"), НоваяГруппа);
		
		НовыйЭлементФормы.Заголовок					= "Top source for " + СтрокаDestination.DestinationLocation;
		НовыйЭлементФормы.ЦветТекстаЗаголовка		= WebЦвета.Синий;
		НовыйЭлементФормы.ПутьКДанным				= ИмяДиаграммы;
		НовыйЭлементФормы.РастягиватьПоВертикали	= Ложь;
				
		// Заполнение свойств диаграммы
		ЭтаФорма[ИмяДиаграммы].ОбластьЗаголовка.Текст		= "Top source for " + СтрокаDestination.DestinationLocation;
		ЭтаФорма[ИмяДиаграммы].ОбластьЗаголовка.ЦветТекста	= WebЦвета.Синий;
		ЭтаФорма[ИмяДиаграммы].ТипДиаграммы					= ТипДиаграммы.ГистограммаОбъемная;
		ЭтаФорма[ИмяДиаграммы].ВидПодписей					= ВидПодписейКДиаграмме.Значение;
		ЭтаФорма[ИмяДиаграммы].ОтображатьЛегенду			= Истина;
		ЭтаФорма[ИмяДиаграммы].Обновление					= Ложь;
		
		Точка = ЭтаФорма[ИмяДиаграммы].УстановитьТочку(Отчет.Resources);
		
		СтруктураОтбора = Новый Структура("DestinationLocation", СтрокаDestination.DestinationLocation);
		МассивСтрок = ТаблицаSource.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаSource Из МассивСтрок Цикл
			
			Серия = ЭтаФорма[ИмяДиаграммы].УстановитьСерию(СтрокаSource.SourceLocation);
			ЭтаФорма[ИмяДиаграммы].УстановитьЗначение(Точка, Серия, СтрокаSource[Отчет.Resources]);
			
		КонецЦикла;
		
		ЭтаФорма[ИмяДиаграммы].Обновление = Истина;
		
		// Новый реквизит формы
		ИмяДиаграммы = "ДиаграммаSum" + Формат(Счетчик, "ЧЦ=2; ЧВН=");
		НовыйРеквизитФормы = Новый РеквизитФормы(ИмяДиаграммы, Новый ОписаниеТипов("Диаграмма"));
		
		МассивРеквизитовДляДобавления = Новый Массив;
		МассивРеквизитовДляДобавления.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовДляДобавления);
				
		// Новый элемент формы
		НовыйЭлементФормы = Элементы.Добавить(ИмяДиаграммы, Тип("ПолеФормы"), НоваяГруппа);
		
		НовыйЭлементФормы.Заголовок					= "Sum per " + Отчет.Resources + " " + СтрокаDestination.DestinationLocation;
		НовыйЭлементФормы.ЦветТекстаЗаголовка		= WebЦвета.Синий;
		НовыйЭлементФормы.ПутьКДанным				= ИмяДиаграммы;
		НовыйЭлементФормы.РастягиватьПоВертикали	= Ложь;
				
		// Заполнение свойств диаграммы
		ЭтаФорма[ИмяДиаграммы].ОбластьЗаголовка.Текст		= "Sum per " + Отчет.Resources + " " + СтрокаDestination.DestinationLocation;
		ЭтаФорма[ИмяДиаграммы].ОбластьЗаголовка.ЦветТекста	= WebЦвета.Синий;
		ЭтаФорма[ИмяДиаграммы].ТипДиаграммы					= ТипДиаграммы.График;
		ЭтаФорма[ИмяДиаграммы].ВидПодписей					= ВидПодписейКДиаграмме.Значение;
		ЭтаФорма[ИмяДиаграммы].ОтображатьЛегенду			= Истина;
		ЭтаФорма[ИмяДиаграммы].Обновление					= Ложь;
		
		СтруктураОтбора = Новый Структура("DestinationLocation", СтрокаDestination.DestinationLocation);
		МассивСтрок = ТаблицаSum.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаSum Из МассивСтрок Цикл
			
			Sum = ?(СтрокаSum[Отчет.Resources] = 0, 0, СтрокаSum.Sum / СтрокаSum[Отчет.Resources]);
			
			Точка = ЭтаФорма[ИмяДиаграммы].УстановитьТочку(СтрокаSum.ПериодМесяц);
			Точка.Текст = Формат(СтрокаSum.ПериодМесяц, "ДФ=dd.MM.yy");
			
			Серия = ЭтаФорма[ИмяДиаграммы].УстановитьСерию(СтрокаSum.SourceLocation);
			ЭтаФорма[ИмяДиаграммы].УстановитьЗначение(Точка, Серия, Формат(Sum, "ЧДЦ=2"));
			
		КонецЦикла;
		
		ЭтаФорма[ИмяДиаграммы].Обновление = Истина;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьНажатие(Команда)
	
	ОбновитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартныйПериодПриИзменении(Элемент)
	
	Отчет.НачалоПериода	= СтандартныйПериод.ДатаНачала;
	Отчет.КонецПериода	= СтандартныйПериод.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отчет.TopCount		= 10;
	Отчет.НачалоПериода	= НачалоГода(ТекущаяДата());
	Отчет.КонецПериода	= КонецМесяца(ТекущаяДата());
	Отчет.Resources		= "Milage";
	
	СтандартныйПериод.Вариант		= ВариантСтандартногоПериода.ПроизвольныйПериод;
	СтандартныйПериод.ДатаНачала	= НачалоГода(ТекущаяДата());
	СтандартныйПериод.ДатаОкончания	= КонецМесяца(ТекущаяДата());
	
КонецПроцедуры
