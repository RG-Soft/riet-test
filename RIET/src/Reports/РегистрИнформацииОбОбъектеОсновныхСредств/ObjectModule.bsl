#Если Клиент Тогда
	
Перем НП Экспорт;
Перем СчетаПрямыхЗатрат;
Перем СчетаПрямыхИКосвенныхЗатрат;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();
	
	Если ДатаНач > ДатаКон Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода", 60);
		Возврат;
	КонецЕсли;
	
	Макет = ПолучитьМакет("Отчет");
	
	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");
	
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда
		ОписаниеПериода     = "Период: без ограничения.";
	Иначе
		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда
			ОписаниеПериода = "Период: " + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""") 
							+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
		Иначе
			ОписаниеПериода = "Период: " + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
		КонецЕсли;
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.ОписаниеПериода     = ОписаниеПериода;
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + "/" + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	//Опрерделим даты изменения состояния ОС для ограничения последующих запросов.
	//---------------------------------
	//Определение состояния основного средства
	Запрос = Новый Запрос;        
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("ОперацияВыбытие",        Перечисления.СостоянияОС.СнятоСУчета);
	Запрос.УстановитьПараметр("ОперацияПринятиеКУчету", Перечисления.СостоянияОС.ПринятоКУчету);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""ПринятоКУчету"" КАК Состояние,
		|	СостояниеОС.Регистратор КАК Регистратор,
		|	СостояниеОС.ДатаСостояния КАК Период
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций КАК СостояниеОС
		|
		|ГДЕ
		|	СостояниеОС.Состояние = &ОперацияПринятиеКУчету И
		|	СостояниеОС.Организация = &Организация И
		|	СостояниеОС.ОсновноеСредство = &ОсновноеСредство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Выбыло"",
		|	СостояниеОС.Регистратор,
		|	СостояниеОС.ДатаСостояния
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций КАК СостояниеОС
		|
		|ГДЕ
		|	СостояниеОС.Состояние = &ОперацияВыбытие И
		|	СостояниеОС.Организация = &Организация И
		|	СостояниеОС.ОсновноеСредство = &ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Регистратор
		|АВТОУПОРЯДОЧИВАНИЕ";

	СостоянияОС = Запрос.Выполнить().Выбрать();
    ДатаПринятияКУчету	= неопределено;
    ОснованиеПринятияКУчету	= Неопределено;
	ДатаВыбытия 		= Неопределено;
	ОснованиеВыбытия 		= Неопределено;
	
	Пока СостоянияОС.Следующий() Цикл
		Если СостоянияОС.Состояние = "ПринятоКУчету" тогда
			Если ДатаПринятияКУчету = Неопределено тогда 
				ДатаПринятияКУчету 		= СостоянияОС.Период;
				ОснованиеПринятияКУчету	= СостоянияОС.Регистратор;
			ИначеЕсли ДатаПринятияКУчету < СостоянияОС.Период тогда
				//Ориентируемся на более позднюю запись принятия к учету.
				ДатаПринятияКУчету 		= СостоянияОС.Период;
				ОснованиеПринятияКУчету	= СостоянияОС.Регистратор;
				Если не ДатаВыбытия = Неопределено тогда 
					Если ДатаВыбытия<ДатаПринятияКУчету тогда
						ДатаВыбытия 		= Неопределено;
						ОснованиеВыбытия 		= Неопределено;
					КонецЕсли;
				КонецЕсли;
            КонецЕсли;
		ИначеЕсли СостоянияОС.Состояние = "Выбыло" тогда
			Если ДатаПринятияКУчету=Неопределено тогда
				//сортировка по возрастанию документов. ОС не может выбыть до принятия к учету. Игнорируем запись.
				Продолжить;
			ИначеЕсли СостоянияОС.Период <ДатаПринятияКУчету тогда
				//ОС не может выбыть до принятия к учету (последнего).
				Продолжить;
			КонецЕслИ;
			Если ДатаВыбытия = Неопределено тогда 
				ДатаВыбытия 		= СостоянияОС.Период;
				ОснованиеВыбытия	= СостоянияОС.Регистратор;
			ИначеЕсли ДатаВыбытия < СостоянияОС.Период тогда
				//Ориентируемся на более позднюю запись выбытия.
				ДатаВыбытия 		= СостоянияОС.Период;
				ОснованиеВыбытия	= СостоянияОС.Регистратор;
            КонецЕсли;
		КонецЕслИ;
	КонецЦикла;
	
	Если ДатаПринятияКУчету=Неопределено тогда
		ОбщегоНазначения.СообщитьОбОшибке("Выбранное основное средство не было принято к налоговому учету для указанной организации!");
		Возврат;
	КонецЕсли;
	ДатаОкончанияЗапросов = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаКон),ДатаКон,КонецДня(ДатаКон));
	ДатаНачалаЗапросов		= ?(ДатаНач>ДатаПринятияКУчету,ДатаНач,ДатаПринятияКУчету);
	ДатаОкончанияЗапросов	= ?(ДатаВыбытия=Неопределено,ДатаОкончанияЗапросов,?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаОкончанияЗапросов),ДатаВыбытия,?(ДатаОкончанияЗапросов>ДатаВыбытия,ДатаВыбытия,ДатаОкончанияЗапросов)));
	Если не ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаОкончанияЗапросов) тогда
		ДатаНачалаЗапросов  = ?(ДатаНачалаЗапросов>ДатаОкончанияЗапросов,ДатаОкончанияЗапросов,ДатаНачалаЗапросов);
	КонецЕсли;
	//Определим общую информацию по объекту ОС, текущее состояние и момент выбытия (если был) 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("Счет",ПланыСчетов.Налоговый.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Если ОснованиеВыбытия = Неопределено тогда
		Запрос.УстановитьПараметр("Период",             ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаОкончанияЗапросов),ДатаОкончанияЗапросов,КонецДня(ДатаОкончанияЗапросов)));
	Иначе
		Запрос.УстановитьПараметр("Период",             новый МоментВремени(ДатаОкончанияЗапросов,ОснованиеВыбытия));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НелинейныйМетод",        Перечисления.МетодыНачисленияАмортизации.Нелинейный);
	//|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.Период КАК ДатаПринятияКУчету,
	Запрос.Текст = "ВЫБРАТЬ
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.Организация,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ИнвентарныйНомер,
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.АмортизацияДо2002,
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.СтоимостьДо2002,
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство.АмортизационнаяГруппа,
	|	ПараметрыАмортизацииНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
	|	ВЫБОР КОГДА ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации = &НелинейныйМетод ТОГДА НачислениеАмортизацииПоБазовойСтоимостиНалоговыйУчетСрезПоследних.ПризнакНачисленияПоБазовойСтоимости ИНАЧЕ ЛОЖЬ КОНЕЦ КАК НачислениеПоБазовой,
	|	ВЫБОР КОГДА ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации = &НелинейныйМетод и НачислениеАмортизацииПоБазовойСтоимостиНалоговыйУчетСрезПоследних.ПризнакНачисленияПоБазовойСтоимости ТОГДА ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ - НачислениеАмортизацииПоБазовойСтоимостиНалоговыйУчетСрезПоследних.СуммаНакопленнойАмортизации ИНАЧЕ 0 КОНЕЦ КАК БазоваяСтоимость,
	|	ВЫБОР КОГДА АмортизацияНалоговыйУчетОстатки.СуммаОстатокДт = ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ ТОГДА 0 ИНАЧЕ АмортизацияНалоговыйУчетОстатки.СуммаОстаток - ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КОНЕЦ КАК ИзменениеСтоимости
	//|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.Регистратор как РегистраторПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&Период, Организация = &Организация и ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация и ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(&Период, Организация = &Организация и ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыАмортизацииНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчет.СрезПоследних(&Период, Организация = &Организация и ОсновноеСредство = &ОсновноеСредство) КАК НачислениеАмортизацииПоБазовойСтоимостиНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство = НачислениеАмортизацииПоБазовойСтоимостиНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, (Организация = &Организация) и (Субконто1 = &ОсновноеСредство) И (ВидУчета = &ВидУчета)) КАК АмортизацияНалоговыйУчетОстатки	
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство = АмортизацияНалоговыйУчетОстатки.Субконто1
	|
	|ГДЕ
	|	ПервоначальныеСведенияОбОсновныхСредствахНалоговыйУчетСрезПоследних.ОсновноеСредство = &ОсновноеСредство";	
	
	ИнформацияТаблицой = Запрос.Выполнить().Выгрузить();
	
	Если ИнформацияТаблицой.Количество()=0 тогда
		Сообщить("Выбранное основное средство не было отражено в налоговом учете для указанной организации!",СтатусСообщения.Важное);
		Предупреждение("Выбранное основное средство не было отражено в налоговом учете для указанной организации!");
		Возврат;
	Иначе
		ОбщаяИнформация = ИнформацияТаблицой[0];
	Конецесли;
	
	МоментВыбытия = Неопределено;
	Если не ОснованиеВыбытия = Неопределено тогда
		 МоментВыбытия = Новый МоментВремени(ДатаВыбытия,ОснованиеВыбытия);
	КонецЕсли;	
	
	ОбластьОсновныеСведения = Макет.ПолучитьОбласть("ОбщаяИнформация");
	ПредставлениеОС = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ОсновноеСредство.НаименованиеПолное),ОсновноеСредство.Наименование,ОсновноеСредство.НаименованиеПолное);
	ПредставлениеОС = СокрЛП(ПредставлениеОС+" № "+ ОбщаяИнформация.ИнвентарныйНомер); 
	ОбластьОсновныеСведения.Параметры.ПредставлениеОС					= ПредставлениеОС;
	ОбластьОсновныеСведения.Параметры.ОсновноеСредство					= ОсновноеСредство;
	
	ОбластьОсновныеСведения.Параметры.ДатаПринятияКУчету				= ДатаПринятияКУчету;
	ОбластьОсновныеСведения.Параметры.ПервоначальнаяСтоимость			= ОбщаяИнформация.ПервоначальнаяСтоимостьНУ;
	ОбластьОсновныеСведения.Параметры.ИзменениеПервоначальнойСтоимости	= ОбщаяИнформация.ИзменениеСтоимости;
	ОбластьОсновныеСведения.Параметры.БазоваяСтоимость					= ОбщаяИнформация.БазоваяСтоимость;
	ОбластьОсновныеСведения.Параметры.Группа							= ОбщаяИнформация.ОсновноеСредствоАмортизационнаяГруппа;
	ОбластьОсновныеСведения.Параметры.СрокИспользования					= ОбщаяИнформация.СрокПолезногоИспользования;
	ОбластьОсновныеСведения.Параметры.МетодНачисления					= ОбщаяИнформация.МетодНачисленияАмортизации;
	
	Если не ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаВыбытия) тогда
		Если ДатаВыбытия<=ДатаОкончанияЗапросов тогда
			ОбластьОсновныеСведения.Параметры.ДатаВыбытия						= ДатаВыбытия;
			ОбластьОсновныеСведения.Параметры.ОснованиеВыбытия					= ОснованиеВыбытия;
			ОбластьОсновныеСведения.Параметры.ОснованиеВыбытияКомментарий		= ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ОснованиеВыбытия),"", ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ОснованиеВыбытия.Комментарий),"<...>",ОснованиеВыбытия.Комментарий));
		КонецЕслИ;
	КонецЕслИ;	
	ДокументРезультат.Вывести(ОбластьОсновныеСведения);
	
	//Распределение сумм начисляемой амортизации
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаНаправленияНачисления"));
	
	ОбластьРаспределениеАмортизации = Макет.ПолучитьОбласть("СтрокаНаправленияНачисления");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	
	Запрос.УстановитьПараметр("НачалоПериода",          ДатаНачалаЗапросов);
	Запрос.УстановитьПараметр("КонецПериода",          	ДатаОкончанияЗапросов);
	Запрос.УстановитьПараметр("СчетаПрямыхЗатрат",      СчетаПрямыхЗатрат);
	Запрос.УстановитьПараметр("СчетаПрямыхИКосвенныхЗатрат",СчетаПрямыхИКосвенныхЗатрат);
	Запрос.Текст = "ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Период,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Регистратор,
	|	РаспределениеАмортизации.Представление,
	|	РаспределениеАмортизации.ТекущееНаправление,
	|	СУММА(РаспределениеАмортизации.БазаРаспределения) КАК БазаРаспределения,
	|	СУММА(РаспределениеАмортизации.ПрямыеЗатраты) КАК ПрямыеЗатраты,
	|	СУММА(РаспределениеАмортизации.КосвенныеЗатраты) КАК КосвенныеЗатраты,
	|	СУММА(РаспределениеАмортизации.ПрочиеЗатраты) КАК ПрочиеЗатраты
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет.СрезПоследних(&НачалоПериода, (ОсновноеСредство =&ОсновноеСредство  и Организация      =&Организация)) КАК СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних
	|		Левое СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НаправлениеНачисленияАмортизацииНаправления.Коэффициент КАК БазаРаспределения,
	|			ВЫБОР КОГДА НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК ПрямыеЗатраты,
	|			ВЫБОР КОГДА НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхИКосвенныхЗатрат) И НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат)) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК КосвенныеЗатраты,
	|			ВЫБОР КОГДА НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхИКосвенныхЗатрат)) И НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат)) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК ПрочиеЗатраты,
	|			НаправлениеНачисленияАмортизации.Ссылка КАК ТекущееНаправление,
	|			НаправлениеНачисленияАмортизации.Представление КАК Представление
	|		ИЗ
	|			Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК НаправлениеНачисленияАмортизацииНаправления
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК НаправлениеНачисленияАмортизации
	|				ПО НаправлениеНачисленияАмортизацииНаправления.Ссылка = НаправлениеНачисленияАмортизации.Ссылка) КАК РаспределениеАмортизации
	|		ПО СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = РаспределениеАмортизации.ТекущееНаправление
	| 	Где СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Период <= &НачалоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Период,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Регистратор,
	|	РаспределениеАмортизации.ТекущееНаправление,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.Организация,
	|	РаспределениеАмортизации.Представление
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Период,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Регистратор,
	|	РаспределениеАмортизации.Представление,
	|	РаспределениеАмортизации.ТекущееНаправление,
	|	СУММА(РаспределениеАмортизации.БазаРаспределения),
	|	СУММА(РаспределениеАмортизации.ПрямыеЗатраты),
	|	СУММА(РаспределениеАмортизации.КосвенныеЗатраты),
	|	СУММА(РаспределениеАмортизации.ПрочиеЗатраты)
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет КАК СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет
	|		Левое СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НаправлениеНачисленияАмортизацииНаправления.Коэффициент КАК БазаРаспределения,
	|			ВЫБОР КОГДА НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК ПрямыеЗатраты,
	|			ВЫБОР КОГДА НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхИКосвенныхЗатрат) И НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат)) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК КосвенныеЗатраты,
	|			ВЫБОР КОГДА НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхИКосвенныхЗатрат)) И НЕ(НаправлениеНачисленияАмортизацииНаправления.СчетЗатратНУ В ИЕРАРХИИ (&СчетаПрямыхЗатрат)) ТОГДА НаправлениеНачисленияАмортизацииНаправления.Коэффициент ИНАЧЕ 0 КОНЕЦ КАК ПрочиеЗатраты,
	|			НаправлениеНачисленияАмортизации.Ссылка КАК ТекущееНаправление,
	|			НаправлениеНачисленияАмортизации.Представление КАК Представление
	|		ИЗ
	|			Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК НаправлениеНачисленияАмортизацииНаправления
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК НаправлениеНачисленияАмортизации
	|				ПО НаправлениеНачисленияАмортизацииНаправления.Ссылка = НаправлениеНачисленияАмортизации.Ссылка) КАК РаспределениеАмортизации
	|		ПО СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.СпособыОтраженияРасходовПоАмортизации = РаспределениеАмортизации.ТекущееНаправление
	|
	|ГДЕ
	|"+?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаНачалаЗапросов),"","	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Период > &НачалоПериода И ")+"
	|"+?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаОкончанияЗапросов),"","	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Период <= &КонецПериода И ")+"
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство И
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Период,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Регистратор,
	|	РаспределениеАмортизации.ТекущееНаправление,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчет.Организация,
	|	РаспределениеАмортизации.Представление";	
	
	
	НаправленияНачисления = Запрос.Выполнить().Выгрузить();
	НаправленияНачисления.Колонки.Добавить("ДоляПрямых");
	НаправленияНачисления.Колонки.Добавить("ДоляКосвенных");
	НаправленияНачисления.Колонки.Добавить("ДоляПрочих");
	НаправленияНачисления.Колонки.Добавить("ДатаНачалаДействия");
	Для каждого СтрокаРезультата из НаправленияНачисления Цикл
		ОбластьРаспределениеАмортизации.Параметры.ДатаНаправления = ?(СтрокаРезультата.Регистратор=ОснованиеПринятияКУчету,"При принятии к учету",?(СтрокаРезультата.Период <ДатаНачалаЗапросов,"На начало регистра",формат(СтрокаРезультата.Период,"ДФ=dd.MM.yyyy")));
		ОбластьРаспределениеАмортизации.Параметры.НаправлениеКомментарий = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.Представление),"<...>",СтрокаРезультата.Представление);
		ОбластьРаспределениеАмортизации.Параметры.Направление			 = СтрокаРезультата.ТекущееНаправление;
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.БазаРаспределения) тогда
			ДоляПрямых = 0;
			ДоляКосвенных = 0;
			ДоляПрочих = 100;
		Иначе
			ДоляПрямых = Окр(СтрокаРезультата.ПрямыеЗатраты/СтрокаРезультата.БазаРаспределения*100,2);
			ДоляКосвенных = Окр(СтрокаРезультата.КосвенныеЗатраты/СтрокаРезультата.БазаРаспределения*100,2);
			ДоляПрочих = 100-ДоляПрямых-ДоляКосвенных;
		КонецЕсли;
		
		ОбластьРаспределениеАмортизации.Параметры.ДоляПрямых	= Строка(Формат(ДоляПрямых,"ЧЦ=6; ЧДЦ=2; ЧН=-"))+?(ДоляПрямых = 0,"","%");
		ОбластьРаспределениеАмортизации.Параметры.ДоляКосвенных = Строка(Формат(ДоляКосвенных,"ЧЦ=6; ЧДЦ=2; ЧН=-"))+?(ДоляКосвенных = 0,"","%");
		ОбластьРаспределениеАмортизации.Параметры.ДоляПрочих	= Строка(Формат(ДоляПрочих,"ЧЦ=6; ЧДЦ=2; ЧН=-"))+?(ДоляПрочих = 0,"","%");
			 
		ДокументРезультат.Вывести(ОбластьРаспределениеАмортизации);
		
		//Фиксирование долей для последующего распределения амортизации 
		СтрокаРезультата.ДоляПрямых		= ДоляПрямых;
		СтрокаРезультата.ДоляКосвенных	= ДоляКосвенных;
		СтрокаРезультата.ДоляПрочих		= ДоляПрочих;
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.Период) тогда
			СтрокаРезультата.ДатаНачалаДействия = НачалоМесяца(ДатаНач);
		Иначе
			СтрокаРезультата.ДатаНачалаДействия = НачалоМесяца(ДобавитьМесяц(СтрокаРезультата.Период,1));
		КонецЕсли;
	КонецЦикла;
	
	//Определение наличия специального коэффициента
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаСпециальногоКоэффициента"));
	
	СпециальныйКоэффициент = Макет.ПолучитьОбласть("СтрокаСпециальногоКоэффициента");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода",          ДатаНачалаЗапросов);
	Запрос.УстановитьПараметр("КонецПериода",           ДатаОкончанияЗапросов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР КОГДА СпециальныйКоэффициентДляАмортизацииНалоговыйУчетСрезПоследних.Период = &НачалоПериода ТОГДА СпециальныйКоэффициентДляАмортизацииНалоговыйУчетСрезПоследних.Период ИНАЧЕ 0 КОНЕЦ КАК Период,
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчетСрезПоследних.СпециальныйКоэффициент,
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчетСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(&НачалоПериода, ОсновноеСредство = &ОсновноеСредство И Организация = &Организация) КАК СпециальныйКоэффициентДляАмортизацииНалоговыйУчетСрезПоследних
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.Период,
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.СпециальныйКоэффициент,
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК СпециальныйКоэффициентДляАмортизацииНалоговыйУчет
	|
	|ГДЕ
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.Период > &НачалоПериода И
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.Период <= &КонецПериода И
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство И
	|	СпециальныйКоэффициентДляАмортизацииНалоговыйУчет.Организация = &Организация";	
	
	
	ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРезультата Из ТаблицаКоэффициентов Цикл
		СпециальныйКоэффициент.Параметры.ДатаКоэффициента 		= ?(СтрокаРезультата.Регистратор=ОснованиеПринятияКУчету,"При принятии к учету",?(СтрокаРезультата.Период = 0,"На начало регистра",формат(Макс(СтрокаРезультата.Период,ДатаПринятияКУчету),"ДФ=dd.MM.yyyy")));
		СпециальныйКоэффициент.Параметры.ОснованиеПредставление =?(СтрокаРезультата.Регистратор=ОснованиеПринятияКУчету,"При принятии к учету", ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.Регистратор.Комментарий),"<...>",СтрокаРезультата.Регистратор.Комментарий));
		СпециальныйКоэффициент.Параметры.Основание			 	= СтрокаРезультата.Регистратор;
		СпециальныйКоэффициент.Параметры.Коэффициент		 	= СтрокаРезультата.СпециальныйКоэффициент;
		ДокументРезультат.Вывести(СпециальныйКоэффициент);
	КонецЦикла;
	Если ТаблицаКоэффициентов.Количество()=0 тогда
		СпециальныйКоэффициент.Параметры.ДатаКоэффициента = "На начало регистра";
		СпециальныйКоэффициент.Параметры.Коэффициент	  = 0;
		ДокументРезультат.Вывести(СпециальныйКоэффициент);
	Конецесли;
	
	//Реестр изменений первоначальной стомости за период формирования регистра
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаИзмененияСтоимости"));
	СтрокаИзмененияСтоимости = Макет.ПолучитьОбласть("СтрокаИзмененияСтоимости");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода",          ДатаНачалаЗапросов);
	Запрос.УстановитьПараметр("Счет",ПланыСчетов.Налоговый.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	Если ОбщегоНазначения.ЗначениеНеЗаполнено(ОснованиеВыбытия) и ДатаОкончанияЗапросов = ДатаВыбытия тогда
		Запрос.УстановитьПараметр("КонецПериода",           ДатаОкончанияЗапросов);
	Иначе
		Запрос.УстановитьПараметр("КонецПериода",           МоментВыбытия);
	КонецЕсли;
	
	//Игнорируемые виды операций
	ВидыОперацийНеУчитываемые = Новый Массив();
	ВидыОперацийНеУчитываемые.Добавить(Перечисления.ВидыСобытийОС.НачислениеАмортизации);
	Запрос.УстановитьПараметр("ВидыСобытийНеУчитываемые",ВидыОперацийНеУчитываемые);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 КАК Период,
		|	0 КАК Регистратор,
		|	0 КАК ВидОперации,
		|	0 КАК СуммаИзменений,
		|	НалоговыйОстатки.СуммаОстатокДт КАК СтоимостьОстаток
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, Организация = &Организация И Субконто1 = &ОсновноеСредство И ВидУчета = &ВидУчета) КАК НалоговыйОстатки
		|
		|ГДЕ
		|	(НалоговыйОстатки.СуммаОстатокДт <> 0)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НалоговыйОстаткиИОбороты.Период,
		|	НалоговыйОстаткиИОбороты.Регистратор,
		|	СобытияОСОрганизаций.Событие,
		|	НалоговыйОстаткиИОбороты.СуммаОборот,
		|	НалоговыйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, Движения, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, Организация = &Организация И Субконто1 = &ОсновноеСредство И ВидУчета = &ВидУчета) КАК НалоговыйОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СобытияОСОрганизаций КАК СобытияОСОрганизаций
		|		ПО НалоговыйОстаткиИОбороты.Регистратор = СобытияОСОрганизаций.Регистратор И НалоговыйОстаткиИОбороты.Субконто1 = СобытияОСОрганизаций.ОсновноеСредство И НалоговыйОстаткиИОбороты.Организация = СобытияОСОрганизаций.Организация
		|
		|ГДЕ
		|	(НалоговыйОстаткиИОбороты.СуммаОборот <> 0) И
		|	(НЕ(СобытияОСОрганизаций.Событие В (&ВидыСобытийНеУчитываемые)))";
	ТаблицаИзмененийСтоимости = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРезультата Из ТаблицаИзмененийСтоимости Цикл
		Если СтрокаРезультата.Период = 0 тогда
			Если СтрокаРезультата.СтоимостьОстаток = ОбщаяИнформация.ПервоначальнаяСтоимостьНУ тогда
				продолжить;
			Иначе
				СтрокаРезультата.СуммаИзменений = 	СтрокаРезультата.СтоимостьОстаток - ОбщаяИнформация.ПервоначальнаяСтоимостьНУ;
			КонецеслИ;
		КонецЕсли;
		СтрокаИзмененияСтоимости.Параметры.ДатаИзменения			= ?(СтрокаРезультата.Период = 0,"На начало регистра",Макс(СтрокаРезультата.Период,ДатаПринятияКУчету));
		СтрокаИзмененияСтоимости.Параметры.ОснованиеПредставление	=?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ВидОперации),?(СтрокаРезультата.Период = 0,"","<...>"),СтрокаРезультата.ВидОперации);
		СтрокаИзмененияСтоимости.Параметры.Основание				= СтрокаРезультата.Регистратор;
		СтрокаИзмененияСтоимости.Параметры.СуммаИзменений			= СтрокаРезультата.СуммаИзменений;
		СтрокаИзмененияСтоимости.Параметры.ТекущаяСтоимость			= СтрокаРезультата.СтоимостьОстаток;
		ДокументРезультат.Вывести(СтрокаИзмененияСтоимости);
	КонецЦикла;
	
	//Перерывы в начислении
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаПерерывыВНачислении"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода",          ДатаНачалаЗапросов);
	Запрос.УстановитьПараметр("КонецПериода",           ДатаОкончанияЗапросов);
	Запрос.Текст = "ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(НачислениеАмортизацииНалоговыйУчет.Период, МЕСЯЦ) КАК ПериодПрекращения,
	|	НачислениеАмортизацииНалоговыйУчет.Регистратор КАК ДокументПрекращения,
	|	НачислениеАмортизацииНалоговыйУчет.Период КАК Период
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизацииНалоговыйУчет
	|
	|ГДЕ
	|	НачислениеАмортизацииНалоговыйУчет.Период >= &НачалоПериода И
	|	НачислениеАмортизацииНалоговыйУчет.Период < &КонецПериода И
	|	(НачислениеАмортизацииНалоговыйУчет.НачислятьАмортизацию = ЛОЖЬ) И
	|	НачислениеАмортизацииНалоговыйУчет.Организация = &Организация И
	|	НачислениеАмортизацииНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	&НачалоПериода
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(&НачалоПериода, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК НачислениеАмортизацииНалоговыйУчетСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПроверкаНаЛожь.Регистратор КАК Регистратор
	|		ИЗ
	|			РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК ПроверкаНаЛожь
	|		
	|		ГДЕ
	|			(ПроверкаНаЛожь.НачислятьАмортизацию = ЛОЖЬ) И
	|			ПроверкаНаЛожь.ОсновноеСредство = &ОсновноеСредство И
	|			ПроверкаНаЛожь.Организация = &Организация) КАК НачислениеАмортизацииНалоговыйУчет
	|		ПО НачислениеАмортизацииНалоговыйУчетСрезПоследних.Регистратор = НачислениеАмортизацииНалоговыйУчет.Регистратор
	|
    |УПОРЯДОЧИТЬ ПО
    |	ДокументПрекращения
    |АВТОУПОРЯДОЧИВАНИЕ";
	
	ТаблицаПерерывовВНачислении = Запрос.Выполнить().Выгрузить();
	СтрокаПерерывыВНачислении = Макет.ПолучитьОбласть("СтрокаПерерывыВНачислении");
	ТекущаяДатаВозобновления=НачалоМесяца(ДатаНач);
	Для каждого СтрокаРезультата из ТаблицаПерерывовВНачислении Цикл
		Если Не(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ПериодПрекращения)) тогда
			СтрокаРезультата.ПериодПрекращения = НачалоМесяца(ДобавитьМесяц(СтрокаРезультата.ПериодПрекращения,1));
			Если СтрокаРезультата.ПериодПрекращения< ТекущаяДатаВозобновления тогда
				продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",            Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
		Запрос.УстановитьПараметр("Период",          		СтрокаРезультата.Период);
		Запрос.Текст="ВЫБРАТЬ
		|	ВозобновлениеНачисления.Период,
		|	ВозобновлениеНачисления.Регистратор
		|ИЗ
		|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПервых(&Период, ОсновноеСредство = &ОсновноеСредство И Организация = &Организация И НачислятьАмортизацию = ИСТИНА) КАК ВозобновлениеНачисления";
		ВозобновлениеНачисления=Запрос.Выполнить().Выбрать();
		
		ДатаВозобновления = Null;
		ДокументВозобновления = Null;
		Если ВозобновлениеНачисления.Следующий() тогда
			ДатаВозобновления = ВозобновлениеНачисления.Период;
			ДокументВозобновления = ВозобновлениеНачисления.Регистратор;
			ДатаВозобновления = НачалоМесяца(ДобавитьМесяц(ДатаВозобновления,1));
			ТекущаяДатаВозобновления = ДатаВозобновления;
		КонецЕсли;
		
		Если ДокументВозобновления = ОснованиеПринятияКУчету тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекущаяДатаВозобновления = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ПериодПрекращения),"На начало регистра",Макс(СтрокаРезультата.ПериодПрекращения,ДатаПринятияКУчету)) тогда
			продолжить;
		конецЕсли;	
		СтрокаПерерывыВНачислении.Параметры.ДатаПрекращения			= ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ПериодПрекращения),"На начало регистра",Макс(СтрокаРезультата.ПериодПрекращения,ДатаПринятияКУчету));
		СтрокаПерерывыВНачислении.Параметры.ДатаВозобновления	    = ДатаВозобновления;
		СтрокаПерерывыВНачислении.Параметры.ДокументВозобновления	= ДокументВозобновления;
		СтрокаПерерывыВНачислении.Параметры.ДокументПрекращения		= СтрокаРезультата.ДокументПрекращения;
		
		СтрокаПерерывыВНачислении.Параметры.ОснованиеВозобновления	= ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаВозобновления),"Не возобновлено на конец формирования регистра",?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДокументВозобновления),"<...>",?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДокументВозобновления.Комментарий),"<...>",ДокументВозобновления.Комментарий)));
		СтрокаПерерывыВНачислении.Параметры.ОснованиеПрекращения	= ?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ДокументПрекращения),"",?(ОбщегоНазначения.ЗначениеНеЗаполнено(СтрокаРезультата.ДокументПрекращения.Комментарий),"<...>",СтрокаРезультата.ДокументПрекращения.Комментарий));
		
		ДокументРезультат.Вывести(СтрокаПерерывыВНачислении);
		Если ОбщегоНазначения.ЗначениеНеЗаполнено(ТекущаяДатаВозобновления) тогда
			прервать;
		КонецЕслИ;
	КонецЦикла;
	//Оборотная сторона. Начисление амортизации
	НакопленоАмортизации=0;
	МесяцевПолезногоИспользования = 0;
	Если Не(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаНач)) тогда
		//Определяем количество месяцев начисления амортизации
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",            Организация);
		Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
		Запрос.УстановитьПараметр("Период",          		КонецМесяца(ДобавитьМесяц(ДатаНач,-1)));
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Налоговый.АмортизацияОсновныхСредств);
		Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		
		Запрос.Текст="ВЫБРАТЬ
		|	АмортизацияНалоговыйУчетОбороты.СуммаОборот КАК АмортизацияОборот
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(, &Период, Месяц, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, (Организация = &ОрганизациЯ) И (Субконто1 = &ОсновноеСредство) И (ВидУчета = &ВидУчета)) КАК АмортизацияНалоговыйУчетОбороты
		|ИТОГИ КОЛИЧЕСТВО(АмортизацияОборот) ПО
		|	АмортизацияНалоговыйУчетОбороты.Субконто1";
		МесяцевПолезногоИспользования=Запрос.Выполнить().Выбрать();
		Если МесяцевПолезногоИспользования.Следующий() тогда
			МесяцевПолезногоИспользования=МесяцевПолезногоИспользования.АмортизацияОборот;
		Иначе
			МесяцевПолезногоИспользования = 0;
		КонецЕсли;
		//Сумма накопленной амортизации
		НакопленоАмортизацииТаблица = Новый ТаблицаЗначений;
		СтруктураОтбораОстатков = Новый Структура("Счет,Организация,Субконто1,ВидУчета",ПланыСчетов.Налоговый.АмортизацияОС_01,Организация,ОсновноеСредство, Перечисления.ВидыУчетаПоПБУ18.НУ);
		НакопленоАмортизацииТаблица= РегистрыБухгалтерии.Налоговый.Остатки(НачалоМесяца(ДатаНач),ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства,СтруктураОтбораОстатков);
		НакопленоАмортизации=0;
		НакопленоАмортизации = НакопленоАмортизацииТаблица.Итог("СуммаОстатокКт");
	КонецЕсли;
		
	ШапкаНачисленнойАмортизации = Макет.ПолучитьОбласть("ШапкаНачисленнойАмортизации");
	ШапкаНачисленнойАмортизации.Параметры.ФактическоеИспользованиеНаНачало = МесяцевПолезногоИспользования;
	ШапкаНачисленнойАмортизации.Параметры.НакопленоНаНачало = НакопленоАмортизации;
	ДокументРезультат.Вывести(ШапкаНачисленнойАмортизации);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",		ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода",          НачалоМесяца(ДатаНач));
	Запрос.УстановитьПараметр("КонецПериода",           ?(ОбщегоНазначения.ЗначениеНеЗаполнено(ДатаКон), ДатаКон, КонецДня(ДатаКон)));
	Запрос.УстановитьПараметр("Счет",ПланыСчетов.Налоговый.АмортизацияОсновныхСредств);
	Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.Текст="ВЫБРАТЬ
				 |	Амортизация.Период КАК Период,
				 |	Амортизация.СуммаОборотКт КАК АмортизацияПриход
				 |ИЗ
				 |	РегистрБухгалтерии.Налоговый.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, (Организация = &Организация) И (Субконто1 = &ОсновноеСредство) И (ВидУчета = &ВидУчета)) КАК Амортизация
				 |
				 |ГДЕ
				 |	(Амортизация.СуммаОборотКт <> 0)
				 |
				 |УПОРЯДОЧИТЬ ПО
				 |	Период
				 |
				 |ИТОГИ СУММА(Амортизация.СуммаОборотКт) ПО
				 |	Период";
	НачисленияАмортизации=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.поГруппировкам,"Период");

	СтрокаНачисленнойАмортизации = Макет.ПолучитьОбласть("СтрокаНачисленнойАмортизации");
	Пока НачисленияАмортизации.Следующий() Цикл
		МесяцевПолезногоИспользования= МесяцевПолезногоИспользования+1;
		НакопленоАмортизации = НакопленоАмортизации +НачисленияАмортизации.АмортизацияПриход;
		СтрокаНачисленнойАмортизации.Параметры.МесяцНачисления = НачисленияАмортизации.Период;
		СтрокаНачисленнойАмортизации.Параметры.МесяцИспользования = МесяцевПолезногоИспользования;
		СтрокаНачисленнойАмортизации.Параметры.СуммаНачислено = НачисленияАмортизации.АмортизацияПриход;
		//Определение параметров распределения
		НаправленияНачисления.Сортировать("ДатаНачалаДействия Убыв,Период Убыв"); 
		Для Каждого ВыборНаправления из НаправленияНачисления Цикл
			Если ВыборНаправления.ДатаНачалаДействия > НачисленияАмортизации.период тогда
				продолжить;
			КонецЕслИ;
			СуммаАмортизации = НачисленияАмортизации.АмортизацияПриход;
			СуммаПрямых = Окр(СуммаАмортизации*ВыборНаправления.ДоляПрямых/100,2);
			СуммаКосвенных = 0;
			СуммаАмортизации = СуммаАмортизации - СуммаПрямых;
			Если не ВыборНаправления.ДоляКосвенных = 0 тогда
				СуммаКосвенных = Окр(СуммаАмортизации*ВыборНаправления.ДоляКосвенных/(100-ВыборНаправления.ДоляПрямых),2);
			СуммаАмортизации = СуммаАмортизации - СуммаКосвенных;
			Конецесли;
			СуммаПрочих=СуммаАмортизации;
			
			СтрокаНачисленнойАмортизации.Параметры.СуммаПрямых = СуммаПрямых;
			СтрокаНачисленнойАмортизации.Параметры.СуммаКосвенных = СуммаКосвенных;
			СтрокаНачисленнойАмортизации.Параметры.СуммаПрочих = СуммаПрочих;
			Прервать;
		КонецЦикла;
		
		СтрокаНачисленнойАмортизации.Параметры.НачисленоКонечныйОстаток = НакопленоАмортизации;
		ДокументРезультат.Вывести(СтрокаНачисленнойАмортизации);
	КонецЦикла;

	//Завершение формирования регистра
	ДокументРезультат.Вывести(Макет.ПолучитьОбласть("Подвал"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

СчетаПрямыхЗатрат =новый массив();
СчетаНалоговогоУчета = ПланыСчетов.Налоговый;
СчетаПрямыхЗатрат.Добавить(СчетаНалоговогоУчета.ПрямыеРасходыОсновногоПроизводства);
СчетаПрямыхЗатрат.Добавить(СчетаНалоговогоУчета.ПрямыеРасходыВспомогательныхПроизводств);
СчетаПрямыхЗатрат.Добавить(СчетаНалоговогоУчета.ПрямыеОбщепроизводственныеРасходы);
СчетаПрямыхЗатрат.Добавить(СчетаНалоговогоУчета.ПрямыеРасходыОбслуживающихПроизводств);

СчетаПрямыхИКосвенныхЗатрат = новый массив();
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.ОсновноеПроизводство_);
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.ВспомогательныеПроизводства);
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.ОбщепроизводственныеРасходы);
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.ОбщехозяйственныеРасходы);
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.ОбслуживающиеПроизводства);
СчетаПрямыхИКосвенныхЗатрат.Добавить(СчетаНалоговогоУчета.РасходыНаПродажу);

#КонецЕсли