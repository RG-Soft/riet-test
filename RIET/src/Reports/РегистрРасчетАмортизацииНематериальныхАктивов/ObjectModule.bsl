#Если Клиент Тогда
Перем НП Экспорт;

Перем CписокСчетов;
Перем ИтогСуммаАмортизации;

// Возвращает полное наименование элемента справочника, если у этого вида 
// справочников есть реквизит НаименованиеПолное.
// 
// Параметры:      
//    Элемент - элемент справочника, для которого нужно вернуть полное наименование
//
// Возвращаемое значение: 
//  Строка с полным наименованием.
//
Функция ПолноеНаименование(Элемент) Экспорт
 
	Если ОбщегоНазначения.ЗначениеНеЗаполнено(Элемент) Тогда
		Возврат "";
 
	ИначеЕсли Элемент.Метаданные().Реквизиты.Найти("НаименованиеПолное") = Неопределено Тогда
		Возврат Элемент.Наименование;;

	ИначеЕсли ОбщегоНазначения.ЗначениеНеЗаполнено(Элемент.НаименованиеПолное) Тогда
		Возврат Элемент.Наименование;

	Иначе
		Возврат Элемент.НаименованиеПолное;
	КонецЕсли;
 
КонецФункции

Процедура ВывестиСтроку(Опер, ДокументРезультат, Макет)
	
	Если Опер.Амортизация = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Строка1 = Макет.ПолучитьОбласть("Строка|Общая1");
	Строка2 = Макет.ПолучитьОбласть("Строка|Объект");
	Строка3 = Макет.ПолучитьОбласть("Строка|Общая2");
	
	Строка1.Параметры.ДатаОперации = Формат(Опер.Период, "ДФ=dd.MM.yyyy");
	Строка3.Параметры.СпециальныйКоэффициент = Опер.СпециальныйКоэффициент;
	Строка3.Параметры.МетодНачисленияАмортизации = Опер.МетодНачисленияАмортизации;
	Строка2.Параметры.НаименованиеОбъекта = ПолноеНаименование(Опер.НематериальныйАктив);
	
	Если Опер.МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный Тогда
		Стоимость = Опер.ПервоначальнаяСтоимость;
		
	Иначе
		ОстаточнаяСтоимость = Опер.ПервоначальнаяСтоимость - Опер.АмортизацияНач;
		Если ОстаточнаяСтоимость < 0.2 * Опер.ПервоначальнаяСтоимость Тогда
			Стоимость = Опер.ПервоначальнаяСтоимость - Опер.СуммаНакопленнойАмортизации;
		Иначе
			Стоимость = ОстаточнаяСтоимость;
		КонецЕсли;
	КонецЕсли;
	
	КоличествоМесяцевПолезногоИспользованияНаНач = 0;
	ДатаПринятияКУчету = Опер.ДатаПринятияКУчету;
	ТекДата = КонецМесяца(ДобавитьМесяц(ДатаПринятияКУчету, 1));
	ТекДатаНач = КонецМесяца(Опер.Период);
	Пока ТекДата < ТекДатаНач Цикл
		КоличествоМесяцевПолезногоИспользованияНаНач = КоличествоМесяцевПолезногоИспользованияНаНач + 1;
		ТекДата = КонецМесяца(ДобавитьМесяц(ТекДата, 1));
	КонецЦикла;
	
	Строка3.Параметры.Стоимость = Стоимость;
	Строка3.Параметры.ПолезныйСрок = Опер.СрокПолезногоИспользования - КоличествоМесяцевПолезногоИспользованияНаНач;
	Строка3.Параметры.СуммаАмортизации = Опер.Амортизация;

	ДокументРезультат.Вывести(Строка1);
	Если Не ГруппироватьПоОбъектам Тогда
		ДокументРезультат.Присоединить(Строка2);
	КонецЕсли;
	ДокументРезультат.Присоединить(Строка3);
	
	ИтогСуммаАмортизации = ИтогСуммаАмортизации + Опер.Амортизация;
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	Если ГруппироватьПоОбъектам Тогда
		Заголовок1 = Макет.ПолучитьОбласть("Заголовок|Общая1");
		Заголовок2 = Макет.ПолучитьОбласть("Заголовок|Общая2");
		
	Иначе
		Заголовок1 = Макет.ПолучитьОбласть("Заголовок");
	КонецЕсли;
	
	Заголовок1.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	Заголовок1.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	Заголовок1.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	Заголовок1.Параметры.ИННОрганизации      = "" + Организация.ИНН + "/" + Организация.КПП;
	Заголовок1.Параметры.НазваниеАмортизационнойГруппы = ?(ОбщегоНазначения.ЗначениеНеЗаполнено(АмортизационнаяГруппа), "по всем", АмортизационнаяГруппа);
	
	Если ГруппироватьПоОбъектам Тогда
		ДокументРезультат.Вывести(Заголовок1);
		ДокументРезультат.Присоединить(Заголовок2);
		
	Иначе
		ДокументРезультат.Вывести(Заголовок1);
	КонецЕсли;

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	// Шапка
	Если ГруппироватьПоОбъектам Тогда
		Шапка1 = Макет.ПолучитьОбласть("Шапка|Общая1");
		Шапка2 = Макет.ПолучитьОбласть("Шапка|Общая2");
		Шапка2.Параметры.НК1 = 2;
		Шапка2.Параметры.НК2 = 3;
		Шапка2.Параметры.НК3 = 4;
		Шапка2.Параметры.НК4 = 5;
		Шапка2.Параметры.НК5 = 6;
		
		ДокументРезультат.Вывести(Шапка1);
		ДокументРезультат.Присоединить(Шапка2);
		
	Иначе
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.НК1 = 3;
		Шапка.Параметры.НК2 = 4;
		Шапка.Параметры.НК3 = 5;
		Шапка.Параметры.НК4 = 6;
		Шапка.Параметры.НК5 = 7;
		ДокументРезультат.Вывести(Шапка);
	КонецЕсли;

	Если ГруппироватьПоОбъектам Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.СуммаОборотКт КАК Амортизация,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Период,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 КАК НематериальныйАктив,
		               |	НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.СуммаНакопленнойАмортизации,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
		               |	СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.СпециальныйКоэффициент,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.СуммаНачальныйОстатокКт КАК АмортизацияНач,
		               |	СостояниеНМАОрганизацииСрезПоследних.Период КАК ДатаПринятияКУчету,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1.АмортизационнаяГруппа
		               |ИЗ
		               |	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		               |		&ДатаНачала,
		               |		&ДатаКонца,
		               |		Регистратор,
		               |		Движения,
		               |		Счет = &Счет,
		               |		&ВидСубконто,
		               |		Организация = &Организация
		               |		    И ВидУчета = &ВидУчета) КАК АмортизацияНМАНалоговыйУчетОстаткиИОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчет.СрезПоследних КАК НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.Организация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних КАК ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.Организация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет.СрезПоследних КАК СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(, Состояние = &Состояние) КАК СостояниеНМАОрганизацииСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СостояниеНМАОрганизацииСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = СостояниеНМАОрганизацииСрезПоследних.Организация
		               |ИТОГИ
		               |	СУММА(Амортизация)
		               |ПО
		               |	Субконто1";
		
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.СуммаОборотКт КАК Амортизация,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Период,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 КАК НематериальныйАктив,
		               |	НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.СуммаНакопленнойАмортизации,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
		               |	ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
		               |	СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.СпециальныйКоэффициент,
		               |	АмортизацияНМАНалоговыйУчетОстаткиИОбороты.СуммаНачальныйОстатокКт КАК АмортизацияНач,
		               |	СостояниеНМАОрганизацииСрезПоследних.Период КАК ДатаПринятияКУчету
		               |ИЗ
		               |	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		               |		&ДатаНачала,
		               |		&ДатаКонца,
		               |		Регистратор,
		               |		Движения,
		               |		Счет = &Счет,
		               |		&ВидСубконто,
		               |		Организация = &Организация
		               |		    И ВидУчета = &ВидУчета) КАК АмортизацияНМАНалоговыйУчетОстаткиИОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчет.СрезПоследних КАК НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = НачислениеАмортизацииНМАПоБазовойСтоимостиНалоговыйУчетСрезПоследних.Организация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних КАК ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = ПервоначальныеСведенияОНМАНалоговыйУчетСрезПоследних.Организация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет.СрезПоследних КАК СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СпециальныйКоэффициентДляАмортизацииНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(, Состояние = &Состояние) КАК СостояниеНМАОрганизацииСрезПоследних
		               |		ПО АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Субконто1 = СостояниеНМАОрганизацииСрезПоследних.НематериальныйАктив
		               |			И АмортизацияНМАНалоговыйУчетОстаткиИОбороты.Организация = СостояниеНМАОрганизацииСрезПоследних.Организация";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("АмортизационнаяГруппа", АмортизационнаяГруппа);
	Запрос.УстановитьПараметр("ФильтрПоГруппе", Не АмортизационнаяГруппа.Пустая());
	Запрос.УстановитьПараметр("ЗначениеИстина", Истина);
	//Запрос.УстановитьПараметр("Состояние", Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	//Запрос.УстановитьПараметр("Счет",ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("ВидУчета",Перечисления.ВидыУчетаПоПБУ18.НУ);
	//Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	Запрос.Текст = ТекстЗапроса;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Организация", Организация);
	
	ИтогСуммаАмортизации = 0;
	
	Если ГруппироватьПоОбъектам Тогда
		Опер = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Иначе
		Опер = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	
	Пока Опер.Следующий() Цикл
		Если (Опер.НематериальныйАктив.АмортизационнаяГруппа <> АмортизационнаяГруппа) и (не АмортизационнаяГруппа.Пустая()) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ГруппироватьПоОбъектам Тогда
			Группировка1 = Макет.ПолучитьОбласть("Группировка|Общая1");
			Группировка3 = Макет.ПолучитьОбласть("Группировка|Общая2");
			
			Группировка1.Параметры.ЗначениеГруппировки = ПолноеНаименование(Опер.НематериальныйАктив);
			Группировка3.Параметры.ИтогСуммаПоГруппировке = Опер.Амортизация;
			
			ДокументРезультат.Вывести(Группировка1);
			ДокументРезультат.Присоединить(Группировка3);
			
			ОперПоОбъекту = Опер.Выбрать();
			Пока ОперПоОбъекту.Следующий() Цикл
				ВывестиСтроку(ОперПоОбъекту, ДокументРезультат, Макет);
			КонецЦикла;
			
		Иначе
			ВывестиСтроку(Опер, ДокументРезультат, Макет);
		КонецЕсли;
	КонецЦикла;
	
	// Подвал
	Если ГруппироватьПоОбъектам Тогда
		Подвал1 = Макет.ПолучитьОбласть("Подвал1|Общая1");
		Подвал2 = Макет.ПолучитьОбласть("Подвал1|Общая2");
		Подвал2.Параметры.ИтогСуммаАмортизации = ИтогСуммаАмортизации;
		ДокументРезультат.Вывести(Подвал1);
		ДокументРезультат.Присоединить(Подвал2);
		
	Иначе
		Подвал = Макет.ПолучитьОбласть("Подвал1");
		Подвал.Параметры.ИтогСуммаАмортизации = ИтогСуммаАмортизации;
		ДокументРезультат.Вывести(Подвал);
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);
	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(СтруктураЛиц.ОтветственныйЗаРегистры);
	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;
#КонецЕсли
