#Если Клиент Тогда

// Формирование отчета в виде табличного документа.
// Параметры:
//  ТабличныйДокумент - макет отчета.
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	Перем Результат;

	ТабличныйДокумент.Очистить();
	Макет = ПолучитьМакет("Макет");

	// Вывод шапки
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ТабличныйДокумент.Вывести(Секция);
	
	// Выполнение запроса.
	Результат = ПодготовитьОтчетКВыводуНаПечать();
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если Результат.Пустой() Тогда
	
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НПП = "";
		Секция.Параметры.ДатаНомер = "";
		Секция.Параметры.Сумма = "";
		Секция.Параметры.Покупатель = "";
		Секция.Параметры.Основание = "";
        ТабличныйДокумент.Вывести(Секция);
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	    Возврат;
		
	КонецЕсли; 
	
	Документ = Результат.Выбрать();
	Секция = Макет.ПолучитьОбласть("Строка");
	Счетчик = 0;
	
	Пока Документ.Следующий() Цикл
		
		УчетНДС.ПолучитьПараметрыСчетаФактуры(Документ.СчетФактура, мВалютаРегламентированногоУчета, Результат);
		
		Счетчик = Счетчик + 1;
		Секция.Параметры.НПП = Счетчик;
	    Секция.Параметры.Основание = Документ.ДокументОснование;
		Секция.Параметры.Сумма = ?(Результат.СуммаДокумента = 0, "", Формат(Результат.СуммаДокумента, "ЧЦ=19; ЧДЦ=2") + " " + Строка(Результат.ВалютаДокумента));
		Секция.Параметры.РасчетныйДокумент = Документ.ДокументОснование;
		Секция.Параметры.СчетФактура = Документ.СчетФактура;
		Секция.Параметры.Покупатель = Результат.Контрагент;
		Секция.Параметры.Контрагент = Результат.Контрагент;
		Секция.Параметры.ДатаНомер = Формат(Документ.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ", №" + Документ.СчетФактура.Номер;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла; 
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	
КонецПроцедуры // СформироватьОтчет()

Процедура СформироватьОтчет1(ТабличныйДокумент) Экспорт
	
	Перем Результат;

	ТабличныйДокумент.Очистить();
	Макет = ПолучитьМакет("Макет");

	// Вывод шапки
	Секция = Макет.ПолучитьОбласть("Шапка1");
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ТабличныйДокумент.Вывести(Секция);
	
	// Выполнение запроса.
	Результат = ПодготовитьОтчетКВыводуНаПечать();
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если Результат.Пустой() Тогда
	
		Секция = Макет.ПолучитьОбласть("Строка1");
		Секция.Параметры.НПП = "";
		Секция.Параметры.Номер = "";
		Секция.Параметры.Дата = "";
		Секция.Параметры.Сумма = "";
		Секция.Параметры.Покупатель = "";
		Секция.Параметры.Основание = "";
		ТабличныйДокумент.Вывести(Секция);
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	    Возврат;
		
	КонецЕсли; 
	
	Документ = Результат.Выбрать();
	Секция = Макет.ПолучитьОбласть("Строка1");
	Счетчик = 0;
	
	Пока Документ.Следующий() Цикл
		
		УчетНДС.ПолучитьПараметрыСчетаФактуры(Документ.СчетФактура, мВалютаРегламентированногоУчета, Результат);
		
		Счетчик = Счетчик + 1;
		Секция.Параметры.НПП = Счетчик;
	    Секция.Параметры.Основание = Документ.ДокументОснование;
		Секция.Параметры.Сумма = ?(Результат.СуммаДокумента = 0, "", Формат(Результат.СуммаДокумента, "ЧЦ=19; ЧДЦ=2") + " " + Строка(Результат.ВалютаДокумента));
		Секция.Параметры.РасчетныйДокумент = Документ.ДокументОснование;
		Секция.Параметры.СчетФактура = Документ.СчетФактура;
		Секция.Параметры.Покупатель = Результат.Контрагент;
		Секция.Параметры.Контрагент = Результат.Контрагент;
		Секция.Параметры.Дата = Формат(Документ.СчетФактура.Дата, "ДФ=dd.MM.yyyy");
		Секция.Параметры.Номер = Документ.СчетФактура.Номер;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла; 
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));  
	
КонецПроцедуры // СформироватьОтчет()

// Функция вызывается из тела процедуры "Сформировать".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПодготовитьОтчетКВыводуНаПечать()
	
	Запрос = Новый Запрос;
	
	Условие = "";
	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ПодразделениеОрганизации) Тогда
		Условие = Условие + "	
		|	И СчетФактураВыданный.ПодразделениеОрганизации = &ПодразделениеОрганизации";
        
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	КонецЕсли;
	
	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ИнвойсинговыйЦентр) Тогда
		Условие = Условие + "	
		|	И СчетФактураВыданный.ИнвойсинговыйЦентр = &ИнвойсинговыйЦентр";
        
		Запрос.УстановитьПараметр("ИнвойсинговыйЦентр", ИнвойсинговыйЦентр);
	КонецЕсли;                  
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура,
	|	СчетФактураВыданный.ДокументОснование
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	(НЕ СчетФактураВыданный.ПометкаУдаления)
	|	И СчетФактураВыданный.Организация = &Организация
	|	И СчетФактураВыданный.НаАванс = ЛОЖЬ
	|	И СчетФактураВыданный.Дата >= &НачалоПериода
	|	И СчетФактураВыданный.Дата <= &КонецПериода" + Условие + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураВыданный.Дата";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);

	Возврат Запрос.Выполнить();

КонецФункции

#КонецЕсли