#Если Клиент Тогда
	
Перем НП Экспорт;

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Отчет");

	ОбластьЗаголовок  = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.НачалоПериода       = Формат(ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонецПериода        = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьЗаголовок.Параметры.ИННОрганизации      = "" + Организация.ИНН + " / " + Организация.КПП;
	ДокументРезультат.Вывести(ОбластьЗаголовок);

	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;

	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ОбщегоНазначения.ЗначениеНеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Нормируемые = Новый Массив;
	Нормируемые.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование);
	Нормируемые.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности);
	Нормируемые.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников);
	Нормируемые.Добавить(Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы);
	Нормируемые.Добавить(Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые);

	НеПринимаемыеИТранспортные = Новый Массив;
	НеПринимаемыеИТранспортные.Добавить(Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения);
    НеПринимаемыеИТранспортные.Добавить(Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщехозяйственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыВспомогательныхПроизводств);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОбслуживающихПроизводств);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыПоВыявленномуБраку);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.ИздержкиОбращения);
	СчетаЗатрат.Добавить(ПланыСчетов.Налоговый.КоммерческиеРасходы);

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ОбязательноеИДобровольноеСтрахованиеИмущества", Перечисления.ВидыРасходовНУ.ОбязательноеИДобровольноеСтрахованиеИмущества);
	Запрос.УстановитьПараметр("АрендаФедеральногоИМуниципальногоИмущества",    Перечисления.ВидыРасходовНУ.АрендаФедеральногоИМуниципальногоИмущества);
	Запрос.УстановитьПараметр("МатериальныеРасходы",       Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	Запрос.УстановитьПараметр("Амортизация",               Перечисления.ВидыРасходовНУ.Амортизация);
	Запрос.УстановитьПараметр("РемонтОсновныхСредств",     Перечисления.ВидыРасходовНУ.РемонтОсновныхСредств);
	Запрос.УстановитьПараметр("ОсвоениеПриродныхРесурсов", Перечисления.ВидыРасходовНУ.ОсвоениеПриродныхРесурсов);
	Запрос.УстановитьПараметр("НаНИОКР",                   Перечисления.ВидыРасходовНУ.НИОКР);
	Запрос.УстановитьПараметр("НалогиИСборы",              Перечисления.ВидыРасходовНУ.НалогиИСборы);
	Запрос.УстановитьПараметр("ОплатаТруда",               Перечисления.ВидыРасходовНУ.ОплатаТруда);
	Запрос.УстановитьПараметр("НеПринимаемыеИТранспортные",НеПринимаемыеИТранспортные);
	Запрос.УстановитьПараметр("Нормируемые",   Нормируемые);
	Запрос.УстановитьПараметр("ДатаНач",       НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",       КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("СчетаЗатрат",   СчетаЗатрат);
	Запрос.УстановитьПараметр("ВидСубконто",   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("Счет90",        ПланыСчетов.Налоговый.Продажи);
	Запрос.УстановитьПараметр("Счет91",        ПланыСчетов.Налоговый.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Счет91_2_9",    ПланыСчетов.Налоговый.ПрочиеКосвенныеРасходы);
	Запрос.УстановитьПараметр("Счет97_2",      ПланыСчетов.Налоговый.ОтрицательныйРезультатОтРеализацииАмортизируемогоИмущества);
	Запрос.УстановитьПараметр("ВидУчета",      Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.Период      КАК ДатаОперации,
	|	НалоговыйОборотыДтКт.Регистратор КАК Расшифровка,
	|	ВЫБОР 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &МатериальныеРасходы ТОГДА 
	|			""Материальные расходы"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &Амортизация ТОГДА 
	|			""Амортизация"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &РемонтОсновныхСредств ТОГДА 
	|			""Расходы на ремонт основных средств"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &ОсвоениеПриродныхРесурсов ТОГДА 
	|			""Расходы на освоение природных ресурсов"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &НаНИОКР ТОГДА 
	|			""Расходы на научные исследования и (или) опытно-конструкторские разработки"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &ОбязательноеИДобровольноеСтрахованиеИмущества ТОГДА 
	|			""Расходы на обязательное и добровольное страхование имущества"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &НалогиИСборы ТОГДА 
	|			""Налоги и сборы"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &ОплатаТруда ТОГДА 
	|			""Расходы на оплату труда"" 
	|		КОГДА НалоговыйОборотыДтКт.СубконтоДт1.ВидРасходовНУ = &АрендаФедеральногоИМуниципальногоИмущества ТОГДА 
	|			""Расходы  по  аренде федерального имущества"" 
	|		ИНАЧЕ 
	|			""Прочие"" 
	|	КОНЕЦ КАК ВидЗатрат,
	|	НалоговыйОборотыДтКт.СуммаОборот КАК Сумма,
	|	Налоговый.Содержание,
	|	Налоговый.НомерСтроки КАК НомерПроводки
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач,
	|&ДатаКон,
	|Запись,
	|СчетДт В ИЕРАРХИИ (&СчетаЗатрат),
	|&ВидСубконто,
	|,
	|, 
	|Организация = &Организация И ВидУчетаДт = &ВидУчета И НЕ(СубконтоДт1.ВидРасходовНУ В ИЕРАРХИИ (&НеПринимаемыеИТранспортные)) И НЕ(СубконтоДт1.ВидРасходовНУ В ИЕРАРХИИ (&Нормируемые))) КАК НалоговыйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый КАК Налоговый
	|		ПО НалоговыйОборотыДтКт.Регистратор = Налоговый.Регистратор И НалоговыйОборотыДтКт.НомерСтроки = Налоговый.НомерСтроки
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.Период,
	|	НалоговыйОборотыДтКт.Регистратор,
	|	""Прочие"", 
	|	НалоговыйОборотыДтКт.СуммаОборот КАК Сумма,
	|	Налоговый.Содержание,
	|	Налоговый.НомерСтроки
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&Счет90), , СчетКт В ИЕРАРХИИ (&СчетаЗатрат), &ВидСубконто, Организация = &Организация И ВидУчетаДт = &ВидУчета И СубконтоКт1.ВидРасходовНУ В ИЕРАРХИИ (&Нормируемые)) КАК НалоговыйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый КАК Налоговый
	|		ПО НалоговыйОборотыДтКт.Регистратор = Налоговый.Регистратор И НалоговыйОборотыДтКт.НомерСтроки = Налоговый.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.Период,
	|	НалоговыйОборотыДтКт.Регистратор,
	|	""Убыток от реализации амортизируемого имущества"", 
	|	НалоговыйОборотыДтКт.СуммаОборот КАК Сумма,
	|	Налоговый.Содержание,
	|	Налоговый.НомерСтроки
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт В ИЕРАРХИИ (&Счет91), , СчетКт В ИЕРАРХИИ (&Счет97_2), , Организация = &Организация И ВидУчетаДт = &ВидУчета) КАК НалоговыйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый КАК Налоговый
	|		ПО НалоговыйОборотыДтКт.Регистратор = Налоговый.Регистратор И НалоговыйОборотыДтКт.НомерСтроки = Налоговый.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.Период,
	|	НалоговыйОборотыДтКт.Регистратор,
	|	""Налоги и сборы"", 
	|	НалоговыйОборотыДтКт.СуммаОборот КАК Сумма,
	|	Налоговый.Содержание,
	|	Налоговый.НомерСтроки
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, СчетДт = &Счет91_2_9, , , , Организация = &Организация И ВидУчетаДт = &ВидУчета) КАК НалоговыйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый КАК Налоговый
	|		ПО НалоговыйОборотыДтКт.Регистратор = Налоговый.Регистратор И НалоговыйОборотыДтКт.НомерСтроки = Налоговый.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОперации,
	|	НомерПроводки";
	Результат = Запрос.Выполнить();

	ТаблицаОтладки = Новый ТаблицаЗначений;
	ТаблицаОтладки = Результат.Выгрузить();

	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока        = Макет.ПолучитьОбласть("Строка");

	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);

	Выборка = Результат.Выбрать();

	СписокВидов = Новый СписокЗначений();
	Для каждого ЭлементСписка из ВидыРасходов Цикл

		Если ЭлементСписка.Пометка Тогда
			СписокВидов.Добавить(ЭлементСписка.Значение);
		КонецЕсли;

	КонецЦикла;

	ИтогоСумма = 0;

	Пока Выборка.Следующий() Цикл

		Если СписокВидов.НайтиПоЗначению(Выборка.ВидЗатрат) = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОбластьСтрока.Параметры.ДатаОперации  = Выборка.ДатаОперации;
		ОбластьСтрока.Параметры.СтатьяРасхода = Выборка.ВидЗатрат;
		ОбластьСтрока.Параметры.ОбъектУчета   = Выборка.Содержание;
		ОбластьСтрока.Параметры.Сумма         = Выборка.Сумма;
		ОбластьСтрока.Параметры.Расшифровка   = Выборка.Расшифровка;

		ИтогоСумма = ИтогоСумма + Выборка.Сумма;

		ДокументРезультат.Вывести(ОбластьСтрока);

	КонецЦикла;

	СтруктураЛиц = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, ДатаКон);

	ОбластьПодвал.Параметры.ОтветственныйЗаРегистры = СтруктураЛиц.ОтветственныйЗаРегистры;
	ОбластьПодвал.Параметры.ИтогоСумма              = ИтогоСумма;

	ДокументРезультат.Вывести(ОбластьПодвал);

КонецПроцедуры // СформироватьОтчет

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли