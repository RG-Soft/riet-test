
Процедура УтвердитьОбъект(Отказ, Заголовок)
			
	// Обновим количество утвердивших
	ЗаписьОСтатусе = РегистрыСведений.СтатусыУтвержденияКорректировок.СоздатьМенеджерЗаписи();
	ЗаписьОСтатусе.КредитНота = ОбъектЗадачи;
	ЗаписьОСтатусе.Прочитать();
	ЗаписьОСтатусе.КоличествоУтвердивших = ЗаписьОСтатусе.КоличествоУтвердивших + 1;
	
	// Изменим статус утверждения объекта		
	Если ЗаписьОСтатусе.КоличествоУтверждающих = ЗаписьОСтатусе.КоличествоУтвердивших Тогда
		ТекСтатус = Перечисления.СтатусыУтвержденияОбъектов.Утверждена;
		
		//Добавила Федотова Л., РГ-Софт, 12.12.13, вопрос SLI-0004035 
		//Если количество утверрждающих больше 2, то в задачах других ответственных отметим, что они утверждены.
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УниверсальнаяЗадача.Ссылка
		|ИЗ
		|	Задача.УниверсальнаяЗадача КАК УниверсальнаяЗадача
		|ГДЕ
		|	УниверсальнаяЗадача.ОбъектЗадачи = &ОбъектЗадачи
		|	И УниверсальнаяЗадача.Исполнитель <> &ТекИсполнитель";
		
		Запрос.УстановитьПараметр("ОбъектЗадачи", ОбъектЗадачи);
		Запрос.УстановитьПараметр("ТекИсполнитель", Исполнитель);
		
		Результат = Запрос.Выполнить();
		                                                        
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ЗадачаОбъект.СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Утверждена;
			ЗадачаОбъект.Записать();
		КонецЦикла;

	Иначе       //Иначе - утверждают несколько человек и кредит-нота утверждена еще не всеми
		ТекСтатус = Перечисления.СтатусыУтвержденияОбъектов.ВПроцессеУтверждения;
	КонецЕсли;
	ЗаписьОСтатусе.Статус = ТекСтатус;
	ЗаписьОСтатусе.Записать();  // записываем все изменение, произведенные в регистре СтатусИсторияКН
  		
	ЗаписьИсторииКН = РегистрыСведений.ИсторияУтвержденияКорректировок.СоздатьМенеджерЗаписи();
	ЗаписьИсторииКН.КредитНота = ОбъектЗадачи;
	ЗаписьИсторииКН.Статус = ТекСтатус;
	ЗаписьИсторииКН.Исполнитель = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьИсторииКН.Период = ТекущаяДата();
	ЗаписьИсторииКН.Записать();
	
	// Попробуем провести утвержденный документ
	Если ЗаписьОСтатусе.Статус = Перечисления.СтатусыУтвержденияОбъектов.Утверждена Тогда
		
		Попытка	
			ПолныеПрава.ПровестиДокумент(ОбъектЗадачи, Истина);	
		Исключение	
			ОбщегоНазначения.СообщитьОбОшибке("Документ """ + ОбъектЗадачи + """ не был проведен автоматически: " + ОписаниеОшибки() + ". Проведение документа необходимо выполнить вручную!");				
		КонецПопытки;
		
	КонецЕсли; 	
		
КонецПроцедуры

Процедура ОтклонитьОбъект(Отказ, Заголовок)
			
	// Меняем статусы остальных задач на "Отклонена другим пользователем"
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектЗадачи", ОбъектЗадачи);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УниверсальнаяЗадача.Ссылка
		|ИЗ
		|	Задача.УниверсальнаяЗадача КАК УниверсальнаяЗадача
		|ГДЕ
		|	УниверсальнаяЗадача.ОбъектЗадачи = &ОбъектЗадачи
		|	И (УниверсальнаяЗадача.СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияЗадач.НоваяЗадача)
		|	ИЛИ УниверсальнаяЗадача.СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.СтатусыУтвержденияЗадач.ПустаяСсылка))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтатусОтклоненаДругимПользователем = Перечисления.СтатусыУтвержденияЗадач.ОтклоненаДругимПользователем;
	Пока Выборка.Следующий() Цикл
		
		ЗадачаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЗадачаОбъект.Выполнена = Истина;
		ЗадачаОбъект.СтатусУтверждения = СтатусОтклоненаДругимПользователем;
		ЗадачаОбъект.Записать();
		
	КонецЦикла;
	
	// Изменяем статус утверждения в регистре на Отклонена
	ЗаписьОСтатусе = РегистрыСведений.СтатусыУтвержденияКорректировок.СоздатьМенеджерЗаписи();
	ЗаписьОСтатусе.КредитНота = ОбъектЗадачи;
	ЗаписьОСтатусе.Прочитать();
	ЗаписьОСтатусе.Статус = Перечисления.СтатусыУтвержденияОбъектов.Отклонена;
	ЗаписьОСтатусе.Записать();	
	
	// РАЗОБРАТЬСЯ ЗАЧЕМ ЭТО НУЖНО!!!
	ЗаписьИсторииКН = РегистрыСведений.ИсторияУтвержденияКорректировок.СоздатьМенеджерЗаписи();
	ЗаписьИсторииКН.КредитНота = ОбъектЗадачи;
	ЗаписьИсторииКН.Статус = Перечисления.СтатусыУтвержденияОбъектов.Отклонена;
	ЗаписьИсторииКН.Исполнитель = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьИсторииКН.Период = ТекущаяДата();
	ЗаписьИсторииКН.Записать();	
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЗАДАЧИ

Процедура ПриВыполнении(Отказ)
	
	Заголовок = "Выполнение задачи """ + Ссылка + """...";
	
	ПеречислениеВидыЗадач = Перечисления.ВидыЗадач;
	Если ВидЗадачи = ПеречислениеВидыЗадач.НаУтверждение Тогда
		
		ПеречислениеСтатусыУтвержденияЗадач = Перечисления.СтатусыУтвержденияЗадач;
		Если СтатусУтверждения = ПеречислениеСтатусыУтвержденияЗадач.Утверждена Тогда
			УтвердитьОбъект(Отказ, Заголовок);
		ИначеЕсли СтатусУтверждения = ПеречислениеСтатусыУтвержденияЗадач.Отклонена Тогда
			ОтклонитьОбъект(Отказ, Заголовок);
		ИначеЕсли СтатусУтверждения = ПеречислениеСтатусыУтвержденияЗадач.НоваяЗадача Тогда
			//изменила Федотова Л., РГ-Софт, 25.01.13, вопрос SLI-0002895
			//ТекстОшибки = "Неверный статус задачи (" + СтатусУтверждения + ").";
			//ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
			СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Утверждена;
			ВыполнитьЗадачу();	
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередВыполнением(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ПропуститьПередВыполнением") Тогда
		Возврат;
	КонецЕсли;
		
	Если ВидЗадачи = ПредопределенноеЗначение("Перечисление.ВидыЗадач.FillTaxRegistration") Тогда 
		
		Если ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЗадачи, "TaxRegistration")) Тогда
			
			//отметим все задачи пользователей по данному AU как выполненные
			ТаблицаЗадачПоAU = Задачи.УниверсальнаяЗадача.ПолучитьТаблицуЗадачПоОбъектуЗадачи(ОбъектЗадачи);
			
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			
			Для Каждого СтрокаЗадачи из ТаблицаЗадачПоAU Цикл
				
				//пропусти текущую задачу
				Если СтрокаЗадачи.Задача = Ссылка Тогда 
					Продолжить;
				КонецЕсли;
				
				ЗадачаОбъект = СтрокаЗадачи.Задача.ПолучитьОбъект();
				ЗадачаОбъект.ДополнительныеСвойства.Вставить("ПропуститьПередВыполнением");
				ЗадачаОбъект.ВыполнитьЗадачу();
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Tax registration is empty in Accounting unit!",
				,,,Отказ);
				
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(УниверсальнаяЗадача.Номер) КАК Номер
	|ИЗ
	|	Задача.УниверсальнаяЗадача КАК УниверсальнаяЗадача";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Номер = ВыборкаДетальныеЗаписи.Номер + 1;
	КонецЦикла;
	
КонецПроцедуры
