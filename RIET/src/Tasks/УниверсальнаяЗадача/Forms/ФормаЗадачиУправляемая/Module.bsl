
////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 		
	ЗаполнитьИнформационныеНадписи();
	
	УстановитьВидимость();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если Объект.ВидЗадачи = ПредопределенноеЗначение("Перечисление.ВидыЗадач.НаОзнакомление") Тогда
		ВыполнитьЗадачуНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачуНаСервере()
	
	ТекЗадача = РеквизитФормыВЗначение("Объект");
	ТекЗадача.ВыполнитьЗадачу();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////
// КОМАНДЫ
////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Утвердить(Команда)
	
	УтвердитьНаСервере();
	ЭтаФорма.Прочитать();
     		
КонецПроцедуры

&НаСервере
Процедура УтвердитьНаСервере() 
	
	Объект.СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Утверждена;
	Записать(Новый Структура);
	
	ТекЗадача = РеквизитФормыВЗначение("Объект");
	ТекЗадача.ВыполнитьЗадачу();
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	
	ОтклонитьНаСервере();
	ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьНаСервере()
	
	Объект.СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Отклонена;
	Записать(Новый Структура);
	
	ТекЗадача = РеквизитФормыВЗначение("Объект");
	ТекЗадача.ВыполнитьЗадачу();
	
	УстановитьВидимость();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////////////////

&НаСервере
Процедура ЗаполнитьИнформационныеНадписи()
	
	//Добавила Федотова Л., РГ-Софт, 22.05.13, вопрос SLI-0003589
	Если Объект.ОбъектЗадачи = Неопределено Тогда
		Возврат;    
	КонецЕсли; 
	
	ЗаполнитьИнформационныеНадписиКорректировки();
	
	УстановитьКорректируемыйДокумент();
	ЗаполнитьИнформационныеНадписиКорректируемогоДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформационныеНадписиКорректировки()
	
	// Заполним информационные надписи, характерные для большинства документов
	
	МетаданныеОбъектаЗадачи = Объект.ОбъектЗадачи.Метаданные();
	ОбъектЗадачи = Объект.ОбъектЗадачи.ПолучитьОбъект();
	
	// Вид операции
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидОперации", МетаданныеОбъектаЗадачи) Тогда
		ВидОперацииКорректировки = ОбъектЗадачи.ВидОперации;
	Иначе
		Элементы.ВидОперацииКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Организация
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеОбъектаЗадачи) Тогда
		ОрганизацияКорректировки = ОбъектЗадачи.Организация;
	Иначе
		Элементы.ОрганизацияКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Контрагент
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент", МетаданныеОбъектаЗадачи) Тогда
		КонтрагентКорректировки = ОбъектЗадачи.Контрагент;
	Иначе
		Элементы.КонтрагентКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Договор
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоговорКонтрагента", МетаданныеОбъектаЗадачи) Тогда
		ДоговорКорректировки = ОбъектЗадачи.ДоговорКонтрагента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Договор", МетаданныеОбъектаЗадачи) Тогда
		ДоговорКорректировки = ОбъектЗадачи.Договор;
	Иначе
		Элементы.ДоговорКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Дата проведения
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаПроведения", МетаданныеОбъектаЗадачи) Тогда
		ДатаПроведенияКорректировки = ОбъектЗадачи.ДатаПроведения;
	Иначе
		Элементы.ДатаПроведенияКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Налоговый период
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("НалоговыйПериод", МетаданныеОбъектаЗадачи) Тогда
		НалоговыйПериодКорректировки = ОбъектЗадачи.НалоговыйПериод;
	Иначе
		Элементы.НалоговыйПериодКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Сумма
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаДокумента", МетаданныеОбъектаЗадачи) Тогда
		СуммаКорректировки = ОбъектЗадачи.СуммаДокумента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Сумма", МетаданныеОбъектаЗадачи) Тогда
		СуммаКорректировки = ОбъектЗадачи.Сумма;
	Иначе
		Элементы.СуммаКорректировки.Видимость = Ложь;
	КонецЕсли;
	
	// Валюта
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеОбъектаЗадачи) Тогда
		ВалютаКорректировки = ОбъектЗадачи.ВалютаДокумента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Валюта", МетаданныеОбъектаЗадачи) Тогда
		ВалютаКорректировки = ОбъектЗадачи.Валюта;
	Иначе
		Элементы.ВалютаКорректировки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКорректируемыйДокумент()
	
	КорректируемыйДокумент = Неопределено;
	
	Если ТипЗнч(Объект.ОбъектЗадачи) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		КорректируемыйДокумент = Объект.ОбъектЗадачи.Сделка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформационныеНадписиКорректируемогоДокумента()
	
	Если Не ЗначениеЗаполнено(КорректируемыйДокумент) Тогда
		
		Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаКорректируемыйДокумент.Видимость = Ложь;
		Возврат;
		
	КонецЕсли;
	          	
	// Заполним информационные надписи, характерные для большинства документов
	МетаданныеКорректируемогоДокумента = КорректируемыйДокумент.Метаданные();
	КорректируемыйДокументОбъект = КорректируемыйДокумент.ПолучитьОбъект();
	
	// Вид операции
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидОперации", МетаданныеКорректируемогоДокумента) Тогда
		ВидОперацииКорректируемогоДокумента = КорректируемыйДокументОбъект.ВидОперации;
	Иначе
		Элементы.ВидОперацииКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Организация
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеКорректируемогоДокумента) Тогда
		ОрганизацияКорректируемогоДокумента = КорректируемыйДокументОбъект.Организация;
	Иначе
		Элементы.ОрганизацияКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Контрагент
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент", МетаданныеКорректируемогоДокумента) Тогда
		КонтрагентКорректируемогоДокумента = КорректируемыйДокументОбъект.Контрагент;
	Иначе
		Элементы.КонтрагентКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Договор
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоговорКонтрагента", МетаданныеКорректируемогоДокумента) Тогда
		ДоговорКорректируемогоДокумента = КорректируемыйДокументОбъект.ДоговорКонтрагента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Договор", МетаданныеКорректируемогоДокумента) Тогда
		ДоговорКорректируемогоДокумента = КорректируемыйДокументОбъект.Договор;
	Иначе
		Элементы.ДоговорКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Дата проведения
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаПроведения", МетаданныеКорректируемогоДокумента) Тогда
		ДатаПроведенияКорректируемогоДокумента = КорректируемыйДокументОбъект.ДатаПроведения;
	Иначе
		Элементы.ДатаПроведенияКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Налоговый период
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("НалоговыйПериод", МетаданныеКорректируемогоДокумента) Тогда
		НалоговыйПериодКорректируемогоДокумента = КорректируемыйДокументОбъект.НалоговыйПериод;
	Иначе
		Элементы.НалоговыйПериодКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Сумма
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаДокумента", МетаданныеКорректируемогоДокумента) Тогда
		СуммаКорректируемогоДокумента = КорректируемыйДокументОбъект.СуммаДокумента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Сумма", МетаданныеКорректируемогоДокумента) Тогда
		СуммаКорректируемогоДокумента = КорректируемыйДокументОбъект.Сумма;
	Иначе
		Элементы.СуммаКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	// Валюта
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеКорректируемогоДокумента) Тогда
		ВалютаКорректируемогоДокумента = КорректируемыйДокументОбъект.ВалютаДокумента;
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Валюта", МетаданныеКорректируемогоДокумента) Тогда
		ВалютаКорректируемогоДокумента = КорректируемыйДокументОбъект.Валюта;
	Иначе
		Элементы.ВалютаКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
	
	// Заполним информационные надписи, характерные для конкретного вида документа
	
	Если ТипЗнч(КорректируемыйДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
		
		// Номер счета-фактуры
		СчетФактураКорректируемогоДокумента = ОбщегоНазначения.НайтиПодчиненныйДокумент(КорректируемыйДокумент, "СчетФактураВыданный");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СчетФактураКорректируемогоДокумента) Тогда
		Элементы.СчетФактураКорректируемогоДокумента.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры
        
&НаСервере
Процедура УстановитьВидимость()
	
	//установим видимость элементов по виду задачи
	
	Если Объект.ВидЗадачи = Перечисления.ВидыЗадач.FillTaxRegistration Тогда 
		
		Для Каждого Элемент из ЭтаФорма.ПодчиненныеЭлементы Цикл 
			Элемент.Видимость = Ложь;		
		КонецЦикла;
		
		Элементы.AccountingUnit.Видимость = Истина;
		Элементы.Наименование.Видимость = Истина;
		
	иначе
		
		Элементы.AccountingUnit.Видимость = Ложь;
		
	КонецЕсли;

	//установим видимость элементов по статусу утверждения
	
	ОбновитьСтатусУтверждения();
	
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаОтклонить.Доступность = Объект.ВидЗадачи = Перечисления.ВидыЗадач.НаУтверждение
		ИЛИ Объект.СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Утверждена;
		
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаУтвердить.Доступность = Объект.ВидЗадачи = Перечисления.ВидыЗадач.НаУтверждение
		ИЛИ Объект.СтатусУтверждения = Перечисления.СтатусыУтвержденияЗадач.Отклонена;
	 		
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусУтверждения()
	
	СтруктураПоиска = Новый Структура("КредитНота", Объект.ОбъектЗадачи);
	ЗаписьВРегистре = РегистрыСведений.СтатусыУтвержденияКорректировок.Получить(СтруктураПоиска);
	СтатусУтвержденияОбъекта = ЗаписьВРегистре.Статус;
	
КонецПроцедуры

