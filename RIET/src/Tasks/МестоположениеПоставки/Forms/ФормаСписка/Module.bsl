
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//Список,
	//"Operator",
	//ПараметрыСеанса.ТекущийПользователь,
	//ВидСравненияКомпоновкиДанных.Равно,
	//,
	//Истина,
	//РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	// { RGS AArsentev 04.06.2018 S-I-0005299
	Список.Параметры.УстановитьЗначениеПараметра("ТекДата",  ТекущаяДата());
	// } RGS AArsentev 04.06.2018 S-I-0005299
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МестоположениеПоставки.Ссылка КАК Ссылка,
	|	МестоположениеПоставки.Дата КАК Дата,
	|	МестоположениеПоставки.Trip,
	|	МестоположениеПоставки.ВремяМестоположения,
	|	МестоположениеПоставки.НачалоПериодаНотификации,
	|	МестоположениеПоставки.КонецПериодаНотификации
	|ИЗ
	|	Задача.МестоположениеПоставки КАК МестоположениеПоставки
	|ГДЕ
	|	МестоположениеПоставки.Ссылка В(&СсылкиНаЗадачи)
	|
	|СГРУППИРОВАТЬ ПО
	|	МестоположениеПоставки.Ссылка,
	|	МестоположениеПоставки.Дата";
	Запрос.УстановитьПараметр("СсылкиНаЗадачи", Строки.ПолучитьКлючи());
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЕстьSourceДаты = ПроверитьДаты(Выборка.Trip);
		
		Если НЕ ЕстьSourceДаты Тогда
			ЦветСтроки = WebЦвета.Серый;
		ИначеЕсли Выборка.ВремяМестоположения >= Выборка.НачалоПериодаНотификации И Выборка.ВремяМестоположения <= Выборка.КонецПериодаНотификации Тогда
			ЦветСтроки = WebЦвета.Зеленый;
		ИначеЕсли (ТекущаяДата() - Выборка.НачалоПериодаНотификации) < 0 Тогда
			ЦветСтроки = WebЦвета.Зеленый;
		Иначе
			ЦветСтроки = ПолучитьТаблицуЦветов(Выборка.НачалоПериодаНотификации);
		КонецЕсли;
		
		СтрокаСписка = Строки[Выборка.Ссылка];
		
		// { RGS ASeryakov 20.01.2018 18:00:00 - S-I-0005126
		//СтрокаСписка.Оформление["Дата"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["PlannedDepartureSource"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["MOT"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Номер"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Operator"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Ссылка.Critical"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["SourceLocation"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Trip"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//// { RGS ASeryakov 20.01.2018 18:00:00 - S-I-0005126
		//СтрокаСписка.Оформление["Trip.TRList"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//// } RGS ASeryakov 20.01.2018 18:00:00 - S-I-0005126
		//СтрокаСписка.Оформление["Urgency"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Координатор"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Местоположение"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["Описание"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["HazardClass"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["DestinationLocation"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		//СтрокаСписка.Оформление["TypeOfTransport"].УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		Для каждого ТекущееОформление Из СтрокаСписка.Оформление Цикл
		
			ТекущееОформление.Значение.УстановитьЗначениеПараметра("ЦветФона", ЦветСтроки);
		
		КонецЦикла; 
		// } RGS ASeryakov 20.01.2018 18:00:00 - S-I-0005126
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицуЦветов(НачалоПериодаНотификации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВложенныйЗапрос.От КАК От,
	|	ВложенныйЗапрос.До КАК До,
	|	ВложенныйЗапрос.Color КАК Color,
	|	ВложенныйЗапрос.Red КАК Red,
	|	ВложенныйЗапрос.Green КАК Green,
	|	ВложенныйЗапрос.Blue КАК Blue
	|ИЗ
	|	(ВЫБРАТЬ
	|		SettingsOf_FSTrackingLinesColor.От КАК От,
	|		ВЫБОР
	|			КОГДА SettingsOf_FSTrackingLinesColor.До = 0
	|				ТОГДА 9999
	|			ИНАЧЕ SettingsOf_FSTrackingLinesColor.До
	|		КОНЕЦ КАК До,
	|		SettingsOf_FSTrackingLinesColor.Color КАК Color,
	|		SettingsOf_FSTrackingLinesColor.Red КАК Red,
	|		SettingsOf_FSTrackingLinesColor.Green КАК Green,
	|		SettingsOf_FSTrackingLinesColor.Blue КАК Blue
	|	ИЗ
	|		РегистрСведений.SettingsOf_FSTrackingLinesColor КАК SettingsOf_FSTrackingLinesColor) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.От <= &Часы
	|	И ВложенныйЗапрос.До >= &Часы";
	Запрос.УстановитьПараметр("Часы", (ТекущаяДата() - НачалоПериодаНотификации) /3600 );
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат WebЦвета.Белый
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Новый Цвет(Выборка.Red, Выборка.Green, Выборка.Blue);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьДаты(Трип)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	TripNonLawsonCompaniesStops.ActualArrivalLocalTime,
	|	TripNonLawsonCompaniesStops.ActualDepartureLocalTime
	|ИЗ
	|	Документ.TripNonLawsonCompanies.Stops КАК TripNonLawsonCompaniesStops
	|ГДЕ
	|	TripNonLawsonCompaniesStops.Ссылка = &Трип
	|	И TripNonLawsonCompaniesStops.Type = ЗНАЧЕНИЕ(Перечисление.StopsTypes.Source)";
	Запрос.УстановитьПараметр("Трип",Трип);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		Возврат Ложь
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Если ЗначениеЗаполнено(Выборка.ActualArrivalLocalTime) Тогда
			Возврат Истина
		Иначе
			Возврат Ложь
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Файлы(Команда)
	
	//ПрисоединенныеФайлыКОбъекту
	
КонецПроцедуры
