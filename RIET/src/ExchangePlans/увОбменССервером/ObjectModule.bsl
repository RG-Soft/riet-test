///////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ВЫГРУЗКИ ДАННЫХ

Процедура ВыгрузитьДокументВопрос(Файл, Док)
	
	Файл.ЗаписатьНачалоЭлемента("DocumentObject.увВопрос");
		ЗаписатьXML(Файл, Док.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Дата, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Номер, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Спросил, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Ответил, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ТемаВопроса, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Важность, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ТребуемаяДатаОтвета, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПометкаУдаления, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Статус, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Сторона, НазначениеТипаXML.Явное);
		Если Док.История.Количество() > 0 Тогда
			Файл.ЗаписатьНачалоЭлемента("История");	
			Для Каждого СтрокаТЧ Из Док.История Цикл
				Файл.ЗаписатьНачалоЭлемента("Row");	
					ЗаписатьXML(Файл, СтрокаТЧ.Статус, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Дата, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Пользователь, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Текст, НазначениеТипаXML.Явное);
				Файл.ЗаписатьКонецЭлемента();
			КонецЦикла;
			Файл.ЗаписатьКонецЭлемента();
		КонецЕсли;
	Файл.ЗаписатьКонецЭлемента();
		
КонецПроцедуры

Процедура ВыгрузитьДокументЗаявка(Файл, Док)
	
	Файл.ЗаписатьНачалоЭлемента("DocumentObject.увЗаявкаНаВыполнениеРабот");
		ЗаписатьXML(Файл, Док.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Дата, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаЗавершенияРабот, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаПередачиНаРазработку, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаСдачиНаТестирование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаУтверждения, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ЕстьТЗ, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ЗаявкаЗакрыта, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Исполнитель, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.НачатоТестирование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Номер, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ОтветственныйЗаВнедрениеОтЗаказчика, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ОтветственныйЗаТестирование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ОценочнаяТрудоемкость, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ОценочнаяТрудоемкостьДо, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПереданоНаРазработку, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПлановаяДатаЗавершенияРабот, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПлановаяДатаСдачиНаТестирование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПотраченоВремени, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Проведен, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.РуководительПроекта, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.СтоимостьРабот, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ТемаЗаявки, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ТЗ, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ТребованияПоДоработке, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.УтвердилОтЗаказчика, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Утверждено, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ФизЛицо, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПометкаУдаления, НазначениеТипаXML.Явное);
		Если Док.Согласование.Количество() > 0 Тогда
			//ТЧ согласование
			Файл.ЗаписатьНачалоЭлемента("Согласование");	
			Для каждого СтрокаТЧ Из Док.Согласование Цикл
				Файл.ЗаписатьНачалоЭлемента("Row");	
					ЗаписатьXML(Файл, СтрокаТЧ.Пользователь, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Утверждено, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Роль, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Примечание, НазначениеТипаXML.Явное);
				Файл.ЗаписатьКонецЭлемента();
			КонецЦикла;
			Файл.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
	Файл.ЗаписатьКонецЭлемента();
		
КонецПроцедуры

Процедура ВыгрузитьДокументПротокол(Файл, Док)
	
	Файл.ЗаписатьНачалоЭлемента("DocumentObject.увПротоколТестирования");
		ЗаписатьXML(Файл, Док.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Дата, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаЗакрытияТестирования, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ДатаТестирования, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ЗаявкаНаВыполнениеРабот, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ЛУРВ, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Номер, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПотраченоВремени, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПредставительЗаказчика, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПредставительИсполнителя, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Проведен, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.СледующаяВстреча, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.Статус, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Док.ПометкаУдаления, НазначениеТипаXML.Явное);
		Если Док.Претензии.Количество() > 0 Тогда
			//ТЧ Претензии
			Файл.ЗаписатьНачалоЭлемента("Претензии");	
			Для каждого СтрокаТЧ Из Док.Претензии Цикл
				Файл.ЗаписатьНачалоЭлемента("Row");	
					ЗаписатьXML(Файл, СтрокаТЧ.Содержание, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Выполнено, НазначениеТипаXML.Явное);
				Файл.ЗаписатьКонецЭлемента();
			КонецЦикла;
			Файл.ЗаписатьКонецЭлемента();
		КонецЕсли;
	Файл.ЗаписатьКонецЭлемента();
		
КонецПроцедуры
                                                
Процедура ВыгрузитьТему(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.увТемыВопросовИЗаявок");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ЭтоГруппа, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Родитель, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ВидТемы, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьРоль(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.увРолиПриСогласовании");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьШаблон(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.увШаблоныСогласования");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Владелец, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
		Если Элем.Список.Количество() > 0 Тогда
			//ТЧ Список
			Файл.ЗаписатьНачалоЭлемента("Список");	
			Для каждого СтрокаТЧ Из Элем.Список Цикл
				Файл.ЗаписатьНачалоЭлемента("Row");	
					ЗаписатьXML(Файл, СтрокаТЧ.Роль, НазначениеТипаXML.Явное);
					ЗаписатьXML(Файл, СтрокаТЧ.Пользователь, НазначениеТипаXML.Явное);
				Файл.ЗаписатьКонецЭлемента();
			КонецЦикла;
			Файл.ЗаписатьКонецЭлемента();
		КонецЕсли;
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьПользователя(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.Пользователи");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьПодразделение(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.увСтруктурныеПодразделения");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьЕдиницуОценкиРабот(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("КонстантаМенеджерЗначения.увЕдиницаОценкиРабот");
		ЗаписатьXML(Файл, Элем.Значение, НазначениеТипаXML.Явное);
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьГруппыПользователей(Файл, Элем)
	
	Файл.ЗаписатьНачалоЭлемента("CatalogObject.ГруппыПользователей");
		ЗаписатьXML(Файл, Элем.Ссылка.УникальныйИдентификатор(), "Ref", НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Код, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.Наименование, НазначениеТипаXML.Явное);
		ЗаписатьXML(Файл, Элем.ПометкаУдаления, НазначениеТипаXML.Явное);
		Если Элем.ПользователиГруппы.Количество() > 0 Тогда
			//ТЧ ПользователиГруппы
			Файл.ЗаписатьНачалоЭлемента("ПользователиГруппы");	
			Для каждого СтрокаТЧ Из Элем.ПользователиГруппы Цикл
				Файл.ЗаписатьНачалоЭлемента("Row");	
					ЗаписатьXML(Файл, СтрокаТЧ.Пользователь, НазначениеТипаXML.Явное);
				Файл.ЗаписатьКонецЭлемента();
			КонецЦикла;
			Файл.ЗаписатьКонецЭлемента();
		КонецЕсли;
	Файл.ЗаписатьКонецЭлемента();

КонецПроцедуры

Процедура ВыгрузитьДанные(Путь) Экспорт
	
	ЗаписьXML = Новый ЗаписьXML();
	Попытка
		ЗаписьXML.ОткрытьФайл(Путь);
	Исключение
		Сообщить("Не удалось открыть файл " + Путь);
		Возврат;
	КонецПопытки;
	Узел = ПланыОбмена.увОбменССервером.НайтиПоКоду("SRV");
	Если Узел.Пустая() Тогда
		увМониторСопровождения.увВыполнитьОбновлениеМонитораСопровождения();
	КонецЕсли;
	
	ВыгрузитьИзмененияДанныхДляУзла(Узел, 0, ЗаписьXML);

КонецПроцедуры

//Функция выгрузки данных для автоматического обмена через типовой функционал 1С //
//	ПАРАМЕТРЫ ФУНКЦИИ
//		УзелОбмена - узел получатель, для которого формируется пакет изменений
//		ЗаписьXML - объект для записи изменений
//
//	ВОЗВРАЩАЕМЫЕ ПАРАМЕТРЫ
//
//		РЕЗУЛЬТАТ - булево. признак того, что запись изменений прошла успешно
//
Функция ВыгрузитьИзмененияДанныхДляУзла(УзелОбмена, КоличествоЭлементовВТранзакцииНаВыгрузкуДанных, ЗаписьXML) Экспорт

	ЗаписьXML.ЗаписатьОбъявлениеXML();
	// Создаем новое сообщение
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, УзелОбмена);
	
	// считаем количество записанных объектов
	КоличествоЗаписанныхОбъектов = 0;
	КоличествоНайденныхДляЗаписиОбъектов = 0;
	
	// начинаем транзакцию
	НачатьТранзакцию();
	
	ЗаписатьXML(ЗаписьXML, Константы.увПрефиксБазы.Получить()); 
	Попытка
	
		// Получаем выборку изменённых данных
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(ЗаписьСообщения.Получатель, ЗаписьСообщения.НомерСообщения);
		Пока ВыборкаИзменений.Следующий() Цикл
					
			Данные = ВыборкаИзменений.Получить();
			// Записываем данные в сообщение
			Если ТипЗнч(Данные) = Тип("ДокументОбъект.увВопрос") Тогда
				ВыгрузитьДокументВопрос(ЗаписьXML, Данные);
			ИначеЕсли ТипЗнч(Данные) = Тип("ДокументОбъект.увЗаявкаНаВыполнениеРабот") Тогда
				ВыгрузитьДокументЗаявка(ЗаписьXML, Данные);
			ИначеЕсли ТипЗнч(Данные) = Тип("ДокументОбъект.увПротоколТестирования") Тогда
				ВыгрузитьДокументПротокол(ЗаписьXML, Данные);
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.увТемыВопросовИЗаявок") Тогда
				ВыгрузитьТему(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.Пользователи") Тогда
				ВыгрузитьПользователя(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.увСтруктурныеПодразделения") Тогда
				ВыгрузитьПодразделение(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.увРолиПриСогласовании") Тогда
				ВыгрузитьРоль(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.ГруппыПользователей") Тогда
				ВыгрузитьГруппыПользователей(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.увШаблоныСогласования") Тогда
				ВыгрузитьШаблон(ЗаписьXML, Данные);	
			ИначеЕсли ТипЗнч(Данные) = Тип("КонстантаМенеджерЗначения.увЕдиницаОценкиРабот") Тогда
				ВыгрузитьЕдиницуОценкиРабот(ЗаписьXML, Данные);	
			КонецЕсли;
			
			КоличествоНайденныхДляЗаписиОбъектов = КоличествоНайденныхДляЗаписиОбъектов + 1;
			
			Если КоличествоНайденныхДляЗаписиОбъектов % 100 = 0 Тогда
				#Если Клиент Тогда
					Состояние("Запись изменений для узла """ + УзелОбмена.Наименование + """. Записано объектов: " + Строка(КоличествоНайденныхДляЗаписиОбъектов));
				#КонецЕсли
			КонецЕсли;
			
			КоличествоЗаписанныхОбъектов = КоличествоЗаписанныхОбъектов + 1;
			
			Если (КоличествоЭлементовВТранзакцииНаВыгрузкуДанных > 0)
				И (КоличествоЗаписанныхОбъектов = КоличествоЭлементовВТранзакцииНаВыгрузкуДанных) Тогда
				
				// промежуточную транзакцию закрываем и открываем новую
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
				
				КоличествоЗаписанныхОбъектов = 0;
			КонецЕсли;

		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
		// Завершаем запись сообщения
		ЗаписьСообщения.ЗакончитьЗапись();
				
		ЗаписьXML.Закрыть();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		#Если Клиент Тогда
			увСообщитьОбОшибке("" + ОписаниеОшибки());
		#КонецЕсли
		
		ЗаписьXML.Закрыть();
		Возврат Ложь;
		
	КонецПопытки;
		
	Возврат Истина;
	
КонецФункции // ЗаписатьИзмененияДляУзла

///////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАГРУЗКИ ДАННЫХ

Процедура ЗагрузитьДокументВопрос(Файл, Док, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Документы.увВопрос.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Док = СсылкаНаОбъект.ПолучитьОбъект();
	Если Док = Неопределено Тогда
		Док = Документы.увВопрос.СоздатьДокумент();
		Док.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Док.Дата = ПрочитатьXML(Файл);
	Док.Номер = ПрочитатьXML(Файл);
	Док.Спросил = ПрочитатьXML(Файл);
	Док.Ответил = ПрочитатьXML(Файл);
	Док.ТемаВопроса = ПрочитатьXML(Файл);
	Док.Важность = ПрочитатьXML(Файл);
	Док.ТребуемаяДатаОтвета = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
	Док.Статус = ПрочитатьXML(Файл);
	Док.Сторона = ПрочитатьXML(Файл);
	
	Если Файл.Имя = "История" Тогда
		Док.История.Очистить();
		Файл.Прочитать(); //начало История
		Пока Файл.Имя = "Row" Цикл
			Файл.Прочитать(); //начало row
			СтрокаТЧ = Док.История.Добавить();
			СтрокаТЧ.Статус = ПрочитатьXML(Файл);
			СтрокаТЧ.Дата = ПрочитатьXML(Файл);
			СтрокаТЧ.Пользователь = ПрочитатьXML(Файл);
			СтрокаТЧ.Текст = ПрочитатьXML(Файл);
			Файл.Прочитать(); //конец row
		КонецЦикла;
		Файл.Прочитать(); //конец История
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗагрузитьДокументЗаявка(Файл, Док, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Документы.увЗаявкаНаВыполнениеРабот.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Док = СсылкаНаОбъект.ПолучитьОбъект();
	Если Док = Неопределено Тогда
		Док = Документы.увЗаявкаНаВыполнениеРабот.СоздатьДокумент();
		Док.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Док.Дата = ПрочитатьXML(Файл);
	Док.ДатаЗавершенияРабот = ПрочитатьXML(Файл);
	Док.ДатаПередачиНаРазработку = ПрочитатьXML(Файл);
	Док.ДатаСдачиНаТестирование = ПрочитатьXML(Файл);
	Док.ДатаУтверждения = ПрочитатьXML(Файл);
	Док.ЕстьТЗ = ПрочитатьXML(Файл);
	Док.ЗаявкаЗакрыта = ПрочитатьXML(Файл);
	Док.Исполнитель = ПрочитатьXML(Файл);
	Док.НачатоТестирование = ПрочитатьXML(Файл);
	Док.Номер = ПрочитатьXML(Файл);
	Док.ОтветственныйЗаВнедрениеОтЗаказчика = ПрочитатьXML(Файл);
	Док.ОтветственныйЗаТестирование = ПрочитатьXML(Файл);
	Док.ОценочнаяТрудоемкость = ПрочитатьXML(Файл);
	Док.ОценочнаяТрудоемкостьДо = ПрочитатьXML(Файл);
	Док.ПереданоНаРазработку = ПрочитатьXML(Файл);
	Док.ПлановаяДатаЗавершенияРабот = ПрочитатьXML(Файл);
	Док.ПлановаяДатаСдачиНаТестирование = ПрочитатьXML(Файл);
	Док.ПотраченоВремени = ПрочитатьXML(Файл);
	Док.Проведен = ПрочитатьXML(Файл);
	Док.РуководительПроекта = ПрочитатьXML(Файл);
	Док.СтоимостьРабот = ПрочитатьXML(Файл);
	Док.ТемаЗаявки = ПрочитатьXML(Файл);
	Док.ТЗ = ПрочитатьXML(Файл);
	Док.ТребованияПоДоработке = ПрочитатьXML(Файл);
	Док.УтвердилОтЗаказчика = ПрочитатьXML(Файл);
	Док.Утверждено = ПрочитатьXML(Файл);
	Док.ФизЛицо = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
	
	Если Файл.Имя = "Согласование" Тогда
		Файл.Прочитать(); //начало Согласования
		Пока Файл.Имя = "Row" Цикл
			Файл.Прочитать(); //начало row
			СтрокаТЧ = Док.Согласование.Добавить();
			СтрокаТЧ.Пользователь = ПрочитатьXML(Файл);
			СтрокаТЧ.Утверждено = ПрочитатьXML(Файл);
			СтрокаТЧ.Роль = ПрочитатьXML(Файл);
			СтрокаТЧ.Примечание = ПрочитатьXML(Файл);
			Файл.Прочитать(); //конец row
		КонецЦикла;
		Файл.Прочитать(); //конец Согласования
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьДокументПротокол(Файл, Док, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Документы.увПротоколТестирования.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Док = СсылкаНаОбъект.ПолучитьОбъект();
	Если Док = Неопределено Тогда
		Док = Документы.увПротоколТестирования.СоздатьДокумент();
		Док.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Док.Дата = ПрочитатьXML(Файл);
	Док.ДатаЗакрытияТестирования = ПрочитатьXML(Файл);
	Док.ДатаТестирования = ПрочитатьXML(Файл);
	Док.ЗаявкаНаВыполнениеРабот = ПрочитатьXML(Файл);
	Док.ЛУРВ = ПрочитатьXML(Файл);
	Док.Номер = ПрочитатьXML(Файл);
	Док.ПотраченоВремени = ПрочитатьXML(Файл);
	Док.ПредставительЗаказчика = ПрочитатьXML(Файл);
	Док.ПредставительИсполнителя = ПрочитатьXML(Файл);
	Док.Проведен = ПрочитатьXML(Файл);
	Док.СледующаяВстреча = ПрочитатьXML(Файл);
	Док.Статус = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
	
	Если Файл.Имя = "Претензии" Тогда
		Файл.Прочитать(); //начало Претензии
		Пока Файл.Имя = "Row" Цикл
			Файл.Прочитать(); //начало row
			СтрокаТЧ = Док.Претензии.Добавить();
			СтрокаТЧ.Содержание = ПрочитатьXML(Файл);
			СтрокаТЧ.Выполнено = ПрочитатьXML(Файл);
			Файл.Прочитать(); //конец row
		КонецЦикла;
		Файл.Прочитать(); //конец Претензии
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьТему(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.увТемыВопросовИЗаявок.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	ЭтоГруппа = ПрочитатьXML(Файл);
	Если Элем = Неопределено Тогда
		Если ЭтоГруппа Тогда
			Элем = Справочники.увТемыВопросовИЗаявок.СоздатьГруппу();
		Иначе
			Элем = Справочники.увТемыВопросовИЗаявок.СоздатьЭлемент();
		КонецЕсли;
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Родитель = ПрочитатьXML(Файл);
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	Если Элем.ЭтоГруппа Тогда
		ВидТемы = ПрочитатьXML(Файл);
	Иначе
		Элем.ВидТемы = ПрочитатьXML(Файл);
	КонецЕсли;
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
		
КонецПроцедуры

Процедура ЗагрузитьРоль(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.увРолиПриСогласовании.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	Если Элем = Неопределено Тогда
		Элем = Справочники.увРолиПриСогласовании.СоздатьЭлемент();
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
		
КонецПроцедуры

Процедура ЗагрузитьПользователя(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	Если Элем = Неопределено Тогда
		Элем = Справочники.Пользователи.СоздатьЭлемент();
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
		
КонецПроцедуры

Процедура ЗагрузитьШаблон(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.увШаблоныСогласования.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	Если Элем = Неопределено Тогда
		Элем = Справочники.увШаблоныСогласования.СоздатьЭлемент();
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Владелец = ПрочитатьXML(Файл);
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
	
	Если Файл.Имя = "Список" Тогда
		Файл.Прочитать(); //начало Список
		Пока Файл.Имя = "Row" Цикл
			Файл.Прочитать(); //начало row
			СтрокаТЧ = Элем.Список.Добавить();
			СтрокаТЧ.Роль = ПрочитатьXML(Файл);
			СтрокаТЧ.Пользователь = ПрочитатьXML(Файл);
			Файл.Прочитать(); //конец row
		КонецЦикла;
		Файл.Прочитать(); //конец Список
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьПодразделение(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.увСтруктурныеПодразделения.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	Если Элем = Неопределено Тогда
		Элем = Справочники.увСтруктурныеПодразделения.СоздатьЭлемент();
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
		
КонецПроцедуры

Процедура ЗагрузитьГруппыПользователей(Файл, Элем, ПометкаУдаленияОбъекта)
	
	Файл.Прочитать();
	ПолученнаяСсылка = ПрочитатьXML(Файл);
	СсылкаНаОбъект = Справочники.ГруппыПользователей.ПолучитьСсылку(Новый УникальныйИдентификатор(ПолученнаяСсылка));
	Элем = СсылкаНаОбъект.ПолучитьОбъект();
	Если Элем = Неопределено Тогда
		Элем = Справочники.ГруппыПользователей.СоздатьЭлемент();
		Элем.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	Элем.Код = ПрочитатьXML(Файл);
	Элем.Наименование = ПрочитатьXML(Файл);
	ПометкаУдаленияОбъекта = ПрочитатьXML(Файл);
	
	Если Файл.Имя = "ПользователиГруппы" Тогда
		Файл.Прочитать(); //начало ПользователиГруппы
		Пока Файл.Имя = "Row" Цикл
			Файл.Прочитать(); //начало row
			СтрокаТЧ = Элем.ПользователиГруппы.Добавить();
			СтрокаТЧ.Пользователь = ПрочитатьXML(Файл);
			Файл.Прочитать(); //конец row
		КонецЦикла;
		Файл.Прочитать(); //конец ПользователиГруппы
	КонецЕсли;
		
КонецПроцедуры

Процедура ПропуститьЕдиницуОценки(Файл, Данные)
	
	Данные = "Пропустить";
	Файл.Прочитать();
	Файл.Прочитать();
	Файл.Прочитать();
	Файл.Прочитать();
	Файл.Прочитать();
	
КонецПроцедуры

Процедура ЗагрузитьДанные(Узел, Путь) Экспорт
	
	ЧтениеXML = Новый ЧтениеXML();
	Попытка
		ЧтениеXML.ОткрытьФайл(Путь);
	Исключение
		Сообщить("Не удалось открыть файл " + Путь);
		Возврат;
	КонецПопытки;
	
	ЗагрузитьИзмененияДанныхДляУзла(Узел, , ЧтениеXML);

КонецПроцедуры

//Функция загрузки данных для автоматического обмена через типовой функционал 1С //
//	ПАРАМЕТРЫ ФУНКЦИИ
//		УзелОбмена - узел отправитель, от которого пришли изменения
//		ЧтениеXML - данные изменений
//
//	ВОЗВРАЩАЕМЫЕ ПАРАМЕТРЫ
//
//		РЕЗУЛЬТАТ - булево. признак того, что чтение изменений прошло успешно
//
Функция ЗагрузитьИзмененияДанныхДляУзла(УзелОбмена, КоличествоЭлементовВТранзакцииНаЗагрузкуДанных = 0, ЧтениеXML) Экспорт
	
	ЭтотУзелОбмена = ПланыОбмена[увПолучитьИмяПланаОбмена(УзелОбмена)].ЭтотУзел();
	// Загрузка из найденного файла
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
	
	Если ЧтениеСообщения.Отправитель <> УзелОбмена Тогда
		// Сообщение предназначено не для этого узла
		ВызватьИсключение "Неверный узел в файле обмена данными";			
	КонецЕсли;
    
	// Удаляем регистрацию изменений для узла отправителя сообщения
	ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);
	
	// считаем сколько объектов прочитали
	КоличествоПрочитанныхОбъектов = 0;
	КоличествоЗаписанныхОбъектов = 0;
	
	// начинаем транзакцию
	НачатьТранзакцию();
	
	ЭтотУзелОбменаОбъект = Неопределено; 
	
	Попытка
		
		// Читаем данные из сообщения
		Пока ЧтениеXML.Имя <> "v8msg:Body" Цикл
					
			// Читаем очередное значение
			Данные = Неопределено;
			ПометкаУдаленияОбъекта = Ложь;
			Если ЧтениеXML.Имя = "DocumentObject.увВопрос" Тогда
				ЗагрузитьДокументВопрос(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);
			ИначеЕсли ЧтениеXML.Имя = "DocumentObject.увЗаявкаНаВыполнениеРабот" Тогда
				ЗагрузитьДокументЗаявка(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);
			ИначеЕсли ЧтениеXML.Имя = "DocumentObject.увПротоколТестирования" Тогда
				ЗагрузитьДокументПротокол(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.увТемыВопросовИЗаявок" Тогда
				ЗагрузитьТему(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.увРолиПриСогласовании" Тогда
				ЗагрузитьРоль(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.увШаблоныСогласования" Тогда
				ЗагрузитьШаблон(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			ИначеЕсли ЧтениеXML.Имя = "КонстантаМенеджерЗначения.увЕдиницаОценкиРабот" Тогда
				ПропуститьЕдиницуОценки(ЧтениеXML, Данные);	
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.Пользователи" Тогда
				ЗагрузитьПользователя(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.увСтруктурныеПодразделения" Тогда
				ЗагрузитьПодразделение(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			ИначеЕсли ЧтениеXML.Имя = "CatalogObject.ГруппыПользователей" Тогда
				ЗагрузитьГруппыПользователей(ЧтениеXML, Данные, ПометкаУдаленияОбъекта);	
			Иначе
				Данные = ПрочитатьXML(ЧтениеXML);
			КонецЕсли;
			
			КоличествоПрочитанныхОбъектов = КоличествоПрочитанныхОбъектов + 1;
			
			Если КоличествоПрочитанныхОбъектов % 100 = 0 Тогда
				#Если Клиент Тогда
					Состояние("Чтение изменений от узла """ + УзелОбмена.Наименование + """. Считано объектов: " + Строка(КоличествоПрочитанныхОбъектов));
				#КонецЕсли
			КонецЕсли;
					
			Если ПланыОбмена.ИзменениеЗарегистрировано(ЧтениеСообщения.Отправитель, Данные) Тогда
						
				//Возник конфликт
				//И сами данные были изменены и в присланном файле содержится изменение этих данных
				//для монитора не принимаем изменения сервера
				Продолжить;
					
			КонецЕсли;
					
			// Записываем перенесенные данные
			Если Не ТипЗнч(Данные) = Тип("Строка") Тогда
				Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
				Данные.ОбменДанными.Загрузка = Истина;
				Данные.Записать();
				Если ПометкаУдаленияОбъекта Тогда
					Данные.УстановитьПометкуУдаления(Истина);
					Данные.Записать();
				КонецЕсли;
				ЧтениеXML.Прочитать();
			КонецЕсли;			
				
			КоличествоЗаписанныхОбъектов = КоличествоЗаписанныхОбъектов + 1;
				
			Если (КоличествоЭлементовВТранзакцииНаЗагрузкуДанных > 0)
				И (КоличествоЗаписанныхОбъектов = КоличествоЭлементовВТранзакцииНаЗагрузкуДанных) Тогда
					
				// промежуточную транзакцию закрываем и открываем новую
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
					
				КоличествоЗаписанныхОбъектов = 0;
			КонецЕсли;
									
		КонецЦикла;
		
		// фиксируем все изменения которые были записаны
		ЗафиксироватьТранзакцию();	
					
		ЧтениеСообщения.ЗакончитьЧтение();
		ЧтениеXML.Закрыть();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		#Если Клиент Тогда
			увСообщитьОбОшибке("" + ОписаниеОшибки());
		#КонецЕсли
		
		ЧтениеXML.Закрыть();
		Возврат Ложь;
		
	КонецПопытки;
		
	Возврат Истина;
		
КонецФункции // ПрочитатьИзмененияДляУзла

///////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

// функция возвращает имя плана обмена по узлу обмена 
Функция увПолучитьИмяПланаОбмена(УзелОбмена)
	
	Если Не ЗначениеЗаполнено(УзелОбмена) Тогда
		Возврат "";
	КонецЕсли;
	
	МетаданныеУзла = УзелОбмена.Метаданные();
	Возврат МетаданныеУзла.Имя;
    	
КонецФункции

Процедура увСообщитьОбОшибке(Знач ТекстСообщения, Отказ = Ложь, Заголовок = "", Знач Статус = Неопределено)

	Если Статус = Неопределено Тогда
		Статус = СтатусСообщения.Важное;
	КонецЕсли;
	
	ТекстСообщения = увСформироватьТекстСообщения(ТекстСообщения);
	Отказ = Истина;
	
	#Если ВнешнееСоединение Тогда
		
		Если ЗначениеЗаполнено(Заголовок) Тогда
			ТекстСообщения = Заголовок + Символы.ПС + ТекстСообщения;
			Заголовок = "";
		КонецЕсли;
		
		ВызватьИсключение (ТекстСообщения);
		
	#Иначе
		
		Если ЗначениеЗаполнено(Заголовок) Тогда
			Сообщить(Заголовок);
			Заголовок = "";
		КонецЕсли;
		
		Сообщить(ТекстСообщения, Статус);
		
	#КонецЕсли
	
КонецПроцедуры // ПроцедурыОбменаДанными.СообщитьОбОшибке()

 // Функция убирает из текста сообщения слущебную информацию // // Параметры //  ТекстСообщения, Строка, исходный текст сообщения// // Возвращаемое значение:
//   Строка
//
Функция увСформироватьТекстСообщения(Знач ТекстСообщения)

	НачалоСлужебногоСообщения    = Найти(ТекстСообщения, "{");
	ОкончаниеСлужебногоСообщения = Найти(ТекстСообщения, "}:");
	
	Если ОкончаниеСлужебногоСообщения > 0 
		И НачалоСлужебногоСообщения > 0 
		И НачалоСлужебногоСообщения < ОкончаниеСлужебногоСообщения Тогда
		
		ТекстСообщения = Лев(ТекстСообщения, (НачалоСлужебногоСообщения - 1)) +
		                 Сред(ТекстСообщения, (ОкончаниеСлужебногоСообщения + 2));
						 
	КонецЕсли;
	
	Возврат СокрЛП(ТекстСообщения);

КонецФункции // ()
