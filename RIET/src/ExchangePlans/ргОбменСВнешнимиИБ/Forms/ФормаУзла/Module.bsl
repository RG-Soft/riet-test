
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Активен = Истина;
		Объект.РегистрироватьИзменения = Истина;
		Объект.ТипНастройки = "Обмен через веб-сервис";
	КонецЕсли;
	
	УстановитьНадписиУЭлементовСПравиламиОбмена();
	ЗаполнитьСписокВыбораТипов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораТипов()
	
	СписокВыбораТипов = Новый СписокЗначений;
	Элементы.ПравилаРегистрацииТипОбъекта.СписокВыбора.Очистить();
	
	// требуются только объекты без авторегистрации	
	Для Каждого ЭлСостава Из РеквизитФормыВЗначение("Объект").Метаданные().Состав Цикл
		Если ЭлСостава.АвтоРегистрация = АвтоРегистрацияИзменений.Разрешить Тогда 
			Продолжить;
		КонецЕсли;	
		СписокВыбораТипов.Добавить(ЭлСостава.Метаданные.ПолноеИмя());
	КонецЦикла;
	СписокВыбораТипов.СортироватьПоЗначению();
	
	Для Каждого ЭлСписка Из СписокВыбораТипов Цикл
		Элементы.ПравилаРегистрацииТипОбъекта.СписокВыбора.Добавить(ЭлСписка.Значение);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписиУЭлементовСПравиламиОбмена()
	
	ТекстНадписи = "Правила выгрузки в базу приемник ";
	ДопТекст = "(не установлены)";
	
	Попытка
		РазмерСтроки = ПолучитьДлинуСтрокиХранилища(Объект.ПравилаОбмена);
		Если РазмерСтроки <> 0 Тогда
			ДопТекст = "(" + Строка(Цел(РазмерСтроки/1024)) + " Кб)";		
		КонецЕсли;
	Исключение
	КонецПопытки; 
	
	НадписьПравилаОбмена = ТекстНадписи + " " + ДопТекст;
	ДопТекст = "(не установлены)";
	Попытка
		РазмерСтроки = ПолучитьДлинуСтрокиХранилища(Объект.ПравилаОбмена_Test);
		Если РазмерСтроки <> 0 Тогда
			ДопТекст = "(" + Строка(Цел(РазмерСтроки/1024)) + " Кб)";		
		КонецЕсли;
	Исключение
	КонецПопытки; 
	
	НадписьПравилаОбмена_Test = ТекстНадписи + " " + ДопТекст;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДлинуСтрокиХранилища(Хранилище) Экспорт
	
	ТекстПравилаОбмена = ЗначениеИзСтрокиВнутр(Хранилище);
	РазмерСтроки = СтрДлина(ТекстПравилаОбмена);
	Возврат РазмерСтроки;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьПравила(Команда)
	
	Если Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя();
	
	АдресВременногоХранилищаФайла = "";
	ИмяФайла = "*.xml";
	Если НЕ ПоместитьФайл(АдресВременногоХранилищаФайла, ИмяФайла, ИмяФайла, Истина, УникальныйИдентификатор) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Прав(ИмяФайла, 4)<>".xml" Тогда
		Предупреждение("ВНИМАНИЕ!!!	Файл правил должен быть с расширением xml!");
		Возврат;
	КонецЕсли; 
	
	ЗагрузитьПравилаСервер(АдресВременногоХранилищаФайла);	
 	УстановитьНадписиУЭлементовСПравиламиОбмена();

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПравилаСервер(АдресВременногоХранилищаФайла, Тестовые = Ложь)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	ИмяФайлаПравил = ПолучитьИмяВременногоФайла("txt");
	ДвоичныеДанные.Записать(ИмяФайлаПравил);
	
	Текст = Новый ЧтениеТекста(ИмяФайлаПравил, КодировкаТекста.UTF8);
	ТекстПравилОбмена = Текст.Прочитать();
	Если Тестовые Тогда
		Объект.ПравилаОбмена_Test = ЗначениеВСтрокуВнутр(ТекстПравилОбмена);
	Иначе
		Объект.ПравилаОбмена = ЗначениеВСтрокуВнутр(ТекстПравилОбмена);
	КонецЕсли; 
	
	Записать();
	
	Текст.Закрыть();
	УдалитьФайлы(ИмяФайлаПравил);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПравила(Команда)
	
	АдресВХ = ПереписатьФайлССервераНаКлиент();
	Если АдресВХ=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПолучитьФайл(АдресВХ, "Правила выгрузки " + Объект.Наименование + ".xml", Истина);
	
КонецПроцедуры

&НаСервере
Функция ПереписатьФайлССервераНаКлиент(Тестовые = Ложь)
	
	Если Тестовые Тогда
		Правила = ЗначениеИзСтрокиВнутр(Объект.ПравилаОбмена_Test);
	Иначе
		Правила = ЗначениеИзСтрокиВнутр(Объект.ПравилаОбмена);
	КонецЕсли; 
	
	Если Правила=Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ИмяФайлаПравил = ПолучитьИмяВременногоФайла("xml");
	ПравилаТекстом = Новый ТекстовыйДокумент();
	ПравилаТекстом.УстановитьТекст(Правила);
	ПравилаТекстом.Записать(ИмяФайлаПравил, КодировкаТекста.UTF8);
	ДвоичныеДанныеПравил = Новый ДвоичныеДанные(ИмяФайлаПравил);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеПравил);
    УдалитьФайлы(ИмяФайлаПравил);
	
	Возврат АдресВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	Результат = ПроверитьПодключениеСервер();
	Предупреждение(Результат);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПодключениеСервер(ТестоваяБаза = Ложь)
	
	Попытка
		SSL = Новый ЗащищенноеСоединениеOpenSSL();
		Если Не ТестоваяБаза Тогда
			СтрокаПодключения = Объект.АдресБазыПриемника;
		Иначе 
			СтрокаПодключения = Объект.АдресБазыПриемника_Test;
		КонецЕсли;
		Определения = Новый WSОпределения(СтрокаПодключения, Объект.ЛогинПодключения, Объект.ПарольПодключения,,20,SSL);
		Прокси = Новый WSПрокси (Определения, "http://www.1c.ru/docmng", Объект.ИмяWS, Объект.ИмяWS + "Soap");
		Прокси.Пользователь = Объект.ЛогинПодключения;
		Прокси.Пароль = Объект.ПарольПодключения;
		Прокси.ЗагрузитьФайлОбмена(Неопределено);
		Результат = "Подключение выполнено успешно";
	Исключение
		Результат = ОписаниеОшибки();
		Если Найти(Результат, "Обязательный параметр не задан")>0 Или
			Найти(Результат, "Required parameter is not set")>0 Тогда
			Результат = "Подключение выполнено успешно";
		КонецЕсли; 
	КонецПопытки; 
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыгрузку(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Вопрос("Настройка будет записана. Продолжить?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Нет Тогда
			Возврат;
		Иначе
			Если Не Записать() Тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
	ВыполнитьВыгрузкуСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьВыгрузкуСервер()
	
	ОбработкаОбмена = Обработки.ргВыгрузкаВоВнешниеИБ.Создать();
	НоваяСтрока = ОбработкаОбмена.СписокБаз.Добавить();
	НоваяСтрока.База = Объект.Ссылка;
	НоваяСтрока.Выгружать = Истина;
	ОбработкаОбмена.ВыполнитьВыгрузку();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзНастроекУзла(Команда)
	
	Если Объект.ПравилаРегистрации.Количество()>0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьИзНастроекУзлаЗавершение", ЭтаФорма), 
			"Перед заполнением таблица будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли; 
	
	ЗаполнитьИзНастроекУзлаФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзНастроекУзлаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьИзНастроекУзлаФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзНастроекУзлаФрагмент()
	
	ЗаполнитьИзНастроекСервер();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзНастроекСервер()
	
	УзелОбменаСостав = РеквизитФормыВЗначение("Объект").Метаданные().Состав;
	ПравилаРегистрацииТМП = Объект.ПравилаРегистрации.Выгрузить().СкопироватьКолонки();
	Для каждого ОбъектСостава Из УзелОбменаСостав Цикл
		НоваяСтрока = ПравилаРегистрацииТМП.Добавить();
		ОбъектМетаданных = ОбъектСостава.Метаданные;
        ПолноеИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
        НоваяСтрока.ТипОбъекта = ПолноеИмяОбъекта;
		НоваяСтрока.Регистрировать = Истина;
	КонецЦикла; 
	ПравилаРегистрацииТМП.Сортировать("ТипОбъекта");
	Объект.ПравилаРегистрации.Загрузить(ПравилаРегистрацииТМП);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипНастройкиПриИзменении(Элемент)
	
	ОбновитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступность()
	
	//Если Объект.ТипНастройки="Обмен через веб-сервис" Тогда
	//	Элементы.ГруппаОбменЧерезWS.Доступность = Истина;
	//Иначе
	//	Элементы.ГруппаОбменЧерезWS.Доступность = Ложь;
	//КонецЕсли; 
	//
	//Если Объект.ТипНастройки="Обмен через файловый ресурс" Тогда
	//	Элементы.ГруппаОбменЧерезКаталог.Доступность = Истина;
	//Иначе
	//	Элементы.ГруппаОбменЧерезКаталог.Доступность = Ложь; 
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение_test(Команда)
	
	Результат = ПроверитьПодключениеСервер(Истина);
	Предупреждение(Результат);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПравила_Test(Команда)
	
	АдресВХ = ПереписатьФайлССервераНаКлиент(Истина);
	Если АдресВХ=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПолучитьФайл(АдресВХ, "Правила выгрузки " + Объект.Наименование + ".xml", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПравила_Test(Команда)
	
	Если Не Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя();
	
	АдресВременногоХранилищаФайла = "";
	ИмяФайла = "*.xml";
	Если НЕ ПоместитьФайл(АдресВременногоХранилищаФайла, ИмяФайла, ИмяФайла, Истина, УникальныйИдентификатор) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Прав(ИмяФайла, 4)<>".xml" Тогда
		Предупреждение("ВНИМАНИЕ!!!	Файл правил должен быть с расширением xml!");
		Возврат;
	КонецЕсли; 
	
	ЗагрузитьПравилаСервер(АдресВременногоХранилищаФайла, Истина);	
 	УстановитьНадписиУЭлементовСПравиламиОбмена();

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПравила(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("Диалог_Завершение", ЭтаФорма, Ложь),
				"Правила выгрузки будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
				
КонецПроцедуры
 
&НаКлиенте
Процедура Диалог_Завершение(Результат, ДопПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ОчиститьПравилаСервер(ДопПараметры);

КонецПроцедуры
  
&НаСервере
Процедура ОчиститьПравилаСервер(Тестовые = Ложь)
	
	Если Тестовые Тогда
		Объект.ПравилаОбмена_Test = ЗначениеВСтрокуВнутр("");
	Иначе
		Объект.ПравилаОбмена = ЗначениеВСтрокуВнутр("");
	КонецЕсли; 
	
	Записать();
	УстановитьНадписиУЭлементовСПравиламиОбмена();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПравила_Test(Команда)
		
	ПоказатьВопрос(Новый ОписаниеОповещения("Диалог_Завершение", ЭтаФорма, Истина),
				"Правила выгрузки будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры
