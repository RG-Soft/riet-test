#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
Функция ТекущийСтатусРеестра(Реестр) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыРеестровСрезПоследних.Статус
	|ИЗ
	|	РегистрСведений.СтатусыРеестров.СрезПоследних(, Реестр = &Реестр) КАК СтатусыРеестровСрезПоследних";
	
	Запрос.УстановитьПараметр("Реестр", Реестр);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Статус;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция КоличествоДнейВТекущемСтатусе(Реестр) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Реестр.ДатаПолученияОтПодрядчика) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РАЗНОСТЬДАТ(СтатусыРеестровСрезПоследних.Реестр.ДатаПолученияОтПодрядчика, &ТекущаяДата, ДЕНЬ) КАК ДнейВРаботе
	|ИЗ
	|	РегистрСведений.СтатусыРеестров.СрезПоследних(, Реестр = &Реестр) КАК СтатусыРеестровСрезПоследних";
	
	Запрос.УстановитьПараметр("Реестр", Реестр);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.ДнейВРаботе;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ПеревестиВСледующийСтатус(Реестр)  Экспорт
	
	ТекущийСтатус = ТекущийСтатусРеестра(Реестр);
	НовыйСтатус = Неопределено;
	
	Если ТекущийСтатус = Неопределено Тогда
		НовыйСтатус = Перечисления.СтатусыРеестров.Registered;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.Registered Тогда
		НовыйСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator Тогда
		НовыйСтатус = Перечисления.СтатусыРеестров.Accepted;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.Accepted Тогда
		НовыйСтатус = Перечисления.СтатусыРеестров.Finished;
	КонецЕсли;
	
	Если НовыйСтатус <> Неопределено Тогда
		Ответ = УстановитьТекущийСтатус(Реестр, НовыйСтатус);
		Если НЕ Ответ Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось установить статус " + Строка(НовыйСтатус) + " для реестра " + Строка(Реестр));
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НовыйСтатус;
	
КонецФункции

Функция ПеревестиВПредыдущийСтатус(Реестр)  Экспорт
	
	ТекущийСтатус = ТекущийСтатусРеестра(Реестр);
	НовыйСтатус = Неопределено;
	
	Если ТекущийСтатус = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.Registered Тогда
		Возврат Неопределено;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.SubmittedCoordinator Тогда
		Возврат Перечисления.СтатусыРеестров.Registered;
	ИначеЕсли ТекущийСтатус = Перечисления.СтатусыРеестров.Accepted Тогда
		НовыйСтатус = Перечисления.СтатусыРеестров.Registered;
	КонецЕсли;
	
	Если НовыйСтатус <> Неопределено Тогда
		Ответ = УстановитьТекущийСтатус(Реестр, НовыйСтатус);
		Если НЕ Ответ Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось установить статус " + Строка(НовыйСтатус) + " для реестра " + Строка(Реестр));
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НовыйСтатус;
	
КонецФункции

#КонецОбласти

Функция УстановитьТекущийСтатус(Реестр, Статус)
	
	Набор = РегистрыСведений.СтатусыРеестров.СоздатьНаборЗаписей();

	СтрокаНабора = Набор.Добавить();
	СтрокаНабора.Период = ТекущаяДата();
	СтрокаНабора.Реестр = Реестр;
	СтрокаНабора.Статус = Статус;
	
	Попытка 
		Набор.Записать(Ложь);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецЕсли