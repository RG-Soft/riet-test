
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Параметры, "ОрганизацияСсылка") И ЗначениеЗаполнено(Параметры.ОрганизацияСсылка) Тогда
		ЗаписьПоОрганизации = РегистрыСведений.НастройкиИнтеграцииСоСпринтером.СоздатьМенеджерЗаписи();
		ЗаписьПоОрганизации.Организация = Параметры.ОрганизацияСсылка;
		ЗаписьПоОрганизации.Прочитать();
		
		Если ЗначениеЗаполнено(ЗаписьПоОрганизации.Организация) Тогда
			ЗначениеВДанныеФормы(ЗаписьПоОрганизации, Запись);	
		Иначе
			Запись.Организация = Параметры.ОрганизацияСсылка;		
		КонецЕсли;
		
	Иначе
		Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
			ЗаписьПоОрганизации = РегистрыСведений.НастройкиИнтеграцииСоСпринтером.СоздатьМенеджерЗаписи();
			
			Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
			ЗаписьПоОрганизации.Организация = Модуль.ОрганизацияПоУмолчанию();
			
			ЗаписьПоОрганизации.Прочитать();
			
			Если ЗначениеЗаполнено(ЗаписьПоОрганизации.Организация) Тогда
				ЗначениеВДанныеФормы(ЗаписьПоОрганизации, Запись);	
			Иначе
				Запись.Организация = Модуль.ОрганизацияПоУмолчанию();		
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ПроверитьЗаполнениеПараметров() Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеПараметров()
	
	Если НЕ ЗначениеЗаполнено(Запись.Организация) Тогда
		ПоказатьПредупреждение(, "Не выбрана организация!");
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(Запись.КодАбонента)) <> 7 Тогда
		ПоказатьПредупреждение(, "Недопустимый логин!");
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.КаталогПрограммыЭлектроннойПочты) Тогда
		ПоказатьПредупреждение(, "Не указан каталог программы электронной почты!");
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.КаталогОтправкиДанныхОтчетности) Тогда
		ПоказатьПредупреждение(, "Не выбрана каталог отправки данных отчетности!");
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура КаталогПрограммыЭлектроннойПочтыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогПрограммыЭлектроннойПочтыНачалоВыбораЗавершение", ЭтотОбъект);
	ТекстСообщения = ВернутьСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыЭлектроннойПочтыНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Каталог = Запись.КаталогПрограммыЭлектроннойПочты;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = ВернутьСтр("ru = 'Выберите путь к каталогу программы электронной почты'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Запись.КаталогПрограммыЭлектроннойПочты = ДиалогОткрытияФайла.Каталог + ПолучитьРазделительПути();
		
		Если СтрДлина(СокрЛП(Запись.КодАбонента)) = 7 И ЗначениеЗаполнено(ДиалогОткрытияФайла.Каталог) Тогда
			ПредполагаемыйКаталогОтправкиДанныхОтчетности = Запись.КаталогПрограммыЭлектроннойПочты + "EXPT" + Лев(Запись.КодАбонента, 4) + "." + Прав(Запись.КодАбонента, 3) + ПолучитьРазделительПути();
			ОбъектПредполагаемыйКаталогОтправкиДанныхОтчетности = Новый Файл(ПредполагаемыйКаталогОтправкиДанныхОтчетности);
			Если ОбъектПредполагаемыйКаталогОтправкиДанныхОтчетности.Существует() Тогда
				Запись.КаталогОтправкиДанныхОтчетности = ПредполагаемыйКаталогОтправкиДанныхОтчетности;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КаталогОтправкиДанныхОтчетностиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогОтправкиДанныхОтчетностиНачалоВыбораЗавершение", ЭтотОбъект);
	ТекстСообщения = ВернутьСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОтправкиДанныхОтчетностиНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Каталог = Запись.КаталогОтправкиДанныхОтчетности;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = ВернутьСтр("ru = 'Выберите путь к каталогу отправки данных отчетности'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Запись.КаталогОтправкиДанныхОтчетности = ДиалогОткрытияФайла.Каталог + ПолучитьРазделительПути();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыЭлектроннойПочтыОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогПрограммыЭлектроннойПочтыОткрытиеЗавершение", ЭтотОбъект);
	ТекстСообщения = ВернутьСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,, ТекстСообщения);	
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПрограммыЭлектроннойПочтыОткрытиеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗапуститьПриложение("explorer " + Запись.КаталогПрограммыЭлектроннойПочты);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОтправкиДанныхОтчетностиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогОтправкиДанныхОтчетностиОткрытиеЗавершение", ЭтотОбъект);
	ТекстСообщения = ВернутьСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОтправкиДанныхОтчетностиОткрытиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗапуститьПриложение("explorer " + Запись.КаталогОтправкиДанныхОтчетности);
	
КонецПроцедуры
