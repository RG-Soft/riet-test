
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВозможностьРедактирования(Команда)
	
	ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеРегистра(Команда)
	
	ЕстьИзменения = Ложь;
	
	ОбновитьДанныеРегистраНаСервере(ЕстьИзменения);
	
	Если ЕстьИзменения Тогда
		Текст = ВернутьСтр("ru = 'Обновление выполнено успешно.'");
	Иначе
		Текст = ВернутьСтр("ru = 'Обновление не требуется.'");
	КонецЕсли;
	
	ПоказатьПредупреждение(, Текст);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ОформитьГруппуДанных(0, ВернутьСтр("ru = 'Стандартные значения доступа'"));
	ОформитьГруппуДанных(1, ВернутьСтр("ru = 'Обычные/внешние пользователи'"));
	ОформитьГруппуДанных(2, ВернутьСтр("ru = 'Обычные/внешние группы пользователей'"));
	ОформитьГруппуДанных(3, ВернутьСтр("ru = 'Группы исполнителей'"));
	ОформитьГруппуДанных(4, ВернутьСтр("ru = 'Объекты авторизации'"));
	
КонецПроцедуры

&НаСервере
Процедура ОформитьГруппуДанных(ГруппаДанных, Текст)
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокГруппаДанных.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ГруппаДанных");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ГруппаДанных;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Текст);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРегистраНаСервере(ЕстьИзменения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегистрыСведений.ГруппыЗначенийДоступа.ОбновитьДанныеРегистра(ЕстьИзменения);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти
