&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// переопределяем параметры в реквизиты
	Отпечаток = Параметры.Отпечаток;
	ЭтоЭлектроннаяПодписьВМоделиСервиса = Параметры.ЭтоЭлектроннаяПодписьВМоделиСервиса;
	
	
	СисИнфо = Новый СистемнаяИнформация;
	Если НЕ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 И НЕ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Элементы.Найти("ФормаОткрытьСертификат").Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	СвойстваСертификата = Неопределено;
	Если КонтекстЭДОКлиент <> Неопределено Тогда
		СвойстваСертификата = КонтекстЭДОКлиент.ПолучитьСвойстваСертификатаПоОтпечатку(ЭтоЭлектроннаяПодписьВМоделиСервиса, Отпечаток, , Ложь);
	КонецЕсли;
	Если СвойстваСертификата = Неопределено Тогда
		Закрыть();
	Иначе
		Заголовок = ВернутьСтр("ru = 'Просмотр сертификата'") + ": """ + СвойстваСертификата.Наименование + """";
		ДействителенПо = СвойстваСертификата.ДействителенПо;
		ДействителенС = СвойстваСертификата.ДействителенС;
		СерийныйНомер = СвойстваСертификата.СерийныйНомер;
		
		Поставщик = СвойстваСертификата.Поставщик;
		
		СвойстваВладельца = КонтекстЭДОКлиент.РазобратьСтрокуСубъекта(СвойстваСертификата.Владелец);
		ВладелецОбщееИмя = 			СвойстваВладельца.Получить("CN");
		ВладелецОрганизация = 		СвойстваВладельца.Получить("O");
		ВладелецПодразделение = 	СвойстваВладельца.Получить("OU");
		
		СвойстваПоставщика = КонтекстЭДОКлиент.РазобратьСтрокуСубъекта(СвойстваСертификата.Поставщик);
		ПоставщикОбщееИмя = 		СвойстваПоставщика.Получить("CN");
		ПоставщикОрганизация = 		СвойстваПоставщика.Получить("O");
		ПоставщикПодразделение = 	СвойстваПоставщика.Получить("OU");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	СертификатВалиден = Неопределено;
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		
		СертификатВалиден = ПроверитьСертификатНаСервере(Отпечаток);
		Если СертификатВалиден = Истина Тогда
			ПоказатьПредупреждение(, ВернутьСтр("ru = 'Сертификат действителен'"));
		ИначеЕсли СертификатВалиден = Ложь Тогда
			ПоказатьПредупреждение(, ВернутьСтр("ru = 'Сертификат не действителен.'"));
		КонецЕсли;
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьЗавершение", ЭтотОбъект);
		ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.СоздатьОбъектДляРаботыСКриптографиейСУстановкой(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗавершение(Крипт, ДополнительныеПараметры) Экспорт
	
	Если Крипт = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СертификатВалиден = Неопределено;
	
	Если НЕ ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ЭтоФайрФокс() Тогда
		Попытка
			Если Крипт.ПроверитьСертификат(СерийныйНомер, Поставщик) Тогда
				СертификатВалиден = Истина;
			КонецЕсли;
		Исключение
			СертификатВалиден = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Если СертификатВалиден = Истина Тогда
		ПоказатьПредупреждение(, ВернутьСтр("ru = 'Сертификат действителен'"));
	ИначеЕсли СертификатВалиден = Ложь Тогда
		ПоказатьПредупреждение(, ВернутьСтр("ru = 'Сертификат не действителен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСертификатНаСервере(Отпечаток)
	
	Возврат КриптосервисВМоделиСервиса.ПроверитьСертификат(Новый Структура("Отпечаток", Отпечаток));
	
КонецФункции

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		АдресФайла = ПолучитьСертификатНаСервере(Отпечаток, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(АдресФайла) Тогда
			ПолучитьФайл(АдресФайла, Отпечаток + ".cer", Истина);
		КонецЕсли;
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСертификатПродолжение", ЭтотОбъект);
		ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификатПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСертификатЗавершение", ЭтотОбъект);
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.СоздатьОбъектДляРаботыСКриптографиейСУстановкой(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификатЗавершение(Крипт, ДополнительныеПараметры) Экспорт
	
	Если Крипт = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// сохраняем сертификат во временный файл и запускаем файл для просмотра
	ИмяФайлаСертификата = КонтекстЭДОКлиент.ПолучитьИмяВременногоФайлаНаКлиенте("cer");
	Попытка
		Крипт.ЭкспортироватьСертификат(СерийныйНомер, Поставщик, ИмяФайлаСертификата);
	Исключение
		Сообщить(ВернутьСтр("ru = 'Не удалось открыть сертификат.'", СтатусСообщения.Внимание));
		Возврат;
	КонецПопытки;
	
	ЗапуститьПриложение(ИмяФайлаСертификата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСертификатНаСервере(Отпечаток, Идентификатор)
	
	Сертификат = ХранилищеСертификатовВМоделиСервиса.ПолучитьСертификат(Новый Структура("Отпечаток", Отпечаток));
	Если ЗначениеЗаполнено(Сертификат) Тогда
		АдресФайла = ПоместитьВоВременноеХранилище(Сертификат, Идентификатор);
		Возврат АдресФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
