
/////////////////////////////////////////////////////
// ФОРМА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установим некоторые отборы по-умолчанию
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Parcels.Отбор,
		"CollectedFromPort",
		,
		ВидСравненияКомпоновкиДанных.Заполнено,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);	
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Parcels.Отбор,
		"Trip",
		,
		ВидСравненияКомпоновкиДанных.НеЗаполнено,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);	
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Trips.Отбор,
		"SentToMoveIt",
		,
		ВидСравненияКомпоновкиДанных.НеЗаполнено,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);	
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанTrip" Тогда
		Элементы.Parcels.Обновить();
	КонецЕсли; 
	
КонецПроцедуры


/////////////////////////////////////////////////////
// PARCELS

// ОБРАБОТЧИКИ ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура ParcelsВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ParcelsTripNo" или Поле.Имя = "ParcelsSentToMoveIt" Тогда 
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Trip) Тогда
			ОткрытьЗначение(ТекущиеДанные.Trip);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ParcelsПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьПодвалParcels", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодвалParcels()
	
	GrossWeightKG = 0;            
	CubicMeters = 0;
	Элемент = Элементы.Parcels;
	Для Каждого ВыделеннаяСтрока из Элемент.ВыделенныеСтроки цикл
		ДанныеСтроки = Элемент.ДанныеСтроки(ВыделеннаяСтрока);
		GrossWeightKG = GrossWeightKG + ДанныеСтроки.GrossWeightKG;
		CubicMeters   = CubicMeters + ДанныеСтроки.CubicMeters;
	КонецЦикла;
	
КонецПроцедуры

// КОМАНДНАЯ ПАНЕЛЬ

// MOVE TO NEW TRIP

&НаКлиенте
Процедура MoveToNewTrip(Команда)
	
	Отказ = Ложь;
	
	// Определим и проверим Warehouse from Выделенных Parcels
	WarehouseFrom = ПолучитьWarehouseFromВыделенныхParcels();	
	Если WarehouseFrom = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Selected parcels have different Warehouse from!",
			, , , Отказ);
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыделенныеParcelsНаходятсяВTrips() Тогда
		
		Ответ = ВопросОПеремещенииВДругойTrip();
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	Trip = MoveToTripНаСервере(Элементы.Parcels.ВыделенныеСтроки);
	Если ЗначениеЗаполнено(Trip) Тогда
		ОткрытьЗначение(Trip);
	КонецЕсли;
	
КонецПроцедуры 

// MOVE TO EXISTING TRIP

&НаКлиенте
Процедура MoveToExistingTrip(Команда)  
	
	Отказ = Ложь;
	
	// Определим и проверим Warehouse from Выделенных Parcels
	WarehouseFrom = ПолучитьWarehouseFromВыделенныхParcels();	
	Если WarehouseFrom = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Selected parcels have different Warehouse from!",
			, , , Отказ);
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	// Зададим вопрос о перемещении в другой Trip при необходимости
	Если ВыделенныеParcelsНаходятсяВTrips() Тогда
		
		Ответ = ВопросОПеремещенииВДругойTrip();
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Откроем форму выбора Trip
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("SentToWarehouse", '00010101');
	СтруктураОтбора.Вставить("SentToMoveIt", '00010101');
	СтруктураОтбора.Вставить("WarehouseFrom", WarehouseFrom);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	СтруктураПараметров.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("Документ.Trip.ФормаВыбора", СтруктураПараметров, Элементы.Parcels);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьWarehouseFromВыделенныхParcels()
	
	WarehouseFrom = Неопределено;
	Для Каждого Строка Из Элементы.Parcels.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Parcels.ДанныеСтроки(Строка);
		
		Если WarehouseFrom <> Неопределено
			И WarehouseFrom <> ДанныеСтроки.WarehouseFrom Тогда
			Возврат Неопределено;
		КонецЕсли; 
		
		WarehouseFrom = ДанныеСтроки.WarehouseFrom;
		
	КонецЦикла; 
	
	Возврат WarehouseFrom;
	
КонецФункции

&НаКлиенте
Процедура ParcelsОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Trip")
		И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Trip = MoveToTripНаСервере(Элементы.Parcels.ВыделенныеСтроки, ВыбранноеЗначение);
		Если ЗначениеЗаполнено(Trip) Тогда
			
			ПоказатьОповещениеПользователя(
				"Success",
				ПолучитьНавигационнуюСсылку(Trip),
				"Parcels were successfully moved to """ + Trip + """.");
			Элементы.Parcels.Обновить();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// REMOVE FROM TRIP

&НаКлиенте
Процедура RemoveFromTrips(Команда)
	
	Ответ = Вопрос(
		"Are you sure, you want to remove Parcels from Trips?",
		РежимДиалогаВопрос.ДаНет,
		60,
		КодВозвратаДиалога.Да,
		"Attention!",
		КодВозвратаДиалога.Нет);
		
	Если Ответ = КодВозвратаДиалога.Нет Тогда 
		Возврат;
	КонецЕсли;
	
	Успех = RemoveFromTripsНаСервере(Элементы.Parcels.ВыделенныеСтроки);
	Если Успех = Истина Тогда
		
		ПоказатьОповещениеПользователя(
			"Success",
			,
			"Parcels were successfully removed from Trips.");
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция RemoveFromTripsНаСервере(Знач МассивParcels)
	
	Если МассивParcels.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Отказ = Ложь;
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	ТаблицаParcels = ПолучитьТаблицуParcels(МассивParcels);
	
	// Если Parcel и так не в Trip - то удалим его из таблицы
	УдалитьИзТаблицыParcelsСОпределеннымTrip(ТаблицаParcels, Null);
	
	ПроверитьВозможностьУдаленияParcelsИзTrip(Отказ, ТаблицаParcels);
		
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	
	УдалитьParcelsИзTrips(Отказ, ТаблицаParcels);
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Элементы.Parcels.Обновить();
	
	Возврат Истина;
	
КонецФункции

// ОБЩЕЕ

&НаКлиенте
Функция ВыделенныеParcelsНаходятсяВTrips()
	
	Для Каждого Строка Из Элементы.Parcels.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Parcels.ДанныеСтроки(Строка);
		Если ЗначениеЗаполнено(ДанныеСтроки.Trip) Тогда
			Возврат Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции 

&НаКлиенте
Функция ВопросОПеремещенииВДругойTrip()
	
	Возврат Вопрос(
		"Some parcels are already included in Trips.
		|Are you sure, you want to move them into another Trip?",
		РежимДиалогаВопрос.ДаНет,
		60,
		КодВозвратаДиалога.Да,
		"Attention!",
		КодВозвратаДиалога.Нет);
	
КонецФункции

&НаСервере
Функция MoveToTripНаСервере(Знач МассивParcels, Trip=Неопределено)
	
	Если МассивParcels.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	ТаблицаParcels = ПолучитьТаблицуParcels(МассивParcels);
	
	// Если мы перемещаем Parcels в определенный Trip - удалим те Parcels, которые уже в нем сидят
	Если ЗначениеЗаполнено(Trip) Тогда
		УдалитьИзТаблицыParcelsСОпределеннымTrip(ТаблицаParcels, Trip);
	КонецЕсли;
	
	ПроверитьВозможностьУдаленияParcelsИзTrip(Отказ, ТаблицаParcels);
	ПроверитьВозможностьПеремещенияParcelsВTrip(Отказ, ТаблицаParcels, Trip);
		
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецЕсли;
	
	УдалитьParcelsИзTrips(Отказ, ТаблицаParcels);
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Trip) Тогда
		TripОбъект = Trip.ПолучитьОбъект();
	Иначе
		TripОбъект = Документы.Trip.СоздатьДокумент();
		TripОбъект.Дата = ТекущаяДата();
		TripОбъект.WarehouseFrom = ТаблицаParcels[0].ParcelWarehouseFrom;
	КонецЕсли;
	
	ТЧParcels = TripОбъект.Parcels;
	Для Каждого СтрокаТаблицы Из ТаблицаParcels Цикл
		НоваяСтрокаТЧ = ТЧParcels.Добавить();
		НоваяСтрокаТЧ.Parcel = СтрокаТаблицы.Parcel;
	КонецЦикла;
	
	Попытка
		TripОбъект.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не записать Trip. См. ошибки выше. " + ОписаниеОшибки(),
			TripОбъект, , , Отказ);
	КонецПопытки;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецЕсли;

	ЗафиксироватьТранзакцию();
	
	Элементы.Parcels.Обновить();
	Если НЕ ЗначениеЗаполнено(Trip) Тогда
		Элементы.Trips.Обновить();
	КонецЕсли; 
	
	Возврат TripОбъект.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицуParcels(МассивParcels)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Parcels", МассивParcels);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Parcels.Ссылка КАК Parcel,
		|	Parcels.WarehouseFrom КАК ParcelWarehouseFrom,
		|	Parcels.Проверен КАК ParcelПроверен,
		|	TripParcels.Ссылка КАК Trip,
		|	TripParcels.Ссылка.SentToWarehouse КАК TripSentToWarehouse,
		|	TripParcels.Ссылка.SentToMoveIt КАК TripSentToMoveIt
		|ИЗ
		|	Справочник.Parcels КАК Parcels
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Trip.Parcels КАК TripParcels
		|		ПО Parcels.Ссылка = TripParcels.Parcel
		|			И ((НЕ TripParcels.Ссылка.ПометкаУдаления))
		|ГДЕ
		|	Parcels.Ссылка В(&Parcels)";
		
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

&НаСервереБезКонтекста
Процедура ПроверитьВозможностьУдаленияParcelsИзTrip(Отказ, ТаблицаParcels)
	
	Для Каждого СтрокаТаблицы Из ТаблицаParcels Цикл
						
		Если ЗначениеЗаполнено(СтрокаТаблицы.TripSentToWarehouse)
			ИЛИ ЗначениеЗаполнено(СтрокаТаблицы.TripSentToMoveIt) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"""Parcel " + СокрЛП(СтрокаТаблицы.Parcel) + """ is in the """ + СтрокаТаблицы.Trip + """, that was already sent to Warehouse or to Move it!",
				, , , Отказ);
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры

// ДОДЕЛАТЬ
&НаСервереБезКонтекста
Процедура ПроверитьВозможностьПеремещенияParcelsВTrip(Отказ, ТаблицаParcels, Trip)
		
	Для Каждого СтрокаТаблицы Из ТаблицаParcels Цикл
		
		Если НЕ СтрокаТаблицы.ParcelПроверен Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"""Parcel " + СокрЛП(СтрокаТаблицы.Parcel) + """ не отмечен как Final!",
				, , , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ParcelWarehouseFrom) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В ""Parcel " + СокрЛП(СтрокаТаблицы.Parcel) + """ поле ""Warehouse from"" не заполнено!",
				, , , Отказ);
		КонецЕсли;
						
	КонецЦикла;
	
	ТаблицаWarehouseFrom = ТаблицаParcels.Скопировать(,"ParcelWarehouseFrom");
	ТаблицаWarehouseFrom.Свернуть("ParcelWarehouseFrom", "");
	Если ТаблицаWarehouseFrom.Количество() > 1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"В указанных Parcels различается Warehouse from!",
			, , , Отказ);
	КонецЕсли;
	
	// ОБЪЕДИНИТЬ ЗАПРОСЫ К СУБД
	Если ЗначениеЗаполнено(Trip) Тогда
		
		TripWarehouseFrom = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Trip, "WarehouseFrom");
		Если ЗначениеЗаполнено(TripWarehouseFrom) Тогда
			
			Если TripWarehouseFrom <> ТаблицаParcels[0].ParcelWarehouseFrom Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					"""Warehouse from """ + TripWarehouseFrom + """ в """ + Trip + """ отличается от Warehouse from в Parcels!",
					, , , Отказ);
			КонецЕсли;
			
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"В """ + Trip + """ поле ""Warehouse from"" не заполнено!",
				Trip, "WarehouseFrom", , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьИзТаблицыParcelsСОпределеннымTrip(ТаблицаParcels, Trip)
	
	СтруктураПоискаПоTrip = Новый Структура("Trip", Trip);
	НайденныеСтроки = ТаблицаParcels.НайтиСтроки(СтруктураПоискаПоTrip);
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		ТаблицаParcels.Удалить(НайденнаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьParcelsИзTrips(Отказ, ТаблицаParcels)
	
	ТаблицаTrips = ТаблицаParcels.Скопировать(, "Trip");
	
	ТаблицаTrips.Свернуть("Trip", "");
	
	СтруктураПоискаПоTrip = Новый Структура("Trip");
	СтруктураПоискаПоParcel = Новый Структура("Parcel");
	Для Каждого СтрокаТаблицыTrips Из ТаблицаTrips Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыTrips.Trip) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоискаПоTrip.Trip = СтрокаТаблицыTrips.Trip;
		СтрокиТаблицыParcels = ТаблицаParcels.НайтиСтроки(СтруктураПоискаПоTrip);
		
		TripОбъект = СтрокаТаблицыTrips.Trip.ПолучитьОбъект();
		Для Каждого СтрокаТаблицыParcels Из СтрокиТаблицыParcels Цикл
			
			СтруктураПоискаПоParcel.Parcel = СтрокаТаблицыParcels.Parcel;
			СтрокиТЧ = TripОбъект.Parcels.НайтиСтроки(СтруктураПоискаПоParcel);
			Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
				TripОбъект.Parcels.Удалить(СтрокаТЧ);
			КонецЦикла;
			
		КонецЦикла;
		
		Попытка
			TripОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Не удалить Parcels из "+ TripОбъект+ ". См. ошибки выше. " + ОписаниеОшибки(),
				TripОбъект, , , Отказ);
		КонецПопытки;

		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
				
КонецПроцедуры
