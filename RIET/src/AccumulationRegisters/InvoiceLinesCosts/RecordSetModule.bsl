
//Процедура ДобавитьЗапись(Период, Item, ЭлементФормированияСтоимости, DocumentBase, Currency, Sum, FiscalSum) Экспорт
Процедура ДобавитьЗапись(Период, Item, ЭлементФормированияСтоимости, DocumentBase, Currency, Sum, FiscalSum, SumCorrection = 0) Экспорт
	
	Движение = Добавить();
	Движение.Период = Период;
	Движение.СтрокаИнвойса = Item;
	Движение.ЭлементФормированияСтоимости = ЭлементФормированияСтоимости;
	Движение.ДокументОснование = DocumentBase;
	Движение.Валюта = Currency;
	Движение.Сумма = Sum;
	Движение.СуммаФискальная = FiscalSum;
	// { RGS AFokin 19.09.2018 23:59:59 - S-I-0005710
	Движение.СуммаКорректировки = SumCorrection;
	// } RGS AFokin 19.09.2018 23:59:59 - S-I-0005710
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	ПроверитьРеквизиты();
	
	ДозаполнитьРеквизиты();
				
КонецПроцедуры

Процедура ПроверитьРеквизиты()
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		
		Если НЕ ЗначениеЗаполнено(Запись.Сумма) И НЕ ЗначениеЗаполнено(Запись.СуммаФискальная) Тогда
			ВызватьИсключение "'Sum' and 'Fiscal sum' are empty!";		
		КонецЕсли;
					
	КонецЦикла;
	
КонецПроцедуры

Процедура ДозаполнитьРеквизиты()
	
	//[РКХ->]
	//21.02.2014 РГ-Софт Пахоменков
	Если ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "PA" ИЛИ ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "SLI RU"
		ИЛИ ОбщегоНазначенияПовтИсп.ИдентификаторРабочейКонфигурации() = "SLI-SMI RU" Тогда
		Если ДополнительныеСвойства.Свойство("ЭтоЗагрузкаИзSLI") Тогда
			Если ДополнительныеСвойства.ЭтоЗагрузкаИзSLI Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//[<-РКХ]

	Items = ЭтотОбъект.ВыгрузитьКолонку("СтрокаИнвойса");	
	Если Items.Количество() Тогда
		ТаблицаItems = Справочники.СтрокиИнвойса.ПолучитьТаблицу(Items);
	КонецЕсли;

	ЭлементыФормированияСтоимости = Справочники.ЭлементыФормированияСтоимости;
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		
		РеквизитыItem = ТаблицаItems.Найти(Запись.СтрокаИнвойса, "Ссылка");
		
		// parent company
		Запись.SoldTo = РеквизитыItem.ParentCompany;
		
		// AU
		Запись.AU = РеквизитыItem.AU;
		
		// Segment
		Запись.Segment = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(Запись.AU, "Segment");
		
		// ERP treatment
		Запись.ERPTreatment = РеквизитыItem.ERPTreatment;
		
		// account
		Если Запись.ЭлементФормированияСтоимости = ЭлементыФормированияСтоимости.ТаможняСборы
			ИЛИ Запись.ЭлементФормированияСтоимости = ЭлементыФормированияСтоимости.ТаможняПошлины Тогда
			
			Запись.УДАЛИТЬAccount = РегистрыСведений.ERPTreatmentAccounts.ПолучитьAccountsПовтИсп(Запись.Период, Запись.ERPTreatment).CCDAccount;
			
		ИначеЕсли Запись.ЭлементФормированияСтоимости = ЭлементыФормированияСтоимости.ПрочиеУслуги Тогда
			
			Запись.УДАЛИТЬAccount = РегистрыСведений.ERPTreatmentAccounts.ПолучитьAccountsПовтИсп(Запись.Период, Запись.ERPTreatment).AgentAccount;
			
		Иначе
			
			Запись.УДАЛИТЬAccount = Неопределено;
		
		КонецЕсли;
		
		// activity
		Если Лев(Запись.УДАЛИТЬAccount, 1) = "5" Тогда
		
			Если ЗначениеЗаполнено(РеквизитыItem.Activity) Тогда
				Запись.Activity = РеквизитыItem.Activity;
			Иначе
				Запись.Activity = РГСофтСерверПовтИспСеанс.ПолучитьЗначениеРеквизита(Запись.AU, "DefaultActivity");	
			КонецЕсли;
			
			Запись.Activity = СокрЛП(Запись.Activity);
			
		Иначе
			
			Запись.Activity = Неопределено;
			
		КонецЕсли;
							
	КонецЦикла;
		
КонецПроцедуры
