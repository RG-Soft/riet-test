
&НаКлиенте
Процедура ОпределитьРазницы(Команда)
	Регистратор = Документ;
	Если ЗначениеЗаполнено(Регистратор) Тогда
		ОпределитьРазницыСервер(Регистратор);
	Иначе
		Сообщить("В этом списке фильтр можно применять только к движениям одного документа. Сначала установите отбор по документу.");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОпределитьРазницыСервер(Регистратор)
	Если 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.ПередачаОС") 
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.СчетКнигиПокупок")
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.InventoryПеремещение")
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.InventoryПоступление")
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.InventoryСписание")
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.InventoryКорректировка")   
		И 	ТипЗнч(Регистратор) <> Тип("ДокументСсылка.НачислениеАмортизации") Тогда
		Сообщить("Разницы на данном этапе можно определить только для документов с типом Реализация товаров и услуг, Передача ОС, Счет книги покупок, документов блока Inventory или операций по начислению амортизации.", СтатусСообщения.Информация);
		Возврат;
	КонецЕсли;	
	
	НачатьТранзакцию();
	Отказ = Ложь;
	ОбработкаDSSСервер.РассчитатьРазницы(Регистратор, Отказ);
	Если Отказ Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Уровень(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Сообщить("Не выбрана строка");
		Возврат;
	КонецЕсли;   
	ID = Элементы.Список.ТекущиеДанные.GltObjId;
	КодЭлементаСпр = НайтиФильтрСервер(ID);
	
	Если ЗначениеЗаполнено(КодЭлементаСпр) Тогда
		ФормаСпискаСправочника = ПолучитьФорму("Справочник.Фильтры.ФормаСписка");
		ФормаСпискаСправочника.Открыть();
		
		СсылкаНаФильтр = ПолучитьФильтрПоКоду(КодЭлементаСпр);
		
		ФормаСпискаСправочника.ЭлементыФормы.СправочникДерево.ТекущаяСтрока = СсылкаНаФильтр;
	Иначе    		
		Сообщить("Не найден элемент справочника ""Фильтры"""); 		
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Функция НайтиФильтрСервер(Идентиф)
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("GltObjId", Идентиф);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроводкиDSSОбщие.Период,
	|	ПроводкиDSSОбщие.Регистратор,
	|	ПроводкиDSSОбщие.НомерСтроки,
	|	ПроводкиDSSОбщие.Активность,
	|	ПроводкиDSSОбщие.AccountLawson,
	|	ПроводкиDSSОбщие.FiscalType,
	|	ПроводкиDSSОбщие.AU,
	|	ПроводкиDSSОбщие.LegalEntity,
	|	ПроводкиDSSОбщие.BaseAmount,
	|	ПроводкиDSSОбщие.RubAmount,
	|	ПроводкиDSSОбщие.FiscAmount,
	|	ПроводкиDSSОбщие.TempDiff,
	|	ПроводкиDSSОбщие.PermDiff,
	|	ПроводкиDSSОбщие.ExchDiff,
	|	ПроводкиDSSОбщие.System,
	|	ПроводкиDSSОбщие.GltObjId,
	|	ПроводкиDSSОбщие.DateLawson,
	|	ПроводкиDSSОбщие.Reference,
	|	ПроводкиDSSОбщие.Description,
	|	ПроводкиDSSОбщие.TranAmount,
	|	ПроводкиDSSОбщие.Currency,
	|	ПроводкиDSSОбщие.GUID,
	|	ПроводкиDSSОбщие.PeriodLawson,
	|	ПроводкиDSSОбщие.Company,
	|	ПроводкиDSSОбщие.Модуль,
	|	ПроводкиDSSОбщие.AccountLawson.Родитель.КодЧислом КАК SumAcctNumber,
	|	ПроводкиDSSОбщие.AccountLawson.Наименование КАК AccountDesc,
	|	ПроводкиDSSОбщие.AccountLawson.КодЧислом КАК AccountNumber,
	|	ПроводкиDSSДетали.Документ,
	|	ПроводкиDSSДетали.GeoMarket,
	|	ПроводкиDSSДетали.UpdateDateLawson,
	|	ПроводкиDSSДетали.SeqTrnsNbrLawson,
	|	ПроводкиDSSДетали.OrigCompanyLawson,
	|	ПроводкиDSSДетали.Activity,
	|	ПроводкиDSSДетали.SourceCode,
	|	ПроводкиDSSДетали.JeTypeLawson,
	|	ПроводкиDSSДетали.JournalLawson,
	|	ПроводкиDSSДетали.LineNbrLawson,
	|	ПроводкиDSSДетали.AutoRevLawson,
	|	ПроводкиDSSДетали.Operator,
	|	ПроводкиDSSДетали.LegalFiscalFlagLawson,
	|	ПроводкиDSSДетали.Vendor,
	|	ПроводкиDSSДетали.VendorVname,
	|	ПроводкиDSSДетали.ApInvoice,
	|	ПроводкиDSSДетали.TransNbr,
	|	ПроводкиDSSДетали.OrigOperatorId,
	|	ПроводкиDSSДетали.ProcessLevel,
	|	ПроводкиDSSДетали.CashCode,
	|	ПроводкиDSSДетали.PoNumber,
	|	ПроводкиDSSДетали.LineNbrIc,
	|	ПроводкиDSSДетали.PoCode,
	|	ПроводкиDSSДетали.AssetLawson,
	|	ПроводкиDSSДетали.ItemDescription,
	|	ПроводкиDSSДетали.CustomerNumber,
	|	ПроводкиDSSДетали.CustomerName,
	|	ПроводкиDSSДетали.ArInvoice,
	|	ПроводкиDSSДетали.TaxCode,
	|	ПроводкиDSSДетали.Item,
	|	ПроводкиDSSДетали.DocumentNbr,
	|	ПроводкиDSSДетали.ContractNumber,
	|	ПроводкиDSSДетали.AktOfAcceptance,
	|	ПроводкиDSSДетали.AktDateLawson,
	|	ПроводкиDSSДетали.ApTransFormId,
	|	ПроводкиDSSДетали.КонтрагентLawson,
	|	ПроводкиDSSОбщие.AU.Сегмент КАК SubSubSeg,
	//-> RG-Soft VIvanov 2015/02/18
	//|	ПроводкиDSSОбщие.AU.Сегмент.Родитель КАК SubSeg,
	//|	ПроводкиDSSОбщие.AU.Сегмент.Родитель.Родитель КАК BusSeg,
	|	ПроводкиDSSОбщие.AU.SubSegment КАК SubSeg,
	|	ПроводкиDSSОбщие.AU.Segment КАК BusSeg,
	|	ПроводкиDSSОбщие.AU.Сегмент.Наименование КАК SubSubSegDesc,
	//|	ПроводкиDSSОбщие.AU.Сегмент.Родитель.Наименование КАК SubSegDesc,
	//|	ПроводкиDSSОбщие.AU.Сегмент.Родитель.Родитель.Наименование КАК SegDesc
	|	ПроводкиDSSОбщие.AU.SubSegment.Наименование КАК SubSegDesc,
	|	ПроводкиDSSОбщие.AU.Segment.Наименование КАК SegDesc
	//<- RG-Soft VIvanov
	|ИЗ
	|	РегистрНакопления.ПроводкиDSSОбщие КАК ПроводкиDSSОбщие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроводкаDSS КАК ПроводкиDSSДетали
	|		ПО ПроводкиDSSОбщие.GltObjId = ПроводкиDSSДетали.Номер
	|ГДЕ
	|	ПроводкиDSSОбщие.GltObjId <> 1000000000
	|	И ПроводкиDSSОбщие.GltObjId = &GltObjId";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 1 Тогда     	
		Сообщить("Строк с таким номером больше одной, поиск будет осуществляется для первой доступной");	
	КонецЕсли; 
	
	Если НЕ Выборка.Количество() Тогда     	
		Сообщить("Для данного номера поиск не осуществляется");
	КонецЕсли;  
	
	Если Выборка.Следующий()Тогда
		Возврат ПрименитьФильтрыПоискТипа(Неопределено, Выборка);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПрименитьФильтрыПоискТипа(Родитель, Строка) Экспорт
	
	Если Родитель = Неопределено Тогда
		Родитель = Справочники.Фильтры.ПустаяСсылка();	
	КонецЕсли; 
	Выборка = Справочники.Фильтры.Выбрать(Родитель,,,"Код Возр");
	
	Результат = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Выборка.Тип = Перечисления.ТипыФильтров.IF Тогда
			Выполнить("Результат = (" + Выборка.КодВыполнения + ");");
			Если Результат Тогда    				
				Если ЗначениеЗаполнено(Выборка.Статья) Тогда  					
					Возврат Выборка.Код;
				Иначе
					Возврат ПрименитьФильтрыПоискТипа(Выборка.Ссылка, Строка);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Выборка.Тип = Перечисления.ТипыФильтров.ELSE Тогда
			Если ЗначениеЗаполнено(Выборка.Статья) Тогда
				Возврат Выборка.Код;   
			Иначе
				Возврат ПрименитьФильтрыПоискТипа(Выборка.Ссылка, Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьФильтрПоКоду(КодФильтра)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Фильтры.Ссылка
	|ИЗ
	|	Справочник.Фильтры КАК Фильтры
	|ГДЕ
	|	Фильтры.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", КодФильтра);		
	Результат = Запрос.Выполнить(); 		
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
КонецФункции
 
&НаКлиенте
Процедура ПрименитьФильтр(Команда)
	РегистраторПроводка = Элементы.Список.ТекущиеДанные.Регистратор;
	Если РегистраторПроводка <> Неопределено И ТипЗнч(РегистраторПроводка) = Тип("ДокументСсылка.ПроводкаDSS") Тогда
		ПрименитьФильтрСервер(РегистраторПроводка);
	Иначе
		Сообщить("В этом списке фильтр можно применять только к движениям одного документа. Сначала установите отбор по документу.");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрименитьФильтрСервер(РегистраторПроводка)
	Регистратор = РегистраторПроводка;
	Попытка
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ВложенныйЗапрос.GltObjId,
		|	ВложенныйЗапрос.TranAmount,
		|	ВложенныйЗапрос.Регистратор.SourceCode,
		|	ВложенныйЗапрос.Регистратор.System,
		|	ВложенныйЗапрос.SumAcct КАК SumAcctNumber,
		|	ВложенныйЗапрос.Accnt КАК AccountNumber,
		|	ВложенныйЗапрос.Регистратор.Документ КАК Регистратор,
		|	ВложенныйЗапрос.Регистратор.GeoMarket,
		|	ВложенныйЗапрос.Регистратор.UpdateDateLawson,
		|	ВложенныйЗапрос.Регистратор.SeqTrnsNbrLawson,
		|	ВложенныйЗапрос.Регистратор.OrigCompanyLawson,
		|	ВложенныйЗапрос.Регистратор.Activity,
		|	ВложенныйЗапрос.Регистратор.JeTypeLawson,
		|	ВложенныйЗапрос.Регистратор.JournalLawson,
		|	ВложенныйЗапрос.Регистратор.LineNbrLawson,
		|	ВложенныйЗапрос.Регистратор.AutoRevLawson,
		|	ВложенныйЗапрос.Регистратор.Operator,
		|	ВложенныйЗапрос.Регистратор.LegalFiscalFlagLawson,
		|	ВложенныйЗапрос.Регистратор.Vendor,
		|	ВложенныйЗапрос.Регистратор.VendorVname,
		|	ВложенныйЗапрос.Регистратор.ApInvoice,
		|	ВложенныйЗапрос.Регистратор.TransNbr,
		|	ВложенныйЗапрос.Регистратор.OrigOperatorId,
		|	ВложенныйЗапрос.Регистратор.ProcessLevel,
		|	ВложенныйЗапрос.Регистратор.CashCode,
		|	ВложенныйЗапрос.Регистратор.PoNumber,
		|	ВложенныйЗапрос.Регистратор.LineNbrIc,
		|	ВложенныйЗапрос.Регистратор.PoCode,
		|	ВложенныйЗапрос.Регистратор.AssetLawson,
		|	ВложенныйЗапрос.Регистратор.ItemDescription,
		|	ВложенныйЗапрос.Регистратор.CustomerNumber,
		|	ВложенныйЗапрос.Регистратор.CustomerName,
		|	ВложенныйЗапрос.Регистратор.ArInvoice,
		|	ВложенныйЗапрос.Регистратор.TaxCode,
		|	ВложенныйЗапрос.Регистратор.Item,
		|	ВложенныйЗапрос.Регистратор.DocumentNbr,
		|	ВложенныйЗапрос.Регистратор.ContractNumber,
		|	ВложенныйЗапрос.Регистратор.AktOfAcceptance,
		|	ВложенныйЗапрос.Регистратор.AktDateLawson,
		|	ВложенныйЗапрос.Регистратор.ApTransFormId,
		|	ВложенныйЗапрос.Регистратор.AccountLawson,
		|	ВложенныйЗапрос.Регистратор.Company,
		|	ВложенныйЗапрос.Регистратор.Модуль,
		|	ВложенныйЗапрос.Регистратор.BaseAmount,
		|	ВложенныйЗапрос.Регистратор.Reference,
		|	ВложенныйЗапрос.Регистратор.Description,
		|	ВложенныйЗапрос.Регистратор.Currency,
		|	ВложенныйЗапрос.Регистратор.КонтрагентLawson,
		|	ВложенныйЗапрос.Регистратор.FiscalType
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПроводкиDSSОбщие.GltObjId КАК GltObjId,
		|		ПроводкиDSSОбщие.TranAmount КАК TranAmount,
		|		ПроводкиDSSОбщие.AccountLawson.Родитель.КодЧислом КАК SumAcct,
		|		ПроводкиDSSОбщие.AccountLawson.КодЧислом КАК Accnt,
		|		ПроводкиDSSОбщие.Регистратор КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.ПроводкиDSSОбщие КАК ПроводкиDSSОбщие
		|	ГДЕ
		|		ПроводкиDSSОбщие.Регистратор.Документ = &Регистратор
		|		И ПроводкиDSSОбщие.GltObjId <> 1000000000) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Регистратор.FiscalType.Авто");
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтруктураПолей = ОбработкаDSSСервер.ПрименитьФильтры(Неопределено,Выборка);
			Если ЗначениеЗаполнено(СтруктураПолей.FiscalType) Тогда
				Док = Выборка.Регистратор.ПолучитьОбъект();
				Док.FiscalType = СтруктураПолей.FiscalType;
				Док.Модуль = СтруктураПолей.Модуль;
				Док.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		КонецЦикла;
		Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.СчетКнигиПокупок") И Регистратор.Проведен Тогда
			МеханизмыКнигиПокупок.ПровестиДокумент(Регистратор);
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Детали.Очистить();
	Иначе
		ВывестиДетали(Элемент.ТекущиеДанные.GltObjId);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиДетали(ID)
	Детали.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроводкаDSS.Номер КАК GltObjId,
	|	ПроводкаDSS.GeoMarket,
	|	ПроводкаDSS.UpdateDateLawson,
	|	ПроводкаDSS.SeqTrnsNbrLawson,
	|	ПроводкаDSS.OrigCompanyLawson,
	|	ПроводкаDSS.Activity,
	|	ПроводкаDSS.SourceCode,
	|	ПроводкаDSS.System,
	|	ПроводкаDSS.JeTypeLawson,
	|	ПроводкаDSS.JournalLawson,
	|	ПроводкаDSS.LineNbrLawson,
	|	ПроводкаDSS.AutoRevLawson,
	|	ПроводкаDSS.Operator,
	|	ПроводкаDSS.LegalFiscalFlagLawson,
	|	ПроводкаDSS.Vendor,
	|	ПроводкаDSS.VendorVname,
	|	ПроводкаDSS.ApInvoice,
	|	ПроводкаDSS.TransNbr,
	|	ПроводкаDSS.OrigOperatorId,
	|	ПроводкаDSS.ProcessLevel,
	|	ПроводкаDSS.CashCode,
	|	ПроводкаDSS.PoNumber,
	|	ПроводкаDSS.LineNbrIc,
	|	ПроводкаDSS.PoCode,
	|	ПроводкаDSS.AssetLawson,
	|	ПроводкаDSS.ItemDescription,
	|	ПроводкаDSS.CustomerNumber,
	|	ПроводкаDSS.CustomerName,
	|	ПроводкаDSS.ArInvoice,
	|	ПроводкаDSS.TaxCode,
	|	ПроводкаDSS.Item,
	|	ПроводкаDSS.DocumentNbr,
	|	ПроводкаDSS.ContractNumber,
	|	ПроводкаDSS.AktOfAcceptance,
	|	ПроводкаDSS.AktDateLawson,
	|	ПроводкаDSS.ApTransFormId,
	|	ПроводкаDSS.Модуль,
	|	ПроводкаDSS.AccountLawson,
	|	ПроводкаDSS.Company,
	|	ПроводкаDSS.BaseAmount,
	|	ПроводкаDSS.Reference,
	|	ПроводкаDSS.Description,
	|	ПроводкаDSS.Currency,
	|	ПроводкаDSS.TranAmount,
	|	ПроводкаDSS.КонтрагентLawson.Код КАК Код,
	|	ПроводкаDSS.КонтрагентLawson.Наименование КАК Наименование
	|ИЗ
	|	Документ.ПроводкаDSS КАК ПроводкаDSS
	|ГДЕ
	|	ПроводкаDSS.Номер = &GltObjId";
	
	Запрос.УстановитьПараметр("GltObjId", ID);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() Тогда
		Запись = Результат[0];
	КонецЕсли;
	Если ЗначениеЗаполнено(Запись) Тогда
		Для Каждого Колонка Из Результат.Колонки Цикл
			Если  ЗначениеЗаполнено(Запись[Колонка.Имя]) ТОгда
				Выполнить("	Строка = Детали.Добавить();
				|Строка.ИмяПоля = Колонка.Имя;
				|Строка.Значение = Запись." + Колонка.Имя + ";
				|Если Колонка.Имя = ""Код"" Тогда Строка.ИмяПоля = ""Код контрагента Lawson""; КонецЕсли;
				|Если Колонка.Имя = ""Наименование"" Тогда Строка.ИмяПоля = ""Наименование контрагента Lawson""; КонецЕсли;"); 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	УстановитьТекстЗапроса();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстЗапроса()
	
	Если ЗначениеЗаполнено(Документ) Тогда
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	РегистрНакопленияПроводкиDSSОбщие.Период,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Регистратор,
		                      |	РегистрНакопленияПроводкиDSSОбщие.НомерСтроки,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Активность,
		                      |	РегистрНакопленияПроводкиDSSОбщие.AccountLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.FiscalType,
		                      |	РегистрНакопленияПроводкиDSSОбщие.AU,
		                      |	РегистрНакопленияПроводкиDSSОбщие.LegalEntity,
		                      |	РегистрНакопленияПроводкиDSSОбщие.BaseAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.RubAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.FiscAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.TempDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.PermDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.ExchDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.System,
		                      |	РегистрНакопленияПроводкиDSSОбщие.GltObjId,
		                      |	РегистрНакопленияПроводкиDSSОбщие.DateLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Reference,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Description,
		                      |	РегистрНакопленияПроводкиDSSОбщие.TranAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Currency,
		                      |	РегистрНакопленияПроводкиDSSОбщие.GUID,
		                      |	РегистрНакопленияПроводкиDSSОбщие.PeriodLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Company,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Модуль,
		                      |	РегистрНакопленияПроводкиDSSОбщие.МоментВремени
		                      |ИЗ
		                      |	РегистрНакопления.ПроводкиDSSОбщие КАК РегистрНакопленияПроводкиDSSОбщие
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                      |			ПроводкиПоДокументу.Ссылка КАК СсылкаНаРегистратор
		                      |		ИЗ
		                      |			КритерийОтбора.ПроводкиПоДокументу(&Регистратор) КАК ПроводкиПоДокументу
		                      |		
		                      |		ОБЪЕДИНИТЬ ВСЕ
		                      |		
		                      |		ВЫБРАТЬ
		                      |			&Регистратор) КАК ВложенныйЗапрос
		                      |		ПО (РегистрНакопленияПроводкиDSSОбщие.Регистратор = ВложенныйЗапрос.СсылкаНаРегистратор)";
		Список.Параметры.УстановитьЗначениеПараметра("Регистратор", Документ);
	Иначе
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	РегистрНакопленияПроводкиDSSОбщие.Период,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Регистратор,
		                      |	РегистрНакопленияПроводкиDSSОбщие.НомерСтроки,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Активность,
		                      |	РегистрНакопленияПроводкиDSSОбщие.AccountLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.FiscalType,
		                      |	РегистрНакопленияПроводкиDSSОбщие.AU,
		                      |	РегистрНакопленияПроводкиDSSОбщие.LegalEntity,
		                      |	РегистрНакопленияПроводкиDSSОбщие.BaseAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.RubAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.FiscAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.TempDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.PermDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.ExchDiff,
		                      |	РегистрНакопленияПроводкиDSSОбщие.System,
		                      |	РегистрНакопленияПроводкиDSSОбщие.GltObjId,
		                      |	РегистрНакопленияПроводкиDSSОбщие.DateLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Reference,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Description,
		                      |	РегистрНакопленияПроводкиDSSОбщие.TranAmount,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Currency,
		                      |	РегистрНакопленияПроводкиDSSОбщие.GUID,
		                      |	РегистрНакопленияПроводкиDSSОбщие.PeriodLawson,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Company,
		                      |	РегистрНакопленияПроводкиDSSОбщие.Модуль,
		                      |	РегистрНакопленияПроводкиDSSОбщие.МоментВремени
		                      |ИЗ
		                      |	РегистрНакопления.ПроводкиDSSОбщие КАК РегистрНакопленияПроводкиDSSОбщие";
	КонецЕсли;
						  
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьТекстЗапроса();
	
КонецПроцедуры
