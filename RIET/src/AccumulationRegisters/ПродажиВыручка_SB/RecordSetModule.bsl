//////////////////////////////////////////////////////////////////////////////////////
//ПЕРЕДАЧАОС
//////////////////////////////////////////////////////////////////////////////////////
//Продажи:

//	Продажи = Движения.Продажи;
//	ТаблицаПродаж = Продажи.Выгрузить();
//	ТаблицаПродаж.Очистить();
//	//Движение по регистру Продажи,
//	Для Каждого СтрокаТЧ Из ТаблицаПоТоварам Цикл
//		СтрокаПродаж = ТаблицаПродаж.Добавить();
//		ЗаполнитьЗначенияСвойств(СтрокаПродаж,СтрокаТЧ);
//		СтрокаПродаж.Регистратор = Ссылка;
//		СтрокаПродаж.ИнвойсинговыйЦентр = ИнвойсинговыйЦентр;
//		СтрокаПродаж.ПодразделениеОрганизации = ПодразделениеОрганизации;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		СтрокаПродаж.Валюта = ВалютаДокумента;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		СтрокаПродаж.Период = СтруктураШапкиДокумента.Дата;
//		СтрокаПродаж.Тип = ПолучитьТип("FA");
//		СтрокаПродаж.ДокументРеализации = Ссылка;
//		СтрокаПродаж.Номенклатура = СтрокаТЧ.ОсновноеСредство.НаименованиеПолное;
//		СтрокаПродаж.AU = СтрокаТЧ.КостЦентр;
//		//ресурсы
//		СтрокаПродаж.СуммаRUR = СтрокаТЧ.Сумма;
//		СтрокаПродаж.СуммаНДСRUR = СтрокаТЧ.НДС;
//		//реквизиты
//		СтрокаПродаж.НоменклатураНаименованиеENG = СтрокаТЧ.ОсновноеСредствоНаименованиеENG;
//		СтрокаПродаж.НалоговыйПериод = НалоговыйПериод;
//		ВнутреннийUSD = Справочники.Валюты.НайтиПоНаименованию("SLB");
//		USD = Справочники.Валюты.НайтиПоНаименованию("USD");
//		ВнутреннийКурсUSD = ОбщегоНазначения.ПолучитьКурсВалюты(ВнутреннийUSD, СтруктураШапкиДокумента.Дата);
//		Если ВалютаДокумента<>USD И ВалютаДокумента = СтруктураШапкиДокумента.ВалютаВзаиморасчетов Тогда //добавила "И" Людмила Федотова, РГ-Софт 
//			СтрокаПродаж.СуммаUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.СуммаНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.НДСВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.Курс = ВнутреннийКурсUSD.Курс;
//		Иначе
//			СтрокаПродаж.СуммаUSD = СтрокаТЧ.СуммаВал;
//			СтрокаПродаж.СуммаНДСUSD = СтрокаТЧ.НДСВал;
//			СтрокаПродаж.Курс = КурсВзаиморасчетов;
//		КонецЕсли;
//		
//	КонецЦикла;
//	ТаблицаПродаж.Свернуть("Период,НалоговыйПериод,Регистратор,ИнвойсинговыйЦентр,ПодразделениеОрганизации,ДоговорКонтрагента,Валюта,ДоговорКонтрагента,
//	|Тип,ДокументРеализации,Курс,ПричинаКН,УтвердилКН,AU,WO,СтавкаНДС,Номенклатура,НоменклатураНаименованиеENG,ДокументАванса,НомерСтрокиТабЧасти",
//	"СуммаRUR,СуммаНДСRUR,СуммаUSD,СуммаНДСUSD");
//	
//	Продажи.Загрузить(ТаблицаПродаж);
//	Продажи.Записать();

//Выручка_SB:

//	ВыручкаДвижения = Движения.Выручка_SB;
//	
//	Для Каждого Запись Из ТаблицаПоТоварам Цикл
//		Движение = ВыручкаДвижения.Добавить();
//		Движение.Период 			= ДатаПроведения;
//		Движение.Организация 		= Организация;
//		Движение.Подразделение 		= ПодразделениеОрганизации;
//		Движение.Контрагент 		= Контрагент;
//		Движение.Договор 			= ДоговорКонтрагента;
//		Движение.ВалютаДокумента 	= ВалютаДокумента;
//		Движение.ВалютаДоговора 	= СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
//		//Движение.AU 				= Запись.AU;  //исправила Федотова Л., РГ-Софт, 02.02.2010
//		Движение.AU 				= Запись.КостЦентр;
//		Движение.ОсновноеСредство	= Запись.ОсновноеСредство;
//		Движение.НалоговыйПериод 	= НалоговыйПериод;
//		
//		//Если УчитыватьНДС Тогда
//		//	Движение.СуммаБезНДСРуб = ПолучитьРубСумму(СтруктураШапкиДокумента, Запись.СуммаБезНДС);
//		//	Движение.СуммаБезНДС 	= Запись.СуммаБезНДС;
//		//	Движение.СуммаНДСРуб	= ПолучитьРубСумму(СтруктураШапкиДокумента, Запись.НДС);
//		//	Движение.СуммаНДС 		= Запись.НДС;				
//		//Иначе
//		//	Движение.СуммаБезНДСРуб = ПолучитьРубСумму(СтруктураШапкиДокумента, Запись.Сумма);
//		//	Движение.СуммаБезНДС 	= Запись.Сумма;
//		//КонецЕсли;
//		
//		Если УчитыватьНДС Тогда
//			Движение.СуммаБезНДСРуб = Запись.СуммаБезНДС;
//			Движение.СуммаБезНДС 	= Запись.СуммаБезНДСВал;
//			Движение.СуммаНДСРуб	= Запись.НДС;
//			Движение.СуммаНДС 		= Запись.НДСВал;				
//		Иначе
//			Движение.СуммаБезНДСРуб = Запись.Сумма;
//			Движение.СуммаБезНДС 	= Запись.СуммаВал;
//		КонецЕсли;			
//	КонецЦикла;



//////////////////////////////////////////////////////////////////////////////////////
//РЕАЛИЗАЦИЯТОВАРОВУСЛУГ
//////////////////////////////////////////////////////////////////////////////////////

//Продажи:

//	Продажи = Движения.Продажи;
//	ТаблицаПродаж = Продажи.Выгрузить();
//	//Движение по регистру Продажи,
//	ВнутреннийUSD = Справочники.Валюты.НайтиПоНаименованию("SLB");
//	USD = Справочники.Валюты.НайтиПоНаименованию("USD");
//	Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно Тогда
//		ВнутреннийКурсUSD = ОбщегоНазначения.ПолучитьКурсВалюты(ВнутреннийUSD, Сделка.Дата);
//	Иначе		
//		ВнутреннийКурсUSD = ОбщегоНазначения.ПолучитьКурсВалюты(ВнутреннийUSD, СтруктураШапкиДокумента.Дата);
//	КонецЕсли; 
//	ВалютаДокументаКурс = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаДокумента, СтруктураШапкиДокумента.Дата);
//	Для Каждого СтрокаТЧ Из ТаблицаПоУслугам Цикл
//		СтрокаПродаж = ТаблицаПродаж.Добавить();
//		ЗаполнитьЗначенияСвойств(СтрокаПродаж,СтрокаТЧ);
//		СтрокаПродаж.Регистратор = Ссылка;
//		СтрокаПродаж.ИнвойсинговыйЦентр = ИнвойсинговыйЦентр;
//		СтрокаПродаж.ПодразделениеОрганизации = ПодразделениеОрганизации;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		Если ДоговорКонтрагента.ВалютаВзаиморасчетов = USD Тогда
//			СтрокаПродаж.Валюта = ДоговорКонтрагента.ВалютаВзаиморасчетов;
//		Иначе
//			СтрокаПродаж.Валюта = ВалютаДокумента;
//		КонецЕсли;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		СтрокаПродаж.Период = СтруктураШапкиДокумента.Дата;
//		СтрокаПродаж.НалоговыйПериод = НалоговыйПериод;
//		СтрокаПродаж.Тип = ПолучитьТип("W&S");
//		СтрокаПродаж.Номенклатура = СтрокаТЧ.Содержание;
//		СтрокаПродаж.AU = СтрокаТЧ.AU;
//		СтрокаПродаж.НоменклатураНаименованиеENG = СтрокаТЧ.Номенклатура.НаименованиеENG;
//		//ресурсы
//		СтрокаПродаж.СуммаRUR = СтрокаТЧ.Сумма;
//		СтрокаПродаж.СуммаНДСRUR = СтрокаТЧ.НДС;
//		Если ВалютаДокумента<>USD И ВалютаДокумента = СтруктураШапкиДокумента.ВалютаВзаиморасчетов Тогда //добавила "И" Людмила Федотова, РГ-Софт
//			СтрокаПродаж.СуммаUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.СуммаНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.НДСВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.Курс = ВнутреннийКурсUSD.Курс;
//		ИначеЕсли ВалютаДокумента<>USD И ВалютаДокумента <> СтруктураШапкиДокумента.ВалютаВзаиморасчетов Тогда 
//			СтрокаПродаж.СуммаUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.Сумма, ВалютаДокумента, USD, ВалютаДокументаКурс.Курс, КурсВзаиморасчетов);
//			СтрокаПродаж.СуммаНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.НДС, ВалютаДокумента, USD, ВалютаДокументаКурс.Курс, КурсВзаиморасчетов);
//			СтрокаПродаж.Курс = КурсВзаиморасчетов;
//		Иначе
//			СтрокаПродаж.СуммаUSD = СтрокаТЧ.СуммаВал;
//			СтрокаПродаж.СуммаНДСUSD = СтрокаТЧ.НДСВал;
//			СтрокаПродаж.Курс = КурсВзаиморасчетов;
//		КонецЕсли;	
//		Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно Тогда
//			СтрокаПродаж.ДокументРеализации = СтруктураШапкиДокумента.СделкаИсходн;
//		Иначе
//			СтрокаПродаж.ДокументРеализации = Ссылка;
//		КонецЕсли;
//		Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаОтрицатСФ Тогда
//				СтрокаПродаж.ПричинаКН = ОснованиеКредитНоты;
//				СтрокаПродаж.УтвердилКН = Утвердил;//тут надо наверно обращаться к регистру СтатусыКН 
//			СтрокаПродаж.Тип = ПолучитьТип("CN");
//		КонецЕсли;
//		Если ТипЗнч(Сделка) = Тип("ДокументСсылка.ПередачаОС") Тогда
//			СтрокаПродаж.Тип = ПолучитьТип("FA");
//		КонецЕсли;            

//	КонецЦикла;
//	Для Каждого СтрокаТЧ Из ТаблицаПоТоварам Цикл
//		СтрокаПродаж = ТаблицаПродаж.Добавить();
//		ЗаполнитьЗначенияСвойств(СтрокаПродаж,СтрокаТЧ);
//		СтрокаПродаж.Регистратор = Ссылка;
//		СтрокаПродаж.ИнвойсинговыйЦентр = ИнвойсинговыйЦентр;
//		СтрокаПродаж.ПодразделениеОрганизации = ПодразделениеОрганизации;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		СтрокаПродаж.Валюта = ВалютаДокумента;
//		СтрокаПродаж.ДоговорКонтрагента = ДоговорКонтрагента;
//		СтрокаПродаж.Период = СтруктураШапкиДокумента.Дата;
//		СтрокаПродаж.НалоговыйПериод = НалоговыйПериод;
//		СтрокаПродаж.Тип = ПолучитьТип("P&M");
//		СтрокаПродаж.Номенклатура = СтрокаТЧ.Номенклатура.НаименованиеПолное;
//		Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно Тогда
//			СтрокаПродаж.ДокументРеализации = СтруктураШапкиДокумента.СделкаИсходн;
//		Иначе
//			СтрокаПродаж.ДокументРеализации = Ссылка;
//		КонецЕсли;
//		СтрокаПродаж.AU = СтрокаТЧ.AU;
//		СтрокаПродаж.НоменклатураНаименованиеENG = СтрокаТЧ.Номенклатура.НаименованиеENG;
//		//ресурсы
//		СтрокаПродаж.СуммаRUR = СтрокаТЧ.Сумма;
//		СтрокаПродаж.СуммаНДСRUR = СтрокаТЧ.НДС;
//		Если ВалютаДокумента<>USD И ВалютаДокумента = СтруктураШапкиДокумента.ВалютаВзаиморасчетов Тогда //добавила "И" Людмила Федотова, РГ-Софт
//			СтрокаПродаж.СуммаUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.СуммаВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.СуммаНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.НДСВал, ВалютаДокумента, ВнутреннийUSD, КурсВзаиморасчетов, ВнутреннийКурсUSD.Курс);
//			СтрокаПродаж.Курс = ВнутреннийКурсUSD.Курс;
//		ИначеЕсли ВалютаДокумента<>USD И ВалютаДокумента <> СтруктураШапкиДокумента.ВалютаВзаиморасчетов Тогда 
//			СтрокаПродаж.СуммаUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.Сумма, ВалютаДокумента, USD, ВалютаДокументаКурс.Курс, КурсВзаиморасчетов);
//			СтрокаПродаж.СуммаНДСUSD = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТЧ.НДС, ВалютаДокумента, USD, ВалютаДокументаКурс.Курс, КурсВзаиморасчетов);
//			СтрокаПродаж.Курс = КурсВзаиморасчетов;
//		Иначе
//			СтрокаПродаж.СуммаUSD = СтрокаТЧ.СуммаВал;
//			СтрокаПродаж.СуммаНДСUSD = СтрокаТЧ.НДСВал;
//			СтрокаПродаж.Курс = КурсВзаиморасчетов;
//		КонецЕсли;			
//		Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно ИЛИ
//			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаОтрицатСФ Тогда
//				СтрокаПродаж.ПричинаКН = ОснованиеКредитНоты;
//				СтрокаПродаж.УтвердилКН = Утвердил;//тут надо наверно обращаться к регистру СтатусыКН 			
//			СтрокаПродаж.Тип = ПолучитьТип("CN");
//		КонецЕсли;
//	КонецЦикла;
//	
//	Если ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.КредитНотаСторно 
//		И ПодразделениеОрганизации <> Сделка.ПодразделениеОрганизации Тогда
//		Для каждого Строка Из ТаблицаПродаж Цикл
//			 Если Строка.СуммаRUR < 0 Тогда
//				 Строка.ПодразделениеОрганизации = Сделка.ПодразделениеОрганизации;
//			 КонецЕсли; 
//		КонецЦикла; 
//	КонецЕсли; 
//	
//	Если НЕ ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота Тогда
//		ТаблицаПродаж.Свернуть("Период,НалоговыйПериод,Регистратор,ИнвойсинговыйЦентр,ПодразделениеОрганизации,ДоговорКонтрагента,Валюта,ДоговорКонтрагента,
//								|Тип,ДокументРеализации,Курс,ПричинаКН,УтвердилКН,WO,СтавкаНДС,Номенклатура,AU,НоменклатураНаименованиеENG,ДокументАванса,НомерСтрокиТабЧасти",
//								"СуммаRUR,СуммаНДСRUR,СуммаUSD,СуммаНДСUSD");  		//изменено RG-Soft Федотова
//	КонецЕсли;							
//	Если ВидОперации <> Перечисления.ВидыОперацийРеализацияТоваров.РеализацияАгент Тогда
//		Продажи.Загрузить(ТаблицаПродаж);
//		Продажи.Записать();
//	КонецЕсли;
	

//Выручка_SB

//	Если НЕ ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВнутренняяКредитНота 
//		И НЕ ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.РеализацияАгент //добавила Федотова Л., РГ-Софт, 06.07.12
//		Тогда
//		ДвиженияПоРегиструВыручка_SB(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоУслугам);
//	КонецЕсли;

	//ВыручкаДвижения = Движения.Выручка_SB;
	//
	//Для Каждого Запись Из ТаблицаПоТоварам Цикл
	//	Движение = ВыручкаДвижения.Добавить();
	//	Движение.Период 			= ДатаПроведения;
	//	Движение.Организация 		= Организация;
	//	Движение.Подразделение 		= ПодразделениеОрганизации;
	//	Движение.Контрагент 		= Контрагент;
	//	Движение.Договор 			= ДоговорКонтрагента;
	//	Движение.ВалютаДокумента 	= ВалютаДокумента;
	//	Движение.ВалютаДоговора 	= СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
	//	Движение.AU 				= Запись.AU;
	//	Движение.Номенклатура 		= Запись.Номенклатура;
	//	Движение.НалоговыйПериод 	= НалоговыйПериод;
	//	
	//	Если УчитыватьНДС Тогда
	//		Движение.СуммаБезНДСРуб = Запись.СуммаБезНДС;
	//		Движение.СуммаБезНДС 	= Запись.СуммаБезНДСВал;
	//		Движение.СуммаНДСРуб	= Запись.НДС;
	//		Движение.СуммаНДС 		= Запись.НДСВал;				
	//	Иначе
	//		Движение.СуммаБезНДСРуб = Запись.Сумма;
	//		Движение.СуммаБезНДС 	= Запись.СуммаВал;
	//	КонецЕсли;		
	//КонецЦикла;
	//
	//Для Каждого Запись Из ТаблицаПоУслугам Цикл
	//	Движение = ВыручкаДвижения.Добавить();
	//	Движение.Период 			= ДатаПроведения;
	//	Движение.Организация 		= Организация;
	//	Движение.Подразделение 		= ПодразделениеОрганизации;
	//	Движение.Контрагент 		= Контрагент;
	//	Движение.Договор 			= ДоговорКонтрагента;
	//	Движение.ВалютаДокумента 	= ВалютаДокумента;
	//	Движение.ВалютаДоговора 	= СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
	//	Движение.AU 				= Запись.AU;
	//	Движение.Номенклатура 		= Запись.Номенклатура;
	//	Движение.НалоговыйПериод 	= НалоговыйПериод;
	//	
	//	Если УчитыватьНДС Тогда
	//		Движение.СуммаБезНДСРуб = Запись.СуммаБезНДС;
	//		Движение.СуммаБезНДС 	= Запись.СуммаБезНДСВал;
	//		Движение.СуммаНДСРуб	= Запись.НДС;
	//		Движение.СуммаНДС 		= Запись.НДСВал;				
	//	Иначе
	//		Движение.СуммаБезНДСРуб = Запись.Сумма;
	//		Движение.СуммаБезНДС 	= Запись.СуммаВал;
	//	КонецЕсли;
	//КонецЦикла;
	
	
//////////////////////////////////////////////////////////////////////////////////////
//ОТЧЕТАГЕНТАПОРАСХОДАМ
//////////////////////////////////////////////////////////////////////////////////////

//Продажи:

	//// регистр Продажи Расход 	
	//Движения.Продажи.Записывать = Истина;  	
	//
	//Движение 						  = Движения.Продажи.Добавить();  
	//Движение.Период 		 		  = ДатаПроведения;
	//Движение.ИнвойсинговыйЦентр 	  = ИнвойсинговыйЦентр;
	//Движение.ПодразделениеОрганизации = ПодразделениеОрганизации; 
	//Движение.ДоговорКонтрагента 	  = ДоговорКонтрагента; 
	//Движение.AU						  = АгентскийAU;
	//Движение.СтавкаНДС				  = АгентскаяСтавкаНДС;
	//Движение.Валюта					  = ВалютаДокумента;
	////Движение.WO не надо заполнять
	//Движение.Номенклатура			  = НоменклатураАгентская;
	//Движение.Тип					  = "АГЕ";
	//Движение.ДокументРеализации		  = Ссылка;
	//
	//Движение.НалоговыйПериод = НалоговыйПериод;   		
	//
	////Суммы в рублях и долларах принудительно переводим
	//ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
	//СтруктураКурсаРуб   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата); 
	//
	//СуммаRUR		= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскаяСумма + АгентскийНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);  			
	//СуммаНДСRUR 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскийНДС,
	//		ВалютаДокумента, ВалютаРуб, 
	//		КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
	//		

	//ВалютаUSD = Справочники.Валюты.НайтиПоНаименованию("USD");;
	//СтруктураКурсаUSD   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаUSD, Дата); 
	//
	//СуммаUSD		= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскаяСумма + АгентскийНДС,
	//		ВалютаДокумента, ВалютаUSD, 
	//		КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность);  			
	//СуммаНДСUSD 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
	//		АгентскийНДС,
	//		ВалютаДокумента, ВалютаUSD, 
	//		КурсВзаиморасчетов, СтруктураКурсаUSD.Курс,
	//		КратностьВзаиморасчетов, СтруктураКурсаUSD.Кратность);
	//
	//Движение.СуммаRUR     = СуммаRUR;
	//Движение.СуммаUSD     = СуммаUSD;
	//Движение.СуммаНДСRUR  = СуммаНДСRUR;
	//Движение.СуммаНДСUSD  = СуммаНДСUSD; 
	
	
//Выручка_SB

//	// регистр Выручка_SB Расход 	
//	Движения.Выручка_SB.Записывать = Истина;  	
//		
//	Движение = Движения.Выручка_SB.Добавить();
//	Движение.Период 		 = ДатаПроведения;
//	Движение.Организация 	 = Организация;
//	Движение.Подразделение	 = ПодразделениеОрганизации; 
//	Движение.Контрагент    	 = Контрагент;
//	Движение.Договор    	 = ДоговорКонтрагента;
//	Движение.НалоговыйПериод = НалоговыйПериод;   		
//	
//	Движение.СуммаБезНДС     = АгентскаяСумма;
//	Движение.СуммаНДС 		 = АгентскийНДС; 
//	
//	ВалютаРуб = Константы.ВалютаРегламентированногоУчета.Получить();
//	СтруктураКурсаРуб   = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРуб, Дата);

//	Движение.СуммаБезНДСРуб = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
//			Движение.СуммаБезНДС,
//			ВалютаДокумента, ВалютаРуб, 
//			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
//			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
//			
//	Движение.СуммаНДСРуб 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
//			Движение.СуммаНДС,
//			ВалютаДокумента, ВалютаРуб, 
//			КурсВзаиморасчетов, СтруктураКурсаРуб.Курс,
//			КратностьВзаиморасчетов, СтруктураКурсаРуб.Кратность);
//	
//	Движение.ВалютаДокумента = ВалютаДокумента;
//	Движение.ВалютаДоговора  = ДоговорКонтрагента.ВалютаВзаиморасчетов;
//	Движение.Номенклатура	 = НоменклатураАгентская;
//	Движение.AU				 = АгентскийAU;   

//////////////////////////////////////////////////////////////////////////////////////
//ОТЧЕТПРИНЦИПАЛУОПРОДАЖАХ
//////////////////////////////////////////////////////////////////////////////////////

//Продажи:

	//ДатаДока   = СтруктураШапкиДокумента.Дата;
	//
	//ТаблицаВыручки = ТаблицаПоУслугам.Скопировать();
	//ТаблицаВыручки.Свернуть("AU","Сумма,СуммаБезНДС,НДС,СуммаВал,СуммаБезНДСВал,НДСВал");
	//Продажи = Движения.Продажи;
	//Для Каждого СтрокаТЧ Из ТаблицаВыручки Цикл
	//	Запись = Продажи.Добавить();
	//	Запись.AU = СтрокаТЧ.AU; 
	//	Запись.Валюта = СтруктураШапкиДокумента.ВалютаДокумента;
	//	Запись.ДоговорКонтрагента = СтруктураШапкиДокумента.ДоговорКонтрагента;
	//	Запись.ДокументРеализации = СтруктураШапкиДокумента.Ссылка;
	//	Запись.ИнвойсинговыйЦентр = Справочники.ИнвойсинговыеЦентры.ПустаяСсылка();
	//	ВалютаSLB = Справочники.Валюты.НайтиПоНаименованию("SLB");
	//	КурсSLB = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаSLB,СтруктураШапкиДокумента.Дата).Курс;
	//	Запись.Курс = КурсSLB;
	//	Запись.НалоговыйПериод = СтруктураШапкиДокумента.Дата;
	//	Запись.Номенклатура = СтруктураШапкиДокумента.УслугаПоВознаграждению;
	//	Запись.НоменклатураНаименованиеENG = СтруктураШапкиДокумента.УслугаПоВознаграждению.НаименованиеENG;
	//	Запись.Период = СтруктураШапкиДокумента.Дата;
	//	Запись.ПодразделениеОрганизации = СтруктураШапкиДокумента.ПодразделениеОрганизации;
	//	Запись.СтавкаНДС = СтруктураШапкиДокумента.СтавкаНДСВознаграждения;
	//	Запись.СуммаRUR = СтрокаТЧ.СуммаБезНДС;
	//	Запись.СуммаUSD = СтрокаТЧ.СуммаБезНДС/КурсSLB;
	//	Запись.СуммаНДСRUR = СтрокаТЧ.НДС;
	//	Запись.СуммаНДСUSD = СтрокаТЧ.НДС/КурсSLB;
	//	Запись.Тип = "AGE";
	//	
	//КонецЦикла;
	//Продажи.Записать();
	
	
	
	
	


