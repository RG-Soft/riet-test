
/////////////////////////////////////////////////////////////////////////////////////
// РЕГИСТРАЦИЯ ОШИБОК

// Процедуры ниже предназначены для регистрации ошибок заполнения реквизтов объекта
// Ошибки классифицируются по типу и по способу регистрации
// 	По типу: "не заполнен" и "заполнен неправильно"
// 	По способу регистрации: "автоиматические" и "ручные"
// 		"Автоматические" - такие ошибки, которые регистрируются при записи или при проведении внутри объекта
// 		"Ручные" - такие ошибки, которые регистрируются вне обработчиков событий объекта
// Все процедуры "перегружены": первый параметр может принимать переменные двух типов: типа структура и типа %объект
// 	Если передана структура таблиц регистрации ошибок - процедура считает, что регистрируется "ручная" ошибка
//	В противном случае считается, что ошибка регистрируется "автоматическая" ошибка
// Последние два параметра: Сообщать и Заголовок предназначены для дополнительного вывода сообщений в окно сообщений

Процедура ЗарегистрироватьОшибкуВШапкеТипаНеЗаполнен(ОбъектИлиСтруктураТаблицРегистрацииОшибок, ИмяРеквизита, РекомендацияПоУстранению = "", Отказ = Неопределено, Сообщать = Ложь, Заголовок = "") Экспорт
	
	ПереданаСтруктура = (ТипЗнч(ОбъектИлиСтруктураТаблицРегистрацииОшибок) = Тип("Структура"));
	
	Если ПереданаСтруктура Тогда
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ОшибкиВШапкеТипаНеЗаполнен;
	Иначе
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВШапкеТипаНеЗаполнен;
	КонецЕсли;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
	НоваяСтрока.РекомендацияПоУстранению = РекомендацияПоУстранению;
	
	Если Сообщать Тогда
		
		Если ПереданаСтруктура Тогда
			
			ПредставлениеРеквизита = ИмяРеквизита;
			
		Иначе
			
			МетаданныеРеквизиты = ОбъектИлиСтруктураТаблицРегистрацииОшибок.Метаданные().Реквизиты;
			ПредставлениеРеквизита = МетаданныеРеквизиты[ИмяРеквизита].Представление();
			
		КонецЕсли;
		
		ТекстОшибки = "Не заполнено значение реквизита """ + ПредставлениеРеквизита + """!";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибкуВШапкеТипаЗаполненНеправильно(ОбъектИлиСтруктураТаблицРегистрацииОшибок, ПредставлениеРеквизита, ОписаниеОшибки, РекомендацияПоУстранению = "", Отказ = Неопределено, Сообщать = Ложь, Заголовок = "") Экспорт
	
	ПереданаСтруктура = (ТипЗнч(ОбъектИлиСтруктураТаблицРегистрацииОшибок) = Тип("Структура"));
	
	Если ПереданаСтруктура Тогда
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ОшибкиВШапкеТипаЗаполненНеправильно;
	Иначе
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВШапкеТипаЗаполненНеправильно;
	КонецЕсли;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПредставлениеРеквизита = ПредставлениеРеквизита;
	НоваяСтрока.ОписаниеОшибки = ОписаниеОшибки;
	НоваяСтрока.РекомендацияПоУстранению = РекомендацияПоУстранению;
	
	Если Сообщать Тогда
		
		ТекстОшибки = """" + ПредставлениеРеквизита + """: " + ОписаниеОшибки + "."; 		
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибкуВТЧТипаНеЗаполнен(ОбъектИлиСтруктураТаблицРегистрацииОшибок, ИмяТабличнойЧасти, НомерСтроки, ИмяРеквизита, РекомендацияПоУстранению = "", Отказ = Неопределено, Сообщать = Ложь, Заголовок = "") Экспорт
	
	ПереданаСтруктура = ТипЗнч(ОбъектИлиСтруктураТаблицРегистрацииОшибок) = Тип("Структура"); 
	Если ПереданаСтруктура Тогда
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаНеЗаполнен;
	Иначе
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаНеЗаполнен;
	КонецЕсли;
		
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
	НоваяСтрока.НомерСтрокиТабличнойЧасти = НомерСтроки;
	НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
	НоваяСтрока.РекомендацияПоУстранению = РекомендацияПоУстранению;
	
	Если Сообщать Тогда
		
		Если ПереданаСтруктура Тогда
			
			ПредставлениеТабличнойЧасти = ИмяТабличнойЧасти;
			ПредставлениеРеквизита = ИмяРеквизита;
			
		Иначе
			
			МетаданныеТабличнойЧасти = ОбъектИлиСтруктураТаблицРегистрацииОшибок.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти];
			ПредставлениеТабличнойЧасти = МетаданныеТабличнойЧасти.Представление();
			ПредставлениеРеквизита = МетаданныеТабличнойЧасти.Реквизиты[ИмяРеквизита].Представление();
				
		КонецЕсли;
		
		ТекстОшибки = "В строке номер """ + НомерСтроки
						+ """ табличной части """ + ПредставлениеТабличнойЧасти
						+ """: Не заполнено значение реквизита """ + ПредставлениеРеквизита + """!";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибкуВТЧТипаЗаполненНеправильно(ОбъектИлиСтруктураТаблицРегистрацииОшибок, ПредставлениеТабличнойЧасти, НомерСтроки, ПредставлениеРеквизита, ОписаниеОшибки, РекомендацияПоУстранению = "", Отказ = Неопределено, Сообщать = Ложь, Заголовок = "") Экспорт
	
	ПереданаСтруктура = (ТипЗнч(ОбъектИлиСтруктураТаблицРегистрацииОшибок) = Тип("Структура"));
	
	Если ПереданаСтруктура Тогда
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно;
	Иначе
		Таблица = ОбъектИлиСтруктураТаблицРегистрацииОшибок.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно;
	КонецЕсли;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПредставлениеТабличнойЧасти = ПредставлениеТабличнойЧасти;
	НоваяСтрока.НомерСтрокиТабличнойЧасти = НомерСтроки;
	НоваяСтрока.ПредставлениеРеквизита = ПредставлениеРеквизита;
	НоваяСтрока.ОписаниеОшибки = ОписаниеОшибки;
	НоваяСтрока.РекомендацияПоУстранению = РекомендацияПоУстранению;
	
	Если Сообщать Тогда
		
		ТекстОшибки = "В строке номер """ + НомерСтроки
						+ """ табличной части """ + ПредставлениеТабличнойЧасти
						+ """, реквизит """ + ПредставлениеРеквизита + """: " + ОписаниеОшибки + "!"; 		
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ, Заголовок);
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ТАБЛИЦАМИ ОШИБОК

// Используется для регистрации "ручных" ошибок
Функция ПолучитьСтруктуруТаблицРегистрацииОшибок() Экспорт
	
	СтруктураТаблиц = Новый Структура;
	
	НаборЗаписей = РегистрыСведений.ОшибкиВШапкеТипаНеЗаполнен.СоздатьНаборЗаписей();
	Таблица = НаборЗаписей.ВыгрузитьКолонки("ИмяРеквизита, РекомендацияПоУстранению");
	СтруктураТаблиц.Вставить("ОшибкиВШапкеТипаНеЗаполнен", Таблица);
	
	НаборЗаписей = РегистрыСведений.ОшибкиВШапкеТипаЗаполненНеправильно.СоздатьНаборЗаписей();
	Таблица = НаборЗаписей.ВыгрузитьКолонки("ПредставлениеРеквизита, ОписаниеОшибки, РекомендацияПоУстранению");
	СтруктураТаблиц.Вставить("ОшибкиВШапкеТипаЗаполненНеправильно", Таблица);
	
	НаборЗаписей = РегистрыСведений.ОшибкиВТабличныхЧастяхТипаНеЗаполнен.СоздатьНаборЗаписей();
	Таблица = НаборЗаписей.ВыгрузитьКолонки("ИмяТабличнойЧасти, НомерСтрокиТабличнойЧасти, ИмяРеквизита, РекомендацияПоУстранению");
	СтруктураТаблиц.Вставить("ОшибкиВТабличныхЧастяхТипаНеЗаполнен", Таблица);
	
	НаборЗаписей = РегистрыСведений.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно.СоздатьНаборЗаписей();
	Таблица = НаборЗаписей.ВыгрузитьКолонки("ПредставлениеТабличнойЧасти, НомерСтрокиТабличнойЧасти, ПредставлениеРеквизита, ОписаниеОшибки, РекомендацияПоУстранению");
	СтруктураТаблиц.Вставить("ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно", Таблица);
	
	Возврат СтруктураТаблиц;
	
КонецФункции

// Используется для регистрации "ручных" ошибок в дополнительных свойствах объекта непосредственно перед записью или проведением
Процедура ПоместитьСтруктуруТаблицРучнойРегистрацииОшибокВДополнительныеСвойстваОбъекта(Объект, СтруктураТаблицРучнойРегистрацииОшибок) Экспорт
	
	СтруктураДанныхОшибокЗаполнения = Объект.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения;
	СтруктураДанныхОшибокЗаполнения.Вставить("СтруктураТаблицРучнойРегистрацииОшибок", СтруктураТаблицРучнойРегистрацииОшибок);
	
КонецПроцедуры

// Используется для инициализации структуры данных ошибок заполнения в дополнительных свойствах объекта при его создании
Функция ИнициализироватьСтруктуруДанныхОшибокЗаполнения(Объект) Экспорт
	
	СтруктураДанныхОшибокЗаполнения = Новый Структура;
	СтруктураДанныхОшибокЗаполнения.Вставить("СтруктураТаблицАвтоматическойРегистрацииОшибок", ПолучитьСтруктуруТаблицРегистрацииОшибок());
	СтруктураДанныхОшибокЗаполнения.Вставить("ПроведениеБыло", Ложь);
	Объект.ДополнительныеСвойства.Вставить("СтруктураДанныхОшибокЗаполнения", СтруктураДанныхОшибокЗаполнения);
	
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////
// РЕГЛАМЕНТНЫЕ ОПЕРАЦИИ СОБЫТИЙ ОБЪЕКТОВ

// Процедуры ниже предназначены для выполнения регламентных процедур обновления регистров регистрации ошибок при записи или проведении объектов

Процедура ОбновитьОшибкиВШапкеТипаНеЗаполнен(Объект) Экспорт
	
	// Прочитаем существующие записи в регистре
	НаборЗаписей = РегистрыСведений.ОшибкиВШапкеТипаНеЗаполнен.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	// Сформируем таблицу новых ошибок
	СтруктураДанныхОшибокЗаполнения = Объект.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения;
	ТаблицаНовыхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВШапкеТипаНеЗаполнен.Скопировать();
	
	Если СтруктураДанныхОшибокЗаполнения.Свойство("СтруктураТаблицРучнойРегистрацииОшибок") Тогда
		
		// Добавим в таблицу новых ошибок ошибки, сформированные вручную
		ТаблицаНовыхРучныхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицРучнойРегистрацииОшибок.ОшибкиВШапкеТипаНеЗаполнен;
		Для Каждого Строка Из ТаблицаНовыхРучныхОшибок Цикл
			
			НоваяСтрока = ТаблицаНовыхОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Ссылка = Объект.Ссылка;
	НеобходимоЗаписать = Ложь;
		
	// Оставим только те записи таблицы, которых нет в регистре
	Если ТаблицаНовыхОшибок.Количество() Тогда
		
		Для Каждого Запись Из НаборЗаписей Цикл
			
			СтрокаТаблицы = ТаблицаНовыхОшибок.Найти(Запись.ИмяРеквизита, "ИмяРеквизита");
			Если СтрокаТаблицы <> Неопределено Тогда
				ТаблицаНовыхОшибок.Удалить(СтрокаТаблицы);
			КонецЕсли;
			
		КонецЦикла;
		
		// Если в таблице остались записи - поместим их в регистр
		Если ТаблицаНовыхОшибок.Количество() Тогда
			
			НеобходимоЗаписать = Истина;
			
			РеквизитыОбъекта = Объект.Метаданные().Реквизиты;
			Для Каждого Строка Из ТаблицаНовыхОшибок Цикл
							
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Объект = Ссылка;
				НоваяЗапись.ИмяРеквизита = Строка.ИмяРеквизита;
				НоваяЗапись.ПредставлениеРеквизита = РеквизитыОбъекта[Строка.ИмяРеквизита].Представление();
				НоваяЗапись.РекомендацияПоУстранению = Строка.РекомендацияПоУстранению;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли; //Если ТаблицаНовыхОшибок.Количество() 
	
	// Удалим записи, которые уже неактуальны
	ы = 0;
	Пока ы < НаборЗаписей.Количество() Цикл
		
		Если ЗначениеЗаполнено(Объект[НаборЗаписей[ы].ИмяРеквизита]) Тогда
			
			НаборЗаписей.Удалить(ы);
			НеобходимоЗаписать = Истина;
			Продолжить;
			
		КонецЕсли;
		
		ы = ы + 1;
				
	КонецЦикла;
	
	Если НеобходимоЗаписать Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбновитьОшибкиВШапкеТипаЗаполненНеправильно(Объект) Экспорт
	
	// Прочитаем существующие записи в регистре
	НаборЗаписей = РегистрыСведений.ОшибкиВШапкеТипаЗаполненНеправильно.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	// Сформируем таблицу новых ошибок
	СтруктураДанныхОшибокЗаполнения = Объект.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения;
	
	// Добавим записи автоматических ошибок
	ТаблицаНовыхАвтоматическихОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВШапкеТипаЗаполненНеправильно;
	ТаблицаНовыхОшибок = ТаблицаНовыхАвтоматическихОшибок.Скопировать();
	ТаблицаНовыхОшибок.Колонки.Добавить("Автоматическая", Новый ОписаниеТипов("Булево"));
	// Пока в таблице содержатся только автоматические ошибки, поэтому колонку "Автоматическая" можем смело заполнить Истиной
	ТаблицаНовыхОшибок.ЗаполнитьЗначения(Истина, "Автоматическая");
	
	// Добавим записи ручных ошибок
	Если СтруктураДанныхОшибокЗаполнения.Свойство("СтруктураТаблицРучнойРегистрацииОшибок") Тогда
		
		ТаблицаНовыхРучныхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицРучнойРегистрацииОшибок.ОшибкиВШапкеТипаЗаполненНеправильно;	
		Для Каждого СтрокаТаблицыРучныхОшибок Из ТаблицаНовыхРучныхОшибок Цикл
			
			// Если запись уже есть в автоматических ошибках - не будем ее добавлять, так как у автоматических ошибок есть приоритет над ручными
			СтрокаТаблицыАвтоматическихОшибок = ТаблицаНовыхАвтоматическихОшибок.Найти(СтрокаТаблицыРучныхОшибок.ПредставлениеРеквизита, "ПредставлениеРеквизита");
			Если СтрокаТаблицыАвтоматическихОшибок <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаНовыхОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыРучныхОшибок);
			НоваяСтрока.Автоматическая = Ложь;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	НеобходимоЗаписать = Ложь;
	
	// Отфильтруем записи регистра, и оставим только те записи таблицы, которых нет в регистре
	ПроведениеБыло = СтруктураДанныхОшибокЗаполнения.ПроведениеБыло;
	ы = 0;
	Пока ы < НаборЗаписей.Количество() Цикл
		
		Запись = НаборЗаписей[ы];
		УдалитьЗапись = Ложь;
		
		// Попробуем найти запись в таблице новых ошибок
		СтрокаТаблицыНовыхОшибок = ТаблицаНовыхОшибок.Найти(Запись.ПредставлениеРеквизита, "ПредставлениеРеквизита");
		Если СтрокаТаблицыНовыхОшибок = Неопределено Тогда
			
			// Если запись не найдена и она автоматическая - значит она устарела, и ее надо удалить
			Если Запись.Автоматическая И ПроведениеБыло Тогда
				УдалитьЗапись = Истина;
			КонецЕсли;
			
		Иначе
			
			// Если запись была автоматической, а стала ручной - не будем ее обрабатывать, так как у автоматических ошибок приоритет выше
			Если НЕ (Запись.Автоматическая И НЕ СтрокаТаблицыНовыхОшибок.Автоматическая) Тогда	
				
				// Перезаполним реквизиты записи и удалим ее из таблицы
				Если Запись.Автоматическая <> СтрокаТаблицыНовыхОшибок.Автоматическая Тогда
					Запись.Автоматическая = СтрокаТаблицыНовыхОшибок.Автоматическая;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
				
				Если Запись.ОписаниеОшибки <> СтрокаТаблицыНовыхОшибок.ОписаниеОшибки Тогда
					Запись.ОписаниеОшибки = СтрокаТаблицыНовыхОшибок.ОписаниеОшибки;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
				
				Если Запись.РекомендацияПоУстранению <> СтрокаТаблицыНовыхОшибок.РекомендацияПоУстранению Тогда
					Запись.РекомендацияПоУстранению = СтрокаТаблицыНовыхОшибок.РекомендацияПоУстранению;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
								
			КонецЕсли;
			
			ТаблицаНовыхОшибок.Удалить(СтрокаТаблицыНовыхОшибок);
			
		КонецЕсли;
				
		Если УдалитьЗапись Тогда
			НаборЗаписей.Удалить(Запись);
			НеобходимоЗаписать = Истина;
		Иначе
			ы = ы + 1;
		КонецЕсли;
			
	КонецЦикла;
	
	// Если в таблице новых ошибок остались записи - добавим их в набор записей
	Ссылка = Объект.Ссылка;
	Если ТаблицаНовыхОшибок.Количество() Тогда
		
		НеобходимоЗаписать = Истина;
			
		Для Каждого Строка Из ТаблицаНовыхОшибок Цикл
						
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Объект = Ссылка;
			НоваяЗапись.ПредставлениеРеквизита = Строка.ПредставлениеРеквизита;
			НоваяЗапись.ОписаниеОшибки = Строка.ОписаниеОшибки;
			НоваяЗапись.РекомендацияПоУстранению = Строка.РекомендацияПоУстранению;
			НоваяЗапись.Автоматическая = Строка.Автоматическая;
			
		КонецЦикла;
					
	КонецЕсли; //Если ТаблицаНовыхОшибок.Количество() 
	
	Если НеобходимоЗаписать Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры

// ОПТИМИЗИРОВАТЬ!!!
Процедура ОбновитьОшибкиВТабличныхЧастяхТипаНеЗаполнен(Объект) Экспорт
	
	// Прочитаем существующие записи в регистре
	НаборЗаписей = РегистрыСведений.ОшибкиВТабличныхЧастяхТипаНеЗаполнен.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	// Сформируем таблицу новых ошибок
	СтруктураДанныхОшибокЗаполнения = Объект.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения;
	ТаблицаНовыхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаНеЗаполнен.Скопировать();
	
	Если СтруктураДанныхОшибокЗаполнения.Свойство("СтруктураТаблицРучнойРегистрацииОшибок") Тогда
		
		ТаблицаНовыхРучныхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицРучнойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаНеЗаполнен;
		Для Каждого Строка Из ТаблицаНовыхРучныхОшибок Цикл
			
			НоваяСтрока = ТаблицаНовыхОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Ссылка = Объект.Ссылка;
	НеобходимоЗаписать = Ложь;
	
	// Оставим только те записи, которых нет в регистре
	Если ТаблицаНовыхОшибок.Количество() Тогда
		
		СтруктураПоиска = Новый Структура("ИмяТабличнойЧасти, НомерСтрокиТабличнойЧасти, ИмяРеквизита");
		Для Каждого Запись Из НаборЗаписей Цикл
			
			СтруктураПоиска.ИмяТабличнойЧасти = Запись.ИмяТабличнойЧасти;
			СтруктураПоиска.НомерСтрокиТабличнойЧасти = Запись.НомерСтрокиТабличнойЧасти;
			СтруктураПоиска.ИмяРеквизита = Запись.ИмяРеквизита;	
				
			МассивНайденныхСтрок = ТаблицаНовыхОшибок.НайтиСтроки(СтруктураПоиска);
			Для Каждого Строка Из МассивНайденныхСтрок Цикл
				ТаблицаНовыхОшибок.Удалить(Строка);
			КонецЦикла;
			
		КонецЦикла;
		
		// Если в таблице остались строки - поместим их в регистр 
		Если ТаблицаНовыхОшибок.Количество() Тогда
			
			НеобходимоЗаписать = Истина;
		
			ТабличныеЧастиОбъекта = Объект.Метаданные().ТабличныеЧасти;
			Для Каждого Строка Из ТаблицаНовыхОшибок Цикл
					
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Объект = Ссылка;
				НоваяЗапись.ИмяТабличнойЧасти = Строка.ИмяТабличнойЧасти;
				НоваяЗапись.НомерСтрокиТабличнойЧасти = Строка.НомерСтрокиТабличнойЧасти;
				НоваяЗапись.ИмяРеквизита = Строка.ИмяРеквизита;
				
				// ОПТИМИЗИРОВАТЬ ПОЛУЧЕНИЕ МЕТАДАННЫХ!!!
				МетаданныеТабличнойЧасти = ТабличныеЧастиОбъекта[Строка.ИмяТабличнойЧасти];
				НоваяЗапись.ПредставлениеТабличнойЧасти = МетаданныеТабличнойЧасти.Представление();
				НоваяЗапись.ПредставлениеРеквизита = МетаданныеТабличнойЧасти.Реквизиты[Строка.ИмяРеквизита].Представление();
			
				НоваяЗапись.РекомендацияПоУстранению = Строка.РекомендацияПоУстранению;
				
				НеобходимоЗаписать = Истина;
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЕсли; //Если ТаблицаНовыхОшибок.Количество() 
	
	// Удалим записи, которые уже неактуальны
	ы = 0;
	Пока ы < НаборЗаписей.Количество() Цикл
		
		Запись = НаборЗаписей[ы];
		// ОПТИМИЗИРОВАТЬ ПРОВЕРКУ НА КОЛИЧЕСТВО СТРОК В ТЧ!!!
		ТабличнаяЧасть = Объект[Запись.ИмяТабличнойЧасти];
		Если ТабличнаяЧасть.Количество() < Запись.НомерСтрокиТабличнойЧасти
			ИЛИ ЗначениеЗаполнено(ТабличнаяЧасть[Запись.НомерСтрокиТабличнойЧасти-1][Запись.ИмяРеквизита]) Тогда
			
			НаборЗаписей.Удалить(ы);
			НеобходимоЗаписать = Истина;
			Продолжить;
			
		КонецЕсли;
		
		ы = ы + 1;
				
	КонецЦикла;
	
	Если НеобходимоЗаписать Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбновитьОшибкиВТабличныхЧастяхТипаЗаполненНеправильно(Объект) Экспорт
	
	// Прочитаем существующие записи в регистре
	НаборЗаписей = РегистрыСведений.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	// Сформируем таблицу новых ошибок
	СтруктураДанныхОшибокЗаполнения = Объект.ДополнительныеСвойства.СтруктураДанныхОшибокЗаполнения;
	
	// Добавим записи автоматических ошибок
	ТаблицаНовыхАвтоматическихОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицАвтоматическойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно;
	ТаблицаНовыхОшибок = ТаблицаНовыхАвтоматическихОшибок.Скопировать();
	ТаблицаНовыхОшибок.Колонки.Добавить("Автоматическая", Новый ОписаниеТипов("Булево"));
	// Пока в таблице содержатся только автоматические ошибки, поэтому колонку "Автоматическая" можем смело заполнить Истиной
	ТаблицаНовыхОшибок.ЗаполнитьЗначения(Истина, "Автоматическая");
	
	СтруктураПоиска = Новый Структура("ПредставлениеТабличнойЧасти, НомерСтрокиТабличнойЧасти, ПредставлениеРеквизита");
	
	// Добавим записи ручных ошибок
	Если СтруктураДанныхОшибокЗаполнения.Свойство("СтруктураТаблицРучнойРегистрацииОшибок") Тогда
		
		ТаблицаНовыхРучныхОшибок = СтруктураДанныхОшибокЗаполнения.СтруктураТаблицРучнойРегистрацииОшибок.ОшибкиВТабличныхЧастяхТипаЗаполненНеправильно;	
		Для Каждого СтрокаТаблицыРучныхОшибок Из ТаблицаНовыхРучныхОшибок Цикл
			
			// Попытаемся найти такую же сроку в таблице автоматических ошибок
			СтруктураПоиска.ПредставлениеТабличнойЧасти = СтрокаТаблицыРучныхОшибок.ПредставлениеТабличнойЧасти;
			СтруктураПоиска.НомерСтрокиТабличнойЧасти = СтрокаТаблицыРучныхОшибок.НомерСтрокиТабличнойЧасти;
			СтруктураПоиска.ПредставлениеРеквизита = СтрокаТаблицыРучныхОшибок.ПредставлениеРеквизита;
			СтрокиТаблицыАвтоматическихОшибок = ТаблицаНовыхАвтоматическихОшибок.НайтиСтроки(СтруктураПоиска);
			
			// Если запись уже есть в автоматических ошибках - не будем ее добавлять, так как у автоматических ошибок есть приоритет над ручными
			Если СтрокиТаблицыАвтоматическихОшибок.Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаНовыхОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыРучныхОшибок);
			НоваяСтрока.Автоматическая = Ложь;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	НеобходимоЗаписать = Ложь;
	
	// Отфильтруем записи регистра, и оставим только те записи таблицы, которых нет в регистре
	ПроведениеБыло = СтруктураДанныхОшибокЗаполнения.ПроведениеБыло;
	ы = 0;
	Пока ы < НаборЗаписей.Количество() Цикл
		
		Запись = НаборЗаписей[ы];
		УдалитьЗапись = Ложь;
		
		// Попробуем найти запись в таблице новых ошибок
		// Попытаемся найти такую же сроку в таблице автоматических ошибок
		СтруктураПоиска.ПредставлениеТабличнойЧасти = Запись.ПредставлениеТабличнойЧасти;
		СтруктураПоиска.НомерСтрокиТабличнойЧасти = Запись.НомерСтрокиТабличнойЧасти;
		СтруктураПоиска.ПредставлениеРеквизита = Запись.ПредставлениеРеквизита;
		СтрокиТаблицыНовыхОшибок = ТаблицаНовыхОшибок.НайтиСтроки(СтруктураПоиска);
		Если НЕ СтрокиТаблицыНовыхОшибок.Количество() Тогда
			
			// Если запись не найдена и она автоматическая - значит она устарела, и ее надо удалить
			Если Запись.Автоматическая И ПроведениеБыло Тогда
				УдалитьЗапись = Истина;
			КонецЕсли;
			
		Иначе
			
			// Должна быть найдена только одна строчка
			СтрокаТаблицыНовыхОшибок = СтрокиТаблицыНовыхОшибок[0];
			
			// Если запись была автоматической, а стала ручной - не будем ее обрабатывать, так как у автоматических ошибок приоритет выше
			Если НЕ (Запись.Автоматическая И НЕ СтрокаТаблицыНовыхОшибок.Автоматическая) Тогда	
				
				// Перезаполним реквизиты записи и удалим ее из таблицы
				Если Запись.Автоматическая <> СтрокаТаблицыНовыхОшибок.Автоматическая Тогда
					Запись.Автоматическая = Запись.Автоматическая;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
				
				Если Запись.ОписаниеОшибки <> СтрокаТаблицыНовыхОшибок.ОписаниеОшибки Тогда
					Запись.ОписаниеОшибки = СтрокаТаблицыНовыхОшибок.ОписаниеОшибки;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
				
				Если Запись.РекомендацияПоУстранению <> СтрокаТаблицыНовыхОшибок.РекомендацияПоУстранению Тогда
					Запись.РекомендацияПоУстранению = СтрокаТаблицыНовыхОшибок.РекомендацияПоУстранению;
					НеобходимоЗаписать = Истина;
				КонецЕсли;
								
			КонецЕсли;
			
			ТаблицаНовыхОшибок.Удалить(СтрокаТаблицыНовыхОшибок);
			
		КонецЕсли;
				
		Если УдалитьЗапись Тогда
			НаборЗаписей.Удалить(Запись);
			НеобходимоЗаписать = Истина;
		Иначе
			ы = ы + 1;
		КонецЕсли;
			
	КонецЦикла;
	
	// Если в таблице новых ошибок остались записи - добавим их в набор записей
	Ссылка = Объект.Ссылка;
	Если ТаблицаНовыхОшибок.Количество() Тогда
		
		НеобходимоЗаписать = Истина;
			
		Для Каждого Строка Из ТаблицаНовыхОшибок Цикл
						
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
			НоваяЗапись.Объект = Ссылка;
						
		КонецЦикла;
					
	КонецЕсли; //Если ТаблицаНовыхОшибок.Количество() 
	
	Если НеобходимоЗаписать Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры

// Удаляет из регистра с именем ИмяРегистра все ручные ошибки типа заполнен неправильно переданного объекта
Процедура УдалитьВсеРучныеОшибкиТипаЗаполненНеправильно(ИмяРегистра, Объект) Экспорт
	
	Ссылка = Объект.Ссылка;
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	ы = 0;
	НеобходимоЗаписать = Ложь;
	Пока ы < НаборЗаписей.Количество() Цикл
		
		Запись = НаборЗаписей[ы];
		Если НЕ Запись.Автоматическая Тогда
			НаборЗаписей.Удалить(Запись);
			НеобходимоЗаписать = Истина;
		Иначе
			ы = ы + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НеобходимоЗаписать Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
			
КонецПроцедуры
