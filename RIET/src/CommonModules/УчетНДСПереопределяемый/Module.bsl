/////////////////////////////////////////////////////////////
//ВЕРСИЯ ПРОЦЕДУР И ФУНКЦИЙ ОБЛАСТИ "ТиповаяБухгалтерия": БУХ. КОРП. 3.0.38.42 бета

#Область ТиповаяБухгалтерия

//////////////////////////////////////////////////////////////////////////
// РАБОТА СО СЧЕТАМИ-ФАКТУРАМИ

// Документ - СчетФактураВыданный или основание для него
Функция РеквизитыДляНадписиОСчетеФактуреВыданном(Знач Документ, СтруктураОтбора = Неопределено) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		СчетФактура = Документ;
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(Документ, , , СтруктураОтбора);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		РеквизитыСФ = Новый Структура(
			"Ссылка,Представление,НомерСчетаФактуры,ДатаСчетаФактуры,Исправление,НомерИсправления,ДатаИсправления,Корректировка",
			СчетФактура, "");
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетФактура,
			"Номер,Дата,ВидСчетаФактуры,Исправление,НомерИсправления,
			|НомерИсходногоДокумента,ДатаИсходногоДокумента,
			|НомерИсправляемогоКорректировочногоДокумента,ДатаИсправляемогоКорректировочногоДокумента,
			|Представление");
		РеквизитыСФ.Исправление      = ЗначенияРеквизитов.Исправление;
		РеквизитыСФ.НомерИсправления = ЗначенияРеквизитов.НомерИсправления;
		РеквизитыСФ.Представление 	 = ЗначенияРеквизитов.Представление;
		РеквизитыСФ.Корректировка	 = Ложь;
		
		Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
			РеквизитыСФ.Корректировка  = Истина;
		КонецЕсли;
		
		Если ЗначенияРеквизитов.Исправление Тогда
			РеквизитыСФ.ДатаИсправления = ЗначенияРеквизитов.Дата;
			Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
				РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерИсправляемогоКорректировочногоДокумента;
				РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаИсправляемогоКорректировочногоДокумента;
			Иначе
				РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерИсходногоДокумента;
				РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаИсходногоДокумента;
			КонецЕсли;
		Иначе
			РеквизитыСФ.НомерСчетаФактуры = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(
				ЗначенияРеквизитов.Номер, Истина, Ложь);
			РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.Дата;
		КонецЕсли;
	Иначе
		РеквизитыСФ = Неопределено;
	КонецЕсли;
	
	Возврат РеквизитыСФ;
	
КонецФункции 

// Функция производит поиск счета-фактуры выданного на реализацию или корректировочного с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ПометкаУдаления		- <Булево> - значение пометки счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОснование, ИсключаемыйСФ = Неопределено, ПометкаУдаления = Ложь, СтруктураОтбора = Неопределено) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",  ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",     ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ПометкаУдаления",   ПометкаУдаления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДокументыОснования.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.ДокументОснование = &ДокументОснование
	|	И ДокументыОснования.Ссылка.ПометкаУдаления = &ПометкаУдаления
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры В(&ВидыСчетовФактур)";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
			+ " И ДокументыОснования.Ссылка <> &ИсключаемыйСФ";
	КонецЕсли;

	Если ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		ТекстУсловия = "";
		Для Каждого КлючЗначение Из СтруктураОтбора Цикл
			ТекстУсловия = ТекстУсловия + "
			| И ";
			
			Если ТипЗнч(КлючЗначение.Значение) = Тип("СписокЗначений") 
				ИЛИ ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " В (&" + КлючЗначение.Ключ + ")";
			Иначе
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " = &" + КлючЗначение.Ключ;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + ТекстУсловия;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

//////////////////////////////////////////////////////////////////////////
// РАБОТА С КНИГАМИ ПОКУПОК И ПРОДАЖ

Процедура ПодготовитьПараметрыКнигиПокупок(ПараметрыОтчета, АдресХранилища) Экспорт
	
	//Обновление на бух. корп. 3.0.38.42
	//Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.КонецПериода) Тогда  
	//	Отчеты.КнигаПокупок.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);	
	//Иначе
	//	УчетНДСБП.СформироватьОтчетКнигаПокупок914(ПараметрыОтчета, АдресХранилища);
	//КонецЕсли;
	Отчеты.КнигаПокупок2014.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);	
	//<=
	
КонецПроцедуры

Процедура ПодготовитьПараметрыКнигиПродаж(ПараметрыОтчета, АдресХранилища) Экспорт
	
	//Обновление на бух. корп. 3.0.38.42
	//Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.КонецПериода) Тогда  
	//	Отчеты.КнигаПродаж.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	//Иначе
	//	УчетНДСБП.СформироватьОтчетКнигаПродаж914(ПараметрыОтчета, АдресХранилища);
	//КонецЕсли;
	Отчеты.КнигаПродаж2014.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	//<=
		
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// ПОМОЩНИК ПО УЧЕТУ НДС

// Функция возвращает ИСТИНА, если из отчетов НДС необходимо открывать помощник.
//
// Параметры:
//    Организация - СправочникСсылка.Организации, организация по которой строится отчет
//    Период - Дата налогового периода, за который строится отчет
//
// Возвращаемое значение:
//    Булево
//
Функция ОткрыватьПомощникИзМакета(Организация, Период) Экспорт
	
	//Обновление на бух. корп. 3.0.38.42
	//ВыполненыРегламентныеОперацииПоНДС = РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.ВсеРегламентныеОперацииНДСВыполнены(Организация, Период);
	//ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Организация, Период);
	//
	//Возврат ПлательщикНДС И НЕ ВыполненыРегламентныеОперацииПоНДС;
	Возврат Ложь;
	//<=	
КонецФункции


// Возвращает версию постановления Правительства РФ от 26.12.2011 г. № 1137
//
// Параметры
// 	Период  - 	тип дата, в данном параметре передается
//            	дата на которую необходимо определить версию постановления
// Возвращаемое значение:
//  Число   - 	версия постановления, 
//				1 - исходная версия постановления Правительства РФ от 26.12.2011 г. № 1137
//              2 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 952
//              3 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 735
//
Функция ВерсияПостановленияНДС1137(Период) Экспорт
	
	// { RGS LFedotova 20.01.2018 15:21:36 - вопрос SLI-0007469
	Если Период >= '20171001' Тогда 		// Постановление № 981 вступает в силу с 1 октября 2017 года.
		Возврат 4;
	// } RGS LFedotova 20.01.2018 15:22:02 - вопрос SLI-0007469
	
	//Обновление на бух. корп. 3.0.38.42
	//Возврат 3; //AP_TODO
	//<=
	
	ИначеЕсли Период >= '20141001' Тогда 		// Постановление № 735 вступает в силу с 1 октября 2014 года.
		Возврат 3;
	ИначеЕсли Период >= '20131106' Тогда 	// Постановление № 952 вступает в силу с 6 ноября 2013 года.
		Возврат 2;
	Иначе
		Возврат 1;                          // Исходная версия Постановления Правительства РФ от 26.12.2011 г. № 1137.
	КонецЕсли;
	
КонецФункции


// Функция возвращает структуру вариантов представления счета-фактуры для вывода на печать в книге покупок.
//
// Параметры:
//	ДокументОснование - ДокументСсылка.*, ссылка на документ, указываемый в качестве измерения
//						в регистрах НДС.
//	НомерСчетаФактуры - Строка, номер счета-фактуры полученный предварительно.
//	ДатаСчетаФактуры  - Дата, дата счета-фактуры, полученная предварительно.
//	ОбрабатыватьНомерДокумента - Булево, признак того, что необходимо исключить префиксы из номера
//									документа перед печатью.
//	СчетФактураДокумент - ДокументСсылка.СчетФактураПолученный/СчетФактураВыданный - ссылка на 
//							подчиненный документ "счет-фактура" (необязательный)
//
Функция ОпределитьДатуИНомерСчетаФактурыДляПечати(ДокументОснование, НомерСчетаФактуры, ДатаСчетаФактуры, ОбрабатыватьНомерДокумента = Ложь, СчетФактураДокумент = Неопределено) Экспорт

	ВариантыПредставленияСчетаФактуры = Новый Структура("ДатаНомер,НомерДата,Дата,Номер", "", "", "", "");
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат ВариантыПредставленияСчетаФактуры;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСчетаФактуры) И ЗначениеЗаполнено(НомерСчетаФактуры) Тогда
		
		//Обновление на бух. корп. 3.0.38.42
		//Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
		//	ДатаСФ	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") ;
		//	НомерСФ = ?(ЗначениеЗаполнено(ДатаСФ), "Заявление № ", "") + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерСчетаФактуры, Истина, Ложь);
		//		
		//Иначе
		//<=
			Если ОбрабатыватьНомерДокумента Тогда			
				ДатаСФ	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") ;
				НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерСчетаФактуры, Истина, Истина);
			Иначе
				ДатаСФ 	= Формат(ДатаСчетаФактуры, "ДФ=dd.MM.yyyy");
				НомерСФ = СокрЛП(НомерСчетаФактуры);
			КонецЕсли;
		//КонецЕсли; //Обновление на бух. корп. 3.0.38.42

	Иначе
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаСФ 	= Формат(ДокументОснование.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДокументОснование.Номер, Истина, Ложь);
		ИначеЕсли ТипЗнч(СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаСФ 	= Формат(СчетФактураДокумент.Дата, "ДФ=dd.MM.yyyy");
			НомерСФ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СчетФактураДокумент.Номер, Истина, Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	ВариантыПредставленияСчетаФактуры.ДатаНомер = "" + ДатаСФ + ?(ЗначениеЗаполнено(ДатаСФ), ";", "") + НомерСФ;
	ВариантыПредставленияСчетаФактуры.НомерДата = "" + НомерСФ + ?(ЗначениеЗаполнено(НомерСФ), ";", "") + ДатаСФ;
	
	ВариантыПредставленияСчетаФактуры.Номер = НомерСФ;
	ВариантыПредставленияСчетаФактуры.Дата = ДатаСФ;
		
	Возврат ВариантыПредставленияСчетаФактуры;

КонецФункции // ОпределитьДатуИНомерСчетаФактурыДляПечати()

//////////////////////////////////////////////////////////////////////////
// РАБОТА С ЖУРНАЛОМ УЧЕТА СЧЕТОВ-ФАКТУР

Процедура ПодготовитьПараметрыЖурналаУчетаСчетовФактур (ПараметрыОтчета, АдресХранилища) Экспорт
	
	//Обновление на бух. корп. 3.0.38.42
	//Если УчетНДСПереопределяемый.ИспользуетсяПостановлениеНДС1137(ПараметрыОтчета.НалоговыйПериод) Тогда  
	//	Отчеты.ЖурналУчетаСчетовФактур.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	//Иначе
	//	УчетНДСБП.СформироватьОтчетЖурналУчетаСчетовФактур914(ПараметрыОтчета, АдресХранилища);
	//КонецЕсли;
	Отчеты.ЖурналУчетаСчетовФактур.СформироватьОтчет(ПараметрыОтчета, АдресХранилища);
	//<=		
	
КонецПроцедуры

//ПРОЧЕЕ
// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыданный"
//
Процедура СинхронизацияПометкиНаУдалениеУСчетаФактуры(ДокументОбъект, ВидСчетаФактуры = "СчетФактураВыданный", Отказ = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПометкаУдаленияСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "ПометкаУдаления");

	Если ДокументОбъект.ПометкаУдаления <> ПометкаУдаленияСсылки Тогда

		// Произошло изменение пометки на удаление
		// Попытаемся найти счет-фактуру
		Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
			СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОбъект.Ссылка, , НЕ ДокументОбъект.ПометкаУдаления);
		Иначе
			СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументОбъект.Ссылка, , НЕ ДокументОбъект.ПометкаУдаления);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(СчетФактура) 
			И СчетФактура <> ДокументОбъект.Ссылка Тогда
			Попытка
				// Есть счет-фактура, нужно установить для него пометку удаления
				СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
				Если ДокументОбъект.ПометкаУдаления Тогда
					// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление,
					// а очищается ссылка на текущее основание
					СтрокиТекОснования = СчетФактураОбъект.ДокументыОснования.НайтиСтроки(
						Новый Структура("ДокументОснование", ДокументОбъект.Ссылка));
					Если СчетФактураОбъект.ДокументыОснования.Количество() > СтрокиТекОснования.Количество() Тогда
						Для каждого СтрокаКУдалению Из СтрокиТекОснования Цикл
							СчетФактураОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
						КонецЦикла;
						СчетФактураОбъект.Записать(?(СчетФактураОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
						Возврат;
					КонецЕсли;
				КонецЕсли;

				СчетФактураОбъект.УстановитьПометкуУдаления(ДокументОбъект.ПометкаУдаления);
			Исключение
				ОписаниеОшибки = ИнформацияОбОшибке();
				ЗаписьЖурналаРегистрации(ВернутьСтр("ru = 'Операция не выполнена'"), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
				Отказ = Истина;
			КонецПопытки;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры 

// Функция производит поиск счета-фактуры полученного на поступление или корректировочного с указанным документом-основанием
//
// Параметры:
//  ДокументОснование	- ссылка на документ, для которого надо найти счет-фактуру
//  ИсключаемыйСФ		- ссылка на счет-фактуру, исключаемый при поиске
//  ПометкаУдаления		- <Булево> - значение пометки счета-фактуры для отбора при поиске
//
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуруПолученный(ДокументОснование, ИсключаемыйСФ = Неопределено, ПометкаУдаления = Ложь, СтруктураОтбора = Неопределено) Экспорт
	Перем СчетФактура;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидыСчетовФактур = Новый Массив;
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление);
	ВидыСчетовФактур.Добавить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыСчетовФактур",  ВидыСчетовФактур);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ИсключаемыйСФ",     ИсключаемыйСФ);
	Запрос.УстановитьПараметр("ПометкаУдаления",   ПометкаУдаления);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДокументыОснования.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	(ДокументыОснования.ДокументОснование = &ДокументОснование
	|			ИЛИ ДокументыОснования.Ссылка = &ДокументОснование)
	|	И ДокументыОснования.Ссылка.ПометкаУдаления = &ПометкаУдаления
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры В(&ВидыСчетовФактур)";
	
	Если ЗначениеЗаполнено(ИсключаемыйСФ) Тогда
		Запрос.Текст = Запрос.Текст 
		+ " И ДокументыОснования.Ссылка <> &ИсключаемыйСФ"
	КонецЕсли;
	
	Если ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		ТекстУсловия = "";
		Для Каждого КлючЗначение Из СтруктураОтбора Цикл
			ТекстУсловия = ТекстУсловия + "
			| И ";
			
			Если ТипЗнч(КлючЗначение.Значение) = Тип("СписокЗначений") 
				ИЛИ ТипЗнч(КлючЗначение.Значение) = Тип("Массив") Тогда
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " В (&" + КлючЗначение.Ключ + ")";
			Иначе
				ТекстУсловия = ТекстУсловия + "ДокументыОснования.Ссылка." + КлючЗначение.Ключ + " = &" + КлючЗначение.Ключ;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + ТекстУсловия;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СчетФактура = Выборка.СчетФактура;
	КонецЕсли;
	
	Возврат СчетФактура;

КонецФункции

// Процедура проверяет соответствие реквизитов счета-фактуры полученного и документа-основания.
// В случае несоответствия выдается сообщение пользователю.
//
// Параметры:
//		- ДокОбъект - документ-основание
//
// Возврат:
//		- Истина, если различий не найдено, Ложь в противном случае
//
Процедура СинхронизироватьРеквизитыСчетаФактурыПолученного(ДокОбъект) Экспорт

	СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокОбъект.Ссылка);
	Если СчетФактура = Неопределено ИЛИ СчетФактура = ДокОбъект.Ссылка Тогда
		Возврат;
	КонецЕсли;

	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	Попытка
		СчетФактураОбъект.Заблокировать();
		СчетФактураОбъект.Записать();
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ВернутьСтр("ru='Реквизиты документа ""%1"" автоматически не перезаполнены и могут быть неактуальными'"),
				СчетФактура);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СчетФактура);
	КонецПопытки;
	
КонецПроцедуры

// Документ - СчетФактураПолученный или основание для него
Функция РеквизитыДляНадписиОСчетеФактуреПолученном(Знач Документ, СтруктураОтбора = Неопределено) Экспорт

	Если ТипЗнч(Документ) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		СчетФактура = Документ;
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(Документ, , , СтруктураОтбора);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		
		РеквизитыСФ = Новый Структура(
			"Ссылка,Представление,Исправление,НомерИсправления,ДатаИсправления,НомерСчетаФактуры,ДатаСчетаФактуры,Дата,Корректировка",
			СчетФактура, "", Ложь, 0, '00010101');
			
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчетФактура,
				"НомерВходящегоДокумента,ДатаВходящегоДокумента,Исправление,НомерИсправления,ДатаИсправления,
				|Представление,Дата,ВидСчетаФактуры");
			
		ЗаполнитьЗначенияСвойств(РеквизитыСФ, ЗначенияРеквизитов);
		РеквизитыСФ.НомерСчетаФактуры = ЗначенияРеквизитов.НомерВходящегоДокумента;
		РеквизитыСФ.ДатаСчетаФактуры  = ЗначенияРеквизитов.ДатаВходящегоДокумента;
		РеквизитыСФ.Корректировка	  = Ложь;
		Если ЗначенияРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
			 РеквизитыСФ.Корректировка  = Истина;
		КонецЕсли;
	Иначе
		РеквизитыСФ = Неопределено;
	КонецЕсли;
	
	Возврат РеквизитыСФ;
	
КонецФункции 

// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыданный"
//
Процедура УстановкаПометкиНаУдалениеУСчетаФактуры(ДокументОбъект, ВидСчетаФактуры = "СчетФактураВыданный", ПометкаНаУдаление = Истина) Экспорт

	// Произошло изменение пометки на удаление.
	// Попытаемся найти счет-фактуру.

	СтруктураОтбора = Новый Структура("ПометкаУдаления",не ПометкаНаУдаление);
	Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументОбъект.Ссылка, , НЕ ПометкаНаУдаление);
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументОбъект.Ссылка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) И Не СчетФактура = ДокументОбъект.Ссылка Тогда
		
		ПометкаУдаленияСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетФактура, "ПометкаУдаления");
		
		Если ПометкаНаУдаление <> ПометкаУдаленияСчетаФактуры Тогда
			// Есть счет-фактура, нужно установить для него пометку удаления
			СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
			// Если в счете-фактуре несколько оснований, счет-фактура не помечается на удаление,
			// а очищается ссылка на текущее основание
			СтрокиТекОснования = СчетФактураОбъект.ДокументыОснования.НайтиСтроки(
				Новый Структура("ДокументОснование", ДокументОбъект.Ссылка));
				
			Если ПометкаНаУдаление И СчетФактураОбъект.ДокументыОснования.Количество() > СтрокиТекОснования.Количество() Тогда
				Для каждого СтрокаКУдалению Из СтрокиТекОснования Цикл
					СчетФактураОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				КонецЦикла;
				СчетФактураОбъект.Записать(?(СчетФактураОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				
			Иначе
				СчетФактураОбъект.УстановитьПометкуУдаления(ПометкаНаУдаление);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Функция возвращает признак ведения учета по постановлению Правительства РФ № 1137 от 26.12.2011
//
Функция ИспользуетсяПостановлениеНДС1137(Период) Экспорт

	//Обновление на бух. корп. 3.0.38.43
	//Результат = ПолучитьФункциональнуюОпцию("ИспользуетсяПостановлениеНДС1137", 
	//	Новый Структура("Период", НачалоДня(Период)));

	//Возврат Результат;
	Возврат Истина;
	//<=

КонецФункции

Функция ОпределитьВидСчетаФактурыПолученногоПоТипуОснования(ДокументОснование) Экспорт

	//Обновление на бух. корп. 3.0.38.43
		//Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")
	//	ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") 
	//	ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет")
	//	ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
	//	
	//	Возврат Перечисления.ВидСчетаФактурыПолученного.НаАванс;
	//	
	//ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	//	
	//	НомераТаблиц	= Новый Структура;
	//	Запрос.Текст	= 
	//	"ВЫБРАТЬ
	//	|	КорректировкаПоступления.Ссылка КАК ДокументОснование,
	//	|	КорректировкаПоступления.Дата,
	//	|	КорректировкаПоступления.Организация,
	//	|	КорректировкаПоступления.Контрагент,
	//	|	КорректировкаПоступления.ДоговорКонтрагента,
	//	|	КорректировкаПоступления.ВидОперации,
	//	|	КорректировкаПоступления.ДокументПоступления,
	//	|	КорректировкаПоступления.ИсправляемыйДокументПоступления,
	//	|	КорректировкаПоступления.ИсправляемыйДокументПоступления.ВидОперации КАК ИсправляемыйДокументПоступленияВидОперации
	//	|ИЗ
	//	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	//	|ГДЕ
	//	|	КорректировкаПоступления.Ссылка = &ДокументОснование";
	//	
	//	Результат	= Запрос.Выполнить();
	//	
	//	Если Результат.Пустой() Тогда
	//		Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
	//	КонецЕсли;
	//	
	//	РеквизитыОснования	= Результат.Выбрать();
	//	РеквизитыОснования.Следующий();		
	//	
	//	Если ЗначениеЗаполнено(РеквизитыОснования.ИсправляемыйДокументПоступления)
	//		И (ТипЗнч(РеквизитыОснования.ИсправляемыйДокументПоступления) = Тип("ДокументСсылка.КорректировкаПоступления")) 
	//		И РеквизитыОснования.ИсправляемыйДокументПоступленияВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
	//		И РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
	//		
	//		Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	//		
	//	ИначеЕсли РеквизитыОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
	//		
	//		Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	//		
	//	Иначе		
	//		
	//		ОснованиеДляВидаОперации	= ПолучитьИсправляемыйДокументПоступления(ДокументОснование);
	//		
	//		Если ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")
	//			ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") 
	//			ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.АвансовыйОтчет")
	//			ИЛИ ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
	//			
	//			Возврат Перечисления.ВидСчетаФактурыПолученного.НаАванс;
	//			
	//		ИначеЕсли ТипЗнч(ОснованиеДляВидаОперации) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
	//			
	//			Возврат Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	//			
	//		Иначе
	//			
	//			Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;	
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;

	//ИначеЕсли  ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
	//	
	//	Возврат Неопределено;
	//	
	//Иначе
		
		Возврат Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		
	//КонецЕсли;
	//<=

КонецФункции

Функция ПолучитьПараметрыСчетаФактуры(СчетФактура) Экспорт

	Результат = Новый Структура("Организация, Контрагент, КППКонтрагента, Договор, Продавец,
		|СуммаДокумента, СуммаДокументаКомиссия, ВалютаДокумента, СуммаНДСДокумента, СуммаНДСДокументаКомиссия, СчетФактураБезНДС, НомерСчетаФактурыПродавца,
		|СуммаУвеличение, СуммаУвеличениеКомиссия, СуммаУменьшение, СуммаУменьшениеКомиссия, СуммаНДСУвеличение, 
		|СуммаНДСУвеличениеКомиссия, СуммаНДСУменьшение, СуммаНДСУменьшениеКомиссия, РеквизитыОснований");
	
	Результат.СуммаДокумента 		= 0;
	Результат.СуммаНДСДокумента		= 0;
	Результат.СуммаУвеличение 		= 0;
	Результат.СуммаНДСУвеличение 	= 0;
	Результат.СуммаУменьшение 		= 0;         
	Результат.СуммаНДСУменьшение 	= 0;
	
	Результат.СуммаДокументаКомиссия 		= 0;
	Результат.СуммаНДСДокументаКомиссия 	= 0;
	Результат.СуммаУвеличениеКомиссия 		= 0;
	Результат.СуммаНДСУвеличениеКомиссия	= 0;
	Результат.СуммаУменьшениеКомиссия 		= 0;
	Результат.СуммаНДСУменьшениеКомиссия 	= 0;
	Результат.СчетФактураБезНДС = 0;
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	
	РеквизитыОснований = Новый ТаблицаЗначений;
	РеквизитыОснований.Колонки.Добавить("ДокументОснование");
	РеквизитыОснований.Колонки.Добавить("НомерИсходногоДокумента", 			  ОбщегоНазначения.ОписаниеТипаСтрока(50));
	РеквизитыОснований.Колонки.Добавить("ДатаИсходногоДокумента", 			  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РеквизитыОснований.Колонки.Добавить("НомерИсправленияИсходногоДокумента", ОбщегоНазначения.ОписаниеТипаЧисло(10, , ДопустимыйЗнак.Неотрицательный));
	РеквизитыОснований.Колонки.Добавить("ДатаИсправленияИсходногоДокумента",  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РеквизитыОснований.Колонки.Добавить("СуммаУвеличение", 					  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаУменьшение", 					  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаНДСУвеличение", 				  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("СуммаНДСУменьшение", 				  ОбщегоНазначения.ОписаниеТипаЧисло(14, 2));
	РеквизитыОснований.Колонки.Добавить("УчитыватьИсправлениеИсходногоДокумента", Новый ОписаниеТипов("Булево"));
	
	Результат.РеквизитыОснований = РеквизитыОснований;
	
	Если ТипЗнч(СчетФактура)= Тип("ДокументСсылка.СчетФактураПолученный")
		ИЛИ ТипЗнч(СчетФактура)= Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		Ссылка = СчетФактура;
	Иначе
		Ссылка = СчетФактура.Ссылка;
	КонецЕсли;
	
	ЭтоПолученныйСФ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") тогда
		ЭтоПолученныйСФ = Истина;
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный") 
		И (СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
		ИЛИ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу) Тогда
		// Реквизиты заново не определяются, получаются из счета-фактуры
		Результат.Вставить("Организация"	, СчетФактура.Организация);
		Результат.Вставить("Контрагент"		, СчетФактура.Контрагент);
		Результат.Вставить("Договор"		, СчетФактура.ДоговорКонтрагента);
		Результат.Вставить("ВалютаДокумента", СчетФактура.ВалютаДокумента);
		Результат.Вставить("СуммаДокумента"	, СчетФактура.СуммаДокумента);
		Возврат Результат;
	КонецЕслИ;
	
	ДокументыОснования = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(СчетФактура.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"), Истина);
	
	ТипыОснований = Новый Соответствие();
	Для каждого Основание Из ДокументыОснования Цикл
		Если не ЗначениеЗаполнено(Основание) Тогда
			Продолжить;
		КонецЕсли;

		МассивДокументов = ТипыОснований[ТипЗнч(Основание)];
		
		Если МассивДокументов = Неопределено Тогда
			МассивДокументов = новый Массив();
			ТипыОснований.Вставить(ТипЗнч(Основание),МассивДокументов);
		КонецЕсли; 
		
		МассивДокументов.Добавить(Основание);
	КонецЦикла; 
	
	Если ТипыОснований.Количество() = 0 Тогда
		// ТЧ оснований не заполнена, параметры определить нельзя
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Для каждого ТипОснования Из ТипыОснований Цикл
		ТипДокументаОснования	= ТипОснования.Ключ;
		ДокументыОснования		= ТипОснования.Значение;
		ТекстЗапроса = "";

		//Если ТипДокументаОснования = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		//	// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
		//	Запрос.УстановитьПараметр("ДокументОснованиеАО", ДокументыОснования);
		//	ТекстЗапроса = 
		//	"ВЫБРАТЬ
		//	|	АвансовыйОтчетПрочее.Ссылка.Организация КАК Организация,
		//	|	АвансовыйОтчетПрочее.Поставщик КАК Контрагент,
		//	|	НЕОПРЕДЕЛЕНО КАК Договор,
		//	|	СУММА(АвансовыйОтчетПрочее.Сумма + ВЫБОР
		//	|			КОГДА АвансовыйОтчетПрочее.Ссылка.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ АвансовыйОтчетПрочее.СуммаНДС
		//	|		КОНЕЦ) КАК СуммаДокумента,
		//	|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		//	|	СУММА(АвансовыйОтчетПрочее.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	СУММА(0) КАК СуммаДокументаКомиссия,
		//	|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
		//	|	ВЫБОР
		//	|		КОГДА АвансовыйОтчетПрочее.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ КАК ЕстьНДС
		//	|ИЗ
		//	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
		//	|ГДЕ
		//	|	АвансовыйОтчетПрочее.Ссылка В(&ДокументОснованиеАО)
		//	|	И АвансовыйОтчетПрочее.ПредъявленСФ
		//	|	И АвансовыйОтчетПрочее.СчетФактура = &ТекущийДокумент
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	АвансовыйОтчетПрочее.Поставщик,
		//	|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента,
		//	|	АвансовыйОтчетПрочее.Ссылка.Организация,
		//	|	ВЫБОР
		//	|		КОГДА АвансовыйОтчетПрочее.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ
		//	|
		//	|ОБЪЕДИНИТЬ ВСЕ
		//	|
		//	|ВЫБРАТЬ
		//	|	АвансовыйОтчетТовары.Ссылка.Организация,
		//	|	АвансовыйОтчетТовары.Поставщик,
		//	|	НЕОПРЕДЕЛЕНО,
		//	|	СУММА(АвансовыйОтчетТовары.Сумма + ВЫБОР
		//	|			КОГДА АвансовыйОтчетТовары.Ссылка.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ АвансовыйОтчетТовары.СуммаНДС
		//	|		КОНЕЦ),
		//	|	АвансовыйОтчетТовары.Ссылка.ВалютаДокумента,
		//	|	СУММА(АвансовыйОтчетТовары.СуммаНДС),
		//	|	0,
		//	|	0,
		//	|	ВЫБОР
		//	|		КОГДА АвансовыйОтчетТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ
		//	|ИЗ
		//	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
		//	|ГДЕ
		//	|	АвансовыйОтчетТовары.Ссылка В(&ДокументОснованиеАО)
		//	|	И АвансовыйОтчетТовары.СчетФактура = &ТекущийДокумент
		//	|	И АвансовыйОтчетТовары.ПредъявленСФ
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	АвансовыйОтчетТовары.Поставщик,
		//	|	АвансовыйОтчетТовары.Ссылка.ВалютаДокумента,
		//	|	АвансовыйОтчетТовары.Ссылка.Организация,
		//	|	ВЫБОР
		//	|		КОГДА АвансовыйОтчетТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ";
		//	
		//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		//	// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	ТекстЗапроса = 
		//	"ВЫБРАТЬ
		//	|	ОказаниеУслуг.Ссылка.Организация КАК Организация,
		//	|	ОказаниеУслуг.Контрагент КАК Контрагент,
		//	|	ОказаниеУслуг.ДоговорКонтрагента КАК Договор,
		//	|	СУММА(ОказаниеУслуг.Сумма + ВЫБОР
		//	|			КОГДА ОказаниеУслуг.Ссылка.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ ОказаниеУслуг.СуммаНДС
		//	|		КОНЕЦ) КАК СуммаДокумента,
		//	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
		//	|	СУММА(ОказаниеУслуг.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	СУММА(0) КАК СуммаДокументаКомиссия,
		//	|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
		//	|	ВЫБОР
		//	|		КОГДА ОказаниеУслуг.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ КАК ЕстьНДС
		//	|ИЗ
		//	|	Документ.ОказаниеУслуг.Контрагенты КАК ОказаниеУслуг
		//	|ГДЕ
		//	|	ОказаниеУслуг.Ссылка В(&ДокументыОснования)
		//	|	И ОказаниеУслуг.ВыданСФ
		//	|	И ОказаниеУслуг.СчетФактура = &ТекущийДокумент
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ОказаниеУслуг.Контрагент,
		//	|	ОказаниеУслуг.ДоговорКонтрагента,
		//	|	ОказаниеУслуг.Ссылка.Организация,
		//	|	ОказаниеУслуг.СуммаНДС,
		//	|	ВЫБОР
		//	|		КОГДА ОказаниеУслуг.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|			ТОГДА 0
		//	|		ИНАЧЕ 1
		//	|	КОНЕЦ";
		//	
		//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПодтверждениеНулевойСтавкиНДС") Тогда
		//	
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	ТекстЗапроса = 
		//	"ВЫБРАТЬ
		//	|	ПодтверждениеНулевойСтавки.Ссылка.Организация КАК Организация,
		//	|	ПодтверждениеНулевойСтавки.Покупатель КАК Контрагент,
		//	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
		//	|	СУММА(ПодтверждениеНулевойСтавки.ПродажиСНДС0 + ПодтверждениеНулевойСтавки.СуммаНДС) КАК СуммаДокумента,
		//	|	СУММА(ПодтверждениеНулевойСтавки.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	СУММА(0) КАК СуммаДокументаКомиссия,
		//	|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
		//	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
		//	|	ИСТИНА КАК ЕстьНДС
		//	|ИЗ
		//	|	Документ.ПодтверждениеНулевойСтавкиНДС.Состав КАК ПодтверждениеНулевойСтавки
		//	|ГДЕ
		//	|	ПодтверждениеНулевойСтавки.Ссылка В(&ДокументыОснования)
		//	|	И ПодтверждениеНулевойСтавки.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0)
		//	|	И ПодтверждениеНулевойСтавки.СчетФактураВыданный = &ТекущийДокумент
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ПодтверждениеНулевойСтавки.Ссылка.Организация,
		//	|	ПодтверждениеНулевойСтавки.Покупатель";
		//
		//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		//	И ТипЗнч(Ссылка) <> Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		//	// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	ТекстЗапроса =
		//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//	|	ОтчетКомиссионераОПродажах.Ссылка КАК Ссылка,
		//	|	ОтчетКомиссионераОПродажах.Ссылка.Организация КАК Организация,
		//	|	ОтчетКомиссионераОПродажах.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		//	|	ОтчетКомиссионераОПродажах.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
		//	|ПОМЕСТИТЬ ВТ_ОтчетКомиссионераОПродажах
		//	|ИЗ
		//	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажах
		//	|ГДЕ
		//	|	ОтчетКомиссионераОПродажах.Ссылка В(&ДокументыОснования)
		//	|	И ОтчетКомиссионераОПродажах.ВыставленСФ
		//	|	И ОтчетКомиссионераОПродажах.СчетФактура = &ТекущийДокумент
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	Ссылка
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВложенныйЗапрос.КлючСтроки КАК КлючСтроки,
		//	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		//	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
		//	|	СУММА(ВложенныйЗапрос.ЕстьНДС) КАК ЕстьНДС,
		//	|	ВложенныйЗапрос.СуммаКомиссия,
		//	|	ВложенныйЗапрос.СуммаНДСКомиссия
		//	|ПОМЕСТИТЬ ВТ_Суммы
		//	|ИЗ
		//	|	(ВЫБРАТЬ
		//	|		ОтчетКомиссионераОПродажахТовары.КлючСтроки КАК КлючСтроки,
		//	|		ОтчетКомиссионераОПродажахТовары.Сумма КАК Сумма,
		//	|		ОтчетКомиссионераОПродажахТовары.СуммаНДС КАК СуммаНДС,
		//	|		ВЫБОР
		//	|			КОГДА ОтчетКомиссионераОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|				ТОГДА 0
		//	|			ИНАЧЕ 1
		//	|		КОНЕЦ КАК ЕстьНДС,
		//	|		ВЫБОР
		//	|			КОГДА ОтчетКомиссионераОПродажахТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
		//	|				ТОГДА ОтчетКомиссионераОПродажахТовары.Сумма
		//	|			ИНАЧЕ 0
		//	|		КОНЕЦ КАК СуммаКомиссия,
		//	|		ВЫБОР
		//	|			КОГДА ОтчетКомиссионераОПродажахТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
		//	|				ТОГДА ОтчетКомиссионераОПродажахТовары.СуммаНДС
		//	|			ИНАЧЕ 0
		//	|		КОНЕЦ КАК СуммаНДСКомиссия
		//	|	ИЗ
		//	|		ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
		//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
		//	|			ПО ВТ_ОтчетКомиссионераОПродажах.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
		//	|	
		//	|	ОБЪЕДИНИТЬ ВСЕ
		//	|	
		//	|	ВЫБРАТЬ
		//	|		ОтчетКомиссионераОПродажахУслуги.КлючСтроки,
		//	|		ОтчетКомиссионераОПродажахУслуги.Сумма,
		//	|		ОтчетКомиссионераОПродажахУслуги.СуммаНДС,
		//	|		ВЫБОР
		//	|			КОГДА ОтчетКомиссионераОПродажахУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|				ТОГДА 0
		//	|			ИНАЧЕ 1
		//	|		КОНЕЦ,
		//	|		0,
		//	|		0
		//	|	ИЗ
		//	|		ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
		//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
		//	|			ПО ВТ_ОтчетКомиссионераОПродажах.Ссылка = ОтчетКомиссионераОПродажахУслуги.Ссылка) КАК ВложенныйЗапрос
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВложенныйЗапрос.КлючСтроки,
		//	|	ВложенныйЗапрос.СуммаКомиссия,
		//	|	ВложенныйЗапрос.СуммаНДСКомиссия
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	КлючСтроки
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_ОтчетКомиссионераОПродажах.Организация КАК Организация,
		//	|	ВЫБОР
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
		//	|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
		//	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
		//	|	КОНЕЦ КАК Контрагент,
		//	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ КАК Дата,
		//	|	ВЫБОР
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
		//	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель = ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
		//	|			ТОГДА НЕОПРЕДЕЛЕНО
		//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		//	|	КОНЕЦ КАК Договор,
		//	|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
		//	|			КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ ВТ_Суммы.СуммаНДС
		//	|		КОНЕЦ) КАК СуммаДокумента,
		//	|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
		//	|	ВТ_ОтчетКомиссионераОПродажах.ВалютаДокумента КАК ВалютаДокумента,
		//	|	ВТ_Суммы.СуммаНДСКомиссия КАК СуммаНДСДокументаКомиссия,
		//	|	ВТ_Суммы.СуммаКомиссия + ВЫБОР
		//	|		КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
		//	|			ТОГДА 0
		//	|		ИНАЧЕ ВТ_Суммы.СуммаНДСКомиссия
		//	|	КОНЕЦ КАК СуммаДокументаКомиссия
		//	|ИЗ
		//	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтчетКомиссионераОПродажах КАК ВТ_ОтчетКомиссионераОПродажах
		//	|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ВТ_ОтчетКомиссионераОПродажах.Ссылка
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
		//	|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ВТ_Суммы.КлючСтроки
		//	|ГДЕ
		//	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &ТекущийДокумент
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВТ_ОтчетКомиссионераОПродажах.ВалютаДокумента,
		//	|	ВЫБОР
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
		//	|			ТОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
		//	|		ИНАЧЕ ОтчетКомиссионераОПродажахПокупатели.Покупатель
		//	|	КОНЕЦ,
		//	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ,
		//	|	ВТ_ОтчетКомиссионераОПродажах.Организация,
		//	|	ВЫБОР
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Ссылка.ВыписыватьСчетаФактурыСводно
		//	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		//	|		КОГДА ОтчетКомиссионераОПродажахПокупатели.Покупатель = ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
		//	|			ТОГДА НЕОПРЕДЕЛЕНО
		//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		//	|	КОНЕЦ,
		//	|	ВТ_Суммы.СуммаНДСКомиссия,
		//	|	ВТ_Суммы.СуммаКомиссия + ВЫБОР
		//	|		КОГДА ВТ_ОтчетКомиссионераОПродажах.СуммаВключаетНДС
		//	|			ТОГДА 0
		//	|		ИНАЧЕ ВТ_Суммы.СуммаНДСКомиссия
		//	|	КОНЕЦ";

		//		
		//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
		//	И НЕ ЭтоПолученныйСФ 
		//	И ЗначениеЗаполнено(Ссылка.Продавец) Тогда

		//	// Для данного документа применяется специфический запрос для расчета параметров счета-фактуры, выставленного за продавца
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	ТекстЗапроса =
		//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
		//	|	ОтчетКомитентуОПродажах.Ссылка.Организация КАК Организация,
		//	|	ОтчетКомитентуОПродажах.Ссылка.Контрагент КАК Контрагент,
		//	|	ОтчетКомитентуОПродажах.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
		//	|	ВЫБОР
		//	|		КОГДА ОтчетКомитентуОПродажах.Ссылка.ВыписыватьСчетаФактурыСводно
		//	|			ТОГДА ОтчетКомитентуОПродажах.Ссылка.Контрагент
		//	|		ИНАЧЕ ОтчетКомитентуОПродажах.Поставщик
		//	|	КОНЕЦ КАК Продавец,
		//	|	ОтчетКомитентуОПродажах.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		//	|	ОтчетКомитентуОПродажах.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
		//	|	ОтчетКомитентуОПродажах.ДатаСФ КАК ДатаСФ,
		//	|	ОтчетКомитентуОПродажах.КлючСтроки КАК КлючСтроки,
		//	|	ОтчетКомитентуОПродажах.НомерСчетаФактуры КАК НомерСчетаФактурыПродавца
		//	|ПОМЕСТИТЬ ВТ_ОтчетКомитентуОПродажах
		//	|ИЗ
		//	|	Документ.ОтчетКомитентуОПродажах.Поставщики КАК ОтчетКомитентуОПродажах
		//	|ГДЕ
		//	|	ОтчетКомитентуОПродажах.Ссылка В(&ДокументыОснования)
		//	|	И ОтчетКомитентуОПродажах.ПолученСФ
		//	|	И ОтчетКомитентуОПродажах.СчетФактура = &ТекущийДокумент
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	Ссылка,
		//	|	КлючСтроки
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка,
		//	|	ОтчетКомитентуОПродажахТовары.КлючСтроки КАК КлючСтроки,
		//	|	СУММА(ОтчетКомитентуОПродажахТовары.Сумма) КАК Сумма,
		//	|	СУММА(ОтчетКомитентуОПродажахТовары.СуммаНДС) КАК СуммаНДС,
		//	|	СУММА(ВЫБОР
		//	|			КОГДА ОтчетКомитентуОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|				ТОГДА 0
		//	|			ИНАЧЕ 1
		//	|		КОНЕЦ) КАК ЕстьНДС
		//	|ПОМЕСТИТЬ ВТ_Суммы
		//	|ИЗ
		//	|	Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
		//	|ГДЕ
		//	|	ОтчетКомитентуОПродажахТовары.Ссылка В(&ДокументыОснования)
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ОтчетКомитентуОПродажахТовары.Ссылка,
		//	|	ОтчетКомитентуОПродажахТовары.КлючСтроки
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	Ссылка,
		//	|	КлючСтроки
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_ОтчетКомитентуОПродажах.Организация КАК Организация,
		//	|	ВТ_ОтчетКомитентуОПродажах.Контрагент КАК Контрагент,
		//	|	ВТ_ОтчетКомитентуОПродажах.ДатаСФ КАК Дата,
		//	|	ВТ_ОтчетКомитентуОПродажах.ДоговорКонтрагента КАК Договор,
		//	|	ВТ_ОтчетКомитентуОПродажах.Продавец КАК Продавец,
		//	|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
		//	|			КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ ВТ_Суммы.СуммаНДС
		//	|		КОНЕЦ) КАК СуммаДокумента,
		//	|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	ВТ_ОтчетКомитентуОПродажах.ВалютаДокумента КАК ВалютаДокумента,
		//	|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
		//	|	ВТ_ОтчетКомитентуОПродажах.НомерСчетаФактурыПродавца,
		//	|	ВТ_Суммы.Сумма + ВЫБОР
		//	|		КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
		//	|			ТОГДА 0
		//	|		ИНАЧЕ ВТ_Суммы.СуммаНДС
		//	|	КОНЕЦ КАК СуммаДокументаКомиссия,
		//	|	ВТ_Суммы.СуммаНДС КАК СуммаНДСДокументаКомиссия
		//	|ИЗ
		//	|	ВТ_ОтчетКомитентуОПродажах КАК ВТ_ОтчетКомитентуОПродажах
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
		//	|		ПО ВТ_ОтчетКомитентуОПродажах.Ссылка = ВТ_Суммы.Ссылка
		//	|			И ВТ_ОтчетКомитентуОПродажах.КлючСтроки = ВТ_Суммы.КлючСтроки
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВТ_ОтчетКомитентуОПродажах.Организация,
		//	|	ВТ_ОтчетКомитентуОПродажах.Контрагент,
		//	|	ВТ_ОтчетКомитентуОПродажах.ДатаСФ,
		//	|	ВТ_ОтчетКомитентуОПродажах.ДоговорКонтрагента,
		//	|	ВТ_ОтчетКомитентуОПродажах.Продавец,
		//	|	ВТ_ОтчетКомитентуОПродажах.ВалютаДокумента,
		//	|	ВТ_ОтчетКомитентуОПродажах.НомерСчетаФактурыПродавца,
		//	|	ВТ_Суммы.СуммаНДС,
		//	|	ВТ_Суммы.Сумма + ВЫБОР
		//	|		КОГДА ВТ_ОтчетКомитентуОПродажах.СуммаВключаетНДС
		//	|			ТОГДА 0
		//	|		ИНАЧЕ ВТ_Суммы.СуммаНДС
		//	|	КОНЕЦ";
		//		
		//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		//		
		//	Запрос.УстановитьПараметр("ДокументОснование_КорректировкаПоступления", ДокументыОснования);
		//	Запрос.УстановитьПараметр("КорректировочныйСчетФактура", СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный);

		//	Если СчетФактура.Исправление И НЕ СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		//		
		//		ТекстЗапроса = 
		//		"ВЫБРАТЬ
		//		|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
		//		|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Контрагент,
		//		|	КорректировкаПоступленияТовары.Ссылка.ДоговорКонтрагента КАК Договор,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
		//		|			ТОГДА КорректировкаПоступленияТовары.Сумма
		//		|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
		//		|	КОНЕЦ КАК СуммаДокумента,
		//		|	КорректировкаПоступленияТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		//		|	КорректировкаПоступленияТовары.СуммаНДС КАК СуммаНДСДокумента,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//		|			ТОГДА 0
		//		|		ИНАЧЕ 1
		//		|	КОНЕЦ КАК ЕстьНДС,
		//		|	КорректировкаПоступленияТовары.Ссылка КАК Документ,
		//		|	0 КАК СуммаУвеличение,
		//		|	0 КАК СуммаУменьшение,
		//		|	0 КАК СуммаНДСУвеличение,
		//		|	0 КАК СуммаНДСУменьшение,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
		//		|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
		//		|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
		//		|			ТОГДА ВЫБОР
		//		|					КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
		//		|						ТОГДА КорректировкаПоступленияТовары.Сумма
		//		|					ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
		//		|				КОНЕЦ
		//		|		ИНАЧЕ 0
		//		|	КОНЕЦ КАК СуммаДокументаКомиссия,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
		//		|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
		//		|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
		//		|			ТОГДА КорректировкаПоступленияТовары.СуммаНДС
		//		|		ИНАЧЕ 0
		//		|	КОНЕЦ КАК СуммаНДСДокументаКомиссия,
		//		|	0 КАК СуммаУвеличениеКомиссия,
		//		|	0 КАК СуммаУменьшениеКомиссия,
		//		|	0 КАК СуммаНДСУвеличениеКомиссия,
		//		|	0 КАК СуммаНДСУменьшениеКомиссия
		//		|ИЗ
		//		|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
		//		|ГДЕ
		//		|	КорректировкаПоступленияТовары.Ссылка В(&ДокументОснование_КорректировкаПоступления)
		//		|
		//		|ОБЪЕДИНИТЬ ВСЕ
		//		|
		//		|ВЫБРАТЬ
		//		|	КорректировкаПоступленияУслуги.Ссылка.Организация,
		//		|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
		//		|	КорректировкаПоступленияУслуги.Ссылка.ДоговорКонтрагента,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
		//		|			ТОГДА КорректировкаПоступленияУслуги.Сумма
		//		|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
		//		|	КОНЕЦ,
		//		|	КорректировкаПоступленияУслуги.Ссылка.ВалютаДокумента,
		//		|	КорректировкаПоступленияУслуги.СуммаНДС,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//		|			ТОГДА 0
		//		|		ИНАЧЕ 1
		//		|	КОНЕЦ,
		//		|	КорректировкаПоступленияУслуги.Ссылка,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0
		//		|ИЗ
		//		|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
		//		|ГДЕ
		//		|	КорректировкаПоступленияУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
		//		|
		//		|ОБЪЕДИНИТЬ ВСЕ
		//		|
		//		|ВЫБРАТЬ
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Организация,
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Контрагент,
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
		//		|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
		//		|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
		//		|	КОНЕЦ,
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ВалютаДокумента,
		//		|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//		|			ТОГДА 0
		//		|		ИНАЧЕ 1
		//		|	КОНЕЦ,
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	ВЫБОР
		//		|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
		//		|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
		//		|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
		//		|	КОНЕЦ,
		//		|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
		//		|	0,
		//		|	0,
		//		|	0,
		//		|	0
		//		|ИЗ
		//		|	Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
		//		|ГДЕ
		//		|	КорректировкаПоступленияАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
		//		|ИТОГИ
		//		|	СУММА(СуммаДокумента),
		//		|	СУММА(СуммаНДСДокумента),
		//		|	СУММА(ЕстьНДС),
		//		|	СУММА(СуммаУвеличение),
		//		|	СУММА(СуммаУменьшение),
		//		|	СУММА(СуммаНДСУвеличение),
		//		|	СУММА(СуммаНДСУменьшение),
		//		|	СУММА(СуммаДокументаКомиссия),
		//		|	СУММА(СуммаНДСДокументаКомиссия),
		//		|	СУММА(СуммаУвеличениеКомиссия),
		//		|	СУММА(СуммаУменьшениеКомиссия),
		//		|	СУММА(СуммаНДСУвеличениеКомиссия),
		//		|	СУММА(СуммаНДСУменьшениеКомиссия)
		//		|ПО
		//		|	ОБЩИЕ,
		//		|	Документ";
		//		
		//	Иначе
				
			//	ТекстЗапроса = 
			//	"ВЫБРАТЬ
			//	|	КорректировкаПоступленияТовары.Ссылка.Организация КАК Организация,
			//	|	КорректировкаПоступленияТовары.Ссылка.Контрагент КАК Контрагент,
			//	|	КорректировкаПоступленияТовары.Ссылка.ДоговорКонтрагента КАК Договор,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения > 0
			//	|								ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) > 0
			//	|							ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаУвеличение,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения < 0
			//	|								ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) < 0
			//	|							ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаУменьшение,
			//	|	КорректировкаПоступленияТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения > 0
			//	|					ТОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаНДСУвеличение,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения < 0
			//	|					ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаНДСУменьшение,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|			ТОГДА КорректировкаПоступленияТовары.Сумма
			//	|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
			//	|	КОНЕЦ КАК СуммаДокумента,
			//	|	КорректировкаПоступленияТовары.СуммаНДС КАК СуммаНДСДокумента,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			//	|			ТОГДА 0
			//	|		ИНАЧЕ 1
			//	|	КОНЕЦ КАК ЕстьНДС,
			//	|	КорректировкаПоступленияТовары.Ссылка КАК Документ,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
			//	|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			//	|			ТОГДА КорректировкаПоступленияТовары.СуммаНДС
			//	|		ИНАЧЕ 0
			//	|	КОНЕЦ КАК СуммаНДСДокументаКомиссия,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			//	|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
			//	|			ТОГДА ВЫБОР
			//	|					КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|						ТОГДА КорректировкаПоступленияТовары.Сумма
			//	|					ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
			//	|				КОНЕЦ
			//	|		ИНАЧЕ 0
			//	|	КОНЕЦ КАК СуммаДокументаКомиссия,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения > 0
			//	|								ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) > 0
			//	|							ТОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаУвеличениеКомиссия,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаДоИзменения < 0
			//	|								ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС - (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения) < 0
			//	|							ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаУменьшениеКомиссия,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения > 0
			//	|					ТОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|				ИЛИ НЕ (КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
			//	|			  	ИЛИ КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию))
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияТовары.СуммаНДС - КорректировкаПоступленияТовары.СуммаНДСДоИзменения < 0
			//	|					ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ КАК СуммаНДСУменьшениеКомиссия
			//	|ИЗ
			//	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
			//	|ГДЕ
			//	|	КорректировкаПоступленияТовары.Ссылка В(&ДокументОснование_КорректировкаПоступления)
			//	|
			//	|ОБЪЕДИНИТЬ ВСЕ
			//	|
			//	|ВЫБРАТЬ
			//	|	КорректировкаПоступленияУслуги.Ссылка.Организация,
			//	|	КорректировкаПоступленияУслуги.Ссылка.Контрагент,
			//	|	КорректировкаПоступленияУслуги.Ссылка.ДоговорКонтрагента,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения > 0
			//	|								ТОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения) > 0
			//	|							ТОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаДоИзменения < 0
			//	|								ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС - (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения) < 0
			//	|							ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияУслуги.Ссылка.ВалютаДокумента,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения > 0
			//	|					ТОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияУслуги.СуммаНДС - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения < 0
			//	|					ТОГДА КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияУслуги.Ссылка.СуммаВключаетНДС
			//	|			ТОГДА КорректировкаПоступленияУслуги.Сумма
			//	|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияУслуги.СуммаНДС,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			//	|			ТОГДА 0
			//	|		ИНАЧЕ 1
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияУслуги.Ссылка,
			//	|	0,
			//	|	0,
			//	|	0,
			//	|	0,
			//	|	0,
			//	|	0
			//	|ИЗ
			//	|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги
			//	|ГДЕ
			//	|	КорректировкаПоступленияУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
			//	|
			//	|ОБЪЕДИНИТЬ ВСЕ
			//	|
			//	|ВЫБРАТЬ
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Организация,
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.Контрагент,
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения > 0
			//	|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) > 0
			//	|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения < 0
			//	|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения - КорректировкаПоступленияАгентскиеУслуги.Сумма
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) < 0
			//	|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка.ВалютаДокумента,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения > 0
			//	|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения < 0
			//	|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
			//	|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			//	|			ТОГДА 0
			//	|		ИНАЧЕ 1
			//	|	КОНЕЦ,
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка,
			//	|	КорректировкаПоступленияАгентскиеУслуги.СуммаНДС,
			//	|	ВЫБОР
			//	|		КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|			ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма
			//	|		ИНАЧЕ КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения > 0
			//	|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) > 0
			//	|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.Ссылка.СуммаВключаетНДС
			//	|					ТОГДА ВЫБОР
			//	|							КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма - КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения < 0
			//	|								ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения - КорректировкаПоступленияАгентскиеУслуги.Сумма
			//	|							ИНАЧЕ 0
			//	|						КОНЕЦ
			//	|				ИНАЧЕ ВЫБОР
			//	|						КОГДА КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - (КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения) < 0
			//	|							ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаДоИзменения + КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияАгентскиеУслуги.Сумма + КорректировкаПоступленияАгентскиеУслуги.СуммаНДС)
			//	|						ИНАЧЕ 0
			//	|					КОНЕЦ
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения > 0
			//	|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ,
			//	|	ВЫБОР
			//	|		КОГДА НЕ &КорректировочныйСчетФактура
			//	|			ТОГДА 0
			//	|		ИНАЧЕ ВЫБОР
			//	|				КОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДС - КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения < 0
			//	|					ТОГДА КорректировкаПоступленияАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияАгентскиеУслуги.СуммаНДС
			//	|				ИНАЧЕ 0
			//	|			КОНЕЦ
			//	|	КОНЕЦ
			//	|ИЗ
			//	|	Документ.КорректировкаПоступления.АгентскиеУслуги КАК КорректировкаПоступленияАгентскиеУслуги
			//	|ГДЕ
			//	|	КорректировкаПоступленияАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаПоступления)
			//	|ИТОГИ
			//	|	СУММА(СуммаУвеличение),
			//	|	СУММА(СуммаУменьшение),
			//	|	СУММА(СуммаНДСУвеличение),
			//	|	СУММА(СуммаНДСУменьшение),
			//	|	СУММА(СуммаДокумента),
			//	|	СУММА(СуммаНДСДокумента),
			//	|	СУММА(ЕстьНДС),
			//	|	СУММА(СуммаНДСДокументаКомиссия),
			//	|	СУММА(СуммаДокументаКомиссия),
			//	|	СУММА(СуммаУвеличениеКомиссия),
			//	|	СУММА(СуммаУменьшениеКомиссия),
			//	|	СУММА(СуммаНДСУвеличениеКомиссия),
			//	|	СУММА(СуммаНДСУменьшениеКомиссия)
			//	|ПО
			//	|	ОБЩИЕ,
			//	|	Документ";
			//КонецЕсли;
			//
			//Если СчетФактура.Исправление Тогда
			//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДоИзменения", "ДоКорректировки");
			//КонецЕсли;
			//	
	//	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
	//			
	//		Запрос.УстановитьПараметр("ДокументОснование_КорректировкаРеализации", ДокументыОснования);
	//		Запрос.УстановитьПараметр("КорректировочныйСчетФактура", СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный);
	//		
	//		ТекстЗапроса = 
	//		"ВЫБРАТЬ
	//		|	КорректировкаРеализацииТовары.Ссылка.Организация КАК Организация,
	//		|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Контрагент,
	//		|	КорректировкаРеализацииТовары.Ссылка.ДоговорКонтрагента КАК Договор,
	//		|	КорректировкаРеализацииТовары.Ссылка.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	//		|	КорректировкаРеализацииТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения > 0
	//		|								ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) > 0
	//		|							ТОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаУвеличение,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения < 0
	//		|								ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения - КорректировкаРеализацииТовары.Сумма
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) < 0
	//		|							ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения - (КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаУменьшение,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения > 0
	//		|					ТОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаНДСУвеличение,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения < 0
	//		|					ТОГДА КорректировкаРеализацииТовары.СуммаНДСДоИзменения - КорректировкаРеализацииТовары.СуммаНДС
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаНДСУменьшение,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|			ТОГДА КорректировкаРеализацииТовары.Сумма
	//		|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС
	//		|	КОНЕЦ КАК СуммаДокумента,
	//		|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДСДокумента,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//		|			ТОГДА 0
	//		|		ИНАЧЕ 1
	//		|	КОНЕЦ КАК ЕстьНДС,
	//		|	КорректировкаРеализацииТовары.Ссылка КАК Документ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения > 0
	//		|								ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) > 0
	//		|							ТОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаУвеличениеКомиссия,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения < 0
	//		|								ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения - КорректировкаРеализацииТовары.Сумма
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС - (КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения) < 0
	//		|							ТОГДА КорректировкаРеализацииТовары.СуммаДоИзменения + КорректировкаРеализацииТовары.СуммаНДСДоИзменения - (КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаУменьшениеКомиссия,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения > 0
	//		|					ТОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|				ИЛИ НЕ(КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|						ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение))
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения < 0
	//		|					ТОГДА КорректировкаРеализацииТовары.СуммаНДСДоИзменения - КорректировкаРеализацииТовары.СуммаНДС
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ КАК СуммаНДСУменьшениеКомиссия,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
	//		|			ТОГДА ВЫБОР
	//		|					КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
	//		|						ТОГДА КорректировкаРеализацииТовары.Сумма
	//		|					ИНАЧЕ КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС
	//		|				КОНЕЦ
	//		|		ИНАЧЕ 0
	//		|	КОНЕЦ КАК СуммаДокументаКомиссия,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//		|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//		|				ИЛИ КорректировкаРеализацииТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦПринятыеНаОтветственноеХранение)
	//		|			ТОГДА КорректировкаРеализацииТовары.СуммаНДС
	//		|		ИНАЧЕ 0
	//		|	КОНЕЦ КАК СуммаНДСДокументаКомиссия
	//		|ИЗ
	//		|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	//		|ГДЕ
	//		|	КорректировкаРеализацииТовары.Ссылка В(&ДокументОснование_КорректировкаРеализации)
	//		|
	//		|ОБЪЕДИНИТЬ ВСЕ
	//		|
	//		|ВЫБРАТЬ
	//		|	КорректировкаРеализацииУслуги.Ссылка.Организация,
	//		|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
	//		|	КорректировкаРеализацииУслуги.Ссылка.ДоговорКонтрагента,
	//		|	КорректировкаРеализацииУслуги.Ссылка.ДоговорКонтрагента.ВидДоговора,
	//		|	КорректировкаРеализацииУслуги.Ссылка.ВалютаДокумента,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения > 0
	//		|								ТОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения) > 0
	//		|							ТОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения < 0
	//		|								ТОГДА КорректировкаРеализацииУслуги.СуммаДоИзменения - КорректировкаРеализацииУслуги.Сумма
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС - (КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения) < 0
	//		|							ТОГДА КорректировкаРеализацииУслуги.СуммаДоИзменения + КорректировкаРеализацииУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения > 0
	//		|					ТОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииУслуги.СуммаНДС - КорректировкаРеализацииУслуги.СуммаНДСДоИзменения < 0
	//		|					ТОГДА КорректировкаРеализацииУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииУслуги.СуммаНДС
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииУслуги.Ссылка.СуммаВключаетНДС
	//		|			ТОГДА КорректировкаРеализацииУслуги.Сумма
	//		|		ИНАЧЕ КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС
	//		|	КОНЕЦ,
	//		|	КорректировкаРеализацииУслуги.СуммаНДС,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//		|			ТОГДА 0
	//		|		ИНАЧЕ 1
	//		|	КОНЕЦ,
	//		|	КорректировкаРеализацииУслуги.Ссылка,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	0
	//		|ИЗ
	//		|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	//		|ГДЕ
	//		|	КорректировкаРеализацииУслуги.Ссылка В(&ДокументОснование_КорректировкаРеализации)
	//		|
	//		|ОБЪЕДИНИТЬ ВСЕ
	//		|
	//		|ВЫБРАТЬ
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.Организация,
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.Контрагент,
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ДоговорКонтрагента.ВидДоговора,
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка.ВалютаДокумента,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения > 0
	//		|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) > 0
	//		|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения < 0
	//		|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения - КорректировкаРеализацииАгентскиеУслуги.Сумма
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) < 0
	//		|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения > 0
	//		|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения < 0
	//		|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма
	//		|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	//		|	КОНЕЦ,
	//		|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//		|			ТОГДА 0
	//		|		ИНАЧЕ 1
	//		|	КОНЕЦ,
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения > 0
	//		|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) > 0
	//		|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|					ТОГДА ВЫБОР
	//		|							КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма - КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения < 0
	//		|								ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения - КорректировкаРеализацииАгентскиеУслуги.Сумма
	//		|							ИНАЧЕ 0
	//		|						КОНЕЦ
	//		|				ИНАЧЕ ВЫБОР
	//		|						КОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - (КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения) < 0
	//		|							ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - (КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС)
	//		|						ИНАЧЕ 0
	//		|					КОНЕЦ
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения > 0
	//		|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НЕ &КорректировочныйСчетФактура
	//		|			ТОГДА 0
	//		|		ИНАЧЕ ВЫБОР
	//		|				КОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДС - КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения < 0
	//		|					ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения - КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	//		|				ИНАЧЕ 0
	//		|			КОНЕЦ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА КорректировкаРеализацииАгентскиеУслуги.Ссылка.СуммаВключаетНДС
	//		|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма
	//		|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	//		|	КОНЕЦ,
	//		|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	//		|ИЗ
	//		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	//		|ГДЕ
	//		|	КорректировкаРеализацииАгентскиеУслуги.Ссылка В(&ДокументОснование_КорректировкаРеализации)
	//		|ИТОГИ
	//		|	СУММА(СуммаУвеличение),
	//		|	СУММА(СуммаУменьшение),
	//		|	СУММА(СуммаНДСУвеличение),
	//		|	СУММА(СуммаНДСУменьшение),
	//		|	СУММА(СуммаДокумента),
	//		|	СУММА(СуммаНДСДокумента),
	//		|	СУММА(ЕстьНДС),
	//		|	СУММА(СуммаУвеличениеКомиссия),
	//		|	СУММА(СуммаУменьшениеКомиссия),
	//		|	СУММА(СуммаНДСУвеличениеКомиссия),
	//		|	СУММА(СуммаНДСУменьшениеКомиссия),
	//		|	СУММА(СуммаДокументаКомиссия),
	//		|	СУММА(СуммаНДСДокументаКомиссия)
	//		|ПО
	//		|	ОБЩИЕ,
	//		|	Документ";
	//		
	//		Если СчетФактура.Исправление Тогда
	//			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДоИзменения", "ДоКорректировки");
	//		КонецЕсли;
	//
	//	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.НачислениеНДСпоСМРхозспособом") тогда 
	//			
	//		Запрос.УстановитьПараметр("ДокументОснование_НачислениеНДСпоСМРхозспособом", ДокументыОснования);
	//	
	//		ТекстЗапроса = 
	//			"ВЫБРАТЬ
	//			|	НачислениеНДСпоСМРхозспособом.Ссылка.Организация,
	//			|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	//			|	НЕОПРЕДЕЛЕНО КАК Договор,
	//			|	СУММА(НачислениеНДСпоСМРхозспособом.СуммаБезНДС + НачислениеНДСпоСМРхозспособом.НДС) КАК СуммаДокумента,
	//			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	//			|	СУММА(НачислениеНДСпоСМРхозспособом.НДС) КАК СуммаНДСДокумента,
	//			|	СУММА(0) КАК СуммаДокументаКомиссия,
	//			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
	//			|	1 КАК ЕстьНДС
	//			|ИЗ
	//			|	Документ.НачислениеНДСпоСМРхозспособом.СМРхозспособом КАК НачислениеНДСпоСМРхозспособом
	//			|ГДЕ
	//			|	НачислениеНДСпоСМРхозспособом.Ссылка В(&ДокументОснование_НачислениеНДСпоСМРхозспособом)
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	НачислениеНДСпоСМРхозспособом.Ссылка.Организация,
	//			|	НачислениеНДСпоСМРхозспособом.НДС";
	//			
	//	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
	//			
	//		Запрос.УстановитьПараметр("ДокументОснование_ПринятиеКУчетуОС", ДокументыОснования);
	//	
	//		ТекстЗапроса = 
	//			"ВЫБРАТЬ
	//			|	НДСНачисленныйОбороты.Организация КАК Организация,
	//			|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	//			|	НЕОПРЕДЕЛЕНО КАК Договор,
	//			|	НДСНачисленныйОбороты.СуммаБезНДСПриход + НДСНачисленныйОбороты.НДСПриход КАК СуммаДокумента,
	//			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	//			|	НДСНачисленныйОбороты.НДСПриход КАК СуммаНДСДокумента,
	//			|	0 КАК СуммаДокументаКомиссия,
	//			|	0 КАК СуммаНДСДокументаКомиссия,
	//			|	ВЫБОР
	//			|		КОГДА НДСНачисленныйОбороты.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//			|			ТОГДА 0
	//			|		ИНАЧЕ 1
	//			|	КОНЕЦ КАК ЕстьНДС
	//			|ИЗ
	//			|	РегистрНакопления.НДСНачисленный.Обороты(
	//			|			,
	//			|			,
	//			|			Период,
	//			|			СчетФактура ССЫЛКА Документ.ПринятиеКУчетуОС
	//			|				И СчетФактура В (&ДокументОснование_ПринятиеКУчетуОС)) КАК НДСНачисленныйОбороты";

	//	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
	//		
	//		Запрос.УстановитьПараметр("ДокументОснование_РеализацияОтгруженныхТоваров", ДокументыОснования);
	//	
	//		ТекстЗапроса = 
	//			"ВЫБРАТЬ
	//			|	РеализацияОтгруженныхТоваров.Организация,
	//			|	РеализацияОтгруженныхТоваров.Контрагент,
	//			|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента КАК Договор,
	//			|	РеализацияОтгруженныхТоваров.СуммаДокумента КАК СуммаДокумента,
	//			|	РеализацияОтгруженныхТоваров.ДокументОтгрузки.ВалютаДокумента КАК ВалютаДокумента,
	//			|	РеализацияОтгруженныхТоваров.ДокументОтгрузки КАК ДокументОтгрузки
	//			|ПОМЕСТИТЬ ВТ_РеализацияОтгруженныхТоваров
	//			|ИЗ
	//			|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	//			|ГДЕ
	//			|	РеализацияОтгруженныхТоваров.Ссылка В(&ДокументОснование_РеализацияОтгруженныхТоваров)
	//			|
	//			|ИНДЕКСИРОВАТЬ ПО
	//			|	ДокументОтгрузки
	//			|;
	//			|
	//			|////////////////////////////////////////////////////////////////////////////////
	//			|ВЫБРАТЬ
	//			|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	//			|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДСДокумента,
	//			|	СУММА(ВЫБОР
	//			|			КОГДА РеализацияТоваровУслугТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//			|				ТОГДА 0
	//			|			ИНАЧЕ 1
	//			|		КОНЕЦ) КАК ЕстьНДС
	//			|ПОМЕСТИТЬ ВТ_ТаблицыНДС
	//			|ИЗ
	//			|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
	//			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//			|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	РеализацияТоваровУслугТовары.Ссылка
	//			|
	//			|ОБЪЕДИНИТЬ ВСЕ
	//			|
	//			|ВЫБРАТЬ
	//			|	ПередачаОСОС.Ссылка,
	//			|	СУММА(ПередачаОСОС.СуммаНДС),
	//			|	СУММА(ВЫБОР
	//			|			КОГДА ПередачаОСОС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//			|				ТОГДА 0
	//			|			ИНАЧЕ 1
	//			|		КОНЕЦ)
	//			|ИЗ
	//			|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
	//			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК ПередачаОСОС
	//			|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = ПередачаОСОС.Ссылка
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	ПередачаОСОС.Ссылка
	//			|;
	//			|
	//			|////////////////////////////////////////////////////////////////////////////////
	//			|ВЫБРАТЬ
	//			|	ВТ_РеализацияОтгруженныхТоваров.Организация КАК Организация,
	//			|	ВТ_РеализацияОтгруженныхТоваров.Контрагент КАК Контрагент,
	//			|	ВТ_РеализацияОтгруженныхТоваров.Договор КАК Договор,
	//			|	ВТ_РеализацияОтгруженныхТоваров.ВалютаДокумента КАК ВалютаДокумента,
	//			|	СУММА(ВТ_РеализацияОтгруженныхТоваров.СуммаДокумента) КАК СуммаДокумента,
	//			|	СУММА(ВТ_ТаблицыНДС.СуммаНДСДокумента) КАК СуммаНДСДокумента,
	//			|	СУММА(0) КАК СуммаДокументаКомиссия,
	//			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
	//			|	СУММА(ВТ_ТаблицыНДС.ЕстьНДС) КАК ЕстьНДС
	//			|ИЗ
	//			|	ВТ_РеализацияОтгруженныхТоваров КАК ВТ_РеализацияОтгруженныхТоваров
	//			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицыНДС КАК ВТ_ТаблицыНДС
	//			|		ПО ВТ_РеализацияОтгруженныхТоваров.ДокументОтгрузки = ВТ_ТаблицыНДС.Ссылка
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	ВТ_РеализацияОтгруженныхТоваров.Организация,
	//			|	ВТ_РеализацияОтгруженныхТоваров.Контрагент,
	//			|	ВТ_РеализацияОтгруженныхТоваров.Договор,
	//			|	ВТ_РеализацияОтгруженныхТоваров.ВалютаДокумента";
	//			
	//	ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
	//		
	//		Запрос.УстановитьПараметр("ДокументОснование_ПоступлениеДопРасходов", ДокументыОснования);
	//			
	//			ТекстЗапроса = 
	//			"ВЫБРАТЬ
	//			|	Таблица.Ссылка.Организация КАК Организация,
	//			|	Таблица.Ссылка.Контрагент КАК Контрагент,
	//			|	Таблица.Ссылка.ДоговорКонтрагента КАК Договор,
	//			|	СУММА(Таблица.Сумма + ВЫБОР
	//			|			КОГДА Таблица.Ссылка.СуммаВключаетНДС
	//			|				ТОГДА 0
	//			|			ИНАЧЕ Таблица.СуммаНДС
	//			|		КОНЕЦ) КАК СуммаДокумента,
	//			|	Таблица.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	//			|	СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокумента,
	//			|	СУММА(0) КАК СуммаДокументаКомиссия,
	//			|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
	//			|	СУММА(ВЫБОР
	//			|			КОГДА Таблица.Ссылка.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//			|				ТОГДА 0
	//			|			ИНАЧЕ 1
	//			|		КОНЕЦ) КАК ЕстьНДС
	//			|ИЗ
	//			|	Документ.ПоступлениеДопРасходов.Товары КАК Таблица
	//			|ГДЕ
	//			|	Таблица.Ссылка В(&ДокументОснование_ПоступлениеДопРасходов)
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	Таблица.Ссылка,
	//			|	Таблица.Ссылка.Организация,
	//			|	Таблица.Ссылка.Контрагент,
	//			|	Таблица.Ссылка.ДоговорКонтрагента,
	//			|	Таблица.Ссылка.ВалютаДокумента
	//			|
	//			|ОБЪЕДИНИТЬ ВСЕ
	//			|
	//			|ВЫБРАТЬ
	//			|	ПоступлениеДопРасходов.Организация,
	//			|	ПоступлениеДопРасходов.Контрагент,
	//			|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	//			|	СУММА(ПоступлениеДопРасходов.Сумма + ВЫБОР
	//			|			КОГДА ПоступлениеДопРасходов.СуммаВключаетНДС
	//			|				ТОГДА 0
	//			|			ИНАЧЕ ПоступлениеДопРасходов.СуммаНДС
	//			|		КОНЕЦ),
	//			|	ПоступлениеДопРасходов.ВалютаДокумента,
	//			|	СУММА(ПоступлениеДопРасходов.СуммаНДС),
	//			|	СУММА(0),
	//			|	СУММА(0),
	//			|	СУММА(ВЫБОР
	//			|			КОГДА ПоступлениеДопРасходов.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	//			|				ТОГДА 0
	//			|			ИНАЧЕ 1
	//			|		КОНЕЦ)
	//			|ИЗ
	//			|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	//			|ГДЕ
	//			|	ПоступлениеДопРасходов.Ссылка В(&ДокументОснование_ПоступлениеДопРасходов)
	//			|
	//			|СГРУППИРОВАТЬ ПО
	//			|	ПоступлениеДопРасходов.Организация,
	//			|	ПоступлениеДопРасходов.Контрагент,
	//			|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	//			|	ПоступлениеДопРасходов.ВалютаДокумента";
		//		
		//ИначеЕсли ЭтоПолученныйСФ 
		//	И Ссылка.ВозвратЧерезКомиссионера Тогда 
		//	
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	
		//	ТекстЗапроса =
		//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка КАК Ссылка,
		//	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.Организация КАК Организация,
		//	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		//	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
		//	|ПОМЕСТИТЬ ВТ_ОтчетКомиссионераОПродажахВозвраты
		//	|ИЗ
		//	|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахВозвраты
		//	|ГДЕ
		//	|	ОтчетКомиссионераОПродажахВозвраты.Ссылка В(&ДокументыОснования)
		//	|	И ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ
		//	|	И ОтчетКомиссионераОПродажахВозвраты.СчетФактура = &ТекущийДокумент
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	Ссылка
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВложенныйЗапрос.КлючСтроки КАК КлючСтроки,
		//	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		//	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
		//	|	СУММА(ВложенныйЗапрос.ЕстьНДС) КАК ЕстьНДС
		//	|ПОМЕСТИТЬ ВТ_Суммы
		//	|ИЗ
		//	|	(ВЫБРАТЬ
		//	|		ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки КАК КлючСтроки,
		//	|		ОтчетКомиссионераОПродажахТоварыВозвращенные.Сумма КАК Сумма,
		//	|		ОтчетКомиссионераОПродажахТоварыВозвращенные.СуммаНДС КАК СуммаНДС,
		//	|		ВЫБОР
		//	|			КОГДА ОтчетКомиссионераОПродажахТоварыВозвращенные.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		//	|				ТОГДА 0
		//	|			ИНАЧЕ 1
		//	|		КОНЕЦ КАК ЕстьНДС
		//	|	ИЗ
		//	|		ВТ_ОтчетКомиссионераОПродажахВозвраты КАК ВТ_ОтчетКомиссионераОПродажахВозвраты
		//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
		//	|			ПО ВТ_ОтчетКомиссионераОПродажахВозвраты.Ссылка = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка) КАК ВложенныйЗапрос
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВложенныйЗапрос.КлючСтроки
		//	|
		//	|ИНДЕКСИРОВАТЬ ПО
		//	|	КлючСтроки
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_ОтчетКомиссионераОПродажахВозвраты.Организация КАК Организация,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель КАК Продавец,
		//	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ КАК Дата,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.ДоговорКонтрагента КАК Договор,
		//	|	СУММА(ВТ_Суммы.Сумма + ВЫБОР
		//	|			КОГДА ВТ_ОтчетКомиссионераОПродажахВозвраты.СуммаВключаетНДС
		//	|				ТОГДА 0
		//	|			ИНАЧЕ ВТ_Суммы.СуммаНДС
		//	|		КОНЕЦ) КАК СуммаДокумента,
		//	|	СУММА(ВТ_Суммы.СуммаНДС) КАК СуммаНДСДокумента,
		//	|	СУММА(0) КАК СуммаДокументаКомиссия,
		//	|	СУММА(0) КАК СуммаНДСДокументаКомиссия,
		//	|	СУММА(ВТ_Суммы.ЕстьНДС) КАК ЕстьНДС,
		//	|	ВТ_ОтчетКомиссионераОПродажахВозвраты.ВалютаДокумента КАК ВалютаДокумента,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент
		//	|ИЗ
		//	|	Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахПокупатели
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтчетКомиссионераОПродажахВозвраты КАК ВТ_ОтчетКомиссионераОПродажахВозвраты
		//	|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ВТ_ОтчетКомиссионераОПродажахВозвраты.Ссылка
		//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
		//	|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ВТ_Суммы.КлючСтроки
		//	|ГДЕ
		//	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура = &ТекущийДокумент
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВТ_ОтчетКомиссионераОПродажахВозвраты.ВалютаДокумента,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Покупатель,
		//	|	ОтчетКомиссионераОПродажахПокупатели.ДатаСФ,
		//	|	ВТ_ОтчетКомиссионераОПродажахВозвраты.Организация,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.ДоговорКонтрагента,
		//	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка.Контрагент";

		//ИначеЕсли ЭтоПолученныйСФ 
		//	И ТипДокументаОснования = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом") Тогда
		//	
		//	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
		//	Запрос.УстановитьПараметр("Дата", 				СчетФактура.Дата);
		//	Запрос.УстановитьПараметр("Организация", 		СчетФактура.Организация);
		//	Запрос.УстановитьПараметр("Контрагент", 		СчетФактура.Контрагент);
		//	Запрос.УстановитьПараметр("ВалютаДокумента", 	СчетФактура.ВалютаДокумента);
		//	
		//	ТекстЗапроса = 
		//	"ВЫБРАТЬ
		//	|	НДСПредъявленныйОстатки.Организация,
		//	|	НДСПредъявленныйОстатки.Поставщик КАК Контрагент,
		//	|	ВЫБОР
		//	|		КОГДА НДСПредъявленныйОстатки.СчетФактура ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
		//	|			ТОГДА ВЫРАЗИТЬ(НДСПредъявленныйОстатки.СчетФактура КАК Документ.ДокументРасчетовСКонтрагентом).ДоговорКонтрагента
		//	|	КОНЕЦ КАК Договор,
		//	|	&ВалютаДокумента КАК ВалютаДокумента,
		//	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаДокумента,
		//	|	НДСПредъявленныйОстатки.НДСОстаток КАК СуммаНДСДокумента,
		//	|	0 КАК СуммаДокументаКомиссия,
		//	|	0 КАК СуммаНДСДокументаКомиссия,
		//	|	1 КАК ЕстьНДС
		//	|ИЗ
		//	|	РегистрНакопления.НДСПредъявленный.Остатки(
		//	|			&Дата,
		//	|			Организация = &Организация
		//	|				И СчетФактура В (&ДокументыОснования)) КАК НДСПредъявленныйОстатки";
		//	
		//Иначе	123				
			ТекстЗапроса = ПолучитьТекстЗапросаОпределенияПараметровСФ(ДокументыОснования, ЭтоПолученныйСФ, Запрос.Параметры);								
		//КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
			Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
				Запрос.Текст = Запрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат Результат;
	Иначе
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Возврат Результат;
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		РазныеОрганизации = Ложь;
		РазныеКонтрагенты = Ложь;
		РазныеДоговоры = Ложь;
		РазныеВалюты = Ложь;
		РазныеПродавцы = Ложь;
		ЕстьКолонкаПродавец = РезультатЗапроса.Колонки.Найти("Продавец") <> Неопределено;
		Корректировка = Ложь;
		ЭтоКорректировочный = Ложь;
				
		//Обновление на бух. корп. 3.0.38.43
		//Если ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаРеализации") 
		//	ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		//	
		//	Корректировка = Истина;
		//				
		//КонецЕсли;
		Корректировка = Ложь;
		//<=		
		
		Если Корректировка Тогда
			
			Если ЭтоПолученныйСФ Тогда
				ЭтоКорректировочный = СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
			Иначе
				ЭтоКорректировочный = СчетФактура.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;
			КонецЕсли;

			ВыборкаОбщиеИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаОбщиеИтоги.Следующий();
			
			Результат.СуммаУвеличение		= ВыборкаОбщиеИтоги.СуммаУвеличение;
			Результат.СуммаУменьшение		= ВыборкаОбщиеИтоги.СуммаУменьшение;
			Результат.СуммаНДСУвеличение	= ВыборкаОбщиеИтоги.СуммаНДСУвеличение;
			Результат.СуммаНДСУменьшение	= ВыборкаОбщиеИтоги.СуммаНДСУменьшение;
			Результат.СуммаДокумента 		= ВыборкаОбщиеИтоги.СуммаДокумента;
			Результат.СуммаНДСДокумента 	= ВыборкаОбщиеИтоги.СуммаНДСДокумента;
			
			Результат.СуммаУвеличениеКомиссия		= ВыборкаОбщиеИтоги.СуммаУвеличениеКомиссия;
			Результат.СуммаУменьшениеКомиссия		= ВыборкаОбщиеИтоги.СуммаУменьшениеКомиссия;
			Результат.СуммаНДСУвеличениеКомиссия	= ВыборкаОбщиеИтоги.СуммаНДСУвеличениеКомиссия;
			Результат.СуммаНДСУменьшениеКомиссия	= ВыборкаОбщиеИтоги.СуммаНДСУменьшениеКомиссия;
			Результат.СуммаДокументаКомиссия 		= ВыборкаОбщиеИтоги.СуммаДокументаКомиссия;
			Результат.СуммаНДСДокументаКомиссия 	= ВыборкаОбщиеИтоги.СуммаНДСДокументаКомиссия;
			
			ВыборкаДокументы = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				
				Если ПерваяСтрока Тогда
					СтрокаРеквизитов = "Организация,Контрагент,ВалютаДокумента,Договор" + ?(ЕстьКолонкаПродавец, ",Продавец", "");
					ЗаполнитьЗначенияСвойств(Результат, ВыборкаДокументы, СтрокаРеквизитов);
					Результат.СчетФактураБезНДС = ВыборкаДокументы.ЕстьНДС = 0;
					ПерваяСтрока = Ложь;
					Если НЕ ЭтоПолученныйСФ Тогда
						Результат.Продавец = УчетНДСБП.ПолучитьПродавцаИзСчетаФактурыОснованияКорректировкиРеализации(ДокументыОснования);
					КонецЕсли; 
				КонецЕсли;
				
				РазныеОрганизации	= РазныеОрганизации ИЛИ Результат.Организация <> ВыборкаДокументы.Организация;
				РазныеКонтрагенты	= РазныеКонтрагенты ИЛИ Результат.Контрагент <> ВыборкаДокументы.Контрагент;
				РазныеВалюты		= РазныеВалюты ИЛИ Результат.ВалютаДокумента <> ВыборкаДокументы.ВалютаДокумента;
				
				РазныеДоговоры		= ?(ЭтоПолученныйСФ, Ложь, РазныеДоговоры ИЛИ Результат.Договор <> ВыборкаДокументы.Договор);
				РазныеПродавцы		= ?(ЕстьКолонкаПродавец, РазныеПродавцы ИЛИ Результат.Продавец <> ВыборкаДокументы.Продавец, Ложь);
				
				Если Результат.СчетФактураБезНДС Тогда
					Результат.СчетФактураБезНДС = ВыборкаДокументы.ЕстьНДС = 0;
				КонецЕсли;
				
				Если ЭтоКорректировочный Тогда
					
					СтрокаСРеквизитами = РеквизитыОснований.Добавить();
					
					СтрокаСРеквизитами.ДокументОснование 	= ВыборкаДокументы.Документ;
					СтрокаСРеквизитами.СуммаУвеличение 		= ВыборкаДокументы.СуммаУвеличение;
					СтрокаСРеквизитами.СуммаУменьшение 		= ВыборкаДокументы.СуммаУменьшение;
					СтрокаСРеквизитами.СуммаНДСУвеличение	= ВыборкаДокументы.СуммаНДСУвеличение;
					СтрокаСРеквизитами.СуммаНДСУменьшение 	= ВыборкаДокументы.СуммаНДСУменьшение;
					
					Если ЭтоПолученныйСФ Тогда
						
						РеквизитыИсходногоСчетаФактуры = Документы.СчетФактураПолученный.ПолучитьРеквизитыИсходногоСчетаФактурыДляКорректировки(ВыборкаДокументы.Документ, СчетФактура);
						
						Если РеквизитыИсходногоСчетаФактуры <> Неопределено Тогда 
							
							СтрокаСРеквизитами.НомерИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.НомерСчетаФактуры;
							СтрокаСРеквизитами.ДатаИсходногоДокумента  = РеквизитыИсходногоСчетаФактуры.ДатаСчетаФактуры;
							СтрокаСРеквизитами.УчитыватьИсправлениеИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.Исправление;
							СтрокаСРеквизитами.НомерИсправленияИсходногоДокумента     = РеквизитыИсходногоСчетаФактуры.НомерИсправления;
							СтрокаСРеквизитами.ДатаИсправленияИсходногоДокумента      = РеквизитыИсходногоСчетаФактуры.ДатаИсправления;
						
						КонецЕсли;
					
					Иначе
					
						РеквизитыИсходногоСчетаФактуры = Документы.СчетФактураВыданный.ПолучитьРеквизитыИсходногоСчетаФактурыДляКорректировки(ВыборкаДокументы.Документ, СчетФактура);
						
						Если РеквизитыИсходногоСчетаФактуры <> Неопределено Тогда 
							
							СтрокаСРеквизитами.НомерИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.НомерСчетаФактуры;
							СтрокаСРеквизитами.ДатаИсходногоДокумента  = РеквизитыИсходногоСчетаФактуры.ДатаСчетаФактуры;
							СтрокаСРеквизитами.УчитыватьИсправлениеИсходногоДокумента = РеквизитыИсходногоСчетаФактуры.Исправление;
							СтрокаСРеквизитами.НомерИсправленияИсходногоДокумента     = РеквизитыИсходногоСчетаФактуры.НомерИсправления;
							СтрокаСРеквизитами.ДатаИсправленияИсходногоДокумента      = РеквизитыИсходногоСчетаФактуры.ДатаИсправления;
						
						КонецЕсли;
					
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ПерваяСтрока Тогда
					ПерваяСтрока = Ложь;
					ЗаполнитьЗначенияСвойств(Результат, Выборка);
					Результат.СчетФактураБезНДС = Выборка.ЕстьНДС = 0;
					//Обновление на бух. корп. 3.0.38.43
					//Если ТипЗнч(ДокументыОснования[0]) <> Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
					//	Результат.КППКонтрагента	= УчетНДСБП.ПолучитьКПППодразделенияКонтрагента(ДокументыОснования[0], "Грузоотправитель");
					//КонецЕсли;
					//<=
				Иначе
					РазныеОрганизации	= РазныеОрганизации ИЛИ Результат.Организация <> Выборка.Организация;
					РазныеКонтрагенты	= РазныеКонтрагенты ИЛИ Результат.Контрагент <> Выборка.Контрагент;
					РазныеВалюты		= РазныеВалюты ИЛИ Результат.ВалютаДокумента <> Выборка.ВалютаДокумента;
					РазныеДоговоры		= ?(ЭтоПолученныйСФ, Ложь, РазныеДоговоры ИЛИ Результат.Договор <> Выборка.Договор);
					РазныеПродавцы		= ?(ЕстьКолонкаПродавец, РазныеПродавцы ИЛИ Результат.Продавец <> Выборка.Продавец, Ложь);
					
					Результат.СуммаДокумента = 	Результат.СуммаДокумента + Выборка.СуммаДокумента;
					Результат.СуммаНДСДокумента = Результат.СуммаНДСДокумента + Выборка.СуммаНДСДокумента;
					
					Результат.СуммаДокументаКомиссия 	= Результат.СуммаДокументаКомиссия + Выборка.СуммаДокументаКомиссия;
					Результат.СуммаНДСДокументаКомиссия = Результат.СуммаНДСДокументаКомиссия + Выборка.СуммаНДСДокументаКомиссия;
										
					Если Результат.СчетФактураБезНДС Тогда
						Результат.СчетФактураБезНДС = Выборка.ЕстьНДС = 0;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		Если РазныеОрганизации ИЛИ РазныеКонтрагенты ИЛИ РазныеДоговоры ИЛИ РазныеВалюты ИЛИ РазныеПродавцы Тогда
			
			ТекстСообщения = ВернутьСтр("ru='Реквизиты документов, на основании которых зарегистрирован счет-фактура, не совпадают:'")
				+ ?(РазныеОрганизации, Символы.ПС + ВернутьСтр("ru=' - не совпадает организация'"), "")
				+ ?(РазныеКонтрагенты, Символы.ПС + ВернутьСтр("ru=' - не совпадает контрагент'"), "")
				+ ?(РазныеДоговоры, Символы.ПС + ВернутьСтр("ru=' - не совпадает договор'"), "")
				+ ?(РазныеВалюты, Символы.ПС + ВернутьСтр("ru=' - не совпадает валюта документа'"), "")
				+ ?(РазныеПродавцы, Символы.ПС + ВернутьСтр("ru=' - не совпадает продавец, от имени которого выписан счета-фактура'"), "") + Символы.ПС 
				+ ВернутьСтр("ru='Необходимо изменить параметры документов-оснований или зарегистрировать по документам с расхождениями отдельные счета-фактуры.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
			
			Если РазныеОрганизации Тогда
				Результат.Организация = Неопределено;
			КонецЕсли; 				
			Если РазныеКонтрагенты Тогда
				Результат.Контрагент = Неопределено;
			КонецЕсли; 				
			Если РазныеВалюты Тогда
				Результат.ВалютаДокумента = Неопределено;
			КонецЕсли; 				
			Если РазныеДоговоры Тогда
				Результат.Договор = Неопределено;
			КонецЕсли;
			Если РазныеПродавцы Тогда
				Результат.Продавец = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ПолучитьТекстЗапросаОпределенияПараметровСФ(ДокументыОснования, ЭтоПолученныйСФ, ПараметрыЗапроса, ИмяВременнойТаблицы = "") Экспорт

	ИгнорироватьТЧ = Новый Массив;
	ИгнорироватьТЧ.Добавить("ВозвратнаяТара");
	ИгнорироватьТЧ.Добавить("ВыданныеАвансы");
	ИгнорироватьТЧ.Добавить("ДенежныеСредства");
	ИгнорироватьТЧ.Добавить("ТоварыВозвращенные");

	МетаданныеДокумента = ДокументыОснования[0].Метаданные();
	ТипДокументаОснования = ТипЗнч(ДокументыОснования[0]);

	ИмяОбъекта = МетаданныеДокумента.Имя;
	ПараметрыЗапроса.Вставить("ДокументОснование_" + ИмяОбъекта, ДокументыОснования);

	ПостфиксСумм = "";
	ТекстЗапросаКомиссияПустой	= ", 0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия";
	ТекстЗапросаКомиссияПоСчету = ", 0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия";
	ТекстЗапросаКомиссия		= ", 0 КАК СуммаДокументаКомиссия, 0 КАК СуммаНДСДокументаКомиссия";
	Множитель = 1;
	ИмяРеквизитаСтавкаНДС = "СтавкаНДС";
		
	////Обновление на бух. корп. 3.0.38.43
	//	Если ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
	//	ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ЭтоПолученныйСФ Тогда

	//	ПостфиксСумм = "Вознаграждения";
	//	ИмяРеквизитаСтавкаНДС = "Ссылка.СтавкаНДСВознаграждения";
	//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И НЕ ЭтоПолученныйСФ
	//	ИЛИ ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЭтоПолученныйСФ Тогда

	//	Множитель = - 1;
	//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
	//	
	//	ТекстЗапросаКомиссияПоСчету = ", 
	//	| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) 
	//	|					ТОГДА Таблица.Сумма + ВЫБОР
	//	|						КОГДА Таблица.Ссылка.СуммаВключаетНДС
	//	|					ТОГДА 0
	//	|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ
	//	|				ИНАЧЕ 0 КОНЕЦ) КАК СуммаДокументаКомиссия,
	//	| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) 
	//	|					ТОГДА Таблица.СуммаНДС ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДСДокументаКомиссия";
	//	
	//	ТекстЗапросаКомиссия = ",
	//	| СУММА(Таблица.Сумма + ВЫБОР
	//	|					КОГДА Таблица.Ссылка.СуммаВключаетНДС
	//	|						ТОГДА 0
	//	|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ) КАК СуммаДокументаКомиссия,
	//	| СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокументаКомиссия";
	//			
	//ИначеЕсли ТипДокументаОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//	
	//	ТекстЗапросаКомиссияПоСчету = ", 
	//	| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//	|						ИЛИ Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию)
	//	|					ТОГДА Таблица.Сумма + ВЫБОР
	//	|						КОГДА Таблица.Ссылка.СуммаВключаетНДС
	//	|					ТОГДА 0
	//	|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ
	//	|				ИНАЧЕ 0 КОНЕЦ) КАК СуммаДокументаКомиссия,
	//	| СУММА(ВЫБОР КОГДА Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыНаСкладе)
	//	|						ИЛИ Таблица.СчетУчета = Значение(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию) 
	//	|					ТОГДА Таблица.СуммаНДС  ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДСДокументаКомиссия";
	//	
	//	ТекстЗапросаКомиссия = ",
	//	| СУММА(Таблица.Сумма + ВЫБОР
	//	|					КОГДА Таблица.Ссылка.СуммаВключаетНДС
	//	|						ТОГДА 0
	//	|					ИНАЧЕ Таблица.СуммаНДС КОНЕЦ) КАК СуммаДокументаКомиссия,
	//	| СУММА(Таблица.СуммаНДС) КАК СуммаНДСДокументаКомиссия";

	//КонецЕсли;
	//<=
	
	ПараметрыЗапроса.Вставить("Множитель_" + ИмяОбъекта, Множитель);

	ТекстЗапроса = "";

	ТекстСекцииПоместить = "";

	Для каждого МетаданныеТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		Если ИгнорироватьТЧ.Найти(МетаданныеТЧ.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если МетаданныеТЧ.Реквизиты.Найти("Сумма") = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		// { RGS TChubarova 30.12.2015 18:18:27 - SLI-0006055
		Если МетаданныеТЧ.Реквизиты.Найти("СуммаНДС") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		// } RGS TChubarova 30.12.2015 18:18:29 - SLI-0006055

		Если МетаданныеТЧ.Реквизиты.Найти("СчетУчета") <> Неопределено Тогда
			ТекстСуммыКомиссии = ТекстЗапросаКомиссияПоСчету;
		ИначеЕсли МетаданныеТЧ.Имя = "АгентскиеУслуги" Тогда
			ТекстСуммыКомиссии = ТекстЗапросаКомиссия;
		Иначе 
			ТекстСуммыКомиссии = ТекстЗапросаКомиссияПустой;	
		КонецЕсли;
		
		Если ПустаяСтрока(ТекстЗапроса) Тогда
			Если НЕ ПустаяСтрока(ИмяВременнойТаблицы) Тогда
				ТекстСекцииПоместить = "
				|ПОМЕСТИТЬ
				|	" + ИмяВременнойТаблицы + "
				|";
			КонецЕсли;
		Иначе
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
			ТекстСекцииПоместить = "";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	Таблица.Ссылка.Организация КАК Организация,
		|	Таблица.Ссылка.Контрагент КАК Контрагент,
		|	Таблица.Ссылка.ДоговорКонтрагента КАК Договор,
		|	СУММА(Таблица.Сумма" + ПостфиксСумм + " + ВЫБОР
		|			КОГДА Таблица.Ссылка.СуммаВключаетНДС
		|				ТОГДА 0
		|			ИНАЧЕ Таблица.СуммаНДС" + ПостфиксСумм + "
		|		КОНЕЦ) * &Множитель_" + ИмяОбъекта + " КАК СуммаДокумента,
		|	Таблица.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
		|	СУММА(Таблица.СуммаНДС" + ПостфиксСумм + ") * &Множитель_" + ИмяОбъекта + " КАК СуммаНДСДокумента,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица." + ИмяРеквизитаСтавкаНДС + " = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ЕстьНДС
		| " + ТекстСуммыКомиссии + " " + ТекстСекцииПоместить + "
		|ИЗ
		|	Документ." + МетаданныеДокумента.Имя + "." + МетаданныеТЧ.Имя + " КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&ДокументОснование_" + ИмяОбъекта + ") 
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.Ссылка.Организация,
		|	Таблица.Ссылка.Контрагент,
		|	Таблица.Ссылка.ДоговорКонтрагента,
		|	Таблица.Ссылка.ВалютаДокумента";
	КонецЦикла;

	Если НЕ ЗначениеЗаполнено(ТекстЗапроса) Тогда // в документе не оказалось табличных частей

		Если МетаданныеДокумента.Реквизиты.Найти("СуммаНДС") <> Неопределено Тогда

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокОснование.Организация КАК Организация,
			|	ДокОснование.Контрагент КАК Контрагент,
			|	ДокОснование.ДоговорКонтрагента КАК Договор,
			|	СУММА(ДокОснование.Сумма + ВЫБОР
			|			КОГДА ДокОснование.Ссылка.СуммаВключаетНДС
			|				ТОГДА 0
			|			ИНАЧЕ ДокОснование.СуммаНДС
			|		КОНЕЦ) КАК СуммаДокумента,
			|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
			|	ДокОснование.СуммаНДС КАК СуммаНДСДокумента,
			|   0 КАК СуммаДокументаКомиссия, 
			|   0 КАК СуммаНДСДокументаКомиссия, 
			|	ВЫБОР
			|		КОГДА ДокОснование.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ КАК ЕстьНДС
			|ИЗ
			|	Документ." + МетаданныеДокумента.Имя + " КАК ДокОснование
			|ГДЕ
			|	ДокОснование.Ссылка В (&ДокументОснование_" + МетаданныеДокумента.Имя + ")
			|
			|СГРУППИРОВАТЬ ПО
			|	ДокОснование.Ссылка,
			|	ДокОснование.ДоговорКонтрагента,
			|	ДокОснование.СуммаНДС,
			|	ДокОснование.Организация,
			|	ДокОснование.Контрагент,
			|	ВЫБОР
			|		КОГДА ДокОснование.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
			|			ТОГДА 0
			|		ИНАЧЕ 1
			|	КОНЕЦ";


		Иначе

			//Обновление на бух. корп. 3.0.38.48
			//Если (ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах"))
			//	или ((ТипДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")) И ЭтоПолученныйСФ) Тогда
			//	ИдРеквСумма = "СуммаВознаграждения";
			//ИначеЕсли (ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И не ЭтоПолученныйСФ) тогда
			//	ИдРеквСумма = "СуммаДокумента*(-1)";
			//ИначеЕсли (ТипДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЭтоПолученныйСФ) тогда
			//	ИдРеквСумма = "СуммаДокумента*(-1)";
			//Иначе
			//	ИдРеквСумма = "СуммаДокумента";
			//КонецЕсли;
			ИдРеквСумма = "СуммаДокумента";
			//<=

			ИмяОбъекта = МетаданныеДокумента.Имя;

			ТекстЗапроса =
			"ВЫБРАТЬ "
			+ ИмяОбъекта + ".Организация,"
			+ ?(МетаданныеДокумента.Реквизиты.Найти("Контрагент") <> Неопределено,
					ИмяОбъекта + ".Контрагент,",
					"НЕОПРЕДЕЛЕНО КАК Контрагент,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено,
					ИмяОбъекта + ".ДоговорКонтрагента КАК Договор,",
					"НЕОПРЕДЕЛЕНО КАК Договор,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти(ИдРеквСумма) <> Неопределено,
					ИмяОбъекта + "." + ИдРеквСумма + " Как СуммаДокумента,",
					"0 Как СуммаДокумента,")
			+ ?(МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено,
					ИмяОбъекта + ".ВалютаДокумента Как ВалютаДокумента,",
					"НЕОПРЕДЕЛЕНО КАК ВалютаДокумента,")
			+ "0 Как СуммаДокументаКомиссия,"
			+ "0 Как СуммаНДСДокументаКомиссия,"
			+ "0 Как СуммаНДСДокумента,"
			+ "1 Как ЕстьНДС
			|ИЗ
			|	Документ." + ИмяОбъекта + " КАК " + ИмяОбъекта + "
			|ГДЕ
			|	" + ИмяОбъекта + ".Ссылка В (&ДокументОснование_" + ИмяОбъекта + ")";

		КонецЕсли;

	КонецЕсли;

	Если МетаданныеДокумента.Реквизиты.Найти("ПодразделениеОрганизации") = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.Ссылка.ПодразделениеОрганизации", "Неопределено");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументОснование.ПодразделениеОрганизации", "Неопределено");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Функция возвращает курс ставку НДС
//
// Параметры:
//  Валюта - СправочникСсылка.Валюты, валюта, по которой необходимо получить курс
//  ДатаКурса - Дата, календарная дата, на которую необходимо получить курс валюты
//
// Возвращаемое значение:
//	Курс переданной валюты на переданную дату, 1 в случае отсутствия значения.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС, ПрименяютсяСтавки4и2 = Ложь) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		Возврат 20;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 2, 10);
		Возврат Ставка;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
		Ставка = ?(ПрименяютсяСтавки4и2, 4, 18);
		Возврат Ставка;
	КонецЕсли;

	Возврат 0;

КонецФункции     

// Функция возвращает ссылку на документ, который требуется записывать в измерение 
// СчетФактура регистров НДС.
//
Функция ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(ИсходныйДокумент) Экспорт

	СчетФактура = Неопределено;

	Если ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ОтражениеНДСКВычету") Тогда

		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, "РасчетныйДокумент, ИспользоватьДокументРасчетовКакСчетФактуру");
		
		Если РеквизитыИсходногоДокумента.ИспользоватьДокументРасчетовКакСчетФактуру Тогда
			
			Если ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураВыданный")
				 ИЛИ ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
				 ИЛИ ТипЗнч(РеквизитыИсходногоДокумента.РасчетныйДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			
				СчетФактура = ПолучитьСчетФактуруДляЗаписиВРегистрыНДС(РеквизитыИсходногоДокумента.РасчетныйДокумент);
			
			Иначе
				
				СчетФактура = РеквизитыИсходногоДокумента.РасчетныйДокумент;
				
			КонецЕсли;
			
		Иначе // т.е. НЕ ИспользоватьДокументРасчетовКакСчетФактуру
		
			СчетФактура = ИсходныйДокумент;
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ОтражениеНачисленияНДС") Тогда
	
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"РасчетныйДокумент, ИспользоватьДокументРасчетовКакСчетФактуру");
		Если РеквизитыИсходногоДокумента.ИспользоватьДокументРасчетовКакСчетФактуру Тогда
			СчетФактура = РеквизитыИсходногоДокумента.РасчетныйДокумент;
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"ДокументОснование, ВидСчетаФактуры");
		Если РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс Тогда
			СчетФактура = РеквизитыИсходногоДокумента.ДокументОснование;
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
	
		РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, 
			"ДокументОснование, ВидСчетаФактуры");
		Если РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАванс
			ИЛИ РеквизитыИсходногоДокумента.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента Тогда
			
			СчетФактура = РеквизитыИсходногоДокумента.ДокументОснование;
			
		Иначе
			СчетФактура = ИсходныйДокумент;
		КонецЕсли;
				
	//Обновление на бух. корп. 3.0.38.43
	//ИначеЕсли ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
	//
	//РеквизитыИсходногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент,
	//	"ПокупателемВыставляетсяСчетФактураНаВозврат, Сделка");
	//Если РеквизитыИсходногоДокумента.ПокупателемВыставляетсяСчетФактураНаВозврат Тогда
	//	СчетФактура = РеквизитыИсходногоДокумента.Сделка;
	//Иначе
	//	СчетФактура = ИсходныйДокумент;
	//КонецЕсли;
	//<=
	
	Иначе
	
		СчетФактура = ИсходныйДокумент;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
		СчетФактура = ИсходныйДокумент;
	КонецЕсли;

	Возврат СчетФактура;

КонецФункции

// Выполняет общие для всех документов действия связанные с пометкой на удаление
// счета-фактуры при удалении документа, являющегося основание данного счета-фактуры.
//
// Параметры:
//  ДокументОбъект  - объект документа,
//  ВидСчетаФактуры - строка, вид счета-фактуры, по умолчанию "СчетФактураВыставленный"
//
Процедура УстановкаПроведенияУСчетаФактуры(ДокументСсылка, ВидСчетаФактуры = "СчетФактураВыданный", Проведение = Ложь, Отказ = Ложь, ГрупповоеПерепроведение = Ложь, СтруктураОтбора = Неопределено) Экспорт

	Если ВидСчетаФактуры = "СчетФактураВыданный" Тогда
		СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокументСсылка);
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуруПолученный(ДокументСсылка, ДокументСсылка,,СтруктураОтбора);
	КонецЕсли;

	// Если нашли, то необходимо синхронизировать признак проведения у документа основания и счета-фактуры.
	Если ЗначениеЗаполнено(СчетФактура)
		И СчетФактура <> ДокументСсылка
		И (ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураПолученный")
		Или ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный")) Тогда

		Если Проведение Тогда
			Если НЕ СчетФактура.ПометкаУдаления Тогда
				Попытка
					
					СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
					СчетФактураОбъект.ДополнительныеСвойства.Вставить("ГрупповоеПерепроведение", ГрупповоеПерепроведение);
					
					Если ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
						 // Заполним данные о платежно-расчетном документе
						 //Обновление на бух. корп. 3.0.38.43
						 //Если СчетФактураОбъект.ПлатежноРасчетныеДокументы.Количество() = 0 Тогда  
						 Если СчетФактураОбъект.ДатаНомерДокументовОплаты.Количество() = 0 Тогда  
						 //<=
							 //Обновление на бух. корп. 3.0.38.43
							 //СчетФактураОбъект.ПлатежноРасчетныеДокументы.Очистить();
							 СчетФактураОбъект.ДатаНомерДокументовОплаты.Очистить();
							 //<=
							 ДатыНомераПРД = Документы.СчетФактураВыданный.ДатыНомераПлатежноРасчетныхДокументов(
							 СчетФактураОбъект.ДокументыОснования.ВыгрузитьКолонку("ДокументОснование"));
							 Для каждого СтрокаТаблицы Из ДатыНомераПРД Цикл
								 //Обновление на бух. корп. 3.0.38.43
								 //НоваяСтрока = СчетФактураОбъект.ПлатежноРасчетныеДокументы.Добавить();
								 НоваяСтрока = СчетФактураОбъект.ДатаНомерДокументовОплаты.Добавить();
								 //<=								 
								 ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
							 КонецЦикла;
						 КонецЕсли;
					КонецЕсли;
					
					СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);

				Исключение
					ТекстСообщения = ВернутьСтр("ru='Не удалось провести документ <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СчетФактураОбъект);

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					ОписаниеОшибки = ИнформацияОбОшибке();
					ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);

					Отказ = Истина;
				КонецПопытки;
			КонецЕсли;
		ИначеЕсли НЕ Проведение И СчетФактура.Проведен Тогда
			// Есть счет-фактура проведен, нужно отменить проведение
			Если НЕ СчетФактура.ПометкаУдаления Тогда
				Попытка
					
					СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
					СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);

				Исключение

					ТекстСообщения = ВернутьСтр("ru='Не удалось отменить проведение документа <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СчетФактураОбъект);

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					ОписаниеОшибки = ИнформацияОбОшибке();
					ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);

					Отказ = Истина;

				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // УстановкаПроведенияУСчетаФактуры()

// Функция производит поиск счета-фактуры полученного по заданному основанию, номеру и дате
// и дополняет его переданным документом-основанием
Функция ДобавитьОснованиеВСчетФактуруПолученный(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактураПолученный.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|	И СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Организация = &Организация
	|	И СчетФактураПолученный.НомерВходящегоДокумента = &НомерСчетаФактурыПолученного
	|	И СчетФактураПолученный.ДатаВходящегоДокумента = &ДатаСчетаФактурыПолученного
	|	И НЕ СчетФактураПолученный.Исправление";
	
	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);
	Запрос.УстановитьПараметр("Организация", Основание.Организация);
	Запрос.УстановитьПараметр("НомерСчетаФактурыПолученного", НомерСчетаФактурыПолученного);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыПолученного", ДатаСчетаФактурыПолученного);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		
		СчетФактура = Выборка.СчетФактура.ПолучитьОбъект();
		НоваяСтрока = СчетФактура.ДокументыОснования.Добавить();
		НоваяСтрока.ДокументОснование = Основание;
		
		ПараметрыСчетаФактуры = ПолучитьПараметрыСчетаФактуры(СчетФактура);
		ЗаполнитьЗначенияСвойств(СчетФактура, ПараметрыСчетаФактуры);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Дата",						СчетФактура.Дата);
		СтруктураПараметров.Вставить("ВидСчетаФактуры",				СчетФактура.ВидСчетаФактуры);
		СтруктураПараметров.Вставить("Исправление",					СчетФактура.Исправление);
		СтруктураПараметров.Вставить("КодВидаОперацииОснования",	Неопределено);
		СтруктураПараметров.Вставить("ВидДоговора",					СчетФактура.ДоговорКонтрагента.ВидДоговора);
		СтруктураПараметров.Вставить("ДокументыОснования",			СчетФактура.ДокументыОснования.Выгрузить(,"ДокументОснование"));
		СтруктураПараметров.Вставить("СчетФактураБезНДС",			СчетФактура.СчетФактураБезНДС);
		СчетФактура.КодВидаОперации	= Документы.СчетФактураПолученный.ПолучитьКодВидаОперации(СтруктураПараметров);
		
		РежимЗаписи = ?(Основание.Проведен, 
			РежимЗаписиДокумента.Проведение, 
			РежимЗаписиДокумента.Запись);
		
		СчетФактура.Записать(РежимЗаписи);
		
		Возврат Выборка.СчетФактура;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции   

Функция СоздатьСчетФактуруПолученныйНаОсновании(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Продавец = Неопределено) Экспорт
	
	Возврат Документы.СчетФактураПолученный.СоздатьДокументНаОсновании(Основание, НомерСчетаФактурыПолученного, ДатаСчетаФактурыПолученного, Продавец);
	
КонецФункции

// Рассчитываем сумму документа со всеми налогами
//
// Параметры:
//  ДокументОбъект    - объект документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//  НеУчитыватьТару   - булево, если Истина и ИмяТабличнойЧасти неопределено, то в расчете сумм тару не учитываем
//
// Возвращаемое значение:
//  Сумма документа со всеми налогами.
//
Функция ПолучитьСуммуДокументаСНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();

	СуммаДокумента = 0;
	Если ИмяТабличнойЧасти <> Неопределено Тогда
		СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("Сумма");
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
		   И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти)
		   И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("СуммаНДС");
		КонецЕсли;
	Иначе
		Для каждого ТЧОбъекта Из ДокументОбъект.Ссылка.Метаданные().ТабличныеЧасти Цикл
			Если НеУчитыватьТару и ТЧОбъекта.Имя = "ВозвратнаяТара" Тогда
				Продолжить;
			КонецЕсли;
			Если ТЧОбъекта.Имя = "ВыданныеАвансы" Тогда
				Продолжить;
			КонецЕсли;
			Если ТЧОбъекта.Имя = "ДенежныеСредства" Тогда
				Продолжить;
			КонецЕсли;
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("Сумма");
				Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
					И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ТЧОбъекта.Имя)
					И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
					СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("СуммаНДС");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Сумма", МетаданныеДокумента) Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект.Сумма;
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаВключаетНДС", МетаданныеДокумента)
				И ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаНДС", МетаданныеДокумента)
				И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект.СуммаНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат СуммаДокумента;

КонецФункции // ПолучитьСуммуДокументаСНДС()

Функция ПроверитьСоответствиеРеквизитовСчетаФактурыВыданного(ДокОбъект, Сообщать = Истина, СтруктураОтбора = Неопределено) Экспорт

	СчетФактура = НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДокОбъект.Ссылка, , , СтруктураОтбора);
	Если СчетФактура = Неопределено ИЛИ СчетФактура = ДокОбъект.Ссылка Тогда
		Возврат Истина;
	КонецЕсли;
	
	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	Попытка
		СчетФактураОбъект.Заблокировать();
		СчетФактураОбъект.Записать();
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ВернутьСтр("ru='Реквизиты документа ""%1"" автоматически не перезаполнены и могут быть неактуальными'"),
				СчетФактура);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СчетФактура);
	КонецПопытки;
	
	Возврат Истина;

КонецФункции

Функция СоздатьСчетФактуруВыданныйНаОсновании(Основание) Экспорт
	
	Возврат Документы.СчетФактураВыданный.СоздатьДокументНаОсновании(Основание);
	
КонецФункции


#КонецОбласти