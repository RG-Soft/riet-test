
#Область СлужебныйПрограммныйИнтерфейс

Функция ОрганизацииУплачивающиеАвансы(Организация, Период, Налог, ОднаОрганизация = Истина) Экспорт
	
	Если ОднаОрганизация Тогда
		СписокОрганизаций = Организация;
	Иначе
		СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РегистрыСведений.ПорядокУплатыНалоговНаМестах.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		МенеджерВременныхТаблиц, СписокОрганизаций, Период, Налог);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоКвартала", НачалоКвартала(Период) - 1);
	Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоГода", НачалоГода(Период) - 1);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Период));
	
	Если Налог = "НалогНаИмущество" Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган КАК НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
		|			&КонецПрошлогоГода,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация В(&СписокОрганизаций)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период МЕЖДУ &НачалоГода И &КонецКвартала
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	ИначеЕсли Налог = "ТранспортныйНалог" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
		|			&КонецПрошлогоКвартала,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|				И ВключатьВНалоговуюБазу) КАК РегистрацияТранспортныхСредств
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация В(&СписокОрганизаций)
		|	И РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияТранспортныхСредств.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";		
		
	ИначеЕсли Налог = "ЗемельныйНалог" Тогда	
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
		|			&КонецПрошлогоКвартала,
		|			Организация В (&СписокОрганизаций)
		|				И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|				И ВключатьВНалоговуюБазу) КАК РегистрацияЗемельныхУчастков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Организация В(&СписокОрганизаций)
		|	И РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияЗемельныхУчастков.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Организации.РегистрацияВНалоговомОргане,
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&СписокОрганизаций)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	Иначе	
		
		Возврат Новый Массив;
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НалоговыеОрганы.Организация
	|ИЗ
	|	ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ПО ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган = ВТ_НалоговыеОрганы.НалоговыйОрган
	|			И ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.Организация = ВТ_НалоговыеОрганы.Организация";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
КонецФункции

Функция ПолучитьРасчетПоНалогуНаИмущество(Организация, ПериодРасчета) Экспорт
	
	//Если Месяц(ПериодРасчета) = 10 Тогда
		ПериодРасчета = ДобавитьМесяц(ПериодРасчета,2);	
	//КонецЕсли; 
	
	ГодовойРасчет = Месяц(ПериодРасчета) = 12;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане");
	
	мДатаНачалаПериодаОтчета = НачалоГода(ПериодРасчета);
	мДатаКонцаПериодаОтчета  = КонецКвартала(ПериодРасчета);
	
	ТаблицаРасчетНалога = ПустаяСправкаРасчет("РасчетНалогаНаИмущество");

	ЭтоНеЮрЛицо = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация);
	
	Если Месяц(ПериодРасчета)%3 <> 0 ИЛИ ЭтоНеЮрЛицо Тогда
		Возврат ТаблицаРасчетНалога;
	КонецЕсли;
	
	// ПО СРЕДНЕЙ СТОИМОСТИ
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	//Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	//|ГДЕ
	//|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		ПроцентУменьшенияСуммыНалога = 0;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ГоловнаяОрганизация = Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", Организация);
	// { RGS LFedotova 19.04.2018 11:01:56 - вопрос SLI-0007540
	//Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(ПериодРасчета));
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецКвартала(ПериодРасчета));
	// } RGS LFedotova 19.04.2018 11:02:06 - вопрос SLI-0007540
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";     
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	// { RGS LFedotova 12.03.2018 10:13:57 - вопрос SLI-0007489
	|	СостоянияОСОрганизаций.ОсновноеСредство.ПоставщикВзаимозависимый КАК ПоставщикВзаимозависимый,
	// } RGS LFedotova 12.03.2018 10:14:23 - вопрос SLI-0007489 
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	//|	СостоянияОСОрганизаций.Организация В
	//|			(ВЫБРАТЬ
	//|				Организации.Ссылка КАК Ссылка
	//|			ИЗ
	//|				Справочник.Организации КАК Организации
	//|			ГДЕ
	//|				(Организации.Ссылка = &ГоловнаяОрганизация
	//|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	//|	И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериодаОтчета
	|	И СостоянияОСОрганизаций.Активность = ИСТИНА
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	//|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.КапитальноеВложение)" + ДопУсловие + "
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	// { RGS LFedotova 12.03.2018 10:08:32 - вопрос SLI-0007489
	|	И НЕ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ПоставщикВзаимозависимый = ИСТИНА
	// } RGS LFedotova 12.03.2018 10:09:00 - вопрос SLI-0007489 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Период  = мДатаНачалаПериодаОтчета;
	Счетчик = 1;
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(мДатаКонцаПериодаОтчета, 1)) Цикл
		
			
			КонецПериода = ?(Год(Период) = Год(ПериодРасчета), Период, мДатаКонцаПериодаОтчета);
			
			Запрос.УстановитьПараметр("Период", Период);
			Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &КонецПериода
			//|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговаяБаза,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период";
			
			Запрос.Выполнить();
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОС.Ссылка КАК ОсновноеСредство
			|ПОМЕСТИТЬ СписокРазрешенныхОС
			|ИЗ
			|	Справочник.ОсновныеСредства КАК ОС
			// { RGS LFedotova 19.04.2018 11:03:29 - вопрос SLI-0007540
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериодаОтчета, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
			// } RGS LFedotova 19.04.2018 11:03:34 - вопрос SLI-0007540 
			|		ПО ОС.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			|ГДЕ
			|	НЕ ОС.Ссылка В
			|				(ВЫБРАТЬ
			|					СостоянияОСОрганизаций.ОсновноеСредство
			|				ИЗ
			|					РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
			|				ГДЕ
			|					СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
			|					И СостоянияОСОрганизаций.ДатаСостояния < &КонецПериода
			|					И СостоянияОСОрганизаций.Активность = ИСТИНА)
			|	И НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
			|	И НЕ ОС.Ссылка В
			|				(ВЫБРАТЬ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|				ИЗ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|				ГДЕ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость))
			|	И НЕ ОС.Ссылка В
			|				(ВЫБРАТЬ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|				ИЗ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|				ГДЕ
			|					СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))
			|	И МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение В Иерархии (&Организация)
			|   И НЕ ОС.АрендованноеОС
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОС.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
			|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
			|ПОМЕСТИТЬ СписокОС
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведения.СрезПоследних(
			|			&Период,
			|			ОсновноеСредство В
			|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|					СписокРазрешенныхОС.ОсновноеСредство
			|				ИЗ
			|					СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство";
				
			Запрос.Выполнить();
			
			// Формируем и устанавливаем запросу списки счетов учета ОС.
			// Временная таблица ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних далее используется в запросах для получения счетов по ОС.
			//Запрос.Текст =
			//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
			//|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			//|ИЗ
			//|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
			//|			&КонецПериода,
			//|			Организация = &Организация
			//|				И ОсновноеСредство В
			//|					(ВЫБРАТЬ
			//|						СписокОС.ОсновноеСредство
			//|					ИЗ
			//|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			//|
			//|ИНДЕКСИРОВАТЬ ПО
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
			//|ИЗ
			//|	ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			//|ИЗ
			//|	ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних";
			//РезультатЗапроса = Запрос.ВыполнитьПакет();
			//СчетаУчета = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("СчетУчета");
			//СчетаУчета.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеОС);
			//Запрос.УстановитьПараметр("СчетаУчета", СчетаУчета);
			//Запрос.УстановитьПараметр("СчетаНачисленияАмортизации", РезультатЗапроса[2].Выгрузить().ВыгрузитьКолонку("СчетНачисленияАмортизации"));
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			//|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&КонецПериода, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&КонецПериода, ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКТМО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДвижимоеИмуществоПодлежащееНалогообложению,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КБК,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.УсловныйНомер,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			//|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&КонецПериода, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&КонецПериода, ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СтоимостьБУОстаток КАК СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.ОсновноеСредство КАК Субконто1,
			|	""СчетОС"" КАК Счет                   
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			//|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчета), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|	РегистрНакопления.СтоимостьАмортизацияОС.Остатки(&Период, ) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			//|	ПервоначальнаяСтоимостьОС.Субконто1
			|	Субконто1
			|;
			|                                                       
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			//|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&КонецПериода, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&КонецПериода, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	0 КАК СуммаОстатокДт,
			|	АмортизацияОС.АмортизацияБУОстаток КАК СуммаОстатокКт,            
			|	АмортизацияОС.ОсновноеСредство КАК Субконто1,
			|	""СчетОС"" КАК Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			//|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаНачисленияАмортизации), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|	РегистрНакопления.СтоимостьАмортизацияОС.Остатки(&Период, ) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			//|	АмортизацияОС.Субконто1
			|	Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ОсновнойНалоговыйОрган", РеквизитыОрганизации.РегистрацияВНалоговомОргане);
			Запрос.УстановитьПараметр("Год", Год(ПериодРасчета));
			// { RGS LFedotova 03.03.2018 21:52:58 - вопрос SLI-0007489
			Запрос.УстановитьПараметр("КодПоОКТМО", Организация.КодПоОКТМО);
			// } RGS LFedotova 03.03.2018 21:53:16 - вопрос SLI-0007489
			
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоПерваяВтораяАмортизационныеГруппы,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган
				|		ИНАЧЕ 
				|			&ОсновнойНалоговыйОрган
				|	КОНЕЦ КАК РегистрацияВНалоговомОргане,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКТМО
				|		ИНАЧЕ 
				//|			ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКТМО, """")
				|			ЕСТЬNULL(&КодПоОКТМО, """")
				|	КОНЕЦ КАК КодПоОКТМО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ
				|				ВЫБОР
				|					КОГДА СписокОС.ОсновноеСредство В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013)
				|						И НЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДвижимоеИмуществоПодлежащееНалогообложению, ЛОЖЬ)
				|						И &Год >= 2018 ТОГДА
				|							СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавкаДвижимоеИмущество
				|					ИНАЧЕ
				|							СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|				КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавкиДвижимоеИмущество КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоНедвижимость,
				|	ВЫБОР КОГДА СписокОС.ОсновноеСредство В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ДвижимоеИмуществоПринятоеКУчетуПосле2013,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДвижимоеИмуществоПодлежащееНалогообложению КАК ДвижимоеИмуществоПодлежащееНалогообложению,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.УсловныйНомер КАК УсловныйНомер,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер КАК КадастровыйНомер,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КБК КАК КБК,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				//|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				//|			 И (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				//|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				//|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				//|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				//|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				//|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|	ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|	ПО СписокОС.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|	ПО СписокОС.ОсновноеСредство = АмортизацияОС.Субконто1,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних				
				|";

				Запрос.Выполнить();
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			//|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			                              |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
			                              |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
			                            |ГДЕ
			                            |	ОстаточнаяСтоимость > 0
										|";
			
		
		Счетчик = Счетчик + 1;
		Период  = ДобавитьМесяц(Период, 1);
	КонецЦикла;
	
	Если ТекстОбъединяющегоЗапроса <> "" Тогда
		
		Запрос.Текст = ТекстОбъединяющегоЗапроса;	
		Запрос.Выполнить();
		
		//РегистрыСведений.ПорядокУплатыНалоговНаМестах.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		//	Запрос.МенеджерВременныхТаблиц, Организация, ПериодРасчета, "НалогНаИмущество");
		
		Делитель = Месяц(ПериодРасчета) + 1;
		Запрос.УстановитьПараметр("КонечныйПериод", Делитель);
		Запрос.УстановитьПараметр("КодЛьготыДвижимоеИмуществоПринятоеКУчетуПосле2013", "2010257");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговаяБазаПоНалогуНаИмущество.Период КАК Период,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.УсловныйНомер, """") КАК УсловныйНомер,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.КадастровыйНомер, """") КАК КадастровыйНомер,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.КадастровыйНомерПомещения, """") КАК КадастровыйНомерПомещения,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.КБК, """") КАК КБК,
		|	НалоговаяБазаПоНалогуНаИмущество.РегистрацияВНалоговомОргане КАК ИФНС,
		|	НалоговаяБазаПоНалогуНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
		|	ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.НалоговаяСтавка, 0) КАК НалоговаяСтавка,
		|	ВЫБОР
		|		КОГДА НалоговаяБазаПоНалогуНаИмущество.СнижениеНалоговойСтавки
		|			ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ВЫБОР
		|					КОГДА &Год >= 2018
		|						И (НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПринятоеКУчетуПосле2013
		|						И НЕ ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПодлежащееНалогообложению, ЛОЖЬ)) ТОГДА
		|							НалоговаяБазаПоНалогуНаИмущество.СнижениеНалоговойСтавкиДвижимоеИмущество
		|				КОНЕЦ
		|	КОНЕЦ КАК ПонижениеНалоговойСтавки,
		|	ВЫБОР
		|		КОГДА НалоговаяБазаПоНалогуНаИмущество.ОсвобождениеОтНалогообложения
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА &Год >= 2015
		|						И (НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПринятоеКУчетуПосле2013
		|							И НЕ ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПодлежащееНалогообложению, ЛОЖЬ))
		|						И ВЫБОР
		|							КОГДА &Год >= 2018
		|								ТОГДА НалоговаяБазаПоНалогуНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|						И НЕ НалоговаяБазаПоНалогуНаИмущество.ЭтоПерваяВтораяАмортизационныеГруппы
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
		|	ВЫБОР
		|		КОГДА НалоговаяБазаПоНалогуНаИмущество.ОсвобождениеОтНалогообложения
		|			ТОГДА НалоговаяБазаПоНалогуНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения
		|		ИНАЧЕ ВЫБОР
		|				КОГДА &Год >= 2015
		|						И (НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПринятоеКУчетуПосле2013
		|							И НЕ ЕСТЬNULL(НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПодлежащееНалогообложению, ЛОЖЬ))
		|						И ВЫБОР
		|							КОГДА &Год >= 2018
		|								ТОГДА НалоговаяБазаПоНалогуНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества
		|							ИНАЧЕ ИСТИНА
		|						КОНЕЦ
		|						И НЕ НалоговаяБазаПоНалогуНаИмущество.ЭтоПерваяВтораяАмортизационныеГруппы
		|					ТОГДА &КодЛьготыДвижимоеИмуществоПринятоеКУчетуПосле2013
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
		|	НалоговаяБазаПоНалогуНаИмущество.ОсновноеСредство КАК ОсновноеСредство,
		//|	ВЫБОР
		//|		КОГДА ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган ЕСТЬ NULL
		//|			ТОГДА ЛОЖЬ
		//|		ИНАЧЕ ИСТИНА
		//|	КОНЕЦ КАК УплачиваютсяАвансы,
		|	ИСТИНА КАК УплачиваютсяАвансы,
		|	ВЫБОР
		|		КОГДА &Год < 2015
		|					И НалоговаяБазаПоНалогуНаИмущество.ДвижимоеИмуществоПринятоеКУчетуПосле2013
		|				ИЛИ &Год >= 2015
		|					И НалоговаяБазаПоНалогуНаИмущество.ЭтоПерваяВтораяАмортизационныеГруппы
		|			ТОГДА 0
		|		ИНАЧЕ НалоговаяБазаПоНалогуНаИмущество.ОстаточнаяСтоимость
		|	КОНЕЦ КАК ОстаточнаяСтоимость,
		|	ВЫБОР
		|		КОГДА НалоговаяБазаПоНалогуНаИмущество.ЭтоНедвижимость
		|			ТОГДА НалоговаяБазаПоНалогуНаИмущество.ОстаточнаяСтоимость
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимости,
		|	НалоговаяБазаПоНалогуНаИмущество.ОстаточнаяСтоимость КАК ОстаточнаяСтоимостьОсновныхСредств
		|ПОМЕСТИТЬ ВТ_НалоговаяБаза
		|ИЗ
		|	НалоговаяБазаПоНалогуНаИмущество КАК НалоговаяБазаПоНалогуНаИмущество
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
		//|		ПО НалоговаяБазаПоНалогуНаИмущество.РегистрацияВНалоговомОргане = ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НалоговаяБаза.КодВидаИмущества КАК КодВидаИмущества,
		|	ВТ_НалоговаяБаза.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
		|	ВТ_НалоговаяБаза.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
		|	ВТ_НалоговаяБаза.ИФНС КАК ИФНС,
		|	ВТ_НалоговаяБаза.КодПоОКТМО КАК КодПоОКТМО,
		|	ВТ_НалоговаяБаза.НалоговаяСтавка КАК НалоговаяСтавка,
		|	ВТ_НалоговаяБаза.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
		|	ВТ_НалоговаяБаза.ОсвобождениеОтНалогообложения КАК ОсвобождениеОтНалогообложения,
		|	ВТ_НалоговаяБаза.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
		|	ВТ_НалоговаяБаза.ОсновноеСредство КАК ОсновноеСредство,
		|	ВТ_НалоговаяБаза.УплачиваютсяАвансы КАК УплачиваютсяАвансы,
		|	ВТ_НалоговаяБаза.УсловныйНомер КАК УсловныйНомер,
		|	ВТ_НалоговаяБаза.КадастровыйНомер КАК КадастровыйНомер,
		|	ВТ_НалоговаяБаза.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
		|	ВТ_НалоговаяБаза.КБК КАК КБК,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 1
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0101,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 2
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0102,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 3
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0103,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 4
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0104,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 5
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0105,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 6
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0106,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 7
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0107,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 8
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0108,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 9
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0109,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 10
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0110,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 11
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0111,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 12
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа0112,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = 13
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимость
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНа3112,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = &КонечныйПериод
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимостьНедвижимости
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьНедвижимости,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_НалоговаяБаза.Период = &КонечныйПериод
		|				ТОГДА ВТ_НалоговаяБаза.ОстаточнаяСтоимостьОсновныхСредств
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстаточнаяСтоимостьОсновныхСредств
		|ИЗ
		|	ВТ_НалоговаяБаза КАК ВТ_НалоговаяБаза
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НалоговаяБаза.КодВидаИмущества,
		|	ВТ_НалоговаяБаза.ДоляСтоимостиЧислитель,
		|	ВТ_НалоговаяБаза.ДоляСтоимостиЗнаменатель,
		|	ВТ_НалоговаяБаза.ИФНС,
		|	ВТ_НалоговаяБаза.КодПоОКТМО,
		|	ВТ_НалоговаяБаза.НалоговаяСтавка,
		|	ВТ_НалоговаяБаза.ПонижениеНалоговойСтавки,
		|	ВТ_НалоговаяБаза.ОсвобождениеОтНалогообложения,
		|	ВТ_НалоговаяБаза.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
		|	ВТ_НалоговаяБаза.ОсновноеСредство,
		|	ВТ_НалоговаяБаза.УплачиваютсяАвансы,
		|	ВТ_НалоговаяБаза.УсловныйНомер,
		|	ВТ_НалоговаяБаза.КадастровыйНомер,
		|	ВТ_НалоговаяБаза.КадастровыйНомерПомещения,
		|	ВТ_НалоговаяБаза.КБК";
		
		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
			
			РасчетНалога = Результат.Выгрузить();
			
			КолонкиГруппировок = ""
			+ "УплачиваютсяАвансы,"
			+ "ИФНС,"
			+ "КодПоОКТМО,"
			+ "КодВидаИмущества,"
			+ "КБК,"
			+ "ДоляСтоимостиЧислитель,"
			+ "ДоляСтоимостиЗнаменатель,"
			+ "НалоговаяСтавка,"
			+ "ПонижениеНалоговойСтавки,"
			+ "ОсвобождениеОтНалогообложения,"
			+ "КодНалоговойЛьготыОсвобождениеОтНалогообложения";
			
			КолонкиСуммирования = ""
			+ "ОстаточнаяСтоимостьНа0101,"
			+ "ОстаточнаяСтоимостьНа0102,"
			+ "ОстаточнаяСтоимостьНа0103,"
			+ "ОстаточнаяСтоимостьНа0104,"
			+ "ОстаточнаяСтоимостьНа0105,"
			+ "ОстаточнаяСтоимостьНа0106,"
			+ "ОстаточнаяСтоимостьНа0107,"
			+ "ОстаточнаяСтоимостьНа0108,"
			+ "ОстаточнаяСтоимостьНа0109,"
			+ "ОстаточнаяСтоимостьНа0110,"
			+ "ОстаточнаяСтоимостьНа0111,"
			+ "ОстаточнаяСтоимостьНа0112,"
			+ "ОстаточнаяСтоимостьНа3112";
			
			КолонкиРасчета = "" 
			+ "СредняяСтоимость,"
			+ "НеоблагаемаяСредняяСтоимость,"
			+ "НалоговаяБаза,"
			+ "СуммаНалога,"
			+ "СуммаУменьшенияСуммыНалога,"
			+ "СуммаНалогаКУплате,"
			+ "СуммаАвансовыхПлатежей1Кв,"
			+ "СуммаАвансовыхПлатежей2Кв,"
			+ "СуммаАвансовыхПлатежей3Кв";
			
			РасчетНалогаПоЛистам = РасчетНалога.Скопировать();
			РасчетНалогаПоЛистам.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
			
			ДопКолонки = Новый Структура(КолонкиРасчета);
			Для каждого Колонка Из ДопКолонки Цикл
				РасчетНалогаПоЛистам.Колонки.Добавить(Колонка.Ключ,
					ОбщегоНазначения.ОписаниеТипаЧисло(15, 0, ДопустимыйЗнак.Неотрицательный));
			КонецЦикла;
			
			// С целью оптимизации производительности список имён полей-периодов формируется заранее, а не динамически в циклах.
			КолонкиПериоды = Новый ТаблицаЗначений;
			КолонкиПериоды.Колонки.Добавить("Счетчик", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
			КолонкиПериоды.Колонки.Добавить("ОстаточнаяСтоимостьИмя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(25, ДопустимаяДлина.Фиксированная)));
			Для Счетчик = 1 По Делитель Цикл
				
				КолонкаПериод = КолонкиПериоды.Добавить();
				КолонкаПериод.Счетчик                = Счетчик;
				КолонкаПериод.ОстаточнаяСтоимостьИмя = "ОстаточнаяСтоимостьНа" + ?(Счетчик = 13, "3112", "01" + Формат(Счетчик, "ЧЦ=2; ЧВН="));
			
			КонецЦикла;
				
			Отбор = Новый Структура(КолонкиГруппировок);
			РасчетНалогаПоЛистам.Индексы.Добавить(КолонкиГруппировок);
				
			Для Каждого СтрокаТаблицы Из РасчетНалогаПоЛистам Цикл
				
				Если НЕ ГодовойРасчет И НЕ СтрокаТаблицы.УплачиваютсяАвансы Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ГодовойРасчет И (СтрокаТаблицы.КодВидаИмущества = "04" ИЛИ СтрокаТаблицы.КодВидаИмущества = "07") Тогда
					Продолжить;
				КонецЕсли;
				
				УчитыватьАвансы = ГодовойРасчет И СтрокаТаблицы.УплачиваютсяАвансы;
				
				ДоляСтоимости = 1;
				
				КодВидаИмущества = ?(ПустаяСтрока(СтрокаТаблицы.КодВидаИмущества), "03", СтрокаТаблицы.КодВидаИмущества);
				Если КодВидаИмущества = "04" Тогда
					ДоляСтоимости = 0;
				ИначеЕсли КодВидаИмущества = "02" Тогда
					ДоляСтоимости = СтрокаТаблицы.ДоляСтоимостиЧислитель / СтрокаТаблицы.ДоляСтоимостиЗнаменатель;
				КонецЕсли;
				
				ДелимоеСредняяСтоимость = 0;
				ДелимоеНеоблагаемаяСредняяСтоимость = 0;
				Для каждого КолонкаПериод Из КолонкиПериоды Цикл
					Счетчик = КолонкаПериод.Счетчик;
					
					СтрокаТаблицы[КолонкаПериод.ОстаточнаяСтоимостьИмя] = Окр(СтрокаТаблицы[КолонкаПериод.ОстаточнаяСтоимостьИмя]);
					ДелимоеСредняяСтоимость = ДелимоеСредняяСтоимость + СтрокаТаблицы[КолонкаПериод.ОстаточнаяСтоимостьИмя];
					
					Если СтрокаТаблицы.ОсвобождениеОтНалогообложения Тогда
						ДелимоеНеоблагаемаяСредняяСтоимость = ДелимоеНеоблагаемаяСредняяСтоимость + СтрокаТаблицы[КолонкаПериод.ОстаточнаяСтоимостьИмя];
					КонецЕсли;
					
					Если УчитыватьАвансы И Счетчик - 1 <> 0 И (Счетчик - 1) % 3 = 0 Тогда
						
						ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, Дата(Год(ПериодРасчета), Счетчик - 3, 1));
						СредняяСтоимость = ?(ПрименениеУСН, 0, ДелимоеСредняяСтоимость / Счетчик);
						НеоблагаемаяСредняяСтоимость = ?(ПрименениеУСН, 0, ДелимоеНеоблагаемаяСредняяСтоимость / Счетчик);
						
						Если Счетчик = 4 Тогда
							СредняяСтоимость1Кв = СредняяСтоимость;
							НеоблагаемаяСредняяСтоимость1Кв = НеоблагаемаяСредняяСтоимость;
						ИначеЕсли Счетчик = 7 Тогда
							СредняяСтоимость2Кв = СредняяСтоимость;
							НеоблагаемаяСредняяСтоимость2Кв = НеоблагаемаяСредняяСтоимость;
						ИначеЕсли Счетчик = 10 Тогда
							СредняяСтоимость3Кв = СредняяСтоимость;
							НеоблагаемаяСредняяСтоимость3Кв = НеоблагаемаяСредняяСтоимость;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
				СтрокаТаблицы.СредняяСтоимость = Окр(ДелимоеСредняяСтоимость / Делитель);
				СтрокаТаблицы.НеоблагаемаяСредняяСтоимость = Окр(ДелимоеНеоблагаемаяСредняяСтоимость / Делитель);
				
				СтоимостьОблагаемогоНалогомИмущества = Макс(СтрокаТаблицы.СредняяСтоимость - СтрокаТаблицы.НеоблагаемаяСредняяСтоимость, 0);
				
				Если УчитыватьАвансы Тогда
					СтоимостьОблагаемогоНалогомИмущества1Кв = Макс(СредняяСтоимость1Кв - НеоблагаемаяСредняяСтоимость1Кв, 0);
					СтоимостьОблагаемогоНалогомИмущества2Кв = Макс(СредняяСтоимость2Кв - НеоблагаемаяСредняяСтоимость2Кв, 0);
					СтоимостьОблагаемогоНалогомИмущества3Кв = Макс(СредняяСтоимость3Кв - НеоблагаемаяСредняяСтоимость3Кв, 0);
				КонецЕсли;
				
				СтрокаТаблицы.НалоговаяБаза = Окр(СтоимостьОблагаемогоНалогомИмущества * ДоляСтоимости);	
				
				Если ГодовойРасчет Тогда
					СтрокаТаблицы.СуммаНалога = Окр(СтрокаТаблицы.НалоговаяБаза * СтрокаТаблицы.НалоговаяСтавка / 100);
				Иначе	
					СтрокаТаблицы.СуммаНалога = Окр(СтоимостьОблагаемогоНалогомИмущества
						* ДоляСтоимости * СтрокаТаблицы.НалоговаяСтавка / 100 / 4);
				КонецЕсли;
				
				Если УчитыватьАвансы Тогда
					
					СтрокаТаблицы.СуммаАвансовыхПлатежей1Кв = Окр(СтоимостьОблагаемогоНалогомИмущества1Кв 
						* ДоляСтоимости * СтрокаТаблицы.НалоговаяСтавка / 100 / 4);
					СтрокаТаблицы.СуммаАвансовыхПлатежей2Кв = Окр(СтоимостьОблагаемогоНалогомИмущества2Кв
						* ДоляСтоимости * СтрокаТаблицы.НалоговаяСтавка / 100 / 4);
					СтрокаТаблицы.СуммаАвансовыхПлатежей3Кв = Окр(СтоимостьОблагаемогоНалогомИмущества3Кв
						* ДоляСтоимости * СтрокаТаблицы.НалоговаяСтавка / 100 / 4);
					
				КонецЕсли;
				
				
				Если СтрокаТаблицы.ИФНС = РеквизитыОрганизации.РегистрацияВНалоговомОргане Тогда
				
					СтрокаТаблицы.СуммаУменьшенияСуммыНалога = Окр(СтрокаТаблицы.СуммаНалога * ПроцентУменьшенияСуммыНалога / 100);
					СтрокаТаблицы.СуммаНалогаКУплате = Макс(СтрокаТаблицы.СуммаНалога - СтрокаТаблицы.СуммаУменьшенияСуммыНалога, 0);
					
					Если УчитыватьАвансы Тогда
						
						СтрокаТаблицы.СуммаАвансовыхПлатежей1Кв = СтрокаТаблицы.СуммаАвансовыхПлатежей1Кв
							- Окр(СтрокаТаблицы.СуммаАвансовыхПлатежей1Кв * ПроцентУменьшенияСуммыНалога / 100);
						СтрокаТаблицы.СуммаАвансовыхПлатежей2Кв = СтрокаТаблицы.СуммаАвансовыхПлатежей2Кв
							- Окр(СтрокаТаблицы.СуммаАвансовыхПлатежей2Кв * ПроцентУменьшенияСуммыНалога / 100);
						СтрокаТаблицы.СуммаАвансовыхПлатежей3Кв = СтрокаТаблицы.СуммаАвансовыхПлатежей3Кв
							- Окр(СтрокаТаблицы.СуммаАвансовыхПлатежей3Кв * ПроцентУменьшенияСуммыНалога / 100);
							
					КонецЕсли;
					
				Иначе
					
					СтрокаТаблицы.СуммаНалогаКУплате = СтрокаТаблицы.СуммаНалога;
					
				КонецЕсли;
				
				// Распределим полученные суммы по объектам ОС
				
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
				РасчетНалогаПоОбъектамОС = РасчетНалога.Скопировать(Отбор);
					
				КоэффициентыРаспределения = Новый Массив;
				КоэффициентыРаспределения1Кв = Новый Массив;
				КоэффициентыРаспределения2Кв = Новый Массив;
				КоэффициентыРаспределения3Кв = Новый Массив;
				
				Для Каждого СтрокаПоОбъектуОС Из РасчетНалогаПоОбъектамОС Цикл
					
					ДелимоеСредняяСтоимость = 0;
					Для каждого КолонкаПериод Из КолонкиПериоды Цикл
						Счетчик = КолонкаПериод.Счетчик;
						
						СтрокаПоОбъектуОС[КолонкаПериод.ОстаточнаяСтоимостьИмя] = Окр(СтрокаПоОбъектуОС[КолонкаПериод.ОстаточнаяСтоимостьИмя], 2);
						ДелимоеСредняяСтоимость = ДелимоеСредняяСтоимость + СтрокаПоОбъектуОС[КолонкаПериод.ОстаточнаяСтоимостьИмя];
						
						Если УчитыватьАвансы Тогда
							Если Счетчик = 4 Тогда
								СредняяСтоимость1Кв = Окр(ДелимоеСредняяСтоимость / Счетчик, 2);
							ИначеЕсли Счетчик = 7 Тогда
								СредняяСтоимость2Кв = Окр(ДелимоеСредняяСтоимость / Счетчик, 2);
							ИначеЕсли Счетчик = 10 Тогда
								СредняяСтоимость3Кв = Окр(ДелимоеСредняяСтоимость / Счетчик, 2);
							КонецЕсли;			
						КонецЕсли;
						
					КонецЦикла;
					СредняяСтоимость = Окр(ДелимоеСредняяСтоимость / Делитель, 2);
					
					КоэффициентыРаспределения.Добавить(СредняяСтоимость);
					
					Если УчитыватьАвансы Тогда
						КоэффициентыРаспределения1Кв.Добавить(СредняяСтоимость1Кв);
						КоэффициентыРаспределения2Кв.Добавить(СредняяСтоимость2Кв);
						КоэффициентыРаспределения3Кв.Добавить(СредняяСтоимость3Кв);
					КонецЕсли;
					
				КонецЦикла;	
				
				Для каждого Колонка Из ДопКолонки Цикл
					
					РасчетНалогаПоОбъектамОС.Колонки.Добавить(Колонка.Ключ,
						ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
						
					Если Колонка.Ключ = "СуммаАвансовыхПлатежей1Кв" Тогда
						Коэффициенты = КоэффициентыРаспределения1Кв;
					ИначеЕсли Колонка.Ключ = "СуммаАвансовыхПлатежей2Кв" Тогда
						Коэффициенты = КоэффициентыРаспределения2Кв;
					ИначеЕсли Колонка.Ключ = "СуммаАвансовыхПлатежей3Кв" Тогда
						Коэффициенты = КоэффициентыРаспределения3Кв;
					Иначе
						Коэффициенты = КоэффициентыРаспределения;
					КонецЕсли;
						
					Если СтрокаТаблицы[Колонка.Ключ] > 0 Тогда
						РаспределенныеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СтрокаТаблицы[Колонка.Ключ], Коэффициенты);
						Если РаспределенныеСуммы <> Неопределено Тогда
							РасчетНалогаПоОбъектамОС.ЗагрузитьКолонку(РаспределенныеСуммы, Колонка.Ключ);
						КонецЕсли;
					КонецЕсли;	
					
				КонецЦикла;
				
				Для Каждого СтрокаПоОбъектуОС Из РасчетНалогаПоОбъектамОС Цикл
					
					НоваяСтрока = ТаблицаРасчетНалога.Добавить();
					НоваяСтрока.ВидНалоговойБазы = Перечисления.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость;
					НоваяСтрока.КодВидаИмущества = КодВидаИмущества;
					
					СвойстваПоСтрокеТаблицы = ""
					+ "ИФНС,"
					+ "КодПоОКТМО,"
					+ "КодНалоговойЛьготыОсвобождениеОтНалогообложения,"
					+ "НалоговаяСтавка,"
					+ "КБК,"
					+ "ПонижениеНалоговойСтавки";
					
					Если КодВидаИмущества = "02" Тогда
						СвойстваПоСтрокеТаблицы = СвойстваПоСтрокеТаблицы + ","
						+ "ДоляСтоимостиЧислитель,"
						+ "ДоляСтоимостиЗнаменатель";
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы, СвойстваПоСтрокеТаблицы);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПоОбъектуОС, ,СвойстваПоСтрокеТаблицы);
					
					Если УчитыватьАвансы Тогда
						
						НоваяСтрока.СуммаАвансовыхПлатежей = СтрокаПоОбъектуОС.СуммаАвансовыхПлатежей1Кв
															+ СтрокаПоОбъектуОС.СуммаАвансовыхПлатежей2Кв
															+ СтрокаПоОбъектуОС.СуммаАвансовыхПлатежей3Кв;
						
						НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалогаКУплате - НоваяСтрока.СуммаАвансовыхПлатежей;
						
					КонецЕсли;
					
					Если НЕ ГодовойРасчет Тогда
						
						НоваяСтрока.СуммаАвансовыхПлатежей = НоваяСтрока.СуммаНалогаКУплате;
						
					КонецЕсли;
						
				КонецЦикла;
				
			КонецЦикла;
						
		КонецЕсли;
			
	КонецЕсли;
	
	Если ПериодРасчета >= '20150101' Тогда
	
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; // Хранит НалоговыеОрганыСУстановленнойУплатойАвансов
		//РегистрыСведений.ПорядокУплатыНалоговНаМестах.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		//	МенеджерВременныхТаблиц, Организация, ПериодРасчета, "НалогНаИмущество");
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ПериодРасчета", ПериодРасчета);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ОсновнойНалоговыйОрган", РеквизитыОрганизации.РегистрацияВНалоговомОргане);
		Запрос.УстановитьПараметр("ПрименениеУСН", ПрименениеУСН);
		// { RGS LFedotova 03.03.2018 21:52:58 - вопрос SLI-0007489
		Запрос.УстановитьПараметр("КодПоОКТМО", Организация.КодПоОКТМО);
		// } RGS LFedotova 03.03.2018 21:53:16 - вопрос SLI-0007489
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган
		|		ИНАЧЕ &ОсновнойНалоговыйОрган
		|	КОНЕЦ КАК ИФНС,
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
		|				ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКТМО
		//|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКТМО, """")
		|		ИНАЧЕ ЕСТЬNULL(&КодПоОКТМО, """")
		|	КОНЕЦ КАК КодПоОКТМО,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер КАК КадастровыйНомер,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастроваяСтоимость,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НеоблагаемаяКадастроваяСтоимость,
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
		|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
		|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПонижениеНалоговойСтавки,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель,
		|	ВЫБОР
		|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
		|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
		|		ИНАЧЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
		|	КОНЕЦ КАК НалоговаяСтавка,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаРегистрацииПраваСобственности,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаПрекращенияПраваСобственности,
		//|	&ПрименениеУСН
		//|		ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
		|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляВПравеОбщейСобственностиЧислитель,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляВПравеОбщейСобственностиЗнаменатель,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляПлощадиЧислитель,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляПлощадиЗнаменатель
		|ПОМЕСТИТЬ ОбъектыОблагаемыеПоКадастровойСтоимости
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРасчета, МЕСЯЦ), Организация = &Организация) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРасчета, ГОД), Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
		|		ПО (ИСТИНА)
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)
		|	И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаРегистрацииПраваСобственности > КОНЕЦПЕРИОДА(&ПериодРасчета, МЕСЯЦ)
		|	И ВЫБОР
		|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаПрекращенияПраваСобственности = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДатаПрекращенияПраваСобственности < НАЧАЛОПЕРИОДА(&ПериодРасчета, ГОД)
		|		КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИФНС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ИФНС,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КодПоОКТМО,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ОсновноеСредство,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КадастровыйНомер,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КадастровыйНомерПомещения,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КадастроваяСтоимость,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.НеоблагаемаяКадастроваяСтоимость,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ОсвобождениеОтНалогообложения,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ПонижениеНалоговойСтавки,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляСтоимостиЧислитель,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляСтоимостиЗнаменатель,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.НалоговаяСтавка,
		//|	ВЫБОР
		//|		КОГДА ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган ЕСТЬ NULL
		//|			ТОГДА ЛОЖЬ
		//|		ИНАЧЕ ИСТИНА
		//|	КОНЕЦ КАК УплачиваютсяАвансы,
		|	ЛОЖЬ КАК УплачиваютсяАвансы,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДатаРегистрацииПраваСобственности,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДатаПрекращенияПраваСобственности,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.КодВидаИмущества,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляВПравеОбщейСобственностиЧислитель,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляВПравеОбщейСобственностиЗнаменатель,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляПлощадиЧислитель,
		|	ОбъектыОблагаемыеПоКадастровойСтоимости.ДоляПлощадиЗнаменатель
		|ИЗ
		|	ОбъектыОблагаемыеПоКадастровойСтоимости КАК ОбъектыОблагаемыеПоКадастровойСтоимости
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
		//|		ПО ОбъектыОблагаемыеПоКадастровойСтоимости.ИФНС = ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган";
		|";
		
		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
		
			РасчетНалогаНаИмуществоПоКадастровойСтоимости = Результат.Выгрузить();
		
			Для Каждого СтрокаТаблицы Из РасчетНалогаНаИмуществоПоКадастровойСтоимости Цикл
				
				Если НЕ ГодовойРасчет И НЕ СтрокаТаблицы.УплачиваютсяАвансы Тогда
					Продолжить;
				КонецЕсли;
				
				УчитыватьАвансы = ГодовойРасчет И СтрокаТаблицы.УплачиваютсяАвансы;
				
				Если ПериодРасчета < '20140701' И СтрокаТаблицы.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаРегистрацииПраваСобственности) Тогда
					Продолжить;
				КонецЕсли;
				
				ГодРасчета = Год(ПериодРасчета);
				
				Если ГодРасчета < 2016 ИЛИ ГодовойРасчет Тогда
					НачалоПериода = 1;
				Иначе
					НачалоПериода = Месяц(НачалоКвартала(ПериодРасчета));
				КонецЕсли;
				
				КоличествоМесяцевВладения = 0;
				КоличествоМесяцевВладенияЗаКвартал = 0;
				МесяцыВладения = Новый Соответствие;
				Для Сч = НачалоПериода По Месяц(ПериодРасчета) Цикл
					
					Если ГодРасчета < 2016 Тогда
						ПредельнаяДатаВозникновенияПрава = КонецМесяца(Дата(ГодРасчета, Сч, 1));
						ПредельнаяДатаПрекращенияПрава = Дата(ГодРасчета, Сч, 1);
					Иначе
						ПредельнаяДатаВозникновенияПрава = Дата(ГодРасчета, Сч, 15, 23, 59, 59);
						ПредельнаяДатаПрекращенияПрава = Дата(ГодРасчета, Сч, 16);
					КонецЕсли;
					
					Если СтрокаТаблицы.ДатаРегистрацииПраваСобственности <= ПредельнаяДатаВозникновенияПрава
						И (НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаПрекращенияПраваСобственности)
							ИЛИ СтрокаТаблицы.ДатаПрекращенияПраваСобственности >= ПредельнаяДатаПрекращенияПрава) Тогда
							
						КоличествоМесяцевВладения = КоличествоМесяцевВладения + 1;
						КоличествоМесяцевВладенияЗаКвартал = КоличествоМесяцевВладенияЗаКвартал + 1;
					КонецЕсли;
					
					Если ГодовойРасчет И Сч%3 = 0 Тогда
						МесяцыВладения.Вставить(Сч, КоличествоМесяцевВладенияЗаКвартал);
						
						Если ГодРасчета >= 2016 Тогда
							КоличествоМесяцевВладенияЗаКвартал = 0;
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				Если КоличествоМесяцевВладения = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаРасчетНалога.Добавить(); 
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				
				НоваяСтрока.ВидНалоговойБазы = Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость;
				
				Если СтрокаТаблицы.ОсвобождениеОтНалогообложения Тогда
					НоваяСтрока.НеоблагаемаяКадастроваяСтоимость = НоваяСтрока.КадастроваяСтоимость;
				КонецЕсли;
				
				Если СтрокаТаблицы.ДоляСтоимостиЧислитель > 0 И СтрокаТаблицы.ДоляСтоимостиЗнаменатель > 0 Тогда
					ДоляСтоимости = СтрокаТаблицы.ДоляСтоимостиЧислитель / СтрокаТаблицы.ДоляСтоимостиЗнаменатель;	
				Иначе
					ДоляСтоимости = 1;
				КонецЕсли;
				
				Если СтрокаТаблицы.ДоляВПравеОбщейСобственностиЧислитель > 0 И СтрокаТаблицы.ДоляВПравеОбщейСобственностиЗнаменатель > 0 Тогда
					ДоляВПравеОбщейСобственности = 
						СтрокаТаблицы.ДоляВПравеОбщейСобственностиЧислитель / СтрокаТаблицы.ДоляВПравеОбщейСобственностиЗнаменатель;
				Иначе
					ДоляВПравеОбщейСобственности = 1;
				КонецЕсли;
				
				НоваяСтрока.НалоговаяБаза = Окр(Макс(НоваяСтрока.КадастроваяСтоимость - НоваяСтрока.НеоблагаемаяКадастроваяСтоимость, 0)
					* ДоляСтоимости * ДоляВПравеОбщейСобственности);
				
				НоваяСтрока.КоличествоМесяцевВладения = КоличествоМесяцевВладения;
				КоэффициентК = НоваяСтрока.КоличествоМесяцевВладения / ?(ГодРасчета < 2016 ИЛИ ГодовойРасчет, Месяц(ПериодРасчета), 3);
				
				Если ГодовойРасчет Тогда
					НоваяСтрока.СуммаНалога = Окр(НоваяСтрока.НалоговаяБаза * КоэффициентК * НоваяСтрока.НалоговаяСтавка / 100);
				Иначе
					НоваяСтрока.СуммаНалога = Окр(Макс(НоваяСтрока.КадастроваяСтоимость - НоваяСтрока.НеоблагаемаяКадастроваяСтоимость, 0)
						* ДоляСтоимости * ДоляВПравеОбщейСобственности * КоэффициентК * НоваяСтрока.НалоговаяСтавка / 100 / 4);
				КонецЕсли;
				
				Если УчитыватьАвансы Тогда
					
					КоэффициентК3 = МесяцыВладения[3] / 3;
					СуммаАвансовыхПлатежей3 = Окр(Макс(НоваяСтрока.КадастроваяСтоимость - НоваяСтрока.НеоблагаемаяКадастроваяСтоимость, 0)
						* ДоляСтоимости * ДоляВПравеОбщейСобственности * КоэффициентК3 * НоваяСтрока.НалоговаяСтавка / 100 / 4);
					
					КоэффициентК6 = МесяцыВладения[6] / ?(ГодРасчета < 2016, 6, 3);
					СуммаАвансовыхПлатежей6 = Окр(Макс(НоваяСтрока.КадастроваяСтоимость - НоваяСтрока.НеоблагаемаяКадастроваяСтоимость, 0)
						* ДоляСтоимости * ДоляВПравеОбщейСобственности * КоэффициентК6 * НоваяСтрока.НалоговаяСтавка / 100 / 4);
					
					КоэффициентК9 = МесяцыВладения[9] / ?(ГодРасчета < 2016, 9, 3);
					СуммаАвансовыхПлатежей9 = Окр(Макс(НоваяСтрока.КадастроваяСтоимость - НоваяСтрока.НеоблагаемаяКадастроваяСтоимость, 0)
						* ДоляСтоимости * ДоляВПравеОбщейСобственности * КоэффициентК9 * НоваяСтрока.НалоговаяСтавка / 100 / 4);
					
				КонецЕсли;
				
				Если НоваяСтрока.ИФНС = РеквизитыОрганизации.РегистрацияВНалоговомОргане Тогда
				
					НоваяСтрока.СуммаУменьшенияСуммыНалога = Окр(НоваяСтрока.СуммаНалога * ПроцентУменьшенияСуммыНалога / 100);
					НоваяСтрока.СуммаНалогаКУплате = Макс(НоваяСтрока.СуммаНалога - НоваяСтрока.СуммаУменьшенияСуммыНалога, 0);
					
					Если УчитыватьАвансы Тогда
						СуммаАвансовыхПлатежей3 = Макс(СуммаАвансовыхПлатежей3
							- Окр(СуммаАвансовыхПлатежей3 * ПроцентУменьшенияСуммыНалога / 100), 0);
						СуммаАвансовыхПлатежей6 = Макс(СуммаАвансовыхПлатежей6
							- Окр(СуммаАвансовыхПлатежей6 * ПроцентУменьшенияСуммыНалога / 100), 0);
						СуммаАвансовыхПлатежей9 = Макс(СуммаАвансовыхПлатежей9
							- Окр(СуммаАвансовыхПлатежей9 * ПроцентУменьшенияСуммыНалога / 100), 0);
					КонецЕсли;
					
				Иначе
					
					НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалога;
					
				КонецЕсли;
				
				Если УчитыватьАвансы Тогда
					
						НоваяСтрока.СуммаАвансовыхПлатежей = СуммаАвансовыхПлатежей3 + СуммаАвансовыхПлатежей6 + СуммаАвансовыхПлатежей9;
					НоваяСтрока.СуммаНалогаКУплате = НоваяСтрока.СуммаНалогаКУплате - НоваяСтрока.СуммаАвансовыхПлатежей;
					
				КонецЕсли;
				
				Если НЕ ГодовойРасчет Тогда
					НоваяСтрока.СуммаАвансовыхПлатежей = НоваяСтрока.СуммаНалогаКУплате;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаРасчетНалога.ЗаполнитьЗначения(мДатаКонцаПериодаОтчета, "ПериодРасчета");
	ТаблицаРасчетНалога.ЗаполнитьЗначения(Организация, "Организация");
	
	Возврат ТаблицаРасчетНалога;
	
КонецФункции

Функция ПодготовитьТаблицыРасчетНалога(ТаблицаРеквизиты, Отказ) Экспорт
	
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаПроводок", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", Неопределено);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаПроводок  = ПустаяТаблицаПроводок();
	//ТаблицыПлатон = ПустыеТаблицыДвиженийПлатон();
	ТаблицаСправкиРасчета = ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);
	
	Ошибки = Новый Массив;
	//РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета, ТаблицыПлатон, Ошибки, Отказ);
	РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета, , Ошибки, Отказ);
		
	Если Отказ Тогда
		
		СтруктураТаблиц.Вставить("Ошибки", Ошибки);
		
	Иначе
			
		СтруктураТаблиц.Вставить("ТаблицаПроводок", ТаблицаПроводок);
		//СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", ТаблицыПлатон.Хозрасчетный);
		//СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", ТаблицыПлатон.РасходыНаПлатон);
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", ТаблицаСправкиРасчета);
		
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	//+ "ВидНалога,"					// <Перечисление.ВидыИмущественныхНалогов>
	+ "Содержание,"					// <Строка, 150>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета = Неопределено, ТаблицыПлатон = Неопределено, Ошибки, Отказ)
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация);
	//ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(
	//	Реквизиты.Организация, Реквизиты.Период);
	ПрименяетсяУСНДоходыМинусРасходы = Ложь;
	
	РасчетПлатон   = Неопределено;
	
		
		РасчетПоНалогу = ПолучитьРасчетПоНалогуНаИмущество(Реквизиты.Организация, Реквизиты.Период);
		
		//СчетКт = ПланыСчетов.Хозрасчетный.НалогНаИмущество;
		
		СтрокиБезКоличестваМесяцевВладения = РасчетПоНалогу.НайтиСтроки(
			Новый Структура("ВидНалоговойБазы, КоличествоМесяцевВладения",
			Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость, 0));
			
		Если СтрокиБезКоличестваМесяцевВладения.Количество() > 0 Тогда
			
			Для Каждого СтрокаТаблицы Из СтрокиБезКоличестваМесяцевВладения Цикл
				
				ШаблонСообщения = НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
				СсылкаДляПерехода = "e1cib/list/РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам";
				Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
				Ошибки.Добавить(Ошибка);
				
			КонецЦикла;
			
			Отказ = Истина;

		КонецЕсли;
		
	
	Если РасчетПоНалогу.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТаблицаСправкиРасчета = Неопределено Тогда
		Для Каждого СтрокаТаблицы Из РасчетПоНалогу Цикл
			// { RGS LFedotova 05.03.2018 22:27:17 - вопрос SLI-0007489
			Если СтрокаТаблицы.СредняяСтоимость = 0 Тогда
				Продолжить;
			КонецЕсли;
			// } RGS LFedotova 05.03.2018 22:27:21 - вопрос SLI-0007489
			НоваяСтрока = ТаблицаСправкиРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;	
	КонецЕсли; 
	
	//Если Не ЭтоЮрЛицо Тогда
	//	Возврат;
	//КонецЕсли;
	
	//Объекты = РасчетПоНалогу.ВыгрузитьКолонку("ОсновноеСредство");
	//СпособыОтраженияРасходов = СпособыОтраженияРасходовПоНалогам(
	//	Реквизиты.Организация, Объекты, Реквизиты.ВидНалога, Реквизиты.Период);
	//	
	//Если СпособыОтраженияРасходов.Количество() = 0 Тогда
	//	
	//	ТекстСообщения = НСтр("ru = 'Не задано ни одного способа отражения расходов по налогу'");
	//	СсылкаДляПерехода = "e1cib/data/РегистрСведений.СпособыОтраженияРасходовПоНалогам";
	//	Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
	//	Ошибки.Добавить(Ошибка);
	//	
	//	Отказ = Истина;
	//	
	//КонецЕсли;
	
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;
		
	//СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетКт);
	
	//Для Каждого СтрокаТаблицы Из РасчетПоНалогу Цикл
	//	
	//	Если СтрокаТаблицы.СуммаНалогаКУплате = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
	//	
	//	Если СпособОтраженияРасходов = Неопределено Тогда
	//		
	//		ШаблонСообщения = НСтр("ru = 'Не установлен способ отражения расходов по налогу для объекта %1'");
	//		
	//		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//			ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
	//		СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(СтрокаТаблицы.ОсновноеСредство);
	//		
	//		Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
	//								ТекстСообщения, СсылкаДляПерехода);
	//								
	//		Ошибки.Добавить(Ошибка);
	//		
	//		Отказ = Истина;
	//		Продолжить;
	//		
	//	КонецЕсли;
	//	
	//	Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
	//		
	//		Отбор = Новый Структура;
	//		Отбор.Вставить("Период", СпособОтраженияРасходов.Период);
	//		Отбор.Вставить("ВидНалога", Реквизиты.ВидНалога);
	//		Если СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОсновнымСредствам" Тогда
	//			Отбор.Вставить("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство);
	//			Отбор.Вставить("Организация", Реквизиты.Организация);
	//		ИначеЕсли СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОрганизациям" Тогда
	//			Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
	//			Отбор.Вставить("Организация", Реквизиты.Организация);
	//		Иначе
	//			Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
	//			Отбор.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	//		КонецЕсли;
	//		
	//		КлючЗаписи = РегистрыСведений.СпособыОтраженияРасходовПоНалогам.СоздатьКлючЗаписи(Отбор);
	//		
	//		Если Не КлючЗаписи.Пустой() Тогда
	//			
	//			ТекстСообщения = НСтр("ru = 'Не установлен порядок отражения в УСН в способе отражения расходов по налогу'");
	//			СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(КлючЗаписи);
	//			
	//			Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
	//									ТекстСообщения, СсылкаДляПерехода);
	//			
	//			Ошибки.Добавить(Ошибка);
	//			
	//			Отказ = Истина;
	//			Продолжить;
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//	НоваяСтрока = ТаблицаПроводок.Добавить();
	//	
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
	//	
	//	НоваяСтрока.Подразделение = СпособОтраженияРасходов.Подразделение;
	//	
	//	НоваяСтрока.СчетКт = СчетКт;
	//	НоваяСтрока.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;
	//	
	//	Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
	//		Если СвойстваСчетаКт["ВидСубконто" + Ном].ИмяПредопределенныхДанных = "РегистрацияВНалоговомОргане" Тогда
	//			НоваяСтрока.РегистрацияВНалоговомОргане = СтрокаТаблицы.ИФНС;
	//		КонецЕсли;
	//	КонецЦикла;
	//		
	//	НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНалогаКУплате;
	//	
	//КонецЦикла;
	//
	//ТаблицаПроводок.Свернуть("Период,Организация,Содержание,
	//|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	//|СчетКт,ВидыПлатежейВГосБюджет,РегистрацияВНалоговомОргане", "Сумма");
	//
	//Если РасчетПлатон = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Для Каждого СтрокаТаблицы Из РасчетПлатон Цикл
	//	
	//	Если СтрокаТаблицы.СуммаНУДт = 0 
	//		И СтрокаТаблицы.СуммаНУКт = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
	//	
	//	Если СпособОтраженияРасходов = Неопределено Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НоваяСтрока = ТаблицыПлатон.РасходыНаПлатон.Добавить();
	//	
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	//	
	//	НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНУКт;
	//	НоваяСтрока.СуммаРасхода = СтрокаТаблицы.СуммаНУДт;
	//	НоваяСтрока.ОтражениеВУСН = СпособОтраженияРасходов.ОтражениеВУСН;
	//	
	//	Если ПрименяетсяУСНДоходыМинусРасходы Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НоваяСтрока = ТаблицыПлатон.Хозрасчетный.Добавить();
	//	
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы, "СуммаНУДт, СуммаНУКт");
	//	
	//	//СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(НоваяСтрока.СчетДт);
	//	
	//	//Для Ном = 1 По СвойстваСчета.КоличествоСубконто Цикл
	//	//	Если СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
	//	//		НоваяСтрока["Субконто" + Ном] = Справочники.СтатьиЗатрат.ОсновнаяСтатьяЗатрат();
	//	//	КонецЕсли;
	//	//КонецЦикла;
	//	
	//	НоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов;
	//	НоваяСтрока.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РасходыНаПлатон;
	//	НоваяСтрока.Содержание = НСтр("ru = 'Отражен в расходах НУ платеж в систему ""Платон""'");
	//	
	//КонецЦикла;
	//
	//ТаблицыПлатон.Хозрасчетный.Свернуть("Период,Организация,Содержание,
	//|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	//|СчетКт,РасходыБудущихПериодов", "СуммаНУДт, СуммаНУКт");
	
КонецПроцедуры

Процедура СформироватьДвиженияРасчетНалога(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
	    Возврат;
	КонецЕсли;
	
	// { RGS LFedotova 03.03.2018 22:16:07 - вопрос SLI-0007489
	Движения.РасчетНалогаНаИмущество.Очистить();
	// } RGS LFedotova 03.03.2018 22:16:10 - вопрос SLI-0007489
	
	Параметры = ПодготовитьПараметрыДвиженийРасчетНалога(
		ТаблицыНачислениеНалога.ТаблицаПроводок,
		ТаблицыНачислениеНалога.ТаблицаПроводокПлатон,
		ТаблицыНачислениеНалога.ТаблицаДвиженийПлатон,
		ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	ДополнитьПараметрыДвиженийСправкаРасчет(Параметры, Реквизиты, ТаблицыНачислениеНалога.ТаблицаСправкиРасчета);
	
	//ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	//ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	// проводка по начислению налога
	//Для каждого СтрокаТаблицы Из Параметры.Проводки Цикл
	//
	//	Если СтрокаТаблицы.Сумма = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Проводка = Движения.Хозрасчетный.Добавить();
	//	ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы);
	//	
	//	СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
	//	Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
	//		
	//		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
	//			СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
	//		
	//	КонецЦикла;
	//		
	//	Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
	//		Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
	//	КонецЕсли;
	//	
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
	//		"ВидыПлатежейВГосБюджет", СтрокаТаблицы.ВидыПлатежейВГосБюджет);	
	//		
	//	СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);	
	//	Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
	//		Если СвойстваСчетаКт["ВидСубконто" + Ном].ИмяПредопределенныхДанных = "РегистрацияВНалоговомОргане" Тогда
	//			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
	//				"РегистрацияВНалоговомОргане", СтрокаТаблицы.РегистрацияВНалоговомОргане);
	//		КонецЕсли;
	//	КонецЦикла;
	//
	//	Если ОтражатьВНалоговомУчете Тогда
	//		
	//		ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
	//			СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
	//			
	//		Если СвойстваСчетаДт.НалоговыйУчет Тогда
	//			
	//			Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.Сумма);
	//			
	//			Если ПоддержкаПБУ18 Тогда
	//				Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.Сумма, 0);
	//			КонецЕсли;
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	//Для каждого СтрокаТаблицы Из Параметры.ПроводкиПлатон Цикл
	//
	//	Если НЕ ОтражатьВНалоговомУчете Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если СтрокаТаблицы.СуммаНУДт = 0 И СтрокаТаблицы.СуммаНУКт = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Проводка = Движения.Хозрасчетный.Добавить();
	//	ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы, , "СуммаНУДт, СуммаНУКт");
	//	
	//	СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
	//	Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
	//		
	//		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
	//			СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
	//		
	//	КонецЦикла;
	//		
	//	Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
	//		Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
	//	КонецЕсли;
	//	
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
	//		"РасходыБудущихПериодов", СтрокаТаблицы.РасходыБудущихПериодов);
	//		
	//	СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
	//	
	//	Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
	//		Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
	//	КонецЕсли;
	//	
	//	ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
	//		СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
	//		
	//	Если СвойстваСчетаДт.НалоговыйУчет Тогда
	//		
	//		Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.СуммаНУДт);
	//		
	//		Если ПоддержкаПБУ18 Тогда
	//			Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаНУКт, СтрокаТаблицы.СуммаНУКт - СтрокаТаблицы.СуммаНУДт);
	//			Проводка.СуммаВРДт =  - СтрокаТаблицы.СуммаНУКт;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//	Если СвойстваСчетаКт.НалоговыйУчет Тогда
	//		
	//		Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУКт;
	//		
	//		Если ПоддержкаПБУ18 Тогда
	//			Проводка.СуммаВРКт =  - СтрокаТаблицы.СуммаНУКт;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//Движения.Хозрасчетный.Записывать = Истина;
	
	//Для Каждого СтрокаРасхода Из Параметры.РасходыНаПлатон Цикл
	//	
	//	Если СтрокаРасхода.Сумма = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Движение = Движения.РасходыНаПлатон.ДобавитьРасход();
	//	ЗаполнитьЗначенияСвойств(Движение, СтрокаРасхода);
	//	
	//КонецЦикла;
	//
	//Движения.РасходыНаПлатон.Записывать = Истина;
	
	// данные для справки-расчета
	ЗаписьВоВспомогательныеРегистрыСведений(Движения, Параметры.СправкаРасчет, Параметры.Реквизиты, Реквизиты.ИмяРегистраРасчетНалогов);
	
КонецПроцедуры

// Выполняет запись в регистры информации параметров расчетов по рег.операциям
// по данным которых будут построены справки - расчеты
//
Процедура ЗаписьВоВспомогательныеРегистрыСведений(Движения, ДанныеДляЗаписи, ТаблицаРеквизиты,
										ИмяРегистра, Группировать = Ложь, Знач СтрокаГруппировки = Неопределено, Знач СтрокаСуммирования = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеДляЗаписи)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ВспомогательныйРасчет = Движения[ИмяРегистра];
	Параметры = ПодготовитьПараметрыТаблицаРеквизиты(ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если ДанныеДляЗаписи.Колонки.Найти("Организация") = Неопределено Тогда
		ДанныеДляЗаписи.Колонки.Добавить("Организация",
			Новый ОписаниеТипов("СправочникСсылка.Организации"));
	КонецЕсли;
	
	ДанныеДляЗаписи.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	Если Группировать Тогда
		Если СтрокаГруппировки = Неопределено Или СтрокаСуммирования = Неопределено Тогда
			// Группируем все ресурсы по всем измерениям
			МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
			СтрокаГруппировки  = ИменаРеквизитовСтрокой(МетаданныеРегистра, "Измерения", ДанныеДляЗаписи.Колонки);
			СтрокаСуммирования = ИменаРеквизитовСтрокой(МетаданныеРегистра, "Ресурсы",   ДанныеДляЗаписи.Колонки);
		КонецЕсли;
		ДанныеДляЗаписи.Свернуть(СтрокаГруппировки, СтрокаСуммирования);
	КонецЕсли;
	
	КолонкиПериода = Новый Структура;
	КолонкиПериода.Вставить("ПериодРасчета", Реквизиты.Период);
	КолонкиПериода.Вставить("Период",        Реквизиты.Период);
	
	Для Каждого СтрокаТаблицы Из ДанныеДляЗаписи Цикл
		ВспомогательныйРасчетЗапись = ВспомогательныйРасчет.Добавить();
		ЗаполнитьЗначенияСвойств(ВспомогательныйРасчетЗапись, КолонкиПериода);
		ЗаполнитьЗначенияСвойств(ВспомогательныйРасчетЗапись, СтрокаТаблицы);
	КонецЦикла;
	
	ВспомогательныйРасчет.Записывать = Истина;
	ВспомогательныйРасчет.Записать();	
	
КонецПроцедуры

Функция ИменаРеквизитовСтрокой(МетаданныеРегистра, ВидРеквизита, Колонки)
	
	ИменаРеквизитов = Новый Массив;
	
	Для Каждого ОписаниеРеквизита Из МетаданныеРегистра[ВидРеквизита] Цикл
		
		Если Колонки.Найти(ОписаниеРеквизита.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИменаРеквизитов.Добавить(ОписаниеРеквизита.Имя);
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИменаРеквизитов, ",");
	
КонецФункции

Функция ПодготовитьПараметрыТаблицаРеквизиты(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"       // <Дата>
	+ "Организация,"  // <СправочникСсылка.Организации>
	+ "Регистратор"   // <ДокументСсылка.*>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции // ПодготовитьПараметрыТаблицаРеквизиты()

Функция ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаПроводок, ТаблицаПроводокПлатон, ТаблицаДвиженийПлатон, ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                  // <Дата>
	+ "Организация,"             // <СправочникСсылка.Организации>
	+ "Регистратор,"             // <ДокументСсылка.*>
	+ "ВидНалога,"               // <ПеречислениеСсылка.ВидыИмущественныхНалогов>
	+ "ИмяРегистраРасчетНалогов" // <Строка, 0>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	//+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	//+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	//+ "ВидыПлатежейВГосБюджет,"		// <ПеречислениеСсылка.ВидыПлатежейВГосБюджет>
	+ "РегистрацияВНалоговомОргане,"// <СправочникСсылка.РегистрацииВНалоговомОргане>
	+ "Сумма,"						// <Число, 15, 0> - сумма проводки
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("Проводки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводок, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	//+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	//+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	//+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "РасходыБудущихПериодов,"		// <ПеречислениеСсылка.РасходыБудущихПериодов>
	+ "СуммаНУДт,"					// <Число, 15, 0> - сумма проводки по НУ Дт
	+ "СуммаНУКт,"					// <Число, 15, 0> - сумма проводки по НУ Кт
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("ПроводкиПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводокПлатон, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период проводок
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "ОсновноеСредство,"              // <СправочникСсылка.ОсновныеСредства>
	+ "СчетУчета,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"                 // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"            // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетовСКонтрагентом," // <ДокументСсылка>
	+ "Сумма";                         // <Число, 15, 0> - сумма проводки
		
	Параметры.Вставить("РасходыНаПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаДвиженийПлатон, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура ДополнитьПараметрыДвиженийСправкаРасчет(Параметры, Реквизиты, ТаблицаСправкиРасчета)
	
	СписокОбязательныхКолонок = "";
	
	// Подготовка таблицы Параметры.СправкаРасчет
		
		СписокОбязательныхКолонок = СписокОбязательныхКолонок
		+ "ПериодРасчета,"										// <Дата> - период расчета (конец квартала)
		+ "Организация,"										// <СправочникСсылка.Организации> - организация
		+ "ВидНалоговойБазы,"									// <ПеречислениеСсылка.НалоговаяБазаПоНалогуНаИмущество>
		+ "ИФНС,"												// <СправочникСсылка.РегистрацииВНалоговомОргане>
		+ "КодПоОКТМО,"											// <Строка, 11> 
		+ "КодВидаИмущества,"									// <Строка, 2>
		+ "ОсновноеСредство,"									// <СправочникСсылка.ОсновныеСредства>
		+ "ДоляВПравеОбщейСобственностиЧислитель,"				// <Число, 10, 0>
		+ "ДоляВПравеОбщейСобственностиЗнаменатель,"			// <Число, 10, 0>
		+ "ДоляПлощадиЧислитель,"								// <Число, 10, 0>
		+ "ДоляПлощадиЗнаменатель,"								// <Число, 10, 0>
		+ "ДоляСтоимостиЧислитель,"								// <Число, 10, 0>
		+ "ДоляСтоимостиЗнаменатель,"							// <Число, 10, 0>
		+ "КБК,"												// <Строка, 20>
		+ "КадастровыйНомер,"									// <Строка, 100>
		+ "КадастровыйНомерПомещения,"							// <Строка, 100>
		+ "УсловныйНомер,"										// <Строка, 100>
		+ "КадастроваяСтоимость,"								// <Число, 15, 0>
		+ "НеоблагаемаяКадастроваяСтоимость,"					// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0101,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0102,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0103,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0104,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0105,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0106,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0107,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0108,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0109,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0110,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0111,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа0112,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНа3112,"							// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьНедвижимости,"					// <Число, 15, 0>
		+ "ОстаточнаяСтоимостьОсновныхСредств,"					// <Число, 15, 0>
		+ "СредняяСтоимость,"									// <Число, 15, 0>
		+ "НеоблагаемаяСредняяСтоимость,"						// <Число, 15, 0>
		+ "КодНалоговойЛьготыОсвобождениеОтНалогообложения,"	// <Строка, 7>
		+ "НалоговаяБаза,"										// <Число, 15, 0>
		+ "ПонижениеНалоговойСтавки,"							// <Булево>
		+ "НалоговаяСтавка,"									// <Число, 3, 2>
		+ "СуммаНалога,"										// <Число, 15, 0>
		+ "СуммаУменьшенияСуммыНалога,"							// <Число, 15, 0>
		+ "СуммаНалогаКУплате,"									// <Число, 15, 0>
		+ "СуммаАвансовыхПлатежей,"								// <Число, 15, 0>
		+ "КоличествоМесяцевВладения";							// <Число, 2, 0>
		
		
	Параметры.Вставить("СправкаРасчет", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСправкиРасчета, СписокОбязательныхКолонок));
	
КонецПроцедуры


Функция СпособыОтраженияРасходовПоНалогам(Организация, Объекты, ВидНалога, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Запрос.УстановитьПараметр("ВидНалога", ВидНалога);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_ОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&Объекты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоВидамНалога
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОрганизациям
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОсновнымСредствам
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&Объекты)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеСредства.ОсновноеСредство,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) КАК СчетДт,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ПодразделениеЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.ПодразделениеЗатрат, ВТ_ПоВидамНалога.ПодразделениеЗатрат)) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто1, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто1, ВТ_ПоВидамНалога.Субконто1)) КАК Субконто1,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто2, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто2, ВТ_ПоВидамНалога.Субконто2)) КАК Субконто2,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто3, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто3, ВТ_ПоВидамНалога.Субконто3)) КАК Субконто3,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ОтражениеВУСН, ЕСТЬNULL(ВТ_ПоОрганизациям.ОтражениеВУСН, ВТ_ПоВидамНалога.ОтражениеВУСН)) КАК ОтражениеВУСН,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Период, ЕСТЬNULL(ВТ_ПоОрганизациям.Период, ВТ_ПоВидамНалога.Период)) КАК Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПоОсновнымСредствам.ОтражениеВУСН ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПоОрганизациям.ОтражениеВУСН ЕСТЬ NULL 
	|						ТОГДА ""ПоВидамНалога""
	|					ИНАЧЕ ""ПоОрганизациям""
	|				КОНЕЦ
	|		ИНАЧЕ ""ПоОсновнымСредствам""
	|	КОНЕЦ КАК ПорядокОпределенияСпособаОтражения
	|ИЗ
	|	ВТ_ОсновныеСредства КАК ВТ_ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОсновнымСредствам КАК ВТ_ПоОсновнымСредствам
	|		ПО ВТ_ОсновныеСредства.ОсновноеСредство = ВТ_ПоОсновнымСредствам.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОрганизациям КАК ВТ_ПоОрганизациям
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоВидамНалога КАК ВТ_ПоВидамНалога
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) ЕСТЬ NULL ";
	
	Результат = Запрос.Выполнить();
	
	СпособыОтраженияРасходовПоНалогу = Новый Соответствие;
	
	Если НЕ Результат.Пустой() Тогда
		
		ТаблицаСпособовОтражения = Результат.Выгрузить();
		
		Для Каждого СтрокаТаблицы Из ТаблицаСпособовОтражения Цикл
			
			СпособОтраженияРасходовПоНалогу = Новый Структура(
				"СчетДт,
				|Подразделение,
				|Субконто1,
				|Субконто2,
				|Субконто3,
				|ОтражениеВУСН,
				|Период,
				|ПорядокОпределенияСпособаОтражения");
			
			ЗаполнитьЗначенияСвойств(СпособОтраженияРасходовПоНалогу, СтрокаТаблицы);
			СпособыОтраженияРасходовПоНалогу.Вставить(СтрокаТаблицы.ОсновноеСредство, СпособОтраженияРасходовПоНалогу);
			
		КонецЦикла;
				
	КонецЕсли;
	
	Возврат СпособыОтраженияРасходовПоНалогу;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустыеТаблицыДвиженийПлатон()
	
	ТаблицыДвиженийПлатон = Новый Структура("Хозрасчетный, РасходыНаПлатон");
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПроводок.Колонки.Добавить("СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаПроводок.Колонки.Добавить("Субконто1");
	ТаблицаПроводок.Колонки.Добавить("Субконто2");
	ТаблицаПроводок.Колонки.Добавить("Субконто3");
	ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаПроводок.Колонки.Добавить("СчетКт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("РасходыБудущихПериодов",
		Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУДт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУКт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
		
	ТаблицыДвиженийПлатон.Хозрасчетный = ТаблицаПроводок;
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаДвижений.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДвижений.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТаблицаДвижений.Колонки.Добавить("СчетУчета",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаДвижений.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДвижений.Колонки.Добавить("ДоговорКонтрагента",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаДвижений.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		Документы.ТипВсеСсылки());
	ТаблицаДвижений.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаДвижений.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаДвижений.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаДвижений.Колонки.Добавить("СуммаРасхода",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
	ТаблицыДвиженийПлатон.РасходыНаПлатон = ТаблицаДвижений;
		
	Возврат ТаблицыДвиженийПлатон;
	
КонецФункции

Функция ПустаяТаблицаПроводок()
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	//ТаблицаПроводок.Колонки.Добавить("СчетДт",
	//	Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	//ТаблицаПроводок.Колонки.Добавить("Субконто1");
	//ТаблицаПроводок.Колонки.Добавить("Субконто2");
	//ТаблицаПроводок.Колонки.Добавить("Субконто3");
	//ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
	//	Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	//ТаблицаПроводок.Колонки.Добавить("СчетКт",
	//	Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	//ТаблицаПроводок.Колонки.Добавить("ВидыПлатежейВГосБюджет",
	//	Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	ТаблицаПроводок.Колонки.Добавить("РегистрацияВНалоговомОргане",
		Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	//ТаблицаПроводок.Колонки.Добавить("УровниБюджетов",
	//	Новый ОписаниеТипов("ПеречислениеСсылка.УровниБюджетов"));
	ТаблицаПроводок.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат ТаблицаПроводок;
	
КонецФункции

Функция ПустаяСправкаРасчет(ИмяРегистраСведений)
	
	СправкаРасчет = РегистрыСведений[ИмяРегистраСведений].СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СправкаРасчет.Колонки.Удалить("Регистратор");
	СправкаРасчет.Колонки.Удалить("Активность");
	СправкаРасчет.Колонки.Удалить("НомерСтроки");
	
	Возврат СправкаРасчет;
	
КонецФункции

#КонецОбласти
