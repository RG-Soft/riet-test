////////////////////////////////////////////////////////////////////////////////
// КадровыйУчет: методы кадрового учета, работающие на стороне сервера.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПолучениеКадровыхДанных

// Функция возвращает ссылку на физическое лицо, найденное по переданным фамилии, имени, отчеству СНИЛС и организации 
// (см. функцию ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.ФизЛицоПоФИО).
//
// Параметры:
//  Фамилия		- Строка - Фамилия физического лица.
//  Имя			- Строка - Имя физического лица.
//  Отчество	- Строка - Отчество физического лица.
//  СНИЛС		- Строка - СНИЛС физического лица.
//  Организация - СправочникиСсылка.Организации - организация, в которой работает физическое лицо.
//
// Возвращаемое значение:
//   СправочникиСсылка.ФизическиеЛица
//
Функция ФизическоеЛицоПоФИОСНИЛСИОрганизации(Фамилия, Имя, Отчество, СНИЛС, Организация) Экспорт
	
	ВозвращаемоеЗначение = Справочники.ФизическиеЛица.ПустаяСсылка();
	//
	//СписокФизическихЛиц = ФизическиеЛицаЗарплатаКадры.ФизическиеЛицаПоФИОИСНИЛС(Фамилия, Имя, Отчество, СНИЛС);
	//
	//Если СписокФизическихЛиц.Количество() > 0 Тогда
	//	
	//	Параметры = ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	//	Параметры.Организация = Организация;
	//	Параметры.ОкончаниеПериода = ТекущаяДатаСеанса();
	//	Параметры.СписокФизическихЛиц = СписокФизическихЛиц;
	//	
	//	СотрудникиФизическихЛиц = КадровыйУчет.СотрудникиОрганизации(Истина, Параметры);
	//	Если СотрудникиФизическихЛиц.Количество() > 0 Тогда
	//		ВозвращаемоеЗначение = СотрудникиФизическихЛиц[0].ФизическоеЛицо;
	//	КонецЕсли; 
	//	
	//КонецЕсли;
	//
	Возврат ВозвращаемоеЗначение; 
	
КонецФункции

// Возвращает таблицу значений в строках которой содержится информация о периодах
// изменения (регистрации) фамилии, имени и отчества физических лиц.
//
// Параметры:
//		СписокФизическихЛиц - Массив, ссылок справочника ФизическиеЛица
//							- СправочникСсылка.ФизическиеЛица
//
// Возвращаемое значение:
//		ТаблицаЗначений - содержит колонки:
//			* Период			- Дата
//			* ФизическоеЛицо	- СправочникСсылка.ФизическиеЛица
//			* Фамилия			- Строка
//			* Имя				- Строка
//			* Отчество			- Строка
//
Функция ПериодыИзмененияФИОФизическихЛиц(СписокФизическихЛиц) Экспорт
	
	Если ТипЗнч(СписокФизическихЛиц) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СписокФизическихЛиц);
	Иначе
		ФизическиеЛица = СписокФизическихЛиц;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокФизическихЛиц", ФизическиеЛица);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаНачала,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОкончания,
		|	ФизическиеЛица.Ссылка
		|ПОМЕСТИТЬ ВТОтборФизическихЛиц
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&СписокФизическихЛиц)";
		
	Запрос.Выполнить();
	
	ОписательВТ = ОписательВременныхТаблицДляСоздатьВТИсторияИзмененияФИОФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТОтборФизическихЛиц",
		"Ссылка");
	
	РезультатЗапроса = СоздатьВТИсторияИзмененияФИОФизическихЛиц(Истина, ОписательВТ, "");
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру описывающую временную таблицу отборов для получения истории изменения
// ФИО физических лиц.
//
// Параметры:
//		МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц
//		ИмяВТОтборов			- Строка
//		ИмяПоляФизическоеЛицо	- Строка
//
// Возвращаемое значение:
//		Структура - содержит ключи:
//			* МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц.
//			* ИмяВТОтборов				- Строка.
//			* ИмяПоляФизическоеЛицо		- Строка.
//
Функция ОписательВременныхТаблицДляСоздатьВТИсторияИзмененияФИОФизическихЛиц(МенеджерВременныхТаблиц, ИмяВТОтборов, ИмяПоляФизическоеЛицо) Экспорт
	
	ОписательВТ = Новый Структура;
	
	ОписательВТ.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ОписательВТ.Вставить("ИмяВТОтборов", ИмяВТОтборов);
	ОписательВТ.Вставить("ИмяПоляФизическоеЛицо", ИмяПоляФизическоеЛицо);
	
	Возврат ОписательВТ;
	
КонецФункции

// Создает временную таблицу, содержащую записи регистра сведений ФИОФизическихЛиц,
// по переданному отбору во временной таблице, содержащейся в МенеджереВременныхТаблиц.
//
// Параметры:
//		ТолькоРазрешенные						- Булево
//		ОписательВременныхТаблиц				- Структура (см. ОписательВременныхТаблицДляСоздатьВТИсторияИзмененияФИОФизическихЛиц).
//		ИмяВТИсторияИзмененияФИОФизическихЛиц	- Строка
//
// Возвращаемое значение:
//		РезультатЗапроса
//
Функция СоздатьВТИсторияИзмененияФИОФизическихЛиц(ТолькоРазрешенные, ОписательВременныхТаблиц, ИмяВТИсторияИзмененияФИОФизическихЛиц = "ВТИсторияИзмененияФИОФизическихЛиц") Экспорт
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ОписательВременныхТаблиц.ИмяВТОтборов, "ФизическоеЛицо");
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("ФизическоеЛицо", ОписательВременныхТаблиц.ИмяПоляФизическоеЛицо);
	
	Запрос = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистра(
		"ФИОФизическихЛиц",
		ТолькоРазрешенные,
		ОписаниеФильтра,
		,
		ИмяВТИсторияИзмененияФИОФизическихЛиц);
		
	Запрос.МенеджерВременныхТаблиц = ОписательВременныхТаблиц.МенеджерВременныхТаблиц;
	Возврат Запрос.Выполнить();
	
КонецФункции


#КонецОбласти
