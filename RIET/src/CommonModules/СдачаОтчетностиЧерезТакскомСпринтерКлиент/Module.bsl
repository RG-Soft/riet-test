Функция ПроверитьНастройкиИнтеграцииСоСпринтером(ОрганизацияСсылка) Экспорт
	Если НЕ ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;          
	
	НастройкиИнтеграцииСоСпринтером = СдачаОтчетностиЧерезТакскомСпринтерВызовСервера.ПолучитьНастройкиИнтеграцииСоСпринтером(ОрганизацияСсылка);
	Если НастройкиИнтеграцииСоСпринтером = Неопределено Тогда
		ПоказатьПредупреждение(, "В параметрах выбранной организации нужно включить возможность и настроить отправку отчетности через ПК ""Спринтер""!");
		Возврат Ложь;
	КонецЕсли;
	
	КодАбонента 					= НастройкиИнтеграцииСоСпринтером.КодАбонента;
	КаталогПрограммыЭлПочты 		= НастройкиИнтеграцииСоСпринтером.КаталогПрограммыЭлектроннойПочты;
	КаталогОтправкиДанныхОтчетности = НастройкиИнтеграцииСоСпринтером.КаталогОтправкиДанныхОтчетности;
	
	Если СтрДлина(КодАбонента) <> 7 Тогда 
		ПоказатьПредупреждение(, "В параметрах интеграции с ПК ""Спринтер"" неверно задан логин абонента!");
		Возврат Ложь;
	КонецЕсли;
	
	// Проверка подключения расширения работы с файлами здесь удалена, она должна вызываться в коде до использования данной функции
		
	Файл1 = Новый Файл(КаталогПрограммыЭлПочты);
	Файл2 = Новый Файл(КаталогОтправкиДанныхОтчетности);
		
	Если ПустаяСтрока(КаталогПрограммыЭлПочты) ИЛИ НЕ Файл1.Существует() Тогда
		ПоказатьПредупреждение(, "В параметрах интеграции с ПК ""Спринтер"" неверно задан каталог программы электронной почты!");
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(КаталогОтправкиДанныхОтчетности) Тогда
		ПоказатьПредупреждение(, "В параметрах интеграции с ПК ""Спринтер"" не задан каталог отправки данных отчетности!");
		Возврат Ложь;
	КонецЕсли;
	
	Файл3 = Новый Файл(КаталогПрограммыЭлПочты + "run_dipost.bat");
	Если НЕ Файл3.Существует() Тогда
		ПоказатьПредупреждение(, "В каталоге программы электронной почты, указанном в параметрах интеграции с ПК ""Спринтер"", не найден файл run_dipost.bat!");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ОтправитьВСпринтерСогласноНастройкамОрганизации(ОрганизацияСсылка) Экспорт
	
	НастройкиИнтеграцииСоСпринтером = СдачаОтчетностиЧерезТакскомСпринтерВызовСервера.ПолучитьНастройкиИнтеграцииСоСпринтером(ОрганизацияСсылка);
	
	КодАбонента = НастройкиИнтеграцииСоСпринтером.КодАбонента;
	КаталогПрограммыЭлПочты = НастройкиИнтеграцииСоСпринтером.КаталогПрограммыЭлектроннойПочты;
	
	Попытка
		ЗапуститьПриложение(КаталогПрограммыЭлПочты + "run_dipost.bat " + КаталогПрограммыЭлПочты + " " + КодАбонента + " -t", КаталогПрограммыЭлПочты);
		Возврат Истина;
	Исключение
		ПоказатьПредупреждение(, "При запуске приложения для отправки отчетности произошла ошибка:" + Символы.ПС + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ПриНажатииНаКнопкуЗашифроватьИОтправить(Форма) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуЗашифроватьИОтправитьПродолжение", ЭтотОбъект, Форма);
	ТекстСообщения = ВернутьСтр("ru = 'Для продолжения необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения,, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриНажатииНаКнопкуЗашифроватьИОтправитьПродолжение(Результат, Форма) Экспорт
	
    СсылкаНаОтчет = ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.СсылкаНаОтчетПоФорме(Форма);
	ТипЗнчСсылкаНаОтчет = ТипЗнч(СсылкаНаОтчет);
	
	ОрганизацияСсылка = Форма.Объект.Организация;
	
	// Проверяем настройки организации
	Если НЕ ПроверитьНастройкиИнтеграцииСоСпринтером(ОрганизацияСсылка) Тогда
		Возврат;
	КонецЕсли;

	//сохраняем тексты выгрузки в каталог 
	КаталогСохранения = СдачаОтчетностиЧерезТакскомСпринтерВызовСервера.ПолучитьНастройкиИнтеграцииСоСпринтером(ОрганизацияСсылка).КаталогОтправкиДанныхОтчетности;
	
	ИдентификаторФормы = Форма.УникальныйИдентификатор;
	ИмяФайлаВыгрузки = "";
	
	СвойстваФайлаВыгрузки = ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.ВыгрузитьДокументСервер(СсылкаНаОтчет, ИдентификаторФормы);
	Если СвойстваФайлаВыгрузки = Неопределено Тогда
		Сообщить(ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
		Сообщить("Отправка отчета прервана.", СтатусСообщения.Важное);
		Возврат;
	Иначе
		АдресФайлаВыгрузки = СвойстваФайлаВыгрузки.АдресФайлаВыгрузки;
		ИмяФайлаВыгрузки = СвойстваФайлаВыгрузки.ИмяФайлаВыгрузки;	
	КонецЕсли;
	
	ПолноеИмяФайлаОтправки = КаталогСохранения + ИмяФайлаВыгрузки;
	
	ДополнительныеПараметры = Новый Структура("ОрганизацияСсылка", ОрганизацияСсылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриНажатииНаКнопкуЗашифроватьИОтправитьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	#Если ВебКлиент Тогда
		ПолучитьФайл(АдресФайлаВыгрузки, ИмяФайлаВыгрузки, Истина);
		ОткрытьФорму("РегистрСведений.НастройкиИнтеграцииСоСпринтером.Форма.ФормаПередОтправкой", Новый Структура("ПолноеИмяФайлаОтправки", ПолноеИмяФайлаОтправки),,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	#Иначе
		ФайлГотовКОтправке = ПолучитьФайл(АдресФайлаВыгрузки, ПолноеИмяФайлаОтправки, Ложь);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ФайлГотовКОтправке);
	#КонецЕсли

КонецПроцедуры

Процедура ПриНажатииНаКнопкуЗашифроватьИОтправитьЗавершение(ФайлГотовКОтправке, ДополнительныеПараметры) Экспорт
	
	ОрганизацияСсылка = ДополнительныеПараметры.ОрганизацияСсылка;
	//отправляем файл выгрузки в Спринтер
	Если ФайлГотовКОтправке = Истина Тогда
	
		ОтправитьВСпринтерСогласноНастройкамОрганизации(ОрганизацияСсылка);
	
	КонецЕсли;
	
КонецПроцедуры