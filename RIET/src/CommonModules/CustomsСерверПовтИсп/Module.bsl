
Функция ПолучитьAgentПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Agents.Ссылка
			|ИЗ
			|	Справочник.Agents КАК Agents
			|ГДЕ
			|	Agents.Код = &Код
			|	И (НЕ Agents.ПометкаУдаления)";
			
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат Неопределено;
			
КонецФункции

Функция ПолучитьAgentПоИНН(ИНН) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(ИНН)) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Agents.Ссылка
			|ИЗ
			|	Справочник.Agents КАК Agents
			|ГДЕ
			|	Agents.ИНН = &ИНН
			|	И (НЕ Agents.ПометкаУдаления)";
			
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьУзелNEKNFSПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст =
			"ВЫБРАТЬ
			|	NEKNFS.Ссылка
			|ИЗ
			|	ПланОбмена.NEKNFS КАК NEKNFS
			|ГДЕ
			|	NEKNFS.Код = &Код
			|	И (НЕ NEKNFS.ПометкаУдаления)";
			
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьBankAccountПоКоду(Код) Экспорт
	
	Возврат Справочники.BankAccountsForCustomsPayments.ПолучитьПоКоду(Код);
	
КонецФункции

Функция ПолучитьCustomsПоКоду(Код) Экспорт
	
	Возврат Справочники.Customs.ПолучитьПоКоду(Код);
	
КонецФункции

Функция ПолучитьRegimeПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	CustomsRegimes.Ссылка
			|ИЗ
			|	Справочник.CustomsRegimes КАК CustomsRegimes
			|ГДЕ
			|	CustomsRegimes.Код = &Код
			|	И (НЕ CustomsRegimes.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьВалютуПоНаименованию(Наименование) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Наименование)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Наименование", Наименование);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Валюты.Ссылка
			|ИЗ
			|	Справочник.Валюты КАК Валюты
			|ГДЕ
			|	Валюты.Наименование = &Наименование
			|	И (НЕ Валюты.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьТНВЭДПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	TNVEDCodes.Ссылка
			|ИЗ
			|	Справочник.TNVEDCodes КАК TNVEDCodes
			|ГДЕ
			|	TNVEDCodes.Код = &Код
			|	И (НЕ TNVEDCodes.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьВидТаможенногоПлатежаПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВидыТаможенныхПлатежей.Ссылка
			|ИЗ
			|	Справочник.ВидыТаможенныхПлатежей КАК ВидыТаможенныхПлатежей
			|ГДЕ
			|	ВидыТаможенныхПлатежей.Код = &Код
			|	И (НЕ ВидыТаможенныхПлатежей.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьDeliverToПоAddress1(Address1) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Address1)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Address1", Address1);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	DeliverTo.Ссылка
			|ИЗ
			|	Справочник.DeliverTo КАК DeliverTo
			|ГДЕ
			|	DeliverTo.Address1 = &Address1
			|	И (НЕ DeliverTo.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьSoldToПоНаименованиюИAddress1(Наименование, Address1) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(Наименование))
		ИЛИ НЕ ЗначениеЗаполнено(СокрЛП(Address1)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Address1", Address1);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	SoldTo.Ссылка
		|ИЗ
		|	Справочник.SoldTo КАК SoldTo
		|ГДЕ
		|	SoldTo.Наименование ПОДОБНО &Наименование + ""%""
		|	И SoldTo.Address1 ПОДОБНО &Address1 + ""%""
		|	И (НЕ SoldTo.ПометкаУдаления)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() <> 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
	
КонецФункции

Функция ПолучитьConsignToПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ConsignTo.Ссылка
			|ИЗ
			|	Справочник.ConsignTo КАК ConsignTo
			|ГДЕ
			|	ConsignTo.Код = &Код
			|	И (НЕ ConsignTo.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьConsignToПоSoldToNameAndAddress1(SoldTo, Name, Address1) Экспорт
	
	// Если хотя бы один параметр не заполнен - мы ничего не найдем - выходим
	Если НЕ ЗначениеЗаполнено(SoldTo)
		ИЛИ НЕ ЗначениеЗаполнено(СокрЛП(Name))
		ИЛИ НЕ ЗначениеЗаполнено(СокрЛП(Address1)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("SoldTo", SoldTo);
	Запрос.УстановитьПараметр("Name", Name);
	Запрос.УстановитьПараметр("Address1", Address1);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ConsignTo.Ссылка
		|ИЗ
		|	Справочник.ConsignTo КАК ConsignTo
		|ГДЕ
		|	ConsignTo.Владелец = &SoldTo
		|	И ConsignTo.Наименование ПОДОБНО &Name + ""%""
		|	И ConsignTo.Address1 ПОДОБНО &Address1 + ""%""
		|	И (НЕ ConsignTo.ПометкаУдаления)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Если ничего не найдено или найдено несколько элементов - вернем Неопределено
	Если Выборка.Количество() <> 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
	
КонецФункции

Функция ПолучитьUOMПоКоду(Код) Экспорт
	
	Если ЗначениеЗаполнено(СокрЛП(Код)) Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Код", Код);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	UOMs.Ссылка
			|ИЗ
			|	Справочник.UOMs КАК UOMs
			|ГДЕ
			|	UOMs.Код = &Код
			|	И (НЕ UOMs.ПометкаУдаления)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьPortСРодителями(Port) Экспорт
	
	МассивPortСРодителями = Новый Массив;
	МассивPortСРодителями.Добавить(Port);
	Если НЕ ЗначениеЗаполнено(Port) Тогда
		Возврат МассивPortСРодителями;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	SeaAndAirPorts.Родитель
		|ИЗ
		|	Справочник.SeaAndAirPorts КАК SeaAndAirPorts
		|ГДЕ
		|	SeaAndAirPorts.Ссылка = &Port";
		
	ТекущийPort = Port;
	Пока Истина Цикл
		
		Запрос.УстановитьПараметр("Port", ТекущийPort);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.Родитель) Тогда
			
			ТекущийPort = Выборка.Родитель;
			МассивPortСРодителями.Добавить(ТекущийPort);	
			
		Иначе
			Возврат МассивPortСРодителями;
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьCustomsCardПоКоду(Код) Экспорт
	
	Возврат Справочники.CustomsCards.ПолучитьПоКоду(Код);
	
КонецФункции

Функция ПолучитьAccountsПоERPTreatment(Дата, ERPTreatment) Экспорт
	
	Возврат РегистрыСведений.ERPTreatmentAccounts.ПолучитьAccounts(Дата, ERPTreatment);
	
КонецФункции

// { RGS DKazanskiy 11.07.2018 12:00:53 - S-I-0005217
Функция ЭтоБрокерDGF() Экспорт
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	Возврат РольДоступна("LocalDistributionBroker_ForNonLawsonCompanies")
		И НЕ РольДоступна("ПолныеПрава")
		И СокрЛП(Пользователь.CCA) = "DGF";
	
КонецФункции
// } RGS DKazanskiy 11.07.2018 12:01:23 - S-I-0005217