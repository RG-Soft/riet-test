
Процедура ПроверитьВозможностьРаботыПользователяВРежимеЗавершенияРаботыПользователей(Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РежимЗавершения = Константы.РежимЗавершенияРаботыПользователей.Получить();
	
	// если право на изменение константы РежимЗавершенияРаботыПользователей отсутствует и
	// константа не позволяет работать - то в программу входить нельзя
	Если Не ПравоДоступа("Изменение", Метаданные.Константы.РежимЗавершенияРаботыПользователей)
		И  (РежимЗавершения = Перечисления.РежимыЗавершенияРаботыПользователей.ПрекратитьРаботуБезусловно
		ИЛИ РежимЗавершения = Перечисления.РежимыЗавершенияРаботыПользователей.ЗавершитьССохранениемДанныхПользователей) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // () 


Процедура УстановитьКонтрольРежимаЗавершенияРаботыПользователей() Экспорт
	
	ТекущийРежим = Константы.РежимЗавершенияРаботыПользователей.Получить();
	
	Если РольДоступна("ПравоЗавершенияРаботыПользователей") или ПравоДоступа("Изменение", Метаданные.Константы.РежимЗавершенияРаботыПользователей) и ТекущийРежим <> Перечисления.РежимыЗавершенияРаботыПользователей.РазрешитьРаботу Тогда
		
		Если ТекущийРежим <> Перечисления.РежимыЗавершенияРаботыПользователей.РазрешитьРаботу Тогда
			Если ОбщегоНазначения.ЗначениеНеЗаполнено(ТекущийРежим) Тогда
				Сообщить("Режим завершения работы пользователей не установлен.", СтатусСообщения.Внимание);
			Иначе
				Сообщить("Установлен режим завершения работы пользователей """ + ТекущийРежим + """.", СтатусСообщения.Внимание);
			КонецЕсли; 
		КонецЕсли; 
		
	Иначе
		
		КонтрольРежимаЗавершенияРаботыПользователей();
		ПодключитьОбработчикОжидания("КонтрольРежимаЗавершенияРаботыПользователей", 60);
		
	КонецЕсли; 
	
	
КонецПроцедуры // () 

// обработка параметров запуска программы
Функция ОбработатьПараметрЗапуска() Экспорт
	
	// есть ли параметры запуска
	Если ПустаяСтрока(ПараметрЗапуска) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// различия в больших и маленьких буквах в параметрах нет
	ЗначениеПараметраЗапуска = Врег(ПроцедурыУправленияПерсоналом.РазложитьСтрокуВМассивПодстрок(ПараметрЗапуска,";")[0]);
	
	Если ЗначениеПараметраЗапуска = Врег("РазрешитьРаботуПользователей") Тогда
		
		Если Не ПравоДоступа("Изменение", Метаданные.Константы.РежимЗавершенияРаботыПользователей) Тогда
			Сообщить("Параметр запуска не отработан. Нет прав на изменение состояния завершения работы пользователей.", СтатусСообщения.Внимание);
			Возврат Ложь;
		КонецЕсли; 
		
		РазрешитьРаботу = Перечисления.РежимыЗавершенияРаботыПользователей.РазрешитьРаботу;
		
		Если Константы.РежимЗавершенияРаботыПользователей.Получить() <> РазрешитьРаботу Тогда
			Константы.РежимЗавершенияРаботыПользователей.Установить(РазрешитьРаботу);
		КонецЕсли;
		
		ЗаписьЖурналаРегистрации("ОбработкаПараметраЗапуска", УровеньЖурналаРегистрации.Информация, , , ПараметрЗапуска);
		
		ЗавершитьРаботуСистемы(Ложь);
		Возврат Истина;
		
	ИначеЕсли ЗначениеПараметраЗапуска = Врег("ЗавершитьРаботуПользователей") Тогда
		
		Если Не ПравоДоступа("Изменение", Метаданные.Константы.РежимЗавершенияРаботыПользователей) Тогда
			Сообщить("Параметр запуска не отработан. Нет прав на изменение состояния завершения работы пользователей.", СтатусСообщения.Внимание);
			Возврат Ложь;
		КонецЕсли; 
		
		ЗаписьЖурналаРегистрации("ОбработкаПараметраЗапуска", УровеньЖурналаРегистрации.Информация, , , ПараметрЗапуска);
		
		ЗавершитьРаботуПользователей();
		ПодключитьОбработчикОжидания("ЗавершитьРаботуПользователей", 180);
		Возврат Истина;
	Иначе
		Сообщить("Указан неверный параметр запуска: " + ПараметрЗапуска, СтатусСообщения.Внимание);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Процедура инициирует начало операции по завершению работы пользователей
//
Процедура НачатьЗавершениеРаботыПользователей() Экспорт

	ОтветНаВопрос = Вопрос("Начать процедуру завершения работы пользователей системы?
	                       |Пользователи завершат свою работу через 10 минут.", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	ЗавершитьРаботуПользователей();
	ПодключитьОбработчикОжидания("ЗавершитьРаботуПользователей", 180);

КонецПроцедуры


