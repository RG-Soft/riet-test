
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИК РЕГЛАМЕНТНОГО ЗАДАНИЯ

Процедура ОбработкаРегламентногоЗадания_КонтрольОшибокВЖурналеРегистрации() Экспорт
		
	НачалоКонтроля = Константы.НачалоКонтроляЖурналаРегистрации.Получить();
	Если НЕ ЗначениеЗаполнено(НачалоКонтроля) Тогда
		ВызватьИсключение "Не задано начало контроля журнала регистрации";
	КонецЕсли;
	
	ОкончанияКонтроля = ТекущаяДата();
	
	СтруктураПараметровПисьма = ПолучитьПараметрыПисьма(НачалоКонтроля, ОкончанияКонтроля);	
	Если СтруктураПараметровПисьма.КоличествоОшибок > 0
		ИЛИ СтруктураПараметровПисьма.КоличествоПредупреждений > 0 Тогда
		
		СистемнаяУчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗапись, СтруктураПараметровПисьма);

	КонецЕсли;
	
	Константы.НачалоКонтроляЖурналаРегистрации.Установить(ОкончанияКонтроля);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ОТЧЕТА

Функция ПолучитьПараметрыПисьма(Знач НачалоПериода, Знач ОкончаниеПериода) Экспорт
									
	СтруктураПараметровПисьма = Новый Структура;
	
	// Кому
	ПолучателиОтчета = Константы.АдресатыПолученияОтчетаПоЖурналуРегистрации.Получить();
	Если ПустаяСтрока(ПолучателиОтчета) Тогда
		ВызватьИсключение "Не указан ни один получатель отчета по ошибкам и предупреждениям журнала регистрации.";	
	КонецЕсли;	
	СтруктураПараметровПисьма.Вставить("Кому", ПолучателиОтчета);
	
	ПредставлениеИБ = ОбщегоНазначения.ПолучитьПредставлениеИнформационнойБазы();
	
	// Тема
	Тема = "Ошибки и предупреждения журнала регистрации базы " + ПредставлениеИБ;	
	СтруктураПараметровПисьма.Вставить("Тема", Тема);
	
	// Тело
	ТекстТелаПисьма = 
		"Информация по ошибкам и предупреждениям журнала регистрации.
		|Информационная база: " + ПредставлениеИБ + "
		|Период выборки данных: c " + НачалоПериода + " по " + ОкончаниеПериода;
	
	ТаблицаОшибокИПредупрежденийЖурналаРегистрации = ПолучитьТаблицуОшибокИПредупрежденийЖурналаРегистрации(НачалоПериода, ОкончаниеПериода);
				
	ТаблицаОшибокЖурналаРегистрации = ПолучитьТаблицуУровняЖурналаРегистрации(ТаблицаОшибокИПредупрежденийЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка);
	СтруктураПараметровПисьма.Вставить("КоличествоОшибок", ТаблицаОшибокЖурналаРегистрации.Количество());
	ТелоУровняОшибок = ПолучитьТелоУровня(ТаблицаОшибокЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка);
	ТекстТелаПисьма = ТекстТелаПисьма + "
		|
		|---------------------------------------
		|" + ТелоУровняОшибок;
	
	ТаблицаПредупрежденийЖурналаРегистрации = ПолучитьТаблицуУровняЖурналаРегистрации(ТаблицаОшибокИПредупрежденийЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение);
	СтруктураПараметровПисьма.Вставить("КоличествоПредупреждений", ТаблицаПредупрежденийЖурналаРегистрации.Количество());
	ТелоУровняПредупреждений = ПолучитьТелоУровня(ТаблицаПредупрежденийЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение);	
		
	ТекстТелаПисьма = ТекстТелаПисьма + "
		|
		|---------------------------------------
		|" + ТелоУровняПредупреждений;
				
	СтруктураПараметровПисьма.Вставить("Тело", ТекстТелаПисьма);
	
	Возврат СтруктураПараметровПисьма;
	
КонецФункции

Функция ПолучитьТаблицуОшибокИПредупрежденийЖурналаРегистрации(ДатаНачала, ДатаОкончания)
	
	// Функция получает информацию по ошибкам в журнале регистрации по переданному периоду
	// Параметры
	// НачалоПериода    - дата - начала периода, по которому будет собираться информация
	// ОкончаниеПериода - дата - окончание периода, по которому будет собираться информация
	//
	// Возвращаемое значение
	// таблица значений - записи из журнала регистрации в соответствии с фильтром:
	//                    УровеньЖурналаРегистрации - УровеньЖурналаРегистрации.Ошибка
	//                    Начало и Окончание периода - из параметров
		
	ФильтрЖурналаРегистрации = Новый Структура;
	
	ФильтрЖурналаРегистрации.Вставить("Уровень", Новый Массив);
	ФильтрЖурналаРегистрации.Уровень.Добавить(УровеньЖурналаРегистрации.Ошибка);
	ФильтрЖурналаРегистрации.Уровень.Добавить(УровеньЖурналаРегистрации.Предупреждение);
	
	ФильтрЖурналаРегистрации.Вставить("ДатаНачала", ДатаНачала);
	ФильтрЖурналаРегистрации.Вставить("ДатаОкончания", ДатаОкончания);
	
	ДанныеЖурналаРегистрации = Новый ТаблицаЗначений;
	ВыгрузитьЖурналРегистрации(ДанныеЖурналаРегистрации, ФильтрЖурналаРегистрации);
	
	Возврат ДанныеЖурналаРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуУровняЖурналаРегистрации(ТаблицаОшибокИПредупрежденийЖурналаРегистрации, Уровень)
	
	СтруктураПоискаПоУровню = Новый Структура("Уровень", Уровень);
	НайденныеСтроки = ТаблицаОшибокИПредупрежденийЖурналаРегистрации.НайтиСтроки(СтруктураПоискаПоУровню);
	Возврат ТаблицаОшибокИПредупрежденийЖурналаРегистрации.Скопировать(НайденныеСтроки);
		
КонецФункции

Функция ПолучитьТелоУровня(ТаблицаУровняЖурналаРегистрации, Уровень)
		
	ТелоУровня = "";
	Если Уровень = УровеньЖурналаРегистрации.Ошибка Тогда
		ТелоУровня = ТелоУровня + "ВСЕГО ОШИБОК:";
	ИначеЕсли Уровень = УровеньЖурналаРегистрации.Предупреждение Тогда
		ТелоУровня = ТелоУровня + "ВСЕГО ПРЕДУПРЕЖДЕНИЙ:";
	КонецЕсли;
	
	ТелоУровня = ТелоУровня + " " + ТаблицаУровняЖурналаРегистрации.Количество();
	
	ТаблицаСвернутыхДанных = ТаблицаУровняЖурналаРегистрации.Скопировать();
	ТаблицаСвернутыхДанных.Колонки.Добавить("Количество");
	ТаблицаСвернутыхДанных.ЗаполнитьЗначения(1, "Количество");
	ТаблицаСвернутыхДанных.Свернуть("Комментарий, ПредставлениеСобытия", "Количество");
	ТаблицаСвернутыхДанных.Сортировать("Количество Убыв");
	
	СтруктураПоиска = Новый Структура("Комментарий");
	Для Каждого СтрокаСвернутыхДанных Из ТаблицаСвернутыхДанных Цикл
		
		ТелоУровня = ТелоУровня + "
			|
			|" + СокрЛП("" + СтрокаСвернутыхДанных.Комментарий + "   " + СтрокаСвернутыхДанных.ПредставлениеСобытия + "   " + СтрокаСвернутыхДанных.Количество);
		
		СтруктураПоиска.Комментарий = СтрокаСвернутыхДанных.Комментарий;
		СтрокиУровняЖурналаРегистрации = ТаблицаУровняЖурналаРегистрации.НайтиСтроки(СтруктураПоиска);
		НомерСтроки = 1;
		Для Каждого СтрокаЖурналаРегистрации Из СтрокиУровняЖурналаРегистрации Цикл
			
			ТелоУровня = ТелоУровня + "
				|" + СокрЛП("" + СтрокаЖурналаРегистрации.Дата + "   " + СтрокаЖурналаРегистрации.ИмяПользователя + "   " + СтрокаЖурналаРегистрации.ПредставлениеПриложения + "   " + СтрокаЖурналаРегистрации.ПредставлениеМетаданных + "   " + СтрокаЖурналаРегистрации.ПредставлениеДанных);
				
			НомерСтроки = НомерСтроки + 1;
			Если НомерСтроки > 100 Тогда
				Прервать;
			КонецЕсли;
				
		КонецЦикла;
				
	КонецЦикла;
		
	Возврат ТелоУровня;
	
КонецФункции
