
Функция _ЗапроситьФайлыССервера(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр, HTTP = Неопределено)

	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;
	
	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
		HTTP = Новый HTTPСоединение(СерверИсточник)
	КонецЕсли; 
	
	Попытка
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Возврат Истина;
	Исключение
		//Сообщить("Соединение с сервером не установлено.");
	КонецПопытки;

КонецФункции

// Выделяет из переданной строки первое значение
 //  до символа "TAB"
 //
 // Параметры: 
 //  ИсходнаяСтрока - Строка - строка для разбора
 //
 // Возвращаемое значение:
 //  подстроку до символа "TAB"
 //
Функция _ВыделитьПодСтроку(ИсходнаяСтрока)

	Перем ПодСтрока;
	
    Поз = СтрНайти(ИсходнаяСтрока,Символы.Таб);
	Если Поз > 0 Тогда
		ПодСтрока = Лев(ИсходнаяСтрока,Поз-1);
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,Поз+1);
	Иначе
		ПодСтрока = ИсходнаяСтрока;
		ИсходнаяСтрока = "";
	КонецЕсли;
	
	Возврат ПодСтрока;
 
 КонецФункции // _ВыделитьПодСтроку()

Процедура _ЗагрузитьКурсыСРБК(НачДата, КонДата, СписокВалют)
	
	Перем HTTP;
	
	РегистрКурсыВалют = РегистрыСведений.КурсыВалют;
	ЗаписьКурсовВалют = РегистрКурсыВалют.СоздатьМенеджерЗаписи();

	Текст = Новый ТекстовыйДокумент();

	СерверИсточник = "cbrates.rbc.ru";
	ОбработкаПолученияФайлов = Обработки.ПолучениеФайловИзИнтернета.Создать();

	Адрес1 = "tsv/cb/";  // в интервале
	Адрес2 = "tsv/";     // по 1 дате
	Если НачДата = КонДата Тогда  // по 1 дате
		Адрес = Адрес2;
		ТМП   = "/"+Формат(Год(КонДата),"ЧРГ=; ЧГ=0")+"/"+Формат(Месяц(КонДата),"ЧЦ=2;ЧДЦ=0;ЧВН=")+"/"+Формат(День(КонДата),"ЧЦ=2;ЧДЦ=0;ЧВН=");
	Иначе    // в интервале
		Адрес = Адрес1;
		ТМП   = "";
	КонецЕсли;
	
	ИмяФайла = "Curses.txt"; 
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ПозицияСимвола = СтрНайти(СтрокаСоединения, "Ref=");
	ИмяБазы = Прав(СтрокаСоединения,СтрДлина(СтрокаСоединения)-ПозицияСимвола-4);
	ИмяБазы = Лев(ИмяБазы, СтрДлина(ИмяБазы)-2);
	
	ВремКаталог = КаталогВременныхФайлов() + ИмяБазы + "tempKurs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог,"*.*");
	
	Для каждого СтрокаСпВалют из СписокВалют Цикл
		ТекВалюта = СтрокаСпВалют.Значение;
		Стр = "";
		ИмяВходящегоФайла = "" + ВремКаталог + "\" + ИмяФайла;
		СтрокаПараметраПолучения = Адрес + Прав(ТекВалюта.Код,3) + ТМП + ".tsv";
		Если _ЗапроситьФайлыССервера(СерверИсточник, СтрокаПараметраПолучения, ИмяВходящегоФайла, HTTP) <> Истина Тогда
			//Сообщить("Не удалось получить ресурс для валюты " + СокрЛП(ТекВалюта.Наименование) + " (код " + ТекВалюта.Код + "). Курс для валюты не загружен."); 
			Продолжить;
		КонецЕсли; 

		ВходящийФайл = Новый Файл(ИмяВходящегоФайла);
		Если НЕ ВходящийФайл.Существует() Тогда
			//Сообщить("Не удалось получить ресурс для валюты " + СокрЛП(ТекВалюта.Наименование) + " (код " + ТекВалюта.Код + "). Курс для валюты не загружен."); 
			Продолжить;
		КонецЕсли;	

		Текст.Прочитать(ИмяВходящегоФайла,КодировкаТекста.ANSI);
		
		КолСтрок = Текст.КоличествоСтрок();
		Для Инд = 1 По КолСтрок Цикл
			НадписьВалютыФормы = СокрЛП(ТекВалюта.Наименование);

			ИндикаторФормы = Инд/КолСтрок * 100;
				
			Стр = Текст.ПолучитьСтроку(Инд);
			Если (Стр = "") ИЛИ (Найти(Стр,Символы.Таб) = 0) Тогда
			   Продолжить;
			КонецЕсли;
			Если НачДата = КонДата Тогда  
			   ДатаКурса = КонДата;
			Иначе 
			   ДатаКурсаСтр = _ВыделитьПодСтроку(Стр);
			   ДатаКурса    = Дата(Лев(ДатаКурсаСтр,4),Сред(ДатаКурсаСтр,5,2),Сред(ДатаКурсаСтр,7,2));
			КонецЕсли;
			Кратность = Число(_ВыделитьПодСтроку(Стр));
			Курс      = Число(_ВыделитьПодСтроку(Стр));

			Если ДатаКурса > КонДата Тогда
			   Прервать;
			КонецЕсли;

			Если ДатаКурса < НачДата Тогда 
			   Продолжить;
			КонецЕсли;

            ЗаписьКурсовВалют.Валюта = ТекВалюта;
			ЗаписьКурсовВалют.Период = ДатаКурса;
			ЗаписьКурсовВалют.Прочитать();
			ЗаписьКурсовВалют.Валюта    = ТекВалюта;
			ЗаписьКурсовВалют.Период    = ДатаКурса;
			ЗаписьКурсовВалют.Курс      = Курс;
			ЗаписьКурсовВалют.Кратность = Кратность;
			ЗаписьКурсовВалют.Записать();
		КонецЦикла;	   
	КонецЦикла;	
	УдалитьФайлы(ВремКаталог,"*.*");

КонецПроцедуры // _ЗагрузитьКурсыСРБК()

Процедура ЗагрузитьКурсы()

	//-> RG-Soft VIvanov 07/06/12
	Если Константы.ВалютаРегламентированногоУчета.Получить() <> Справочники.Валюты.НайтиПоКоду("398") Тогда
		НачДата = НачалоМесяца(ТекущаяДата()) - 3*3600*24; // - 3 дня - на всякий случай
		КонДата = КонецМесяца(ТекущаяДата());
	Иначе
		НачДата = НачалоДня(ТекущаяДата()) - 30*3600*24;
		КонДата = НачалоДня(ТекущаяДата());
	КонецЕсли;
	//<- RG-Soft
	Выборка = Справочники.Валюты.Выбрать();
	СписокВалют = новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		СписокВалют.Добавить(Выборка.Ссылка);
	КонецЦикла;	
	
	//-> RG-Soft VIvanov 07/06/12
	Если Константы.ВалютаРегламентированногоУчета.Получить() <> Справочники.Валюты.НайтиПоКоду("398") Тогда
		_ЗагрузитьКурсыСРБК(НачДата, КонДата, СписокВалют);
	Иначе
		_ЗагрузитьКурсыКазахстан(НачДата, КонДата, СписокВалют);
	КонецЕсли;
	//<- RG-Soft
	//-> RG-Soft VIvanov 26/01/2015
	//ЗагрузитьАктуальныйКурсММВБ();
	ЗагрузитьАктуальныйКурсММВБНовый();
	//<-

КонецПроцедуры

Процедура ЗагрузитьКурсыВалют() Экспорт
	//#Если Клиент Тогда
	//	ЗагрузкаКурсовВалют();
	//#Иначе
		ЗагрузитьКурсы();
	//#КонецЕсли
	
	Сообщить("Загрузка курсов валют завершена!");
КонецПроцедуры

// СДЕЛАТЬ УМНЕЕ!!!
Процедура УстановитьДатуЗапретаРедактирования() экспорт
	
	РегистрЗакрытиеПериодов = РегистрыСведений.ЗакрытиеПериодов;
	
	Запись = РегистрЗакрытиеПериодов.СоздатьМенеджерЗаписи();
	ТекДата = ТекущаяДата();
	Запись.ПериодДанных = НачалоМесяца(ТекДата - 3600*24*20)-1;
	Запись.Модуль = Перечисления.МодулиРазработки.Importation;
	Запись.ДатаЗакрытия = ТекДата;
	Запись.ДатаЗакрытияFiscal = ТекДата;
	Запись.Записать();
	
КонецПроцедуры

// ??? УДАЛИТЬ ???
Процедура РазослатьПисьмаБухгалтерамAR() Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 5
	              	|	Tickets.Дата КАК Дата,
	              	|	Tickets.Ссылка КАК Ticket,
	              	|	Tickets.Ответственный КАК Ответственный,
	              	|	Tickets.ИнвойсинговыйЦентр КАК ИнвойсинговыйЦентр
	              	|ИЗ
	              	|	Документ.Tickets КАК Tickets
	              	|ГДЕ
	              	|	Tickets.SiebelOrder = ЗНАЧЕНИЕ(Документ.SiebelOrders.ПустаяСсылка)
	              	|	И Tickets.Статус = ЗНАЧЕНИЕ(Перечисление.TicketsStatuses.Lawson)
	              	|	И Tickets.ПометкаУдаления = ЛОЖЬ
	              	|
	              	|УПОРЯДОЧИТЬ ПО
	              	|	ИнвойсинговыйЦентр,
	              	|	Ответственный,
	              	|	Дата";
	Выборка = Запрос.Выполнить().Выбрать();
	Профиль = Константы.увОсновнойПочтовыйПрофиль.Получить();
	Пока Выборка.Следующий() Цикл
		//SalesBook.ОтправитьПочтуSSLСервер(Профиль, "DTrefilenkov@moscow.oilfield.slb.com", "Не привязан тикет " + Выборка.Ticket.Номер, Выборка.Ticket);			
	КонецЦикла; 

КонецПроцедуры


//РгСофт Карагебакян Д.Г.
Процедура _ПрикреплениеФайлов() Экспорт
	
	ТомХранения = Константы.ТомХраненияПрисоединенныхФайловСчетовКнигиПокупок.Получить();
	КатологТома = ТомХранения.ПолныйПутьWindows;   //Добавить поддержку Lin 
	Список = ПрисоединенныеФайлыСКП.ПрочитатьКаталог(КатологТома); 
	
	для каждого стр из Список цикл
		Если ЗначениеЗаполнено(Стр.СКП) Тогда 		
			ПрикрепитьФайл(стр,ТомХранения)
		КонецЕсли;			
	КонецЦикла;
	
КонецПроцедуры           

Процедура ПрикрепитьФайл(Структура,ТомХранения)
	Документ = Структура.СКП;
	ИмяФайла = Структура.ИмяФайла;
	Если НетТакогоФайлаСКП(ИмяФайла,Документ, ТомХранения) тогда 
		ПрисоединяемыйФайл = Новый Файл(ИмяФайла);
		ДобавитьФайл(	Документ
						,ПрисоединяемыйФайл.ИмяБезРасширения
						,ПрисоединяемыйФайл.Расширение
						,ПрисоединяемыйФайл.ПолучитьВремяИзменения()
						,ПрисоединяемыйФайл.ПолучитьУниверсальноеВремяИзменения()
						,1
						,
						,ИмяФайла
						,
						,ТомХранения
						,ИмяФайла
						,ПрисоединяемыйФайл.Размер());
	КонецЕсли;
КонецПроцедуры
	
Функция НетТакогоФайлаСКП(ПрисоединяемыйФайл,Документ, Том)
	
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	| ПрисоединенныйФайл.Том,
	| ПрисоединенныйФайл.ПутьКФайлу
	|ИЗ
	| Справочник.СчетКнигиПокупокПрисоединенныеФайлы КАК ПрисоединенныйФайл
	|ГДЕ
	| ПрисоединенныйФайл.ПутьКФайлу ПОДОБНО &ПутьКФайлу";
	ЗаписьЖурналаРегистрации("Отладка",,,,СтрЗаменить(ПрисоединяемыйФайл,Том.ПолныйПутьWindows,""),);
	Запрос.УстановитьПараметр("ПутьКФайлу",СтрЗаменить(ПрисоединяемыйФайл,Том.ПолныйПутьWindows,""));
	Результат = Запрос.Выполнить();
	Возврат Результат.Пустой(); 
	
КонецФункции

Функция ДобавитьФайл(
			ВладелецФайла,
			ИмяБезРасширения,
			РасширениеБезТочки,
			ВремяИзменения,
			ВремяИзмененияУниверсальное,
			АдресФайлаВоВременномХранилище,
			АдресВременногоХранилищаТекста = "",
			АдресФайлаНаТоме,
			Суффикс = "",
			ТомХранения,
			ПолноеИмяФайла,
			Размер = Неопределено) Экспорт
	
	ИмяОбъекта = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВладелецФайла.Метаданные().ПолноеИмя(), ".")[1];
	ПолноеИмяСправочника = ИмяОбъекта+"ПрисоединенныеФайлы";
	СсылкаНового = Справочники[ПолноеИмяСправочника].ПолучитьСсылку();
	ПрисоединенныйФайл = Справочники[ПолноеИмяСправочника].СоздатьЭлемент();
	ПрисоединенныйФайл.УстановитьСсылкуНового(СсылкаНового);
	
	ПрисоединенныйФайл.ВладелецФайла			= ВладелецФайла;
	ПрисоединенныйФайл.ПутьКФайлу 		= СтрЗаменить(ПолноеИмяФайла,ТомХранения.ПолныйПутьWindows,"");  //Добавить поддержку Lin
	ПрисоединенныйФайл.Том 				= ТомХранения;
	ПрисоединенныйФайл.ДатаМодификацииУниверсальная = ВремяИзмененияУниверсальное;
	ПрисоединенныйФайл.ДатаСоздания		= ТекущаяДатаСеанса();
	ПрисоединенныйФайл.Описание			= "";
	ПрисоединенныйФайл.ПодписанЭП		= Ложь;
	// Изменил РГ-Софт - Иванов Антон - для автоматического присоединения файла при загрузке
	ПрисоединенныйФайл.Наименование		= ИмяБезРасширения + ?(Суффикс = "", "", "-" + Суффикс);
	ПрисоединенныйФайл.Расширение		= РасширениеБезТочки;
	ПрисоединенныйФайл.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВТомахНаДиске;
	
	Если Размер = Неопределено Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
		ПрисоединенныйФайл.Размер = ДвоичныеДанные.Размер();
	Иначе
		ПрисоединенныйФайл.Размер = Размер;
	КонецЕсли; 
	ПрисоединенныйФайл.Записать();
	
	
	
	Возврат ПрисоединенныйФайл.Ссылка;
	
КонецФункции
//РгСофт Карагебакян Д.Г.

//-> RG-Soft VIvanov 07/06/12
Процедура _ЗагрузитьКурсыКазахстан(НачДата, КонДата, СписокВалют)
	
	Перем HTTP;
	
	РегистрКурсыВалют = РегистрыСведений.КурсыВалют;
	ЗаписьКурсовВалют = РегистрКурсыВалют.СоздатьМенеджерЗаписи();

	Текст = Новый ТекстовыйДокумент();

	СерверИсточник = "www.nationalbank.kz";
	//ОбработкаПолученияФайлов = Обработки.ПолучениеФайловИзИнтернета.Создать();

	ИмяФайла = "Curses.xml"; 
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ПозицияСимвола = СтрНайти(СтрокаСоединения, "Ref=");
	ИмяБазы = Прав(СтрокаСоединения,СтрДлина(СтрокаСоединения)-ПозицияСимвола-4);
	ИмяБазы = Лев(ИмяБазы, СтрДлина(ИмяБазы)-2);
	
	ВремКаталог = КаталогВременныхФайлов() + ИмяБазы + "tempKurs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог,"*.*");
	
	ИмяВходящегоФайла = "" + ВремКаталог + "\" + ИмяФайла;
	ТекДата = НачДата;
	Чтение = Новый ЧтениеXML;
	ПостроительDOM = Новый ПостроительDOM;
	Пока ТекДата <= КонДата Цикл
		СтрокаДаты = Формат(ТекДата, "ДФ = дд.ММ.гггг");
		СтрокаПараметраПолучения = "/rss/get_rates.cfm?fdate=" + СтрокаДаты;
		Если _ЗапроситьФайлыССервера(СерверИсточник, СтрокаПараметраПолучения, ИмяВходящегоФайла, HTTP) <> Истина Тогда
			//Сообщить("Не удалось получить ресурс для валюты " + СокрЛП(ТекВалюта.Наименование) + " (код " + ТекВалюта.Код + "). Курс для валюты не загружен."); 
			текДата = текДата + 3600*24;
			Продолжить;
		КонецЕсли; 

		ВходящийФайл = Новый Файл(ИмяВходящегоФайла);
		Если НЕ ВходящийФайл.Существует() Тогда
			//Сообщить("Не удалось получить ресурс для валюты " + СокрЛП(ТекВалюта.Наименование) + " (код " + ТекВалюта.Код + "). Курс для валюты не загружен."); 
			текДата = текДата + 3600*24;
			Продолжить;
		КонецЕсли;	
		ТаблицаКурсов = Новый ТаблицаЗначений;
		ТаблицаКурсов.Колонки.Добавить("ПолноеНаименование");
		ТаблицаКурсов.Колонки.Добавить("Код");
        ТаблицаКурсов.Колонки.Добавить("Курс");
        ТаблицаКурсов.Колонки.Добавить("Кратность");
        Чтение.ОткрытьФайл(ИмяВходящегоФайла);
		ДокументDOM = ПостроительDOM.Прочитать(Чтение);
		ЭлементыITEM = ДокументDOM.ПолучитьЭлементыПоИмени("item");
		Для Каждого текЭлемент Из ЭлементыITEM Цикл
			ДочерниеУзлы = текЭлемент.ДочерниеУзлы;
			НоваяСтрока = ТаблицаКурсов.Добавить();
			Для Каждого Узел Из ДочерниеУзлы Цикл
				Если Узел.ИмяУзла = "fullname" Тогда
					НоваяСтрока.ПолноеНаименование = Узел.ТекстовоеСодержимое;
				ИначеЕсли Узел.ИмяУзла = "title" Тогда
					НоваяСтрока.Код = Узел.ТекстовоеСодержимое;
				ИначеЕСли Узел.ИмяУзла = "description" Тогда
					НоваяСтрока.Курс = Узел.ТекстовоеСодержимое;
				ИначеЕсли Узел.ИмяУзла = "quant" Тогда
					НоваяСтрока.Кратность = Узел.ТекстовоеСодержимое;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Для Каждого текВалюта Из СписокВалют Цикл
			текКурс = ТаблицаКурсов.Найти(текВалюта.Значение.Наименование, "Код");
			Если ЗначениеЗаполнено(текКурс) Тогда
				ЗаписьКурсовВалют.Валюта = ТекВалюта.Значение;
				ЗаписьКурсовВалют.Период = текДата;
				ЗаписьКурсовВалют.Прочитать();
				ЗаписьКурсовВалют.Валюта    = ТекВалюта.Значение;
				ЗаписьКурсовВалют.Период    = текДата;
				ЗаписьКурсовВалют.Курс      = текКурс.Курс;
				ЗаписьКурсовВалют.Кратность = текКурс.Кратность;
				ЗаписьКурсовВалют.Записать();
			КонецЕсли;
		КонецЦикла;
		текДата = текДата + 3600*24;
		Чтение.Закрыть();
	КонецЦикла;
	УдалитьФайлы(ВремКаталог,"*.*");

КонецПроцедуры // _ЗагрузитьКурсыСРБК()

Функция ПрочитатьКаталог(Путь)
	// Создание таблицы значений 
	СписокФайлов = Новый ТаблицаЗначений;
	// добавим в таблицу значений 2 колонки
	СписокФайлов.Колонки.Добавить("ИмяФайла");
	СписокФайлов.Колонки.Добавить("Документ"); 

	НайденныеФайлы = НайтиФайлы(Путь, "*.*"); 
	Для каждого НайденныйФайл Из НайденныеФайлы Цикл 
		Если НайденныйФайл.ЭтоКаталог() Тогда 
			// Ищем все файлы в найденном каталоге 
			СписокДоп = ПрочитатьКаталог(НайденныйФайл.ПолноеИмя); 
			Для каждого стр из СписокДоп цикл
				СтрФ = СписокФайлов.Добавить();
				СтрФ.ИмяФайла = стр.ИмяФайла;
				СтрФ.Документ = Стр.Документ; 
			КонецЦикла;
		Иначе 
			// Это файл, выведем его полное имя 
			Строка = СписокФайлов.Добавить();
			Строка.ИмяФайла = НайденныйФайл;
			Строка.Документ = УстановитьСоответсвие(НайденныйФайл.ИмяБезРасширения); 
				
		КонецЕсли; 
	КонецЦикла;
	Возврат СписокФайлов;
КонецФункции

Функция УстановитьСоответсвие(ИмяФайла)
	НомерСимовлаРазделителя = СтрНайти(ИмяФайла,"_");
	СтрокаЛев = Лев(ИмяФайла,НомерСимовлаРазделителя-1);
	СтрокаПРав = ?(СтрДлина(ИмяФайла) = НомерСимовлаРазделителя,"",Прав(ИмяФайла,НомерСимовлаРазделителя-2));
	
	Если не (СтрокаПРав = "" и СтрокаЛев = "") тогда 
		Запрос = новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКнигиПокупок.Ссылка
		|ИЗ
		|	Документ.СчетКнигиПокупок КАК СчетКнигиПокупок
		|ГДЕ
		//|	СчетКнигиПокупок.ReferenceПроводки = &ReferenceПроводки   //изменила Наталья Петроченко 05.10.2012
		|	СчетКнигиПокупок.ПроводкаDSS.Reference = &ReferenceПроводки
		|	И СчетКнигиПокупок.ПроводкаDSS.TransNbr = &TransNbr";
		Запрос.УстановитьПараметр("ReferenceПроводки",СтрокаЛев);
		Запрос.УстановитьПараметр("TransNbr",СтрокаПРав);
		Рез = Запрос.Выполнить().Выбрать();
		если рез.Следующий() тогда 
			Возврат Рез.Ссылка;
		КонецЕсли;
	КонецЕсли;
	Возврат Документы.СчетКнигиПокупок.ПустаяСсылка();
КонецФункции
//<- RG-Soft

//-> RG-Soft VIvanov 26/01/2015
Процедура ЗагрузитьАктуальныйКурсММВБ() Экспорт
	
	текДата = НачалоМесяца(ТекущаяДата()) - 3*3600*24;
	Валюта = Справочники.Валюты.НайтиПоКоду("000");
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		objIE = Новый COMОбъект("InternetExplorer.Application");
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки()); 
		Возврат;
	КонецПопытки;	
	objIE.Visible = Ложь;
	objIE.Silent = Ложь;
	
	НомерПопытки = 0;
	Пока текДата < НачалоДня(ТекущаяДата()) Цикл
		НомерПопытки = НомерПопытки + 1;
		ФорматДаты = Формат(текДата, "Дф = гггг-ММ-дд");
		objIE.Navigate2("http://www.micex.ru/marketdata/quotes?trade_engine=currency&market=selt&data_type=history&date=" + ФорматДаты + "&date_from=" + ФорматДаты + "&board_group_id=13&group_id=9&collection_id=173&type_of_info=short"); 
		Текст = Неопределено;
		
		Попытка
			НачалоЗагрузки = ТекущаяДата();
			Пока objIE.readyState < 4 Цикл // Ждем пока она загрузится 
				Если ТекущаяДата() > НачалоЗагрузки + 300 Тогда
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось загрузить страницу");
					Возврат;
				КонецЕсли;
			КонецЦикла;
			НачалоЗагрузки = ТекущаяДата();
			Инд = 1;
			Пока ТекущаяДата() < НачалоЗагрузки + 15 Цикл
				инд = инд + 1;
			КонецЦикла;
			objDoc = objIE.Document;
			ГотовностьДокумента = "";
			Попытка
				ГотовностьДокумента = objDoc.readyState;
			Исключение
			КонецПопытки;
			Если ГотовностьДокумента <> "complete" Тогда
				Инд = 1;
				Пока инд < 100000 Цикл
					инд = инд + 1;
				КонецЦикла;
			КонецЕсли;
			Текст =  objDoc.Body.InnerHTML;
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
		Если Текст <> Неопределено Тогда
			Текст = нРег(Текст);
			Номер = СтрНайти(Текст, ">информация о торгах<");
			Если Номер = 0 Тогда
				//Если СтрНайти(Текст, "для построения графика не хватает данных") = 0 Тогда
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не найден средневзвешенный курс доллара за " + ФорматДаты + "! Ошибка разбора данных с сайта");
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , Текст);
					текДата = текДата + 24*3600;
					инд = инд + 1;
					НомерПопытки = 0;
					Продолжить;
				//Иначе
				//	ДатаКурсаСтрокой = "31-12-3999";
				//	КурсСтрокой = "";
				//КонецЕсли;
			Иначе
				Текст = Сред(Текст, Номер + 21);
				Номер = СтрНайти(Текст, "instrument-info-date"">");
				Текст = Сред(Текст, Номер + 22);
				Если Лев(Текст, 5) = "ument" Тогда
					Текст = Сред(Текст, 17);
				КонецЕсли;
				ДатаКурсаСтрокой = Лев(Текст, 10);
				КурсСтрокой = "";
			КонецЕсли;
			Попытка
				ДатаКурса = Дата(Прав(ДатаКурсаСтрокой, 4) + Сред(ДатаКурсаСтрокой, 4, 2) + Лев(ДатаКурсаСтрокой, 2) + "000000");
				Если ДатаКурса > текДата Тогда
					ЗаписьКурса = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(текДата, Новый Структура("Валюта", Валюта));
					Курс = ЗаписьКурса.Курс;
				Иначе
					Номер = СтрНайти(Текст, "средневзвешенный курс, единиц сопряж. валюты/единицу валюты лота");
					Если Номер = 0 Тогда
						ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не найден средневзвешенный курс за " + ФорматДаты + "!");
						текДата = текДата + 24*3600;
						НомерПопытки = 0;
						Продолжить;
					КонецЕсли; 
					Текст = Сред(Текст, Номер + 64);
					Номер = СтрНайти(Текст, "table-info-cell");
					Текст = Сред(Текст, Номер + 15);
					Номер1 = СтрНайти(Текст, ">");
					Номер2 = СтрНайти(Текст, "<");
					КурсСтрокой = Сред(Текст, Номер1 + 1, Номер2 - Номер1 - 1);
					Курс = Число(КурсСтрокой);
				КонецЕсли;
			Исключение
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка загрузки средневзвешенного курса за " + ФорматДаты + ". " + ОписаниеОшибки() + " Дата курса с сайта - " + ДатаКурсаСтрокой + "; Курс строкой - " + КурсСтрокой);
				текДата = текДата + 24*3600;
				НомерПопытки = 0;
				Продолжить;
			КонецПопытки;
			ЗаписьКурсовВалют = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
			ЗаписьКурсовВалют.Валюта    = Валюта;
			ЗаписьКурсовВалют.Период    = текДата;
			ЗаписьКурсовВалют.Прочитать();
			ЗаписьКурсовВалют.Валюта    = Валюта;
			ЗаписьКурсовВалют.Период    = текДата;
			ЗаписьКурсовВалют.Курс      = Курс;
			ЗаписьКурсовВалют.Кратность = 1;
			ЗаписьКурсовВалют.Записать();
		Иначе
			Если НомерПопытки < 4 Тогда
				objIE.Quit();
				objIE = Неопределено;
				Попытка
					objIE = Новый COMОбъект("InternetExplorer.Application");
				Исключение
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки()); 
					Возврат;
				КонецПопытки;	
				objIE.Visible = Ложь;
				objIE.Silent = Ложь;
				Продолжить;
			Иначе
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка загрузки средневзвешенного курса за " + ФорматДаты + ". " + ОписаниеОшибки);
			КонецЕсли;
		КонецЕсли;
		текДата = текДата + 24*3600;
		НомерПопытки = 0;
	КонецЦикла;
	
	objIE.Quit();
	objIE = Неопределено;	
	
КонецПроцедуры
//<- RG-Soft

//-> RG-Soft VIvanov 16/05/2016
Процедура ЗагрузитьАктуальныйКурсММВБНовый() Экспорт
		
	текДата = НачалоМесяца(ТекущаяДата()) - 3*3600*24;
	Валюта = Справочники.Валюты.НайтиПоКоду("000");
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		objIE = Новый COMОбъект("InternetExplorer.Application");
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки()); 
		Возврат;
	КонецПопытки;	
	objIE.Visible = Ложь;
	objIE.Silent = Ложь;
	
	НомерПопытки = 0;
	ПродолжатьПопытки = Истина;
	ОписаниеОшибки = "";
	Пока ПродолжатьПопытки Цикл
		НомерПопытки = НомерПопытки + 1;
		Текст = Неопределено;
		objIE.Navigate2("http://moex.com/ru/issue/USD000000TOD/CETS"); 
		Попытка
			НачалоЗагрузки = ТекущаяДата();
			Пока objIE.readyState < 4 Цикл // Ждем пока она загрузится
				Если ТекущаяДата() > НачалоЗагрузки + 300 Тогда
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось загрузить страницу");
					Возврат;
				КонецЕсли;
			КонецЦикла;
			НачалоЗагрузки = ТекущаяДата();
			инд = 1;
			Пока ТекущаяДата() < НачалоЗагрузки + 15 Цикл
				инд = инд + 1;
			КонецЦикла;
			objDoc = objIE.Document;
			ГотовностьДокумента = "";
			Попытка
				ГотовностьДокумента = objDoc.readyState;
			Исключение
			КонецПопытки;
			Если ГотовностьДокумента <> "complete" Тогда
				Инд = 1;
				Пока инд < 100000 Цикл
					инд = инд + 1;
				КонецЦикла;
			КонецЕсли;
			Текст =  objDoc.Body.InnerHTML;
			ПродолжатьПопытки = Ложь;
		Исключение
			Если НомерПопытки < 4 Тогда
				objIE.Quit();
				objIE = Неопределено;
				Попытка
					objIE = Новый COMОбъект("InternetExplorer.Application");
				Исключение
					ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки()); 
					Возврат;
				КонецПопытки;	
				objIE.Visible = Ложь;
				objIE.Silent = Ложь;
			Иначе
				ОписаниеОшибки = ОписаниеОшибки();
				ПродолжатьПопытки = Ложь;
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	Если Текст = Неопределено Тогда
		ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка загрузки средневзвешенного курса доллара. Ошибка загрузки сайта. " + ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	НомерПопытки = 0;
	текМесяц = НачалоМесяца(ТекущаяДата());
	
	//-> RG-Soft VIvanov 2016/10/04
	КорректировкаМесяцев = 0;
	Попытка
		ТекЭлементы = objIE.Document.getElementsByTagName("INPUT");
		Для инд2= 1 По ТекЭлементы.Length Цикл
			Если ТекЭлементы.Item(инд2 - 1).id = "trading_volumes_date" Тогда
				МесяцСтрокой = ТекЭлементы.Item(инд2 - 1).Value;
				ВыбранныйМесяц = Число(Сред(МесяцСтрокой, 4, 2));
				ВыбранныйГод = Число(Сред(МесяцСтрокой, 7, 4));
				КорректировкаМесяцев = (Год(текМесяц) - ВыбранныйГод) * 12 + Месяц(текМесяц) - ВыбранныйМесяц;
			КонецЕсли;
		КонецЦикла;
	Исключение
	КонецПопытки;
	Если КорректировкаМесяцев <> 0 Тогда
		Попытка
			//-> RG-Soft VIvanov 2017/10/11
			//objIE.Document.getElementsByTagName("IMG").Item(17).Click();
			ТекЭлементы = objIE.Document.getElementsByTagName("IMG");
			Для инд2= 1 По ТекЭлементы.Length Цикл
				Если ТекЭлементы.Item(инд2 - 1).className = "ui-datepicker-trigger" Тогда
					ТекЭлементы.Item(инд2 - 1).Click();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			//<- RG-Soft VIvanov 2017/10/11
			НачалоДоЗагрузки = ТекущаяДата();
			инд1 = 1;
			Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
				инд1 = инд1 + 1;
			КонецЦикла;
			Если КорректировкаМесяцев < 0 Тогда
				Для Месяцев = 1 По - КорректировкаМесяцев Цикл
					ТекЭлементы = objIE.Document.getElementsByTagName("SPAN");
					Для инд2= 1 По ТекЭлементы.Length Цикл
						Если ТекЭлементы.Item(инд2 - 1).OuterHTML = "<span class=""ui-icon ui-icon-circle-triangle-w"">&lt;Пред</span>" 
							Или ТекЭлементы.Item(инд2 - 1).OuterHTML = "<SPAN class=""ui-icon ui-icon-circle-triangle-w"">&lt;Пред</SPAN>" Тогда
							ТекЭлементы.Item(инд2 - 1).Click();
							инд1 = 1;
							Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
								инд1 = инд1 + 1;
							КонецЦикла;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			Иначе
				Для Месяцев = 1 По КорректировкаМесяцев Цикл
					ТекЭлементы = objIE.Document.getElementsByTagName("SPAN");
					Для инд2= 1 По ТекЭлементы.Length Цикл
						Если ТекЭлементы.Item(инд2 - 1).OuterHTML = "<span class=""ui-icon ui-icon-circle-triangle-e"">След&gt;</span>" 
							Или ТекЭлементы.Item(инд2 - 1).OuterHTML = "<SPAN class=""ui-icon ui-icon-circle-triangle-e"">След&gt;</SPAN>" Тогда
							ТекЭлементы.Item(инд2 - 1).Click();
							НачалоДоЗагрузки = ТекущаяДата();
							инд1 = 1;
							Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
								инд1 = инд1 + 1;
							КонецЦикла;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			текДень = Строка(День(ТекущаяДата()));
			ТекЭлементы = objIE.Document.getElementsByTagName("A");
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить("<a class=""ui-state-default"" href=""#"">" + текДень + "</a>");
			МассивСтрок.Добавить("<A class=ui-state-default href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-active"" href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-highlight"" href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-highlight ui-state-hover"" href=""#"">" + текДень + "</A>");
			Для инд2 = 1 По ТекЭлементы.Length Цикл
				Если МассивСтрок.Найти(ТекЭлементы.Item(инд2 - 1).OuterHTML) <> Неопределено Тогда
					ТекЭлементы.Item(инд2 - 1).Click();
					НачалоДоЗагрузки = ТекущаяДата();
					инд1 = 1;
					Пока ТекущаяДата() < НачалоДоЗагрузки + 15 Цикл
						инд1 = инд1 + 1;
					КонецЦикла;
					ГотовностьДокумента = Неопределено;
					Попытка
						ГотовностьДокумента = objDoc.readyState;
					Исключение
					КонецПопытки;
					Если ГотовностьДокумента <> "complete" Тогда
						НачалоДоЗагрузки = ТекущаяДата();
						инд1 = 1;
						Пока ТекущаяДата() < НачалоДоЗагрузки + 15 Цикл
							инд1 = инд1 + 1;
						КонецЦикла;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
	КонецЕсли;
	//<- RG-Soft VIvanov 2016/10/04
			
	Пока текДата < НачалоДня(ТекущаяДата()) Цикл
		НомерПопытки = НомерПопытки + 1;
		ФорматДаты = Формат(текДата, "Дф = гггг-ММ-дд");
		Текст = Неопределено;
		
		Попытка
			//-> RG-Soft VIvanov 2017/10/11
			//objIE.Document.getElementsByTagName("IMG").Item(17).Click();
			ТекЭлементы = objIE.Document.getElementsByTagName("IMG");
			Для инд2= 1 По ТекЭлементы.Length Цикл
				Если ТекЭлементы.Item(инд2 - 1).className = "ui-datepicker-trigger" Тогда
					ТекЭлементы.Item(инд2 - 1).Click();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			//<- RG-Soft VIvanov 2017/10/11
			НачалоДоЗагрузки = ТекущаяДата();
			инд = 1;
			Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
				инд = инд + 1;
			КонецЦикла;
			Если НачалоМесяца(текДата) <> текМесяц Тогда
				Если НачалоМесяца(текДата) < текМесяц Тогда
					МесяцевНазад = (Год(текМесяц) - Год(текДата)) * 12 + Месяц(текМесяц) - Месяц(текДата);
					Для Месяцев = 1 По МесяцевНазад Цикл
						ТекЭлементы = objIE.Document.getElementsByTagName("SPAN");
						Для инд2= 1 По ТекЭлементы.Length Цикл
							Если ТекЭлементы.Item(инд2 - 1).OuterHTML = "<span class=""ui-icon ui-icon-circle-triangle-w"">&lt;Пред</span>" 
								Или ТекЭлементы.Item(инд2 - 1).OuterHTML = "<SPAN class=""ui-icon ui-icon-circle-triangle-w"">&lt;Пред</SPAN>" Тогда
								ТекЭлементы.Item(инд2 - 1).Click();
								НачалоДоЗагрузки = ТекущаяДата();
								инд = 1;
								Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
									инд = инд + 1;
								КонецЦикла;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				Иначе
					МесяцевВперед = (Год(текДата) - Год(текМесяц)) * 12 + Месяц(текДата) - Месяц(текМесяц);
					Для Месяцев = 1 По МесяцевВперед Цикл
						ТекЭлементы = objIE.Document.getElementsByTagName("SPAN");
						Для инд2= 1 По ТекЭлементы.Length Цикл
							Если ТекЭлементы.Item(инд2 - 1).OuterHTML = "<span class=""ui-icon ui-icon-circle-triangle-e"">След&gt;</span>" 
								Или ТекЭлементы.Item(инд2 - 1).OuterHTML = "<SPAN class=""ui-icon ui-icon-circle-triangle-e"">След&gt;</SPAN>" Тогда
								ТекЭлементы.Item(инд2 - 1).Click();
								НачалоДоЗагрузки = ТекущаяДата();
								инд = 1;
								Пока ТекущаяДата() < НачалоДоЗагрузки + 10 Цикл
									инд = инд + 1;
								КонецЦикла;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				текМесяц = НачалоМесяца(текДата);
			КонецЕсли;
			текДень = Строка(День(текДата));
			ТекЭлементы = objIE.Document.getElementsByTagName("A");
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить("<a class=""ui-state-default"" href=""#"">" + текДень + "</a>");
			МассивСтрок.Добавить("<A class=ui-state-default href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-active"" href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-highlight"" href=""#"">" + текДень + "</A>");
			МассивСтрок.Добавить("<A class=""ui-state-default ui-state-highlight ui-state-hover"" href=""#"">" + текДень + "</A>");
			Для инд2 = 1 По ТекЭлементы.Length Цикл
				Если МассивСтрок.Найти(ТекЭлементы.Item(инд2 - 1).OuterHTML) <> Неопределено Тогда
					ТекЭлементы.Item(инд2 - 1).Click();
					НачалоДоЗагрузки = ТекущаяДата();
					инд = 1;
					Пока ТекущаяДата() < НачалоДоЗагрузки + 15 Цикл
						инд = инд + 1;
					КонецЦикла;
					ГотовностьДокумента = Неопределено;
					Попытка
						ГотовностьДокумента = objDoc.readyState;
					Исключение
					КонецПопытки;
					Если ГотовностьДокумента <> "complete" Тогда
						НачалоДоЗагрузки = ТекущаяДата();
						инд = 1;
						Пока ТекущаяДата() < НачалоДоЗагрузки + 15 Цикл
							инд = инд + 1;
						КонецЦикла;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Текст =  objDoc.Body.InnerHTML;
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		
		ЭтоIE8 = Ложь;
		Если Текст <> Неопределено Тогда
			НетТоргов = Ложь;
			Текст = нРег(Текст);
			Номер = Найти(Текст, "<div class=""issue_export");
			Если Номер = 0 Тогда
				Номер = Найти(Текст, "<div class=issue_export");
				ЭтоIE8 = Истина;
			КонецЕсли;
			КурсСтрокой = "";
			Если Номер = 0 Тогда
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не найден средневзвешенный курс доллара за " + ФорматДаты + "! Ошибка разбора данных с сайта");
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , Текст);
				текДата = текДата + 24*3600;
				НомерПопытки = 0;
				Продолжить;
			Иначе
				ТекстНетТоргов = Сред(Текст, Номер, 57);
				Если ТекстНетТоргов = "<div class=""issue_export ng-hide"" data-ng-show=""hasdata"">" Тогда
					НетТоргов = Истина;
				КонецЕсли;
			КонецЕсли;
			Попытка
				Если НетТоргов Тогда
					ЗаписьКурса = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(текДата, Новый Структура("Валюта", Валюта));
					Курс = ЗаписьКурса.Курс;
				Иначе
					Номер = Найти(Текст, "средневзвешенный курс");
					Если Номер = 0 Тогда
						ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Не найден средневзвешенный курс доллара за " + ФорматДаты + "!");
						текДата = текДата + 24*3600;
						НомерПопытки = 0;
						Продолжить;
					Иначе
						Если ЭтоIE8 Тогда
							Текст = Сред(Текст, Номер + 28, 100);
						Иначе
							Текст = Сред(Текст, Номер + 100, 100);
						КонецЕсли;
						Номер = Найти(Текст, "data-title-text="" "">");
						КурсСтрокой = Лев(СокрЛП(Сред(Текст, Номер + 20, 50)), 7);
					КонецЕсли;
					Если Лев(КурсСтрокой, 1) = "-" Тогда
						ЗаписьКурса = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(текДата, Новый Структура("Валюта", Валюта));
						Курс = ЗаписьКурса.Курс;
					Иначе
						Курс = Число(КурсСтрокой);
					Конецесли;
				КонецЕсли;
			Исключение
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка загрузки средневзвешенного курса доллара за " + ФорматДаты + ". " + ОписаниеОшибки() + ". Курс строкой - " + КурсСтрокой);
				текДата = текДата + 24*3600;
				НомерПопытки = 0;
				Продолжить;
			КонецПопытки;
			ЗаписьКурсовВалют = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
			ЗаписьКурсовВалют.Валюта    = Валюта;
			ЗаписьКурсовВалют.Период    = текДата;
			ЗаписьКурсовВалют.Прочитать();
			ЗаписьКурсовВалют.Валюта    = Валюта;
			ЗаписьКурсовВалют.Период    = текДата;
			ЗаписьКурсовВалют.Курс      = Курс;
			ЗаписьКурсовВалют.Кратность = 1;
			ЗаписьКурсовВалют.Записать();
		Иначе
			Если НомерПопытки < 4 Тогда
				objIE.Quit();
				objIE = Неопределено;
				Попытка
					objIE = Новый COMОбъект("InternetExplorer.Application");
				Исключение
					Сообщить(ОписаниеОшибки()); 
					Возврат;
				КонецПопытки;	
				objIE.Visible = Ложь;
				objIE.Silent = Ложь;
				Продолжить;
			Иначе
				ЗаписьЖурналаРегистрации("Ошибка загрузки курса ММВБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка загрузки средневзвешенного курса доллара за " + ФорматДаты + ". " + ОписаниеОшибки);
			КонецЕсли;
		КонецЕсли;
		текДата = текДата + 24*3600;
		НомерПопытки = 0;
	КонецЦикла;
	
	objIE.Quit();
	objIE = Неопределено;	
	
КонецПроцедуры
//<- RG-Soft
