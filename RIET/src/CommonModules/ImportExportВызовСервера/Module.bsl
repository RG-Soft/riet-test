
///////////////////////////////////////////////////////////////////////////////
// ОБЩЕЕ ДЛЯ ВСЕХ ПОДСИСТЕМ

Функция ПолучитьДанныеCustomsFilesДляShipment(Shipment) Экспорт
	
	МассивСтруктур = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(Shipment) Тогда
		Возврат МассивСтруктур;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Shipment", Shipment);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CustomsFileLight.Ссылка,
		|	CustomsFileLight.Номер КАК No,
		|	CustomsFileLight.Проведен КАК Posted,
		|	CustomsFileLight.SoldTo.Код КАК LegalEntityCode,
		|	CustomsFileLight.PermanentTemporary,
		|	CustomsFileLight.Regime.Код КАК RegimeCode,
		|	CustomsFileLight.PSAContract.Код КАК PSACode,
		|	CustomsFileLight.CustomsValue,
		|	CustomsFileLight.ReleaseDate,
		|	CustomsFileLight.Comment,
		|	ВЫБОР
		|		КОГДА CustomsFileLight.Проведен
		|			ТОГДА 0
		|		КОГДА CustomsFileLight.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК СтандартнаяКартинка
		|ИЗ
		|	Документ.CustomsFilesLight КАК CustomsFileLight
		|ГДЕ
		|	CustomsFileLight.Shipment = &Shipment
		|
		|УПОРЯДОЧИТЬ ПО
		|	No";
		
	Выборка = Запрос.Выполнить().Выбрать();
	СтрокаРеквизитов = ImportExportКлиентСервер.ПолучитьСтрокуРеквизитовCustomsFileДляShipment();
	Пока Выборка.Следующий() Цикл
		
		Структура = Новый Структура(СтрокаРеквизитов);
		ЗаполнитьЗначенияСвойств(Структура, Выборка, СтрокаРеквизитов);
		МассивСтруктур.Добавить(Структура);
		
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// PO

Функция НайтиPOПоНомеру(НомерPO) Экспорт
	
	НомерPO = CustomsКлиентСервер.ПолучитьНомерPOДляПоиска(НомерPO);
   	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НомерPO", НомерPO);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	POs.Ссылка
		|ИЗ
		|	Справочник.ЗаявкиНаЗакупку КАК POs
		|ГДЕ
		|	POs.Код = &НомерPO
		|	И (НЕ POs.ПометкаУдаления)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// IMPORT

Функция ПолучитьСтруктуруДанныхPOLineДляInvoiceLine(POLine) Экспорт
	
	СтрокаСвойств = "Activity, AU, ERPTreatment, Description, PartNo, Catalog, UOM, SupplierCountry, 
		|Qty, Price, EUCNotRequired, EUCRequested, EUCReceived, ProjectMobilization";
	СтруктураДанных = Новый Структура(СтрокаСвойств);
	
	Если НЕ ЗначениеЗаполнено(POLine) Тогда
		Возврат СтруктураДанных;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("POLine", POLine);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	POLine.Ссылка КАК POLine,
		|	POLine.АктивитиКод КАК Activity,
		|	POLine.КостЦентр КАК AU,
		|	POLine.Классификатор КАК ERPTreatment,
		|	POLine.ОписаниеНоменклатуры КАК Description,
		|	POLine.КодПоставщика КАК PartNo,
		|	POLine.Каталог КАК Catalog,
		|	POLine.ЕдиницаИзмерения КАК UOM,
		|	POLine.Владелец.СтранаПоставщика КАК SupplierCountry,
		|	POLine.Количество КАК Qty,
		|	POLine.Цена КАК Price,
		|	POLine.Владелец.EUCNotRequired КАК EUCNotRequired,
		|	POLine.Владелец.EUCRequested КАК EUCRequested,
		|	POLine.Владелец.EUCReceived КАК EUCReceived,
		|	POLine.ProjectMobilization КАК ProjectMobilization
		|ИЗ
		|	Справочник.СтрокиЗаявкиНаЗакупку КАК POLine
		|ГДЕ
		|	POLine.Ссылка = &POLine";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка, СтрокаСвойств);
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПолучитьДанныеItemsДляParcelLines(Goods) Экспорт
	
	Соответствие = Новый Соответствие;
	
	Если ТипЗнч(Goods) = Тип("Массив") И Goods.Количество() = 0
		ИЛИ НЕ ЗначениеЗаполнено(Goods) Тогда
		Возврат Соответствие;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Goods", Goods);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Items.Ссылка,
		|	Items.НомерЗаявкиНаЗакупку КАК PONo,
		|	Items.СтрокаЗаявкиНаЗакупку.НомерСтрокиЗаявкиНаЗакупку КАК POLineNo,
		|	Items.Количество КАК Qty,
		|	Items.ЕдиницаИзмерения КАК UOM,
		|	Items.ImportReference КАК Reference,
		|	Items.СерийныйНомер КАК SerialNo,
		|	Items.NetWeight
		|ИЗ
		|	Справочник.СтрокиИнвойса КАК Items
		|ГДЕ
		|	Items.Ссылка В(&Goods)";
		
	Выборка = Запрос.Выполнить().Выбрать();
	СтрокаСвойств = "PONo, POLineNo, Qty, UOM, Reference, SerialNo, NetWeight";
	Пока Выборка.Следующий() Цикл
		
		СтруктураСвойств = Новый Структура(СтрокаСвойств);
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, Выборка, СтрокаСвойств);
		Соответствие.Вставить(Выборка.Ссылка, СтруктураСвойств);
		
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// EXPORT

Функция ЗаполнитьСтруктуруОбщихРеквизитовExportRequest(СтруктураОбщихРеквизитов, ExportRequests) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ExportRequests", ExportRequests);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ExportRequest.Ссылка КАК ExportRequest,
		|	ExportRequest.CCA,
		|	ExportRequest.InternationalFreightProvider,
		|	ExportRequest.POD,
		|	ExportRequest.POA,
		|	ExportRequest.InternationalMOT
		|ИЗ
		|	Документ.ExportRequest КАК ExportRequest
		|ГДЕ
		|	ExportRequest.Ссылка В(&ExportRequests)";
		
	Таблица = Запрос.Выполнить().Выгрузить();
	ЗаполнитьСтруктуруОбщихРеквизитовПоТаблице(СтруктураОбщихРеквизитов, Таблица);
	
	Возврат СтруктураОбщихРеквизитов;
		
КонецФункции

Процедура ЗаполнитьСтруктуруОбщихРеквизитовПоТаблице(СтруктураОбщихРеквизитов, ТаблицаОбщихРеквизитов) Экспорт
	
	Если ТаблицаОбщихРеквизитов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементСтруктуры Из СтруктураОбщихРеквизитов Цикл
		СтруктураОбщихРеквизитов[ЭлементСтруктуры.Ключ] = ТаблицаОбщихРеквизитов[0][ЭлементСтруктуры.Ключ];
	КонецЦикла;
	
	Для ы = 1 По ТаблицаОбщихРеквизитов.Количество()-1 Цикл
		
		СтрокаТаблицы = ТаблицаОбщихРеквизитов[ы];
		Для Каждого ЭлементСтруктуры Из СтруктураОбщихРеквизитов Цикл
			
			Если ЭлементСтруктуры.Значение <> Неопределено
				И ЭлементСтруктуры.Значение <> СтрокаТаблицы[ЭлементСтруктуры.Ключ] Тогда
				СтруктураОбщихРеквизитов[ЭлементСтруктуры.Ключ] = Неопределено;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция CopyНаСервере(ERссылка) Экспорт 
	
	ERОбъект = ERссылка.ПолучитьОбъект();
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	// Сохраним новый Export request
	// Скопируем текущий DOC
	НовыйExportRequest = ERОбъект.Скопировать();
	НовыйExportRequest.Записать();
	
	// Скопируем все товары и грузовые места
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ExportRequest", ERОбъект.Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Items.Ссылка
		|ИЗ
		|	Справочник.СтрокиИнвойса КАК Items
		|ГДЕ
		|	Items.ExportRequest = &ExportRequest
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Parcels.Ссылка,
		|	Parcels.Код
		|ИЗ
		|	Справочник.Parcels КАК Parcels
		|ГДЕ
		|	Parcels.ExportRequest = &ExportRequest
		|	И (НЕ Parcels.Отменен)";	
	Результаты = Запрос.ВыполнитьПакет();
	
	// Скопируем все товары, заодно запомним соответствие старых и новых товаров
	СоответствиеСтарыхИНовыхТоваров = Новый Соответствие;
	ВыборкаItems = Результаты[0].Выбрать();
	Пока ВыборкаItems.Следующий() Цикл
		
		НовыйТоварОбъект = ВыборкаItems.Ссылка.Скопировать();
		НовыйТоварОбъект.ExportRequest = НовыйExportRequest.Ссылка;
		НовыйТоварОбъект.Записать();
		СоответствиеСтарыхИНовыхТоваров.Вставить(ВыборкаItems.Ссылка, НовыйТоварОбъект.Ссылка);		
		
	КонецЦикла;
	
	// Скопируем все не отмененные грузовые места
	ВыборкаParcels = Результаты[1].Выбрать();
	Пока ВыборкаParcels.Следующий() Цикл
		
		НовыйParcel = ВыборкаParcels.Ссылка.Скопировать();
		НовыйParcel.Код = СтрЗаменить(НовыйParcel.Код, СокрЛП(ERОбъект.Номер), СокрЛП(НовыйExportRequest.Номер));
		НовыйParcel.ExportRequest = НовыйExportRequest.Ссылка;
		
		// Заменим в табличной части старые товары на новые
		ParcelItems = НовыйParcel.Детали;
		Для Каждого СтрокаТЧ Из ParcelItems Цикл	
			СтрокаТЧ.СтрокаИнвойса = СоответствиеСтарыхИНовыхТоваров[СтрокаТЧ.СтрокаИнвойса];	
		КонецЦикла;
		
		НовыйParcel.Записать();
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат НовыйExportRequest.Ссылка;
		
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// TRACKING

Функция ПолучитьАдресImportExportTrackingUserGuide() Экспорт
	
	ДвоичныеДанные = Новый ДвоичныеДанные("\\ru0149app14.dir.slb.com\1cAttachedFiles\RIT_Guide.pptx");
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// ОСТАЛЬНОЕ
