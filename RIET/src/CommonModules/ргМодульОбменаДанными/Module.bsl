
////////////////////////////////////////////////////////////
// РЕГЛАМЕНТНАЯ ВЫГРУЗКА

Процедура ВыгрузкаВоВнешниеИБ() Экспорт
	
	ОбработкаОбмена = Обработки.ргВыгрузкаВоВнешниеИБ.Создать();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбменСВнешнимиИБ.Ссылка КАК База,
	|	ИСТИНА КАК Выгружать
	|ИЗ
	|	ПланОбмена.ргОбменСВнешнимиИБ КАК ОбменСВнешнимиИБ
	|ГДЕ
	|	НЕ ОбменСВнешнимиИБ.ПометкаУдаления
	|	И ОбменСВнешнимиИБ.Активен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбменСВнешнимиИБ.Код";
	
	ОбработкаОбмена.СписокБаз.Загрузить(Запрос.Выполнить().Выгрузить());
 	ОбработкаОбмена.ВыполнитьВыгрузку();
	
КонецПроцедуры

////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ

Процедура ПриЗаписиОбъектовПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Или
		Источник.ДополнительныеСвойства.Свойство("БезРегистрацииИзменений") Или
		Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ргМодульОбменаДаннымиПрив.ПриЗаписиОбъектовПриЗаписи(Источник.Ссылка);
		
КонецПроцедуры

Процедура ПриЗаписиРегистровПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Или
		Источник.ДополнительныеСвойства.Свойство("БезРегистрацииИзменений") Или
		Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.УстановитьСтроку();
    ЗаписатьXML(ЗаписьXML, Источник);
    СтрокаXML = ЗаписьXML.Закрыть();
	
	ргМодульОбменаДаннымиПрив.ПриЗаписиРегистровПриЗаписи(СтрокаXML);
	
КонецПроцедуры

Функция ВернутьКоличествоОбъектовДляВыгрузки(УзелОбмена) Экспорт 
	
	Если Не ЗначениеЗаполнено(УзелОбмена) Тогда
        Возврат 0;
    КонецЕсли; 
    
    ТекстЗапроса = "ВЫБРАТЬ 0 КАК Количество";
    
    УзелОбменаСостав = УзелОбмена.Метаданные().Состав;
	
	Для каждого ОбъектСостава Из УзелОбменаСостав Цикл
          ОбъектМетаданных = ОбъектСостава.Метаданные;
          ПолноеИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
          ПолноеИмяОбъекта = СтрЗаменить(ПолноеИмяОбъекта,".Перерасчет.",".");
          ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ 1 ИЗ " + ПолноеИмяОбъекта + ".Изменения ГДЕ Узел = &Узел";
    КонецЦикла; 
    
    Запрос = Новый Запрос;
    Запрос.Текст= "ВЫБРАТЬ СУММА(Результат.Количество) КАК Количество ИЗ (" + ТекстЗапроса + ") КАК Результат";
    Запрос.УстановитьПараметр("Узел", УзелОбмена);
    
    Выборка	= Запрос.Выполнить().Выбрать();
    Выборка.Следующий();
	
    Возврат Выборка.Количество;
	
КонецФункции

Процедура СинхронизацияДанныхЧерезФорматБиллингаЗарегистрироватьИзменениеДокументаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
//Богушевич пока отключаем
Возврат;
//конец

	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюДокумента(
	"СинхронизацияДанныхЧерезФорматБиллинга", Источник, Отказ, РежимЗаписи, РежимПроведения);	

КонецПроцедуры

Процедура СинхронизацияДанныхЧерезФорматБиллингаЗарегистрироватьУдалениеПередУдалением(Источник, Отказ) Экспорт
	
//Богушевич пока отключаем
Возврат;
//конец
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередУдалением(
	"СинхронизацияДанныхЧерезУниверсальныйФормат", Источник, Отказ);

КонецПроцедуры

Процедура СинхронизацияДанныхЧерезФорматБиллингаЗарегистрироватьИзменениеПередЗаписью(Источник, Отказ) Экспорт
//Богушевич пока отключаем
Возврат;
//конец
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписью(
		"СинхронизацияДанныхЧерезФорматБиллинга", Источник, Отказ);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДПИСОК НА СОБЫТИЯ ДЛЯ ОБМЕНА ЧЕРЕЗ ФОРМАТ БИЛЛИНГА
