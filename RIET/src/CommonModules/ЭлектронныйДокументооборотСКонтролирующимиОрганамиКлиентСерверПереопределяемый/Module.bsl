
// Функция возвращает ссылку на документ по заданной форме.
// 
// Параметры:
//  Форма - УправляемаяФорма - форма, отображающая данные документа, ссылку на
//                             который требутеся вернуть.
//
// Результат:
//  Ссылка на документ.
//
// Пример:
//  Возврат Форма.Объект.Ссылка;
// 
Функция ПолучитьСсылкуНаОтправляемыйДокументПоФорме(Форма) Экспорт
	
	Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Форма, "Объект")
	И РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Форма.Объект, "Ссылка") Тогда
		Возврат Форма.Объект.Ссылка;
	Иначе
		Возврат ПерсонифицированныйУчетКлиентСервер.ПолучитьСсылкуНаОтправляемыйДокументПоФорме(Форма);
	КонецЕсли;
	
КонецФункции

// Функция возвращает ссылку на организацию-отправитель документа по заданной форме.
// 
// Параметры:
//  Форма - УправляемаяФорма - форма, из которой производится отправка.
//
// Результат:
//  СправочникСсылка.Организации,
//	Неопределено, если получить ссылку на организацию не получилось
//
Функция ПолучитьСсылкуНаОрганизациюОтправляемогоДокументаПоФорме(Форма) Экспорт
	
КонецФункции

// Функция возвращает строкой имя объекта метаданных.
// 
// 
// Параметры:
//	Имя - строка, условное имя объекта
//	Возможные варианты:
//		УведомлениеОКонтролируемыхСделках
//		РеестрСведенийНаВыплатуПособийФСС
//		СправкиНДФЛДляПередачиВНалоговыйОрган
//
// Результат:
//	Строка, имя объекта метаданных, если объект данного вида присутствует в конфигурации данного прикладного решения
//	Неопределено, если объект данного вида отсутствует в конфигурации данного прикладного решения
// 
// Пример:
// 	Если Имя = "СправкиНДФЛДляПередачиВНалоговыйОрган" Тогда 
//		Возврат "СправкиНДФЛДляПередачиВНалоговыйОрган";
//	Иначе
//		Возврат Неопределено;
//	КонецЕсли;
Функция ИмяОбъектаМетаданных(Имя) Экспорт
	
	Если Имя = "СправкиНДФЛДляПередачиВНалоговыйОрган" Тогда 
		// "Справки 2-НДФЛ для передачи в налоговый орган"
		Возврат "СправкиНДФЛДляПередачиВНалоговыйОрган";
	ИначеЕсли Имя = "ИсходящееУведомлениеФНС" Тогда
		Возврат "УведомлениеОСпецрежимахНалогообложения";
	ИначеЕсли Имя = "ЗаявлениеОВвозеТоваров" Тогда
		Возврат "ЗаявлениеОВвозеТоваров";
	Иначе
		Возврат УчетОбособленныхПодразделенийКлиентСервер.ИмяОбъектаМетаданныхДляРегламентированнойОтчетности(Имя);
	КонецЕсли;
	
КонецФункции

// Функция возвращает массив из видов реквизитов, которые есть в мастере изменения настроек подключения к 1С-Отчетности, но отсутствуют у организации или владельца ЭП 
// или нет возможности интерактивного редактирования этих реквизитов для текущего пользователя
//
// Параметры
//  Организация - СправочникСсылка.Организации - Организация, для которой определяется наличие редактируемых реквизитов
//		Может принимать значение Неопределено.
//
// Возвращаемое значение:
//   Массив   - Массив из перечислений Перечисление.ПараметрыПодключенияК1СОтчетности 
//   Для заполнения массив нужно выбрать одну или несколько из следующих строк:
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ТелефонОсновной"));
//			если в справочнике организации не хранится основной телефон или нет возможности интерактивного его редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ТелефонДополнительный"));
//			если в справочнике организации не хранится дополнительный телефон или нет возможности интерактивного его редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ЭлектроннаяПочта"));
//			если в справочнике организации не хранится электронная почта организации или нет возможности интерактивного ее редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ВладелецЭЦПДолжность"));
//			если в справочнике физического лица или сотрудника не хранится должность или нет возможности интерактивного ее редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ВладелецЭЦППодразделение"));
//			если в справочнике физического лица или сотрудника не хранится подразделение или нет возможности интерактивного ее редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.НомерОсновнойПоставки1С"));
//			возвращать всегда!
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ВладелецЭЦПСНИЛС"));
//			если в справочнике физического лица или сотрудника не хранится СНИЛС или нет возможности интерактивного ее редактирования
//		НаборРеквизитов.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыПодключенияК1СОтчетности.ДополнительныйКодФСС"));
//			если в справочнике организации не хранится дополнительный код ФСС или нет возможности интерактивного ее редактирования
//		
//		Если Организация = Неопределено, тогда в массив добавлять перечисления, зависящие от конкретной организации, не нужно.
//
Функция РеквизитыНеХранящиесяВБазе(Организация = Неопределено) Экспорт
	
	Возврат ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервераПереопределяемый.РеквизитыНеХранящиесяВБазе(Организация);
	
КонецФункции

// Функция возвращает тип организации
//
// Параметры
//  Отсутствуют
//
// Возвращаемое значение:
//   Тип   - тип организации в данной базе
//
Функция ТипОрганизации() Экспорт

	Возврат Тип("СправочникСсылка.Организации");
	
КонецФункции

// Функция возвращает тип физ лица
//
// Параметры
//  Отсутствуют
//
// Возвращаемое значение:
//   Тип   - тип физ лица в данной базе
//
Функция ТипФизЛица() Экспорт

	Возврат Тип("СправочникСсылка.ФизическиеЛица");
	
КонецФункции