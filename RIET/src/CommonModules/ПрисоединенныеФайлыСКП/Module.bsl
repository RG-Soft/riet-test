
Функция ПрочитатьКаталог(Путь) Экспорт 
	
	СписокФайлов = Новый ТаблицаЗначений;
	СписокФайлов.Колонки.Добавить("ИмяФайла",Новый ОписаниеТипов("Строка",,новый КвалификаторыСтроки(250)));
	СписокФайлов.Колонки.Добавить("ИмяБезРасширения",Новый ОписаниеТипов("Строка",,новый КвалификаторыСтроки(100)));
	
	ДатаКонец = КонецМесяца(ТекущаяДата());
	ДатаНачало = НачалоМесяца(ДобавитьМесяц(ДатаКонец,-6));
	ТекМесяц = ДатаНачало;   
	Было = 0;
	Для Месяц = 1 по 6 цикл
		ТМ = Формат(ТекМесяц,"ДФ=yyyy\");                      
		ТекКаталог = Путь+ТМ;
		ПолучитьСписокФайлов(ТекКаталог,Формат(ТекМесяц,"ДФ=MM"),СписокФайлов);
		ЗаписьЖурналаРегистрации("Отладка",,,,"За " + ТекМесяц + " считано " + (СписокФайлов.Количество() - Было) + " из каталога " + ТекКаталог,);
		Было = СписокФайлов.Количество();
		ТекМесяц = ДобавитьМесяц(ТекМесяц,1);
	КонецЦикла;
	СписокФайлов.Свернуть("ИмяФайла,ИмяБезРасширения");
	СписокФайловДокументов = УстановитьСоответсвие(СписокФайлов,ДатаНачало,ДатаКонец);
	Возврат СписокФайловДокументов;
	
КонецФункции

Функция УстановитьСоответсвие(СписокФайлов,ДатаНачало,ДатаКонец)
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокФайлов",СписокФайлов);
	Запрос.УстановитьПараметр("ДатаНачало",ДатаНачало);
	Запрос.УстановитьПараметр("ДатаКонец",ДатаКонец);
	СписокКодов = новый СписокЗначений;
	СписокКодов.Добавить("OP0399"); //PES FZE
	СписокКодов.Добавить("OP0311"); //SRP FZE
	СписокКодов.Добавить("OC0114P1"); //OIES
	Запрос.УстановитьПараметр("Gold", СписокКодов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокФайлов.ИмяФайла,
	|	СписокФайлов.ИмяБезРасширения КАК ИмяБезРасширения
	|ПОМЕСТИТЬ ВремТаб
	|ИЗ
	|	&СписокФайлов КАК СписокФайлов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИмяБезРасширения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Поставщики
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	(НЕ Контрагенты.КонтрагентLawson.Код ПОДОБНО ""E%"")
	|	И (НЕ Контрагенты.КонтрагентLawson.Код В (&Gold))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаличиеПрисоединенныхФайлов.ОбъектСФайлами КАК ОбъектСФайлами
	|ПОМЕСТИТЬ СКПсФайлами
	|ИЗ
	|	РегистрСведений.НаличиеПрисоединенныхФайлов КАК НаличиеПрисоединенныхФайлов
	|ГДЕ
	|	НаличиеПрисоединенныхФайлов.ЕстьФайлы
	|	И НаличиеПрисоединенныхФайлов.ОбъектСФайлами ССЫЛКА Документ.СчетКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектСФайлами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетКнигиПокупок.Ссылка КАК СКП
	|ПОМЕСТИТЬ СКППоДате
	|ИЗ
	|	Документ.СчетКнигиПокупок КАК СчетКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Поставщики КАК Поставщики
	|		ПО СчетКнигиПокупок.Контрагент = Поставщики.Ссылка
	|ГДЕ
	|	СчетКнигиПокупок.Дата МЕЖДУ &ДатаНачало И &ДатаКонец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СКП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 60000
	|	СКППоДате.СКП КАК Документ,
	|	СКППоДате.СКП.ПроводкаDSS.Reference КАК Reference,
	|	СКППоДате.СКП.ПроводкаDSS.TransNbr КАК TransNbr
	|ПОМЕСТИТЬ СПОПоДатеБезФайлов
	|ИЗ
	|	СКППоДате КАК СКППоДате
	|ГДЕ
	|	(НЕ СКППоДате.СКП В
	|				(ВЫБРАТЬ
	|					СКПсФайлами.ОбъектСФайлами
	|				ИЗ
	|					СКПсФайлами))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СПОПоДатеБезФайлов.Документ КАК скп,
	|	ВремТаб.ИмяБезРасширения,
	|	ВремТаб.ИмяФайла
	|ИЗ
	|	СПОПоДатеБезФайлов КАК СПОПоДатеБезФайлов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремТаб КАК ВремТаб
	|		ПО (СПОПоДатеБезФайлов.Reference <> """")
	|			И (ВремТаб.ИмяБезРасширения ПОДОБНО ""%"" + СПОПоДатеБезФайлов.Reference + ""%"")";
	
	РезВрем = Запрос.Выполнить().Выгрузить();
	ЗаписьЖурналаРегистрации("Отладка",,,,"Первый запрос " + РезВрем.Количество(),);
	
	//Использую 1 и тот же запрос что бы не перекидывать МВТ и не делать 3 запроса тех же заново.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СПОПоДатеБезФайлов.Документ,
	|	ВремТаб.ИмяБезРасширения,
	|	ВремТаб.ИмяФайла
	|ИЗ
	|	СПОПоДатеБезФайлов КАК СПОПоДатеБезФайлов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремТаб КАК ВремТаб
	|		ПО (СПОПоДатеБезФайлов.TransNbr <> """")
	|			И (ВремТаб.ИмяБезРасширения ПОДОБНО ""%"" + СПОПоДатеБезФайлов.TransNbr + ""%"")";
	
	попытка
	РезВрем2 = Запрос.Выполнить().Выгрузить();
	ЗаписьЖурналаРегистрации("Отладка",,,,"Второй запрос " + РезВрем2.Количество(),);
	
	для каждого стр из РезВрем2 цикл
		строка = РезВрем.Добавить();
		строка.СКП = стр.Документ;
		строка.ИмяБезРасширения = стр.ИмяБезРасширения;
		строка.ИмяФайла = стр.ИмяФайла;
	КонецЦикла;
	Исключение
	конецпопытки;
	РезВрем.Свернуть("СКП,ИмяБезРасширения,ИмяФайла");
	ЗаписьЖурналаРегистрации("Отладка",,,,"Свернули",);
	///Тут файлы могут прицепиться к нескольким документам, но этого не будет ибо 
	///файлы будут цепляться последовательно к результатам из первого запроса (без дублей) а потом уже к 
	///результатам из второго, после чего записи не будет ибо такой файл уже есть.... 
	Возврат РезВрем;
	
КонецФункции

Функция ПолучитьСписокФайлов(Путь,Месяц = "",СписокФайлов)
	Было = СписокФайлов.количество();
	НайденныеФайлы = НайтиФайлы(Путь, "*.*"); 
	Для каждого НайденныйФайл Из НайденныеФайлы Цикл 
		Если НайденныйФайл.ЭтоКаталог() Тогда
			Если СтрНайти(НайденныйФайл.Имя,Месяц) = 1 тогда 
				КаталогМесяца = НайденныйФайл.ПолноеИмя;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	НайденныеФайлы = НайтиФайлы(КаталогМесяца, "*.pdf", истина); 
	Для каждого НайденныйФайл Из НайденныеФайлы Цикл 
		Строка = СписокФайлов.Добавить();
		Строка.ИмяФайла = НайденныйФайл.ПолноеИмя;
		Строка.ИмяБезРасширения = НайденныйФайл.ИмяБезРасширения;
	КонецЦикла;
	ЗаписьЖурналаРегистрации("Отладка",,,,"Считано " + (СписокФайлов.Количество() - Было) + " из каталога " + КаталогМесяца,);
	Возврат СписокФайлов;
КонецФункции
